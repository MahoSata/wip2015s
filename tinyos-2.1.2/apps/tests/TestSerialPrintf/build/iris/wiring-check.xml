<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="44:TestAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7efc9d983a00"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7efc9d9d4878"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7efc9d9d4878"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7efc9d979e38"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efc9d97fd80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efc9d59f468"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efc9d97fd80"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x7efc9d723020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efc9d97fd80"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x7efc9d721e30"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efc9d97fd80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efc9d78c120"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efc9d97fd80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efc9d7b5770"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7efc9d7ca4a8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7efc9dac35c8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7efc9dac35c8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7efc9da10d88"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7efc9d7cae80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efc9d97ec60"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efc9d97ec60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efc9d9704f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efc9d7c9570"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7efc9d97fd80"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7efc9d9779a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efc9d5f7940"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7efc9d973b98"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7efc9d7e9ae0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7efc9d96e398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efc9d7e94b0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7efc9d970b90"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7efc9d972a08"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7efc9d972a08"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7efc9d967428"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7efc9d96a108"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7efc9d9779a0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7efc9d95f5f8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7efc9d9541a0"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7efc9d9541a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7efc9d8d0430"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7efc9d9667f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7efc9d96a108"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7efc9d922c78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d83c520"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7efc9d93c7e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7efc9d8a6020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7efc9d8a6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d433480"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7efc9d9317e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7efc9d896d60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7efc9d896d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d3c6480"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7efc9d9284d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7efc9d8878c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7efc9d8878c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d35f480"/></to>
    </wire>
    <wire loc="196:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7efc9d91caf0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d823c38"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7efc9d9524d0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7efc9d8ce740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7efc9d8ce740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d558480"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7efc9d92a1a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7efc9d8895b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7efc9d8895b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d365480"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7efc9d9507e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7efc9d8c6930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7efc9d8c6930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d5043e0"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7efc9d945968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7efc9d8b5740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7efc9d8b5740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d497480"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7efc9d939c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7efc9d8a3430"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7efc9d8a3430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d42a480"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7efc9d92ec78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7efc9d892120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7efc9d892120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d3bc480"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7efc9d958c78"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7efc9d8d3020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7efc9d8d3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d568480"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7efc9d94dc78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7efc9d8c3d60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7efc9d8c3d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d4fb480"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7efc9d941e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7efc9d8b1bd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7efc9d8b1bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d48d480"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7efc9d9351a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7efc9d8a08c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7efc9d8a08c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d420480"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7efc9d924968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7efc9d883d60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7efc9d883d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d356480"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7efc9d91e7e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d82dc38"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7efc9d9334d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7efc9d898a50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7efc9d898a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d3cc480"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7efc9d8d0430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d55e480"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7efc9d949348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7efc9d8bf120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7efc9d8bf120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d4f1480"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7efc9d9204d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d837cd8"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7efc9d947658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7efc9d8b7500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7efc9d8b7500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d49d3e0"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7efc9d93b968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7efc9d8a5120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7efc9d8a5120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d430480"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7efc9d930968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7efc9d895e18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7efc9d895e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d3c3480"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7efc9d926658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7efc9d886a50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7efc9d886a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d35c480"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7efc9d951658"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7efc9d8cd8c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7efc9d8cd8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d555480"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7efc9d94f968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7efc9d8c5a50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7efc9d8c5a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d501480"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7efc9d944af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7efc9d8b48c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7efc9d8b48c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d494480"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7efc9d938e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7efc9d8a25b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7efc9d8a25b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d427480"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7efc9d92de00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7efc9d8912a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7efc9d8912a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d3b9480"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7efc9d957e00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7efc9d8d2120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7efc9d8d2120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d565480"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7efc9d94ce00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7efc9d8c2e18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7efc9d8c2e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d4f8480"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7efc9d93f020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7efc9d8b0d60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7efc9d8b0d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d48a480"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7efc9d923af0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7efc9d882e18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7efc9d882e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d352480"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7efc9d93d348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7efc9d8a9e40"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7efc9d8a9e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d4363e0"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7efc9d932658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7efc9d897bd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7efc9d897bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d3c9480"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7efc9d929348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7efc9d888740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7efc9d888740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d362480"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7efc9d91d968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d8273e0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7efc9d953348"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7efc9d8cf5b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7efc9d8cf5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d55b480"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7efc9d9484d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7efc9d8bd2a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7efc9d8bd2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d4ee480"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7efc9d92b020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7efc9d88a500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7efc9d88a500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d3683e0"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7efc9d9467e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7efc9d8b65b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7efc9d8b65b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d49a480"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7efc9d93aaf0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7efc9d8a42a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7efc9d8a42a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d42d480"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7efc9d92faf0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7efc9d893020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7efc9d893020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d3c0480"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7efc9d9257e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7efc9d885bd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7efc9d885bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d359480"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7efc9d969a70"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7efc9d8d5dc0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7efc9d8d5dc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d56b3e0"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7efc9d94eaf0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7efc9d8c4bd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7efc9d8c4bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d4fe480"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7efc9d943c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7efc9d8b2a50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7efc9d8b2a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d491480"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7efc9d936020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7efc9d8a1740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7efc9d8a1740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d423480"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7efc9d91f658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d8323e0"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7efc9d934348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7efc9d899930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7efc9d899930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d3cf3e0"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7efc9d93e1a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7efc9d8afe18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7efc9d8afe18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d487480"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7efc9d955020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7efc9d8d12a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7efc9d8d12a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d562480"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7efc9d94a100"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7efc9d8c0020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7efc9d8c0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efc9d4f4480"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7efc9dae61c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efc9da0fc58"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7efc9da0b168"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7efc9dac2e28"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7efc9d7b9be8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efc9d7b5020"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartControl" scoped="" ref="0x7efc9d7bbd38"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efc9d7b79a0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7efc9d7b79a0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efc9d7a3ba8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7efc9d7b2738"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7efc9d7a4aa8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7efc9d7a4aa8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7efc9d797488"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7efc9d7a6998"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7efc9d7afd30"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7efc9d797488"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7efc9d78ce58"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7efc9d79ca08"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7efc9d797c50"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7efc9d797c50"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7efc9d74c5f8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7efc9d7a3ba8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efc9d78c6f8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7efc9d790d70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7efc9d6be188"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7efc9d6be188"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7efc9d5c8c50"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7efc9d749c60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7efc9d790d70"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x7efc9d74b5f8"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7efc9d72b700"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x7efc9d72b700"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7efc9d723730"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x7efc9d74bd98"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7efc9d72a020"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x7efc9d72a020"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7efc9d722020"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x7efc9d74a5c0"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7efc9d72a860"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x7efc9d72a860"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7efc9d7228a0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x7efc9d727020"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x7efc9d71f6d8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x7efc9d729e58"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x7efc9d720568"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x7efc9d7286f0"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x7efc9d720e00"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7efc9d71ec70"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7efc9d973b98"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7efc9d71d950"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7efc9d9ef3c8"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7efc9d5ace20"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7efc9d6b9020"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7efc9d6b9020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7efc9d5e35a8"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efc9d5d06f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efc9d6b3020"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efc9d6b3020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efc9d687be0"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7efc9d69daa8"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7efc9d680c90"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7efc9d695540"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efc9d67e350"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7efc9d68aa20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7efc9d67ac48"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7efc9d68aa20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7efc9d675020"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7efc9d68aa20"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7efc9d671360"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efc9d5eb098"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efc9d6b3020"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7efc9d59fa88"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7efc9d7a6998"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="TestP" loc="35:TestP.nc" safe="">
      <module/>
    </component>
    <component qname="MainC" loc="56:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.1.2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialPrintfC" loc="36:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfC.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialPrintfP" loc="36:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfP.nc">
        <short> &#10; </short>
        <long> &#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="102:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7efc9e3c2b98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7efc9da55430"/>
            <typename><typedef-ref name="TThree" ref="0x7efc9da15d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7efc9e3c2b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7efc9da55430"/>
            <typename><typedef-ref name="TMicro" ref="0x7efc9da55788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7efc9e3c1608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7efc9da55430"/>
            <typename><typedef-ref name="TThree" ref="0x7efc9da15d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7efc9e3c2b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x7efc9da13630"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/opt/tinyos-2.1.2/tos/lib/printf/PutcharP.nc">
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7efc9d919d00" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7efc9d9150c8" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7efc9d915410" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7efc9d90b608" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7efc9d90b970" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7efc9d90bcd8" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7efc9d908060" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7efc9d87a508" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7efc9d87a870" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7efc9d87abd8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7efc9d879020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7efc9d5f6800" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7efc9d5f6800"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7efc9d5f6b50" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7efc9d5fb8b0" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7efc9d5fb8b0"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7efc9d5e1068" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7efc9d5e1068"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7efc9d5c7550" loc="55:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7efc9d5c7550"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7efc9d5c7cb8" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7efc9d5c7cb8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7efc9d5c50a8" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7efc9d5c50a8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7efc9d5c5820" loc="58:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7efc9d5c5820"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7efc9d5c5bc8" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7efc9d5c4380" loc="60:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7efc9d5c4380"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Boot" ref="0x7efc9d983a00" loc="36:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7efc9d983a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7efc9d983d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7efc9d97fd80" loc="58:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7efc9d97fd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efc9d97e170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7efc9d9d4878" loc="57:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7efc9d9d4878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7efc9d9d4bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7efc9d9779a0" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7efc9d9779a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efc9d977cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efc9d97ec60" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7efc9d97ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efc9d978020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7efc9d973b98" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7efc9d973b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7efc9d977020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7efc9d9771a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7efc9d977330"/>
        <function-ref name="actualMicro" scoped="" ref="0x7efc9d9774b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7efc9d977640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7efc9d970b90" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7efc9d970b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efc9d96e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efc9d9704f0" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7efc9d9704f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efc9d970840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7efc9d96e398" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7efc9d96e398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efc9d96e6e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7efc9d96a108" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7efc9d96a108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efc9d96a458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7efc9d972a08" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7efc9d972a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efc9d972d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7efc9d9667f8" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7efc9d9667f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efc9d966b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7efc9d95f5f8" loc="44:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7efc9d95f5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d95f948"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d95fad0"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d95fc58"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d95fde0"/>
        <function-ref name="get" scoped="" ref="0x7efc9d966020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d9661a8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d966330"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d9664b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7efc9d967428" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7efc9d967428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efc9d967778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7efc9d922c78" loc="98:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7efc9d922c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d9215e8"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d921770"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d9218f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d921a80"/>
        <function-ref name="get" scoped="" ref="0x7efc9d921c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d921d90"/>
        <function-ref name="set" scoped="" ref="0x7efc9d920020"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d9201a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7efc9d93c7e0" loc="72:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7efc9d93c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d93cb30"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d93ccb8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d93ce40"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d93b020"/>
        <function-ref name="get" scoped="" ref="0x7efc9d93b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d93b330"/>
        <function-ref name="set" scoped="" ref="0x7efc9d93b4b8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d93b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7efc9d9317e0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7efc9d9317e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d931b30"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d931cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d931e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d930020"/>
        <function-ref name="get" scoped="" ref="0x7efc9d9301a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d930330"/>
        <function-ref name="set" scoped="" ref="0x7efc9d9304b8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d930640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7efc9d9284d0" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7efc9d9284d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d928820"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d9289a8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d928b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d928cb8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d928e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d926020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d9261a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d926330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7efc9d91caf0" loc="103:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7efc9d91caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d91ce40"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d91b020"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d91b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d91b330"/>
        <function-ref name="get" scoped="" ref="0x7efc9d91b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d91b640"/>
        <function-ref name="set" scoped="" ref="0x7efc9d91b7c8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d91b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7efc9d9524d0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7efc9d9524d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d952820"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d9529a8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d952b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d952cb8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d952e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d951020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d9511a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d951330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7efc9d92a1a0" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7efc9d92a1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d92a4f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d92a678"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d92a800"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d92a988"/>
        <function-ref name="get" scoped="" ref="0x7efc9d92ab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d92ac98"/>
        <function-ref name="set" scoped="" ref="0x7efc9d92ae20"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d929020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7efc9d9507e0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7efc9d9507e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d950b30"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d950cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d950e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d94f020"/>
        <function-ref name="get" scoped="" ref="0x7efc9d94f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d94f330"/>
        <function-ref name="set" scoped="" ref="0x7efc9d94f4b8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d94f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7efc9d945968" loc="64:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7efc9d945968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d945cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d945e40"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d944020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d9441a8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d944330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d9444b8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d944640"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d9447c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7efc9d939c78" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7efc9d939c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d938020"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d9381a8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d938330"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d9384b8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d938640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d9387c8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d938950"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d938ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7efc9d92ec78" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7efc9d92ec78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d92d020"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d92d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d92d330"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d92d4b8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d92d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d92d7c8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d92d950"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d92dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7efc9d958c78" loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7efc9d958c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d957020"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d9571a8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d957330"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d9574b8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d957640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d9577c8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d957950"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d957ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7efc9d94dc78" loc="56:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7efc9d94dc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d94c020"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d94c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d94c330"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d94c4b8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d94c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d94c7c8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d94c950"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d94cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7efc9d941e00" loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7efc9d941e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d9401a8"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d940330"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d9404b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d940640"/>
        <function-ref name="get" scoped="" ref="0x7efc9d9407c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d940950"/>
        <function-ref name="set" scoped="" ref="0x7efc9d940ad8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d940c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7efc9d9351a0" loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7efc9d9351a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d9354f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d935678"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d935800"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d935988"/>
        <function-ref name="get" scoped="" ref="0x7efc9d935b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d935c98"/>
        <function-ref name="set" scoped="" ref="0x7efc9d935e20"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d934020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7efc9d924968" loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7efc9d924968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d924cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d924e40"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d923020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d9231a8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d923330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d9234b8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d923640"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d9237c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7efc9d91e7e0" loc="101:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7efc9d91e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d91eb30"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d91ecb8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d91ee40"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d91d020"/>
        <function-ref name="get" scoped="" ref="0x7efc9d91d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d91d330"/>
        <function-ref name="set" scoped="" ref="0x7efc9d91d4b8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d91d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7efc9d9334d0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7efc9d9334d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d933820"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d9339a8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d933b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d933cb8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d933e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d932020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d9321a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d932330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7efc9d9541a0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7efc9d9541a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d9544f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d954678"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d954800"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d954988"/>
        <function-ref name="get" scoped="" ref="0x7efc9d954b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d954c98"/>
        <function-ref name="set" scoped="" ref="0x7efc9d954e20"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d953020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7efc9d949348" loc="59:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7efc9d949348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d949698"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d949820"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d9499a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d949b30"/>
        <function-ref name="get" scoped="" ref="0x7efc9d949cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d949e40"/>
        <function-ref name="set" scoped="" ref="0x7efc9d948020"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d9481a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7efc9d9204d0" loc="99:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7efc9d9204d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d920820"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d9209a8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d920b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d920cb8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d920e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d91f020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d91f1a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d91f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7efc9d947658" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7efc9d947658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d9479a8"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d947b30"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d947cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d947e40"/>
        <function-ref name="get" scoped="" ref="0x7efc9d946020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d9461a8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d946330"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d9464b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7efc9d93b968" loc="73:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7efc9d93b968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d93bcb8"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d93be40"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d93a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d93a1a8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d93a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d93a4b8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d93a640"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d93a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7efc9d930968" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7efc9d930968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d930cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d930e40"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d92f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d92f1a8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d92f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d92f4b8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d92f640"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d92f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7efc9d926658" loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7efc9d926658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d9269a8"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d926b30"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d926cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d926e40"/>
        <function-ref name="get" scoped="" ref="0x7efc9d925020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d9251a8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d925330"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d9254b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7efc9d951658" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7efc9d951658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d9519a8"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d951b30"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d951cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d951e40"/>
        <function-ref name="get" scoped="" ref="0x7efc9d950020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d9501a8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d950330"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d9504b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7efc9d94f968" loc="54:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7efc9d94f968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d94fcb8"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d94fe40"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d94e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d94e1a8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d94e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d94e4b8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d94e640"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d94e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7efc9d944af0" loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7efc9d944af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d944e40"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d943020"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d9431a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d943330"/>
        <function-ref name="get" scoped="" ref="0x7efc9d9434b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d943640"/>
        <function-ref name="set" scoped="" ref="0x7efc9d9437c8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d943950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7efc9d938e00" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7efc9d938e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d9371a8"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d937330"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d9374b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d937640"/>
        <function-ref name="get" scoped="" ref="0x7efc9d9377c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d937950"/>
        <function-ref name="set" scoped="" ref="0x7efc9d937ad8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d937c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7efc9d92de00" loc="87:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7efc9d92de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d92c1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d92c330"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d92c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d92c640"/>
        <function-ref name="get" scoped="" ref="0x7efc9d92c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d92c950"/>
        <function-ref name="set" scoped="" ref="0x7efc9d92cad8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d92cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7efc9d957e00" loc="46:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7efc9d957e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d9561a8"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d956330"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d9564b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d956640"/>
        <function-ref name="get" scoped="" ref="0x7efc9d9567c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d956950"/>
        <function-ref name="set" scoped="" ref="0x7efc9d956ad8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d956c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7efc9d94ce00" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7efc9d94ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d94b2e8"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d94b470"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d94b5f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d94b780"/>
        <function-ref name="get" scoped="" ref="0x7efc9d94b908"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d94ba90"/>
        <function-ref name="set" scoped="" ref="0x7efc9d94bc18"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d94bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7efc9d93f020" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7efc9d93f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d93f370"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d93f4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d93f680"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d93f808"/>
        <function-ref name="get" scoped="" ref="0x7efc9d93f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d93fb18"/>
        <function-ref name="set" scoped="" ref="0x7efc9d93fca0"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d93fe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7efc9d923af0" loc="96:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7efc9d923af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d923e40"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d922020"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d9221a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d922330"/>
        <function-ref name="get" scoped="" ref="0x7efc9d9224b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d922640"/>
        <function-ref name="set" scoped="" ref="0x7efc9d9227c8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d922950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7efc9d93d348" loc="71:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7efc9d93d348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d93d898"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d93da20"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d93dba8"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d93dd30"/>
        <function-ref name="get" scoped="" ref="0x7efc9d93c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d93c1a8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d93c330"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d93c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7efc9d932658" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7efc9d932658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d9329a8"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d932b30"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d932cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d932e40"/>
        <function-ref name="get" scoped="" ref="0x7efc9d931020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d9311a8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d931330"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d9314b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7efc9d929348" loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7efc9d929348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d929698"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d929820"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d9299a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d929b30"/>
        <function-ref name="get" scoped="" ref="0x7efc9d929cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d929e40"/>
        <function-ref name="set" scoped="" ref="0x7efc9d928020"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d9281a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7efc9d91d968" loc="102:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7efc9d91d968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d91dcb8"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d91de40"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d91c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d91c1a8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d91c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d91c4b8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d91c640"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d91c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7efc9d953348" loc="49:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7efc9d953348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d953698"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d953820"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d9539a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d953b30"/>
        <function-ref name="get" scoped="" ref="0x7efc9d953cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d953e40"/>
        <function-ref name="set" scoped="" ref="0x7efc9d952020"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d9521a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7efc9d9484d0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7efc9d9484d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d948820"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d9489a8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d948b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d948cb8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d948e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d947020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d9471a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d947330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7efc9d92b020" loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7efc9d92b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d92b370"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d92b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d92b680"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d92b808"/>
        <function-ref name="get" scoped="" ref="0x7efc9d92b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d92bb18"/>
        <function-ref name="set" scoped="" ref="0x7efc9d92bca0"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d92be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7efc9d9467e0" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7efc9d9467e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d946b30"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d946cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d946e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d945020"/>
        <function-ref name="get" scoped="" ref="0x7efc9d9451a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d945330"/>
        <function-ref name="set" scoped="" ref="0x7efc9d9454b8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d945640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7efc9d93aaf0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7efc9d93aaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d93ae40"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d939020"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d9391a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d939330"/>
        <function-ref name="get" scoped="" ref="0x7efc9d9394b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d939640"/>
        <function-ref name="set" scoped="" ref="0x7efc9d9397c8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d939950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7efc9d92faf0" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7efc9d92faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d92fe40"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d92e020"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d92e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d92e330"/>
        <function-ref name="get" scoped="" ref="0x7efc9d92e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d92e640"/>
        <function-ref name="set" scoped="" ref="0x7efc9d92e7c8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d92e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7efc9d9257e0" loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7efc9d9257e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d925b30"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d925cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d925e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d924020"/>
        <function-ref name="get" scoped="" ref="0x7efc9d9241a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d924330"/>
        <function-ref name="set" scoped="" ref="0x7efc9d9244b8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d924640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7efc9d969a70" loc="44:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7efc9d969a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d969dc0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d958020"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d9581a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d958330"/>
        <function-ref name="get" scoped="" ref="0x7efc9d9584b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d958640"/>
        <function-ref name="set" scoped="" ref="0x7efc9d9587c8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d958950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7efc9d94eaf0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7efc9d94eaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d94ee40"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d94d020"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d94d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d94d330"/>
        <function-ref name="get" scoped="" ref="0x7efc9d94d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d94d640"/>
        <function-ref name="set" scoped="" ref="0x7efc9d94d7c8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d94d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7efc9d943c78" loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7efc9d943c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d941020"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d9411a8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d941330"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d9414b8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d941640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d9417c8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d941950"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d941ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7efc9d936020" loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7efc9d936020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d936370"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d9364f8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d936680"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d936808"/>
        <function-ref name="get" scoped="" ref="0x7efc9d936990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d936b18"/>
        <function-ref name="set" scoped="" ref="0x7efc9d936ca0"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d936e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7efc9d91f658" loc="100:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7efc9d91f658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d91f9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d91fb30"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d91fcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d91fe40"/>
        <function-ref name="get" scoped="" ref="0x7efc9d91e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d91e1a8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d91e330"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d91e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7efc9d934348" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7efc9d934348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d934698"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d934820"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d9349a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d934b30"/>
        <function-ref name="get" scoped="" ref="0x7efc9d934cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d934e40"/>
        <function-ref name="set" scoped="" ref="0x7efc9d933020"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d9331a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7efc9d93e1a0" loc="69:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7efc9d93e1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d93e4f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d93e678"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d93e800"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d93e988"/>
        <function-ref name="get" scoped="" ref="0x7efc9d93eb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d93ec98"/>
        <function-ref name="set" scoped="" ref="0x7efc9d93ee20"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d93d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7efc9d955020" loc="47:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7efc9d955020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d955370"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d9554f8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d955680"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d955808"/>
        <function-ref name="get" scoped="" ref="0x7efc9d955990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d955b18"/>
        <function-ref name="set" scoped="" ref="0x7efc9d955ca0"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d955e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7efc9d94a100" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7efc9d94a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d94a450"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d94a5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d94a760"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d94a8e8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d94aa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d94abf8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d94ad80"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d949020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7efc9d8d2120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7efc9d8d2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8d2470"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8d25f8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8d2780"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8d2908"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8d2a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8d2c18"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8d2da0"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d8d1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7efc9d8cf5b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7efc9d8cf5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8cf908"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8cfa90"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8cfc18"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8cfda0"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8ce020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8ce1a8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8ce330"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d8ce4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7efc9d8d5dc0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7efc9d8d5dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8d4170"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8d42f8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8d4480"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8d4608"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8d4790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8d4918"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8d4aa0"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d8d4c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7efc9d8d12a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7efc9d8d12a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8d15f8"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8d1780"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8d1908"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8d1a90"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8d1c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8d1da0"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8d0020"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d8d01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7efc9d8ce740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7efc9d8ce740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8cea90"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8cec18"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8ceda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8cd020"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8cd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8cd330"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8cd4b8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d8cd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7efc9d8d3020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7efc9d8d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8d3370"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8d34f8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8d3680"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8d3808"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8d3990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8d3b18"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8d3ca0"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d8d3e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7efc9d8d0430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7efc9d8d0430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8d0780"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8d0908"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8d0a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8d0c18"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8d0da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8cf020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8cf1a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d8cf330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7efc9d8cd8c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7efc9d8cd8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8cdc18"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8cdda0"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8cc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8cc1a8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8cc330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8cc4b8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8cc640"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d8cc7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d56b3e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d56b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d56b730"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d56b8b8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d56ba40"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d56bbc8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d56bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d56a020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d56a1a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d56a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d568480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d568480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d5687d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d568958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d568ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d568c68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d568df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d567020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d5671a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d567330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d565480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d565480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d5657d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d565958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d565ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d565c68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d565df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d564020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d5641a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d564330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d562480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d562480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d5627d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d562958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d562ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d562c68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d562df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d560020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d5601a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d560330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d55e480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d55e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d55e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d55e958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d55eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d55ec68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d55edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d55d020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d55d1a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d55d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d55b480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d55b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d55b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d55b958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d55bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d55bc68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d55bdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d55a020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d55a1a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d55a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d558480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d558480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d5587d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d558958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d558ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d558c68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d558df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d557020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d5571a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d557330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d555480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d555480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d5557d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d555958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d555ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d555c68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d555df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d554020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d5541a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d554330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7efc9d8c4bd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7efc9d8c4bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8c3020"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8c31a8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8c3330"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8c34b8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8c3640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8c37c8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8c3950"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d8c3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7efc9d8c0020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7efc9d8c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8c0370"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8c04f8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8c0680"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8c0808"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8c0990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8c0b18"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8c0ca0"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d8c0e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7efc9d8c6930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7efc9d8c6930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8c6c80"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8c6e08"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8c5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8c51a8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8c5330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8c54b8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8c5640"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d8c57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7efc9d8c3d60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7efc9d8c3d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8c20d8"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8c2260"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8c23e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8c2570"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8c26f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8c2880"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8c2a08"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d8c2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7efc9d8bf120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7efc9d8bf120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8bf470"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8bf5f8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8bf780"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8bf908"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8bfa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8bfc18"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8bfda0"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d8bd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7efc9d8c5a50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7efc9d8c5a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8c5da0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8c4020"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8c41a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8c4330"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8c44b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8c4640"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8c47c8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d8c4950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7efc9d8c2e18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7efc9d8c2e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8c11a8"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8c1330"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8c14b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8c1640"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8c17c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8c1950"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8c1ad8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d8c1c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7efc9d8bd2a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7efc9d8bd2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8bd5f8"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8bd780"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8bd908"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8bda90"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8bdc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8bdda0"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8bc020"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d8bc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d5043e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d5043e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d504730"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d5048b8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d504a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d504bc8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d504d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d503020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d5031a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d503330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d501480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d501480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d5017d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d501958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d501ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d501c68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d501df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d500020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d5001a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d500330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d4fe480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d4fe480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d4fe7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d4fe958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d4feae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d4fec68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d4fedf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d4fd020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d4fd1a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d4fd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d4fb480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d4fb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d4fb7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d4fb958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d4fbae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d4fbc68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d4fbdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d4fa020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d4fa1a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d4fa330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d4f8480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d4f8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d4f87d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d4f8958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d4f8ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d4f8c68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d4f8df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d4f6020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d4f61a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d4f6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d4f4480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d4f4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d4f47d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d4f4958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d4f4ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d4f4c68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d4f4df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d4f3020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d4f31a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d4f3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d4f1480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d4f1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d4f17d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d4f1958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d4f1ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d4f1c68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d4f1df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d4f0020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d4f01a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d4f0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d4ee480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d4ee480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d4ee7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d4ee958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d4eeae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d4eec68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d4eedf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d4ed020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d4ed1a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d4ed330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7efc9d8b5740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7efc9d8b5740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8b5a90"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8b5c18"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8b5da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8b4020"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8b41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8b4330"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8b44b8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d8b4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7efc9d8b1bd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7efc9d8b1bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8b0020"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8b01a8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8b0330"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8b04b8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8b0640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8b07c8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8b0950"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d8b0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7efc9d8b7500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7efc9d8b7500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8b7850"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8b79d8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8b7b60"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8b7ce8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8b7e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8b6020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8b61a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d8b6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7efc9d8b48c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7efc9d8b48c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8b4c18"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8b4da0"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8b2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8b21a8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8b2330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8b24b8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8b2640"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d8b27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7efc9d8b0d60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7efc9d8b0d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8af0d8"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8af260"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8af3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8af570"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8af6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8af880"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8afa08"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d8afb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7efc9d8b65b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7efc9d8b65b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8b6908"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8b6a90"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8b6c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8b6da0"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8b5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8b51a8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8b5330"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d8b54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7efc9d8b2a50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7efc9d8b2a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8b2da0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8b1020"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8b11a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8b1330"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8b14b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8b1640"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8b17c8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d8b1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7efc9d8afe18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7efc9d8afe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8ae1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8ae330"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8ae4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8ae640"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8ae7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8ae950"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8aead8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d8aec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d49d3e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d49d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d49d730"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d49d8b8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d49da40"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d49dbc8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d49dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d49c020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d49c1a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d49c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d49a480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d49a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d49a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d49a958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d49aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d49ac68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d49adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d499020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d4991a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d499330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d497480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d497480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d4977d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d497958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d497ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d497c68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d497df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d496020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d4961a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d496330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d494480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d494480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d4947d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d494958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d494ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d494c68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d494df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d493020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d4931a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d493330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d491480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d491480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d4917d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d491958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d491ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d491c68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d491df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d48f020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d48f1a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d48f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d48d480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d48d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d48d7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d48d958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d48dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d48dc68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d48ddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d48c020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d48c1a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d48c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d48a480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d48a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d48a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d48a958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d48aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d48ac68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d48adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d489020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d4891a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d489330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d487480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d487480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d4877d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d487958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d487ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d487c68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d487df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d486020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d4861a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d486330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7efc9d8a5120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7efc9d8a5120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8a5470"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8a55f8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8a5780"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8a5908"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8a5a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8a5c18"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8a5da0"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d8a4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7efc9d8a25b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7efc9d8a25b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8a2908"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8a2a90"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8a2c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8a2da0"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8a1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8a11a8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8a1330"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d8a14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7efc9d8a9e40" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7efc9d8a9e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8a71c0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8a7348"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8a74d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8a7658"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8a77e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8a7968"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8a7af0"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d8a7c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7efc9d8a42a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7efc9d8a42a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8a45f8"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8a4780"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8a4908"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8a4a90"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8a4c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8a4da0"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8a3020"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d8a31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7efc9d8a1740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7efc9d8a1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8a1a90"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8a1c18"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8a1da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8a0020"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8a01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8a0330"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8a04b8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d8a0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7efc9d8a6020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7efc9d8a6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8a6370"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8a64f8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8a6680"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8a6808"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8a6990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8a6b18"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8a6ca0"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d8a6e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7efc9d8a3430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7efc9d8a3430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8a3780"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8a3908"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8a3a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8a3c18"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8a3da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8a2020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8a21a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d8a2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7efc9d8a08c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7efc9d8a08c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8a0c18"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8a0da0"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d89f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d89f1a8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d89f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d89f4b8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d89f640"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d89f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d4363e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d4363e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d436730"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d4368b8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d436a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d436bc8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d436d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d435020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d4351a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d435330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d433480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d433480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d4337d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d433958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d433ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d433c68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d433df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d432020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d4321a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d432330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d430480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d430480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d4307d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d430958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d430ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d430c68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d430df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d42f020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d42f1a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d42f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d42d480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d42d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d42d7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d42d958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d42dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d42dc68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d42ddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d42c020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d42c1a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d42c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d42a480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d42a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d42a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d42a958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d42aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d42ac68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d42adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d429020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d4291a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d429330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d427480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d427480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d4277d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d427958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d427ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d427c68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d427df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d425020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d4251a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d425330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d423480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d423480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d4237d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d423958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d423ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d423c68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d423df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d422020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d4221a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d422330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d420480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d420480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d4207d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d420958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d420ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d420c68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d420df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d41f020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d41f1a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d41f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7efc9d897bd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7efc9d897bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d896020"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8961a8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d896330"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8964b8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d896640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8967c8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d896950"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d896ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7efc9d893020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7efc9d893020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d893370"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8934f8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d893680"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d893808"/>
        <function-ref name="get" scoped="" ref="0x7efc9d893990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d893b18"/>
        <function-ref name="set" scoped="" ref="0x7efc9d893ca0"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d893e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7efc9d899930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7efc9d899930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d899c80"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d899e08"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d898020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8981a8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d898330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8984b8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d898640"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d8987c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7efc9d896d60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7efc9d896d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8950d8"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d895260"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8953e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d895570"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8956f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d895880"/>
        <function-ref name="set" scoped="" ref="0x7efc9d895a08"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d895b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7efc9d892120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7efc9d892120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d892470"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8925f8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d892780"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d892908"/>
        <function-ref name="get" scoped="" ref="0x7efc9d892a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d892c18"/>
        <function-ref name="set" scoped="" ref="0x7efc9d892da0"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d891020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7efc9d898a50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7efc9d898a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d898da0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d897020"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8971a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d897330"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8974b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d897640"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8977c8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d897950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7efc9d895e18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7efc9d895e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8941a8"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d894330"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8944b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d894640"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8947c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d894950"/>
        <function-ref name="set" scoped="" ref="0x7efc9d894ad8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d894c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7efc9d8912a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7efc9d8912a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8915f8"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d891780"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d891908"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d891a90"/>
        <function-ref name="get" scoped="" ref="0x7efc9d891c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d891da0"/>
        <function-ref name="set" scoped="" ref="0x7efc9d890020"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d8901a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d3cf3e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d3cf3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d3cf730"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d3cf8b8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d3cfa40"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d3cfbc8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d3cfd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d3ce020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d3ce1a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d3ce330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d3cc480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d3cc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d3cc7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d3cc958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d3ccae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d3ccc68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d3ccdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d3cb020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d3cb1a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d3cb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d3c9480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d3c9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d3c97d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d3c9958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d3c9ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d3c9c68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d3c9df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d3c8020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d3c81a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d3c8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d3c6480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d3c6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d3c67d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d3c6958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d3c6ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d3c6c68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d3c6df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d3c5020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d3c51a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d3c5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d3c3480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d3c3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d3c37d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d3c3958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d3c3ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d3c3c68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d3c3df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d3c2020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d3c21a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d3c2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d3c0480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d3c0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d3c07d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d3c0958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d3c0ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d3c0c68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d3c0df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d3be020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d3be1a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d3be330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d3bc480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d3bc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d3bc7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d3bc958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d3bcae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d3bcc68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d3bcdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d3bb020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d3bb1a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d3bb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d3b9480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d3b9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d3b97d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d3b9958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d3b9ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d3b9c68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d3b9df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d3b8020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d3b81a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d3b8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7efc9d888740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7efc9d888740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d888a90"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d888c18"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d888da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d887020"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8871a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d887330"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8874b8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d887640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7efc9d885bd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7efc9d885bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d883020"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8831a8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d883330"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8834b8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d883640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8837c8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d883950"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d883ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7efc9d88a500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7efc9d88a500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d88a850"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d88a9d8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d88ab60"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d88ace8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d88ae70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d889020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8891a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d889330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7efc9d8878c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7efc9d8878c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d887c18"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d887da0"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d886020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8861a8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d886330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8864b8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d886640"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d8867c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7efc9d883d60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7efc9d883d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8820d8"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d882260"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8823e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d882570"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8826f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d882880"/>
        <function-ref name="set" scoped="" ref="0x7efc9d882a08"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d882b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7efc9d8895b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7efc9d8895b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d889908"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d889a90"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d889c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d889da0"/>
        <function-ref name="get" scoped="" ref="0x7efc9d888020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8881a8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d888330"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d8884b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7efc9d886a50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7efc9d886a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d886da0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d885020"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8851a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d885330"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8854b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d885640"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8857c8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d885950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7efc9d882e18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7efc9d882e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8811a8"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d881330"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8814b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d881640"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8817c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d881950"/>
        <function-ref name="set" scoped="" ref="0x7efc9d881ad8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d881c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d3683e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d3683e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d368730"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d3688b8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d368a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d368bc8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d368d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d367020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d3671a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d367330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d365480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d365480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d3657d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d365958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d365ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d365c68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d365df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d364020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d3641a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d364330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d362480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d362480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d3627d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d362958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d362ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d362c68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d362df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d361020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d3611a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d361330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d35f480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d35f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d35f7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d35f958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d35fae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d35fc68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d35fdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d35e020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d35e1a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d35e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d35c480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d35c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d35c7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d35c958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d35cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d35cc68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d35cdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d35b020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d35b1a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d35b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d359480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d359480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d3597d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d359958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d359ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d359c68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d359df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d358020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d3581a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d358330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d356480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d356480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d3567d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d356958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d356ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d356c68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d356df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d354020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d3541a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d354330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d352480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d352480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d3527d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d352958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d352ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d352c68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d352df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d351020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d3511a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d351330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d87b3e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d87b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d87b730"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d87b8b8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d87ba40"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d87bbc8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d87bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d864020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8641a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d864330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d860c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d860c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d85f020"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d85f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d85f330"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d85f4b8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d85f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d85f7c8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d85f950"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d85fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d85b3e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d85b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d85b730"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d85b8b8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d85ba40"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d85bbc8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d85bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d85a020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d85a1a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d85a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d856c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d856c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d855020"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8551a8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d855330"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8554b8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d855640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8557c8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d855950"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d855ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d8503e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d8503e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d850730"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8508b8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d850a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d850bc8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d850d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d84f020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d84f1a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d84f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d84cc38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d84cc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d84b020"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d84b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d84b330"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d84b4b8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d84b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d84b7c8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d84b950"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d84bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d846480" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d846480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8467d0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d846958"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d846ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d846c68"/>
        <function-ref name="get" scoped="" ref="0x7efc9d846df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d845020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8451a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d845330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d842c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d842c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d840020"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8401a8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d840330"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8404b8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d840640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8407c8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d840950"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d840ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d83c520" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d83c520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d83c870"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d83c9f8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d83cb80"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d83cd08"/>
        <function-ref name="get" scoped="" ref="0x7efc9d83b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d83b1a8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d83b330"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d83b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d837cd8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d837cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d8360a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d836228"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d8363b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d836538"/>
        <function-ref name="get" scoped="" ref="0x7efc9d8366c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d836848"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8369d0"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d836b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d8323e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d8323e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d832730"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8328b8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d832a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d832bc8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d832d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d830020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8301a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d830330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d82dc38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d82dc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d82c020"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d82c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d82c330"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d82c4b8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d82c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d82c7c8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d82c950"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d82cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d8273e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d8273e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d827730"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8278b8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d827a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d827bc8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d827d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d826020"/>
        <function-ref name="set" scoped="" ref="0x7efc9d8261a8"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d826330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efc9d823c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7efc9d823c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efc9d822020"/>
        <function-ref name="isInput" scoped="" ref="0x7efc9d8221a8"/>
        <function-ref name="toggle" scoped="" ref="0x7efc9d822330"/>
        <function-ref name="isOutput" scoped="" ref="0x7efc9d8224b8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d822640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efc9d8227c8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d822950"/>
        <function-ref name="clr" scoped="" ref="0x7efc9d822ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efc9d7e94b0" loc="61:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7efc9d7e94b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7efc9dae16f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7efc9dae16f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efc9d7e9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7efc9d7e9ae0" loc="62:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7efc9d7e9ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7efc9d7e9e30"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7efc9d7e7020"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7efc9d7e71a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x7efc9d7e7330"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7efc9d7e74b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7efc9d7c9570" loc="60:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7efc9d7c9570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efc9d7c98c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7efc9d979e38" loc="57:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7efc9d979e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7efc9d7ca1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7efc9d7cae80" loc="59:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7efc9d7cae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efc9d7c91f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7efc9d7ca4a8" loc="58:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7efc9d7ca4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efc9d7ca7f8"/>
        <function-ref name="taskLoop" scoped="" ref="0x7efc9d7ca980"/>
        <function-ref name="runNextTask" scoped="" ref="0x7efc9d7cab08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7efc9dae61c8" loc="48:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7efc9dae61c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efc9dae6518"/>
        <function-ref name="runTask" scoped="" ref="0x7efc9dae66a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7efc9dac35c8" loc="47:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7efc9dac35c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efc9dac3918"/>
        <function-ref name="taskLoop" scoped="" ref="0x7efc9dac3aa0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7efc9dac3c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7efc9da0fc58" loc="56:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7efc9da0fc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efc9da0e020"/>
        <function-ref name="runTask" scoped="" ref="0x7efc9da0e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7efc9da0b168" loc="57:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7efc9da0b168"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7efc9da0b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7efc9da10d88" loc="55:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7efc9da10d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efc9da0f170"/>
        <function-ref name="taskLoop" scoped="" ref="0x7efc9da0f2f8"/>
        <function-ref name="runNextTask" scoped="" ref="0x7efc9da0f480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7efc9d9ee988" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7efc9d9ee988"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7efc9d9eecd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7efc9dac2e28" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7efc9dac2e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7efc9d9f21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7efc9d9ef3c8" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7efc9d9ef3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7efc9d9ef718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efc9d7b9be8" loc="38:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfC.nc">
      <component-ref qname="SerialPrintfC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7efc9d7b9be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efc9d7bb020"/>
        <function-ref name="stop" scoped="" ref="0x7efc9d7bb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7efc9d7afd30" loc="44:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x7efc9d7afd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7efc9d7b10d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartByte" ref="0x7efc9d7b2738" loc="39:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7efc9d7b2738"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efc9d7b2a88"/>
        <function-ref name="receive" scoped="" ref="0x7efc9d7b2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efc9d7b5770" loc="43:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7efc9d7b5770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efc9d7b5ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartControl" ref="0x7efc9d7bbd38" loc="38:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartControl" scoped="" ref="0x7efc9d7bbd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efc9d7b60d8"/>
        <function-ref name="stop" scoped="" ref="0x7efc9d7b6260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efc9d7b5020" loc="42:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7efc9d7b5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efc9d7b5370"/>
        <function-ref name="stop" scoped="" ref="0x7efc9d7b54f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7efc9d7a4aa8" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7efc9d7a4aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efc9d7a4df8"/>
        <function-ref name="receive" scoped="" ref="0x7efc9d7a3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7efc9d79ca08" loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7efc9d79ca08"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efc9d79cd58"/>
        <function-ref name="receivedByte" scoped="" ref="0x7efc9d7a4020"/>
        <function-ref name="receive" scoped="" ref="0x7efc9d7a41a8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7efc9d7a4330"/>
        <function-ref name="receiveDone" scoped="" ref="0x7efc9d7a44b8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7efc9d7a4640"/>
        <function-ref name="sendDone" scoped="" ref="0x7efc9d7a47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efc9d7b79a0" loc="40:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7efc9d7b79a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efc9d7b7cf0"/>
        <function-ref name="stop" scoped="" ref="0x7efc9d7b7e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7efc9d797488" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7efc9d797488"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efc9d7977d8"/>
        <function-ref name="receive" scoped="" ref="0x7efc9d797960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7efc9d797c50" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7efc9d797c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efc9d796020"/>
        <function-ref name="receivedByte" scoped="" ref="0x7efc9d7961a8"/>
        <function-ref name="receive" scoped="" ref="0x7efc9d796330"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7efc9d7964b8"/>
        <function-ref name="receiveDone" scoped="" ref="0x7efc9d796640"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7efc9d7967c8"/>
        <function-ref name="sendDone" scoped="" ref="0x7efc9d796950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7efc9d790d70" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7efc9d790d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7efc9da55430"/>
            <typename><typedef-ref name="TMicro" ref="0x7efc9da55788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7efc9e3c1608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efc9d795af8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efc9d7944a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efc9d794020"/>
        <function-ref name="overflow" scoped="" ref="0x7efc9d794930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efc9d7a3ba8" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7efc9d7a3ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efc9d797020"/>
        <function-ref name="stop" scoped="" ref="0x7efc9d7971a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7efc9d78ce58" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7efc9d78ce58"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efc9d74c1e8"/>
        <function-ref name="receive" scoped="" ref="0x7efc9d74c370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x7efc9d74b5f8" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x7efc9d74b5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efc9d74b948"/>
        <function-ref name="stop" scoped="" ref="0x7efc9d74bad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efc9d78c120" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7efc9d78c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efc9d78c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7efc9d74c5f8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7efc9d74c5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efc9d74c948"/>
        <function-ref name="receivedByte" scoped="" ref="0x7efc9d74cad0"/>
        <function-ref name="receive" scoped="" ref="0x7efc9d74cc58"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7efc9d74cde0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7efc9d74b020"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7efc9d74b1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7efc9d74b330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7efc9d749c60" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7efc9d749c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7efc9da55430"/>
            <typename><typedef-ref name="TMicro" ref="0x7efc9da55788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7efc9e3c1608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efc9d7489f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efc9d747330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efc9d748e78"/>
        <function-ref name="overflow" scoped="" ref="0x7efc9d7477b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x7efc9d74a5c0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x7efc9d74a5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7efc9d74a910"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7efc9d74aa98"/>
        <function-ref name="rxDone" scoped="" ref="0x7efc9d74ac20"/>
        <function-ref name="txDone" scoped="" ref="0x7efc9d74ada8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7efc9d749020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7efc9d7491a8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7efc9d749330"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7efc9d7494b8"/>
        <function-ref name="tx" scoped="" ref="0x7efc9d749640"/>
        <function-ref name="rx" scoped="" ref="0x7efc9d7497c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efc9d78c6f8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7efc9d78c6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efc9d78ca48"/>
        <function-ref name="stop" scoped="" ref="0x7efc9d78cbd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x7efc9d74bd98" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x7efc9d74bd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efc9d74a170"/>
        <function-ref name="stop" scoped="" ref="0x7efc9d74a2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7efc9d72a860" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7efc9d72a860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7efc9d72abb0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7efc9d72ad38"/>
        <function-ref name="rxDone" scoped="" ref="0x7efc9d729020"/>
        <function-ref name="txDone" scoped="" ref="0x7efc9d7291a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7efc9d729330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7efc9d7294b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7efc9d729640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7efc9d7297c8"/>
        <function-ref name="tx" scoped="" ref="0x7efc9d729950"/>
        <function-ref name="rx" scoped="" ref="0x7efc9d729ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7efc9d727020" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7efc9d727020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7efc9d727370"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7efc9d7274f8"/>
        <function-ref name="rxDone" scoped="" ref="0x7efc9d727680"/>
        <function-ref name="txDone" scoped="" ref="0x7efc9d727808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7efc9d727990"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7efc9d727b18"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7efc9d727ca0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7efc9d727e28"/>
        <function-ref name="tx" scoped="" ref="0x7efc9d726020"/>
        <function-ref name="rx" scoped="" ref="0x7efc9d7261a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7efc9d72a020" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7efc9d72a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efc9d72a370"/>
        <function-ref name="stop" scoped="" ref="0x7efc9d72a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7efc9d729e58" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7efc9d729e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efc9d7281e8"/>
        <function-ref name="stop" scoped="" ref="0x7efc9d728370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7efc9d7286f0" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7efc9d7286f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efc9d728a40"/>
        <function-ref name="stop" scoped="" ref="0x7efc9d728bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7efc9d72b700" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7efc9d72b700"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efc9d72ba50"/>
        <function-ref name="stop" scoped="" ref="0x7efc9d72bbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x7efc9d723020" loc="114:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x7efc9d723020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efc9d723370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7efc9d7228a0" loc="117:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7efc9d7228a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7efc9d722bf0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7efc9d722d78"/>
        <function-ref name="rxDone" scoped="" ref="0x7efc9d721020"/>
        <function-ref name="txDone" scoped="" ref="0x7efc9d7211a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7efc9d721330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7efc9d7214b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7efc9d721640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7efc9d7217c8"/>
        <function-ref name="tx" scoped="" ref="0x7efc9d721950"/>
        <function-ref name="rx" scoped="" ref="0x7efc9d721ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x7efc9d721e30" loc="119:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x7efc9d721e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efc9d7201a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7efc9d71f6d8" loc="122:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7efc9d71f6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7efc9d71fa28"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7efc9d71fbb0"/>
        <function-ref name="rxDone" scoped="" ref="0x7efc9d71fd38"/>
        <function-ref name="txDone" scoped="" ref="0x7efc9d71e020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7efc9d71e1a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7efc9d71e330"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7efc9d71e4b8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7efc9d71e640"/>
        <function-ref name="tx" scoped="" ref="0x7efc9d71e7c8"/>
        <function-ref name="rx" scoped="" ref="0x7efc9d71e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7efc9d722020" loc="116:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7efc9d722020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efc9d722370"/>
        <function-ref name="stop" scoped="" ref="0x7efc9d7224f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7efc9d720568" loc="120:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7efc9d720568"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efc9d7208b8"/>
        <function-ref name="stop" scoped="" ref="0x7efc9d720a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7efc9d720e00" loc="121:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7efc9d720e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efc9d71f1a8"/>
        <function-ref name="stop" scoped="" ref="0x7efc9d71f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7efc9d71ec70" loc="124:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7efc9d71ec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7efc9d71d020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7efc9d71d1a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7efc9d71d330"/>
        <function-ref name="actualMicro" scoped="" ref="0x7efc9d71d4b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7efc9d71d640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7efc9d71d950" loc="125:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7efc9d71d950"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7efc9d71dca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7efc9d723730" loc="115:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7efc9d723730"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efc9d723a80"/>
        <function-ref name="stop" scoped="" ref="0x7efc9d723c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7efc9d6be188" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7efc9d6be188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7efc9da55430"/>
            <typename><typedef-ref name="TMicro" ref="0x7efc9da55788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7efc9e3c1608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efc9d6bd020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efc9d6bd930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efc9d6bd4a8"/>
        <function-ref name="overflow" scoped="" ref="0x7efc9d6bddb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7efc9d6b9020" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7efc9d6b9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7efc9da55430"/>
            <typename><typedef-ref name="TThree" ref="0x7efc9da15d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7efc9e3c2b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efc9d6b9d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efc9d6b86b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efc9d6b8230"/>
        <function-ref name="overflow" scoped="" ref="0x7efc9d6b8b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7efc9d69daa8" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7efc9d69daa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7efc9d69ddf8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7efc9d6a5020"/>
        <function-ref name="getControlA" scoped="" ref="0x7efc9d6a51a8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7efc9d6a5330"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7efc9d6a54b8"/>
        <function-ref name="setControlB" scoped="" ref="0x7efc9d6a5640"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7efc9d6a57c8"/>
        <function-ref name="getControlB" scoped="" ref="0x7efc9d6a5950"/>
        <function-ref name="setControlC" scoped="" ref="0x7efc9d6a5ad8"/>
        <function-ref name="setControlA" scoped="" ref="0x7efc9d6a5c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efc9d695540" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7efc9d695540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7efc9e3c2b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7efc9d6936f8"/>
        <function-ref name="test" scoped="" ref="0x7efc9d694db8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d69c0f8"/>
        <function-ref name="captured" scoped="" ref="0x7efc9d69ca58"/>
        <function-ref name="reset" scoped="" ref="0x7efc9d694020"/>
        <function-ref name="isOn" scoped="" ref="0x7efc9d693270"/>
        <function-ref name="set" scoped="" ref="0x7efc9d69c580"/>
        <function-ref name="start" scoped="" ref="0x7efc9d6944a8"/>
        <function-ref name="stop" scoped="" ref="0x7efc9d694930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efc9d68aa20" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7efc9d68aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7efc9e3c2b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7efc9d689270"/>
        <function-ref name="fired" scoped="" ref="0x7efc9d691020"/>
        <function-ref name="get" scoped="" ref="0x7efc9d6925d8"/>
        <function-ref name="reset" scoped="" ref="0x7efc9d6914a8"/>
        <function-ref name="isOn" scoped="" ref="0x7efc9d6896f8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d692a60"/>
        <function-ref name="start" scoped="" ref="0x7efc9d691930"/>
        <function-ref name="stop" scoped="" ref="0x7efc9d691db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efc9d6b3020" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7efc9d6b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7efc9e3c2b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7efc9d6a70f8"/>
        <function-ref name="test" scoped="" ref="0x7efc9d6a87a8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d6b3ba0"/>
        <function-ref name="setScale" scoped="" ref="0x7efc9d6a7580"/>
        <function-ref name="getScale" scoped="" ref="0x7efc9d6a7a58"/>
        <function-ref name="reset" scoped="" ref="0x7efc9d6b19e8"/>
        <function-ref name="overflow" scoped="" ref="0x7efc9d6b1560"/>
        <function-ref name="isOn" scoped="" ref="0x7efc9d6a8c30"/>
        <function-ref name="set" scoped="" ref="0x7efc9d6b1088"/>
        <function-ref name="start" scoped="" ref="0x7efc9d6b1e70"/>
        <function-ref name="stop" scoped="" ref="0x7efc9d6a8320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7efc9d680c90" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7efc9d680c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7efc9d67f020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7efc9d67f1a8"/>
        <function-ref name="getControlA" scoped="" ref="0x7efc9d67f330"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7efc9d67f4b8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7efc9d67f640"/>
        <function-ref name="setControlB" scoped="" ref="0x7efc9d67f7c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7efc9d67f950"/>
        <function-ref name="getControlB" scoped="" ref="0x7efc9d67fad8"/>
        <function-ref name="setControlC" scoped="" ref="0x7efc9d67fc60"/>
        <function-ref name="setControlA" scoped="" ref="0x7efc9d67fde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7efc9d67ac48" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7efc9d67ac48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7efc9e3c2b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7efc9d6764a8"/>
        <function-ref name="fired" scoped="" ref="0x7efc9d6781d0"/>
        <function-ref name="get" scoped="" ref="0x7efc9d679820"/>
        <function-ref name="reset" scoped="" ref="0x7efc9d678658"/>
        <function-ref name="isOn" scoped="" ref="0x7efc9d676930"/>
        <function-ref name="set" scoped="" ref="0x7efc9d679ca8"/>
        <function-ref name="start" scoped="" ref="0x7efc9d678ae0"/>
        <function-ref name="stop" scoped="" ref="0x7efc9d676020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efc9d67e350" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7efc9d67e350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7efc9e3c2b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7efc9d67a580"/>
        <function-ref name="test" scoped="" ref="0x7efc9d67bc20"/>
        <function-ref name="get" scoped="" ref="0x7efc9d67d020"/>
        <function-ref name="captured" scoped="" ref="0x7efc9d67d980"/>
        <function-ref name="reset" scoped="" ref="0x7efc9d67de58"/>
        <function-ref name="isOn" scoped="" ref="0x7efc9d67a0f8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d67d4a8"/>
        <function-ref name="start" scoped="" ref="0x7efc9d67b310"/>
        <function-ref name="stop" scoped="" ref="0x7efc9d67b798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7efc9d675020" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7efc9d675020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7efc9e3c2b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7efc9d6727a8"/>
        <function-ref name="fired" scoped="" ref="0x7efc9d674560"/>
        <function-ref name="get" scoped="" ref="0x7efc9d675ba0"/>
        <function-ref name="reset" scoped="" ref="0x7efc9d6749e8"/>
        <function-ref name="isOn" scoped="" ref="0x7efc9d672c30"/>
        <function-ref name="set" scoped="" ref="0x7efc9d674088"/>
        <function-ref name="start" scoped="" ref="0x7efc9d674e70"/>
        <function-ref name="stop" scoped="" ref="0x7efc9d672320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7efc9d671360" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7efc9d671360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7efc9e3c2b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7efc9d66fc20"/>
        <function-ref name="fired" scoped="" ref="0x7efc9d670980"/>
        <function-ref name="get" scoped="" ref="0x7efc9d670020"/>
        <function-ref name="reset" scoped="" ref="0x7efc9d670e08"/>
        <function-ref name="isOn" scoped="" ref="0x7efc9d66d0f8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d6704a8"/>
        <function-ref name="start" scoped="" ref="0x7efc9d66f310"/>
        <function-ref name="stop" scoped="" ref="0x7efc9d66f798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efc9d687be0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7efc9d687be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7efc9e3c2b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7efc9d682db8"/>
        <function-ref name="test" scoped="" ref="0x7efc9d6824a8"/>
        <function-ref name="get" scoped="" ref="0x7efc9d6847a0"/>
        <function-ref name="setScale" scoped="" ref="0x7efc9d680270"/>
        <function-ref name="getScale" scoped="" ref="0x7efc9d680748"/>
        <function-ref name="reset" scoped="" ref="0x7efc9d6835b8"/>
        <function-ref name="overflow" scoped="" ref="0x7efc9d683130"/>
        <function-ref name="isOn" scoped="" ref="0x7efc9d682930"/>
        <function-ref name="set" scoped="" ref="0x7efc9d684c28"/>
        <function-ref name="start" scoped="" ref="0x7efc9d683a40"/>
        <function-ref name="stop" scoped="" ref="0x7efc9d682020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efc9d5f7940" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7efc9d5f7940"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7efc9dae1388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7efc9dae1388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efc9d5f7c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efc9d5eb098" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7efc9d5eb098"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7efc9e3c2b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7efc9d5e7270"/>
        <function-ref name="test" scoped="" ref="0x7efc9d5e8930"/>
        <function-ref name="get" scoped="" ref="0x7efc9d5ebc18"/>
        <function-ref name="setScale" scoped="" ref="0x7efc9d5e76f8"/>
        <function-ref name="getScale" scoped="" ref="0x7efc9d5e7bd0"/>
        <function-ref name="reset" scoped="" ref="0x7efc9d5eaa58"/>
        <function-ref name="overflow" scoped="" ref="0x7efc9d5ea5d0"/>
        <function-ref name="isOn" scoped="" ref="0x7efc9d5e8db8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d5ea0f8"/>
        <function-ref name="start" scoped="" ref="0x7efc9d5e8020"/>
        <function-ref name="stop" scoped="" ref="0x7efc9d5e84a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7efc9d5e35a8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7efc9d5e35a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7efc9da55430"/>
            <typename><typedef-ref name="TThree" ref="0x7efc9da15d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7efc9e3c2b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efc9d5d23a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efc9d5d2cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efc9d5d2830"/>
        <function-ref name="overflow" scoped="" ref="0x7efc9d5d0190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efc9d5d06f0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7efc9d5d06f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7efc9e3c2b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7efc9d5cc930"/>
        <function-ref name="test" scoped="" ref="0x7efc9d5cc020"/>
        <function-ref name="get" scoped="" ref="0x7efc9d5cf3a8"/>
        <function-ref name="setScale" scoped="" ref="0x7efc9d5ccdb8"/>
        <function-ref name="getScale" scoped="" ref="0x7efc9d5cb2f0"/>
        <function-ref name="reset" scoped="" ref="0x7efc9d5ce1f8"/>
        <function-ref name="overflow" scoped="" ref="0x7efc9d5cfd08"/>
        <function-ref name="isOn" scoped="" ref="0x7efc9d5cc4a8"/>
        <function-ref name="set" scoped="" ref="0x7efc9d5cf830"/>
        <function-ref name="start" scoped="" ref="0x7efc9d5ce680"/>
        <function-ref name="stop" scoped="" ref="0x7efc9d5ceb08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7efc9d5ace20" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7efc9d5ace20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7efc9da55430"/>
            <typename><typedef-ref name="TThree" ref="0x7efc9da15d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7efc9e3c2b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efc9d5abbe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efc9d5a9548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efc9d5a90c0"/>
        <function-ref name="overflow" scoped="" ref="0x7efc9d5a99d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7efc9d5c8c50" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7efc9d5c8c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7efc9da55430"/>
            <typename><typedef-ref name="TMicro" ref="0x7efc9da55788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7efc9e3c1608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efc9d5ad9f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efc9d5ac330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efc9d5ade78"/>
        <function-ref name="overflow" scoped="" ref="0x7efc9d5ac7b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7efc9d7a6998" loc="43:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x7efc9d7a6998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7efc9d7a6ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efc9d59f468" loc="94:/opt/tinyos-2.1.2/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7efc9d59f468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efc9d59f7b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7efc9d59fa88" loc="95:/opt/tinyos-2.1.2/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x7efc9d59fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7efc9d59fdd8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7efc9d983640" loc="60:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7efc9d97f8d8" loc="62:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efc9dabfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7efc9d973810" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7efc9e3c2b98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7efc9e3c1608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7efc9d9735a0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7efc9e3c1608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7efc9d975020" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7efc9e3c2b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7efc9d975a18" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7efc9e3c1608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7efc9e3c1608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7efc9d9757a8" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7efc9e3c1608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7efc9d9744d0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7efc9e3c1608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7efc9e3c1608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7efc9d974260" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7efc9e3c1608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7efc9d974d18" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7efc9d961dc0" loc="44:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7efc9d9604c8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efc9dae49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7efc9d961070" loc="42:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7efc9d95f290" loc="47:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efc9dae49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7efc9d961710" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efc9dae49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7efc9d960b80" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7efc9d963328" loc="40:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7efc9d963998" loc="41:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7efc9dac6378" loc="57:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7efc9dac3258" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7efc9dac6a90" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efc9dae49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7efc9dabb070" loc="67:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efc9dabfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7efc9dabb860" loc="75:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7efc9da0ee28" loc="76:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7efc9d9ee4f8" loc="62:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7efc9da80940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7efc9d9ef020" loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7efc9d7b9030" loc="95:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efc9dabfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7efc9d7b97d0" loc="105:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efc9dabfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TOSDIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7efc9d7af9f8" loc="49:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7efc9d7af788" loc="49:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7efc9d7b30a8" loc="46:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efc9dabfae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7efc9d7b6dc0" loc="46:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7efc9d7b3e50" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efc9dabfae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7efc9d7b3898" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7efc9d7b3bd0" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7efc9d7a20b8" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efc9dabfae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7efc9e3c2b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7efc9d7a5a90" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efc9d7a5db0" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7efc9e3c2b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7efc9d79faa8" loc="79:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7efc9d79f838" loc="79:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7efc9d79d800" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efc9dabfae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7efc9e3c2b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7efc9d79d260" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efc9d79d580" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7efc9e3c2b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7efc9d79e838" loc="65:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efc9dabfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7efc9d79c020" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7efc9e3c2b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efc9dabfae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7efc9d79b6e0" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efc9d79ba00" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7efc9e3c2b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7efc9d79bd28" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efc9dabfae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7efc9d79f0d8" loc="72:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efc9dabfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7efc9d7a18f8" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7efc9e3c2b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efc9dabfae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7efc9d7a1020" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efc9d7a1340" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7efc9e3c2b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7efc9d7a1668" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efc9dabfae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7efc9d793488" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7efc9d793488"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7efc9d7936b8" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efc9d7936b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7efc9d791020" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efc9d7936b8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7efc9d790070" loc="76:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7efc9d791838" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efc9dae49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7efc9d790760" loc="82:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7efc9d784c98" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efc9dae49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7efc9d785e58" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efc9dabfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x7efc9d780338" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efc9d7800c8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7efc9d781328" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7efc9d785020" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efc9dabfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7efc9d785740" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efc9dabfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7efc9d7845b8" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efc9dabfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x7efc9d7833a0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efc9dae49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7efc9d783c58" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efc9d7839e8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7efc9d7819d8" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x7efc9d6a28e0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7efc9d6a0c70" loc="87:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7efc9d6a6a58" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7efc9d69fd90" loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7efc9d69f630" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7efc9d69f3c0" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7efc9d6a1bb8" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7efc9d6a1948" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7efc9d69d750" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7efc9d69d4e0" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7efc9d6a21d8" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x7efc9d6a0510" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7efc9d6a02a0" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7efc9d6a1290" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7efc9d6a1020" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7efc9d6a44d0" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efc9d6a44d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7efc9d695020" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efc9dae49b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7efc9d696c98" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efc9dae49b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7efc9d697e18" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efc9dae49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7efc9d6a4d88" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efc9d6a44d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7efc9d699108" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efc9d6a44d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7efc9d69ae28" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efc9d6a44d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7efc9d699848" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7efc9d6965c0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efc9dae49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7efc9d69a6f0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efc9d6a44d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7efc9d69a480" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efc9d6a44d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7efc9d697020" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7efc9d697708" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7efc9d690158" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efc9d690158"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7efc9d68c788" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efc9dae49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7efc9d68eab8" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7efc9d690a10" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efc9d690158"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7efc9d68d258" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7efc9d68a020" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efc9dae49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7efc9d68e378" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efc9d690158"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7efc9d68e108" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efc9d690158"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7efc9d68d950" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7efc9d68c070" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7efc9d6b0418" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7efc9d6b0418"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7efc9d6ab900" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7efc9d6ada40" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efc9dae49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7efc9d6b0cb8" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7efc9d6b0418"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7efc9d6aa290" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7efc9d6aa020" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7efc9d6aaa10" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efc9e3c2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7efc9d6ae4c0" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7efc9d6afd50" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7efc9d6ab1d8" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efc9dae49b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7efc9d6af630" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7efc9d6b0418"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7efc9d6af3c0" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7efc9d6b0418"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7efc9d6aebb8" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7efc9d6ad328" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
