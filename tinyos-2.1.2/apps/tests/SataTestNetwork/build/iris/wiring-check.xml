<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="36:TestNetworkAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f2c5515b3e0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f2c5500e8d8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f2c5500e8d8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f2c55006c38"/></to>
    </wire>
    <wire loc="37:TestNetworkAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7f2c55157be0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f2c54e1d728"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f2c54e1d728"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f2c54decd10"/></to>
    </wire>
    <wire loc="38:TestNetworkAppC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f2c5515d888"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f2c53a8daa0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f2c53a8daa0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f2c53a27728"/></to>
    </wire>
    <wire loc="39:TestNetworkAppC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x7f2c55154db8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f2c540ae390"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f2c540ae390"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f2c5408dd90"/></to>
    </wire>
    <wire loc="40:TestNetworkAppC.nc">
      <from><interface-ref name="DisseminationControl" scoped="" ref="0x7f2c551566f8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f2c542a75b8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f2c542a75b8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f2c542a67b0"/></to>
    </wire>
    <wire loc="41:TestNetworkAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2c5514d020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2c54e49190"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2c54e49190"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2c54e45930"/></to>
    </wire>
    <wire loc="42:TestNetworkAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2c550be4f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2c53c4f8d8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2c53c4f8d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f2c546bc1c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:TestNetworkAppC.nc">
      <from><interface-ref name="DisseminationPeriod" scoped="" ref="0x7f2c5514f568"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x7f2c540b5808"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminationValue" scoped="" ref="0x7f2c540b5808"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x7f2c52f75538"/></to>
    </wire>
    <wire loc="44:TestNetworkAppC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f2c550d89b8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2c53c629b0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f2c53c629b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2c52cee020"/></to>
    </wire>
    <wire loc="45:TestNetworkAppC.nc">
      <from><interface-ref name="ReadSensor" scoped="" ref="0x7f2c550c9810"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f2c53aaeaf0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f2c53aaeaf0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f2c52c84550"/></to>
    </wire>
    <wire loc="46:TestNetworkAppC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f2c550b8e78"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f2c54090a80"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f2c54090a80"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f2c5407cc08"/></to>
    </wire>
    <wire loc="47:TestNetworkAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f2c550b24b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2c540ab1c8"/>
      <arguments>
        <value cst="I:238">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:TestNetworkAppC.nc">
      <from><interface-ref name="UARTSend" scoped="" ref="0x7f2c550a9230"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2c536ec398"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f2c536ec398"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2c52c721f0"/></to>
    </wire>
    <wire loc="49:TestNetworkAppC.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x7f2c550b7020"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x7f2c540a6020"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x7f2c540a6020"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x7f2c54084620"/></to>
    </wire>
    <wire loc="50:TestNetworkAppC.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x7f2c550a1020"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x7f2c540a2ce0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x7f2c540a2ce0"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x7f2c5407f848"/></to>
    </wire>
    <wire loc="51:TestNetworkAppC.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x7f2c55095c10"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x7f2c540902f0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x7f2c540902f0"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x7f2c5407c478"/></to>
    </wire>
    <wire loc="52:TestNetworkAppC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f2c55092ae8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f2c54927080"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f2c54927080"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f2c54921020"/></to>
    </wire>
    <wire loc="53:TestNetworkAppC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f2c55082b88"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f2c5368f128"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f2c5368f128"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f2c52b65a30"/></to>
    </wire>
    <wire loc="54:TestNetworkAppC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f2c5508ba00"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f2c536964e0"/></to>
    </wire>
    <wire loc="55:TestNetworkAppC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f2c5505b970"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2c54e15100"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2c54e15100"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2c54de3360"/></to>
    </wire>
    <wire loc="57:TestNetworkAppC.nc">
      <from><interface-ref name="ForceParentInsertion" scoped="" ref="0x7f2c5505abf8"/></from>
      <to><interface-ref name="ForceParentInsertion" scoped="" ref="0x7f2c5408f4c0"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="ForceParentInsertion" scoped="" ref="0x7f2c5408f4c0"/></from>
      <to><interface-ref name="ForceParentInsertion" scoped="" ref="0x7f2c5407b648"/></to>
    </wire>
    <wire loc="58:TestNetworkAppC.nc">
      <from><interface-ref name="ReadBatteryVoltage" scoped="" ref="0x7f2c550646b8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f2c53c41020"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f2c53c41020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f2c52ce0358"/></to>
    </wire>
    <wire loc="63:TestNetworkAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f2c536df938"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f2c5500e8d8"/></to>
    </wire>
    <wire loc="64:TestNetworkAppC.nc">
      <from><interface-ref name="UARTSend" scoped="" ref="0x7f2c536d5020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2c536e7cd0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f2c536e7cd0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2c52b84af8"/></to>
    </wire>
    <wire loc="65:TestNetworkAppC.nc">
      <from><interface-ref name="MessagePool" scoped="" ref="0x7f2c536dd1b8"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f2c53685748"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f2c53685748"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f2c52b52c98"/></to>
    </wire>
    <wire loc="66:TestNetworkAppC.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x7f2c536dba68"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f2c536807c8"/></to>
    </wire>
    <wire loc="67:TestNetworkAppC.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x7f2c5408e750"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x7f2c536e2be8"/></to>
    </wire>
    <wire loc="68:TestNetworkAppC.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x7f2c55077cc8"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x7f2c536e2be8"/></to>
    </wire>
    <wire loc="70:TestNetworkAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2c550654b8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2c54e15d10"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2c54e15d10"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2c54de2020"/></to>
    </wire>
    <wire loc="44:TestNetworkC.nc">
      <from><interface-ref name="uartEchoTask" scoped="" ref="0x7f2c55058618"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c55264b18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c5500bd18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c52b525f8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c5500bd18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c52b65390"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c5500bd18"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x7f2c53831020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c5500bd18"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x7f2c5382fe30"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c5500bd18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c5389c120"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c5500bd18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c53a27110"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c5500bd18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c52ccf8e8"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c5500bd18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c52de18f8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c5500bd18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c52dfdc68"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c5500bd18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c52e0f7e8"/></to>
    </wire>
    <wire loc="154:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c5500bd18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c53cb6d20"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c5500bd18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c53f450e0"/></to>
    </wire>
    <wire loc="230:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c5500bd18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c53e7a0c0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c5500bd18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c52f4f020"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c5500bd18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c530765e8"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c5500bd18"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c5464cbf0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c5500bd18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c54864758"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c5500bd18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c549235f0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c5500bd18"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c531c3b50"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c5500bd18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c54a35238"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c5500bd18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c531f43f0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c5500bd18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c532b0718"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f2c54e57308"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f2c55290080"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f2c55290080"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f2c551bad88"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f2c54e57ce0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f2c54548870"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f2c54e57ce0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f2c5464c138"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f2c54e57ce0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c5500ab90"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2c5500ab90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c54ffc4f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c54e56418"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c5500bd18"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f2c550049a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c53721020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f2c550049a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c53c186e8"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f2c550049a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c543a0dc0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f2c54fffb98"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f2c54e76ae0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7f2c54ffb398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c54e764b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f2c54ffcb90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c54e225e8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f2c54ffcb90"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f2c54ffea08"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f2c54ffea08"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f2c54ff3428"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f2c54ff6108"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f2c550049a0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7f2c54fec5f8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7f2c54fe11a0"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f2c54fe11a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f2c54f5d430"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f2c54ff27f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f2c54ff6108"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f2c54fafc78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c54ec9520"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f2c54fc97e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f2c54f34020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f2c54f34020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c534f7480"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f2c54fbe7e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f2c54f23d60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f2c54f23d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c5348a480"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f2c54fb54d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f2c54f148c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f2c54f148c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c53423480"/></to>
    </wire>
    <wire loc="196:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7f2c54fa9af0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c54eb0c38"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f2c54fdf4d0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f2c54f5b740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f2c54f5b740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c5361e480"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f2c54fb71a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f2c54f165b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f2c54f165b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c53429480"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f2c54fdd7e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f2c54f53930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f2c54f53930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c535c83e0"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f2c54fd2968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f2c54f42740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f2c54f42740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c5355b480"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f2c54fc6c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f2c54f30430"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f2c54f30430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c534ee480"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f2c54fbbc78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f2c54f1f120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f2c54f1f120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c53481480"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f2c54fe6c78"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f2c54f60020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f2c54f60020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c5362e480"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f2c54fdac78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f2c54f50d60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f2c54f50d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c535bf480"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f2c54fcfe00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f2c54f3fbd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f2c54f3fbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c53552480"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f2c54fc21a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f2c54f2d8c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f2c54f2d8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c534e4480"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f2c54fb2968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f2c54f11d60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f2c54f11d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c5341a480"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f2c54fab7e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c54ebac38"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f2c54fc04d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f2c54f25a50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f2c54f25a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c53490480"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f2c54f5d430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c53625480"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f2c54fd6348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f2c54f4c120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f2c54f4c120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c535b5480"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f2c54fad4d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c54ec4cd8"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f2c54fd4658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f2c54f44500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f2c54f44500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c535613e0"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f2c54fc8968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f2c54f33120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f2c54f33120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c534f4480"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f2c54fbd968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f2c54f22e18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f2c54f22e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c53487480"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f2c54fb4658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f2c54f13a50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f2c54f13a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c53420480"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f2c54fde658"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f2c54f5a8c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f2c54f5a8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c5361b480"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f2c54fdc968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f2c54f52a50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f2c54f52a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c535c5480"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f2c54fd1af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f2c54f418c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f2c54f418c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c53558480"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f2c54fc5e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f2c54f2f5b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f2c54f2f5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c534eb480"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f2c54fbae00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f2c54f1e2a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f2c54f1e2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c5347d480"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f2c54fe4e00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f2c54f5f120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f2c54f5f120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c5362b480"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f2c54fd9e00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f2c54f4fe18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f2c54f4fe18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c535bc480"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f2c54fcd020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f2c54f3dd60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f2c54f3dd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c5354e480"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f2c54fb1af0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f2c54f10e18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f2c54f10e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c53416480"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f2c54fcb348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f2c54f36e40"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f2c54f36e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c534fa3e0"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f2c54fbf658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f2c54f24bd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f2c54f24bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c5348d480"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f2c54fb6348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f2c54f15740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f2c54f15740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c53426480"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f2c54faa968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c54eb43e0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f2c54fe0348"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f2c54f5c5b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f2c54f5c5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c53621480"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f2c54fd54d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f2c54f4b2a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f2c54f4b2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c535b2480"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f2c54fb8020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f2c54f17500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f2c54f17500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c5342c3e0"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f2c54fd37e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f2c54f435b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f2c54f435b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c5355e480"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f2c54fc7af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f2c54f312a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f2c54f312a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c534f1480"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f2c54fbcaf0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f2c54f20020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f2c54f20020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c53484480"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f2c54fb37e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f2c54f12bd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f2c54f12bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c5341d480"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f2c54ff5a70"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f2c54f62dc0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f2c54f62dc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c536313e0"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f2c54fdbaf0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f2c54f51bd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f2c54f51bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c535c2480"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f2c54fd0c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f2c54f40a50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f2c54f40a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c53555480"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f2c54fc3020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f2c54f2e740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f2c54f2e740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c534e7480"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f2c54fac658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c54ebf3e0"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f2c54fc1348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f2c54f26930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f2c54f26930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c534933e0"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f2c54fcc1a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f2c54f3ce18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f2c54f3ce18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c5354b480"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f2c54fe2020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f2c54f5e2a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f2c54f5e2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c53628480"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f2c54fd7100"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f2c54f4d020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f2c54f4d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c535b8480"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f2c55264b18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c551b9c58"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f2c551b5168"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f2c5526de28"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f2c55198988"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f2c547b2578"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2c54e225e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c54e45368"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f2c54e43020"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f2c54e25090"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f2c54e25090"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7f2c54fe4e00"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f2c54e42190"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f2c54e24378"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f2c54e24378"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7f2c54fe6c78"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f2c54e41338"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f2c54e23500"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f2c54e23500"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7f2c54ff5a70"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f2c54decd10"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f2c54dc3c50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f2c54e11ad8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f2c54de54e8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f2c54de54e8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f2c54dbc498"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2c54de3360"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f2c54db99e8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f2c54e19798"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2c54de9cb0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f2c54de9cb0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2c54dc0c30"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f2c54e16498"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f2c54de69b8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f2c54de69b8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f2c54dbe968"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f2c54e03418"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f2c54de0020"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f2c54de0020"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f2c54da9e28"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f2c54e17928"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2c54de8e40"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f2c54de8e40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2c54dbfdc0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2c54e0bcb0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2c54de1658"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2c54de1658"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2c54da94d0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f2c54dfb1d8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f2c54de0ab8"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f2c54de0ab8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f2c54da08f0"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2c54de2020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2c54dba378"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f2c54dfac48"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f2c54ddf780"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f2c54ddf780"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f2c54d9f5f8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7f2c54df18c0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f2c54dce978"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f2c54dce978"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f2c54d938b0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f2c54df0758"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f2c54dc7860"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f2c54dc7860"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f2c54d8e9d8"/></to>
    </wire>
    <wire loc="215:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f2c54dc3c50"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f2c549ec988"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f2c54dd30c8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f2c54d988b8"/></to>
    </wire>
    <wire loc="305:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f2c54d988b8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f2c546690c8"/></to>
    </wire>
    <wire loc="270:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f2c54d8e9d8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f2c546b4270"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f2c54dbc498"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f2c54bf1020"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f2c54db99e8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2c54bf5578"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f2c54dc0c30"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2c54bf4388"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f2c54dbe968"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f2c54bf37e0"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f2c54dd7d80"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f2c54d9b5a0"/></to>
    </wire>
    <wire loc="303:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f2c54d9b5a0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f2c5466dcd0"/></to>
    </wire>
    <wire loc="216:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f2c54da9e28"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f2c549d6060"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f2c54dbfdc0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2c54bf30c8"/></to>
    </wire>
    <wire loc="269:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f2c54d938b0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f2c546b1020"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f2c54dca5a8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f2c54d944e0"/></to>
    </wire>
    <wire loc="307:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f2c54d944e0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f2c5465f220"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f2c54dd8930"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f2c54d9d1f8"/></to>
    </wire>
    <wire loc="304:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f2c54d9d1f8"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f2c54664860"/></to>
    </wire>
    <wire loc="248:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2c54da94d0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2c548e23f0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7f2c54de41c8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7f2c54dbb1c8"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7f2c54dbb1c8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7f2c54bf1738"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f2c54da08f0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f2c549f7268"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2c54dba378"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2c54bf6020"/></to>
    </wire>
    <wire loc="224:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f2c54d9f5f8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f2c54967bd0"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f2c54dcd990"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f2c54d95b78"/></to>
    </wire>
    <wire loc="306:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f2c54d95b78"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f2c546619d0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7f2c54de4d58"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7f2c54dbbd58"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7f2c54dbbd58"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7f2c54bf1e50"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f2c549ec988"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f2c549d6b30"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f2c546690c8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f2c54644020"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x7f2c54db7710"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f2c54b43840"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x7f2c54db64b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2c54b77200"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2c54b77200"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2c532aeae0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f2c54bf1020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f2c53306b58"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f2c54bf4388"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2c53307020"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f2c54bf37e0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f2c53306480"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7f2c54da1308"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f2c54a72900"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7f2c54a72900"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f2c532442e0"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7f2c54daa6e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2c54b71980"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f2c5466dcd0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f2c54648b48"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f2c549d6060"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f2c531cce80"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2c54bf5578"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2c53308268"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f2c54bf30c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2c53307d18"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f2c546b1020"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f2c53137270"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f2c5465f220"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f2c5454c438"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f2c54664860"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f2c5463e860"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x7f2c54db0250"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7f2c54b44578"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7f2c54bf1738"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7f2c533053c8"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f2c549f7268"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x7f2c549f2470"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f2c54967bd0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f2c531c1268"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2c54bf6020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2c5330ab60"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f2c546b4270"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f2c5313a590"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x7f2c54db7020"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7f2c54b432a8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f2c546619d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f2c5463c9d0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7f2c54bf1e50"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7f2c53305ae0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f2c54d44858"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f2c54a75980"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f2c54a75980"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f2c532472a8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f2c54d3d640"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f2c54cdd910"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f2c54d41a40"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f2c546b1020"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x7f2c54d37860"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f2c5466ebd8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f2c5466ebd8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f2c54649a50"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f2c54cac958"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2c5465e4b8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f2c5465e4b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2c545502e0"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f2c54bee2a8"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7f2c54d5fb48"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f2c54bef2a8"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f2c54be7100"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f2c54befb90"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x7f2c54b04908"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f2c54bf04d0"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x7f2c54b03020"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2c54bd83f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2c54b77200"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f2c54be7a48"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x7f2c54b04020"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f2c54b43e38"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f2c54a75980"/></to>
    </wire>
    <wire loc="154:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f2c54b3fba0"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7f2c54b36230"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f2c54b3d5b8"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7f2c54b36b18"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f2c54b40d98"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f2c54b06120"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f2c54b03e00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2c54a08470"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f2c54a08470"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2c531f6378"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f2c54b02740"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2c549f8bd0"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f2c549f8bd0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f2c549f55b8"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f2c54b02d18"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f2c54a70b98"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f2c54a70b98"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f2c53243578"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f2c54a6fab0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f2c549f7e20"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f2c549f7e20"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f2c549f5b90"/></to>
    </wire>
    <wire loc="181:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f2c54a06580"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x7f2c54d733b8"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f2c54a07510"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2c549f82e8"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f2c549f82e8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f2c549f6c38"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2c549f3a10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2c548e23f0"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f2c549f6c38"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2c549d8430"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f2c549d8430"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f2c549d55c8"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f2c549f55b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2c549d8d18"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f2c549d8d18"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f2c549d4020"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f2c549f5b90"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f2c549d72e8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f2c549d72e8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f2c549d45f8"/></to>
    </wire>
    <wire loc="211:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f2c549d6b30"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f2c54968270"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f2c54968270"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f2c531c30e0"/></to>
    </wire>
    <wire loc="212:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f2c549d55c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2c54968ce0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f2c54968ce0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2c531c22a8"/></to>
    </wire>
    <wire loc="213:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f2c549d4020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2c54967638"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f2c54967638"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2c531c2b90"/></to>
    </wire>
    <wire loc="214:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f2c549d45f8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f2c546ae9f8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f2c546ae9f8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f2c53134c78"/></to>
    </wire>
    <wire loc="221:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f2c549653f0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f2c54914988"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f2c54914988"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f2c531869b0"/></to>
    </wire>
    <wire loc="222:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f2c54965c98"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f2c54a08d18"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f2c54a08d18"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f2c531f6c20"/></to>
    </wire>
    <wire loc="223:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f2c549665d8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f2c546815b8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f2c546815b8"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7f2c5467ba08"/></to>
    </wire>
    <wire loc="228:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f2c54a07df8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f2c54913268"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f2c54913268"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f2c531853f0"/></to>
    </wire>
    <wire loc="237:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f2c549118c8"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7f2c54d6c6c8"/></to>
    </wire>
    <wire loc="238:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f2c54913a28"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f2c5490c2a8"/></to>
    </wire>
    <wire loc="239:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f2c54912430"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f2c5490cb50"/></to>
    </wire>
    <wire loc="240:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f2c54912b50"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f2c54cdd910"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="246:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x7f2c548debd8"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f2c546a4660"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="247:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f2c548e1d90"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f2c54cdd910"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f2c548e0a18"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7f2c54d780f0"/></to>
    </wire>
    <wire loc="253:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f2c548e2d38"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f2c548c2020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f2c548c2020"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f2c548bc5b8"/></to>
    </wire>
    <wire loc="254:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f2c548e1670"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f2c548c28c8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f2c548c28c8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f2c548bb020"/></to>
    </wire>
    <wire loc="259:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f2c548bada0"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7f2c54d5d778"/></to>
    </wire>
    <wire loc="260:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f2c548bc5b8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f2c5467f3f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f2c5467f3f0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f2c5467a8c8"/></to>
    </wire>
    <wire loc="261:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f2c548bb020"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f2c5467fc98"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f2c5467fc98"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f2c546792a8"/></to>
    </wire>
    <wire loc="262:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x7f2c548bb780"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7f2c5466e448"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f2c5466e448"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7f2c546492c0"/></to>
    </wire>
    <wire loc="267:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f2c546ada30"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f2c5465f220"/></to>
    </wire>
    <wire loc="268:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f2c546ac9f0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f2c546860e0"/></to>
    </wire>
    <wire loc="271:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7f2c546aa8c8"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f2c546a4660"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="276:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f2c54685020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f2c5466ebd8"/></to>
    </wire>
    <wire loc="286:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f2c54676060"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7f2c54d5d778"/></to>
    </wire>
    <wire loc="287:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f2c5467a8c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f2c5466f2c8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f2c5466f2c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f2c5464a0c0"/></to>
    </wire>
    <wire loc="288:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f2c546792a8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f2c5466fbf0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f2c5466fbf0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f2c5464a9e8"/></to>
    </wire>
    <wire loc="289:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x7f2c5467ba08"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f2c546723e0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f2c546723e0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f2c5464b2d0"/></to>
    </wire>
    <wire loc="301:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f2c5465a5c8"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x7f2c54d82428"/></to>
    </wire>
    <wire loc="302:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f2c54659730"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f2c546b1020"/></to>
    </wire>
    <wire loc="309:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f2c54655378"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f2c546a4660"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="310:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7f2c54654020"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f2c546a4660"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="311:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f2c54654b78"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f2c546a4660"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="312:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f2c54653768"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f2c54cdd910"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f2c54cdd910"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f2c533297e8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f2c53328660"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2c54cac958"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f2c53324568"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f2c54cab220"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f2c53300020"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f2c54c0c560"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f2c53304180"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f2c54bf04d0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f2c53303020"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f2c54bef2a8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f2c53303908"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f2c54befb90"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f2c53301020"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f2c54bee2a8"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f2c54b76020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f2c532ad820"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2c54b76760"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2c532ac020"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2c532ac8c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2c54b74020"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f2c532aa0a0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f2c532b0cf0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f2c532aab50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c55264b18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f2c53241450"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f2c54c0c560"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f2c53240020"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f2c54a6fab0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7f2c531f2700"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7f2c54a3bd58"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7f2c54a3bd58"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7f2c54a35850"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f2c531f13f0"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f2c531ef870"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f2c531ef870"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f2c54a34b18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f2c531f4a28"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f2c54a07510"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f2c531f3430"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f2c54a07df8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x7f2c531f3b50"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f2c54a06580"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x7f2c549f1100"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2c549f3a10"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f2c531c1b70"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f2c549665d8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f2c531c0a10"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f2c54cab220"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f2c531bf578"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f2c549653f0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f2c531bfe20"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f2c54965c98"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7f2c531bdd98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c55264b18"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x7f2c531bc5c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c55264b18"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x7f2c531bd5f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c55264b18"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f2c53185bb0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f2c54913a28"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f2c531820a0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f2c549118c8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f2c531845b8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f2c54912430"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f2c53184cd8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f2c54912b50"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f2c53183908"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f2c54927080"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x7f2c53182b50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c55264b18"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f2c54928020"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f2c54923e48"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2c5492a2b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c549235f0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f2c548c5978"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f2c548bfbf0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f2c548c0020"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7f2c548bb780"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f2c548c3268"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7f2c548bd638"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f2c548c0740"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f2c548ba020"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f2c548bf5b8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f2c548bada0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f2c548c4c98"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7f2c548bd060"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f2c548c43f0"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7f2c548be740"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f2c5312f8a8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f2c546ac9f0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f2c531326c0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f2c546ada30"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f2c531318c8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f2c54868dc0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f2c54868dc0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f2c5485c5e0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7f2c53133ab0"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x7f2c546aa8c8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f2c5485c5e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f2c546c6128"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f2c548614a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2c546df5e0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2c54864758"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c54859c18"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2c54859c18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c54758020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f2c546d9858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2c5472bab0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f2c54726c70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7f2c54856648"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7f2c54856648"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2c547587c8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f2c546c5330"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7f2c5484c7b8"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7f2c5484c7b8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2c54754a90"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f2c54754a90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2c5310ba90"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2c54758020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c5310f210"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f2c547587c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2c5310f9b8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2c53108b98"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2c547cb288"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2c547cb288"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2c547bfe00"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f2c53103b60"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f2c547c63c0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f2c547c63c0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f2c547b7020"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f2c53102e68"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2c547c57f8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f2c547c57f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2c547b6340"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f2c530fd060"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f2c547c19e8"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f2c547c19e8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f2c547b2c78"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f2c54722cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c55264b18"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f2c546d4930"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c55264b18"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f2c546bc1c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f2c548614a0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f2c54683b78"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f2c5467c020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f2c5467e3f0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7f2c54679a08"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f2c5467eb10"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f2c546772a8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f2c5467d8c8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f2c54676060"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f2c54681020"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7f2c5467b430"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f2c54682700"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7f2c5467ca90"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f2c545502e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2c54359b68"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f2c54666458"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f2c546413b0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f2c5454c438"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f2c54352400"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f2c54629100"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f2c5465a5c8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f2c54629e10"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f2c54655378"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7f2c54628988"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x7f2c54654020"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f2c54627518"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f2c54654b78"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f2c546262b0"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f2c54659730"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f2c5462c020"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f2c5454c438"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f2c54622ab8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f2c54653768"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7f2c5463a130"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x7f2c54558710"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7f2c54558710"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f2c54fdd7e0"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f2c546394f8"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x7f2c54555990"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f2c54555990"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2c54520e80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f2c546321f0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f2c545545e8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f2c545545e8"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f2c545289d0"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7f2c54632d00"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x7f2c54553140"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7f2c54553140"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7f2c54fd54d0"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f2c54637e70"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f2c54552338"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f2c54552338"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7f2c54fdf4d0"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7f2c5462d5e8"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7f2c545514c0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7f2c545514c0"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7f2c5454bcd8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f2c54622020"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f2c54cab220"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f2c5462bc60"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f2c543013c0"/></to>
    </wire>
    <wire loc="847:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x7f2c54596d98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c55264b18"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f2c54359b68"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2c530359d8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f2c545289d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f2c5451d628"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f2c54352400"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f2c5430dc38"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x7f2c5453cc18"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7f2c54fc3020"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x7f2c5453be08"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7f2c54fc6c78"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f2c5453e540"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2c54449ca0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f2c54449ca0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2c5442e350"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f2c545201d8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f2c5451c120"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f2c54528388"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f2c5451d020"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2c54549cd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c54527a18"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2c54520e80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2c5451cd88"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7f2c544ff3c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2c5445b748"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2c5445b748"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2c53073a28"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2c544fe020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2c5445ac50"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2c5445ac50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2c53071020"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7f2c54500150"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7f2c544b3020"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7f2c544b3020"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7f2c544b0dc0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f2c544fe7c8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f2c551993c8"/></to>
    </wire>
    <wire loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7f2c544deb58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c55264b18"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7f2c544a2350"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f2c551993c8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7f2c544a5c70"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f2c54fdd7e0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f2c544a9de0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7f2c54fdc968"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7f2c544a4020"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7f2c54fdbaf0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7f2c544a3190"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7f2c54fdac78"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f2c5445a510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f2c53072820"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2c530718c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2c54459550"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f2c530700a0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f2c53076bc0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f2c53070b50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c55264b18"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f2c544405e8"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f2c54430c90"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2c544516e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2c54437be0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f2c5443ca20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7f2c5442ac48"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f2c5443ca20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7f2c54425020"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f2c5443ca20"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7f2c54421360"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f2c53032a30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2c544516e0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f2c5302da80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2c5443ca20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2c5439f540"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2c544516e0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f2c5430ce48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2c5432d270"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f2c54311450"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2c5434d108"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f2c5434d108"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2c5434ae08"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2c54335020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2c544516e0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f2c542a67b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f2c54297730"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x7f2c542944b0"/></from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x7f2c542a25a8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x7f2c542927f0"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x7f2c5429c2d0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x7f2c54291a58"/></from>
      <to><interface-ref name="DisseminatorControl" scoped="" ref="0x7f2c5429b520"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f2c542902a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2c541c1080"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f2c541c1080"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2c52ff9140"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f2c5428f020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2c541ba970"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f2c541ba970"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2c54e17928"/>
      <arguments>
        <value cst="I:96">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeAMSend" scoped="" ref="0x7f2c5428f6a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2c541b03f8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f2c541b03f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2c52f9d978"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeReceive" scoped="" ref="0x7f2c5428e4f8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2c541a9080"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f2c541a9080"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2c54e17928"/>
      <arguments>
        <value cst="I:97">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2c5428eac0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2c541a3830"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f2c52ff9140"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2c52fec958"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2c541c1c38"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2c52ff9cf8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2c52ff9cf8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2c54e15100"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2c541c0888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2c52ff7908"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2c52ff7908"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2c54e15d10"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f2c541be020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f2c52ff5020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f2c52ff5020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2c54e0bcb0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f2c52feb5d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2c5421d708"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2c52fea268"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2c54e15d10"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f2c5421d708"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2c541d6b98"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f2c541d5a08"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2c54e19798"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2c541d4700"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2c54e15d10"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2c541d3d20"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2c54e15100"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f2c541d2988"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c55264b18"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f2c541d1160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c55264b18"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2c541b4020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2c54e15100"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2c541b4bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2c54e15d10"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f2c52f9d978"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2c52f90378"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2c541af020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2c52f9c578"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2c52f9c578"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2c54e15100"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2c541afbd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2c52f9b268"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2c52f9b268"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2c54e15d10"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f2c541ac2a8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f2c52f9a8c8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f2c52f9a8c8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2c54e0bcb0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f2c52f8f020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2c5421d708"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2c52f8fbd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2c54e15d10"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2c541a9618"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2c54e15100"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2c541a8268"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2c54e15d10"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminationUpdate" scoped="" ref="0x7f2c540b2290"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x7f2c52f6d020"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x7f2c542a25a8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x7f2c52f6c208"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x7f2c5429b520"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f2c52f77bf8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x7f2c5429c2d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x7f2c54155498"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2c52f6b020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2c54e49190"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <from><interface-ref name="changedTask" scoped="" ref="0x7f2c52f6a5f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c55264b18"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationTimerP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x7f2c54155498"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x7f2c540b8478"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x7f2c540b8478"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x7f2c52f4f6d8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2c52f4e558"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2c52f41550"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2c52f41550"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f2c546bc1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f2c52f47888"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f2c54927080"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Changed" scoped="" ref="0x7f2c52f48740"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x7f2c52f38ac8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Pending" scoped="" ref="0x7f2c52f495d8"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x7f2c52f3be58"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2c52f46020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2c54e49190"/></to>
    </wire>
    <wire loc="154:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <from><interface-ref name="timerTask" scoped="" ref="0x7f2c52f455f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c55264b18"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f2c5407cc08"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f2c53cb9700"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x7f2c54084620"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x7f2c53f41e20"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x7f2c540a5b48"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x7f2c54085398"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x7f2c54085398"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x7f2c53f43b58"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2c540a82a8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2c54085970"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2c54085970"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2c53f41268"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f2c540abd08"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f2c54086810"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f2c54086810"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f2c53f43480"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f2c540ad020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2c54089a88"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f2c54089a88"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2c53f44020"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x7f2c5407f848"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x7f2c53cb8020"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="ForceParentInsertion" scoped="" ref="0x7f2c5407b648"/></from>
      <to><interface-ref name="ForceParentInsertion" scoped="" ref="0x7f2c53cb52e8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f2c540ab1c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2c54087c88"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f2c54087c88"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2c53f44d18"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x7f2c5407c478"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x7f2c53f3d020"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x7f2c54092cd8"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x7f2c54083760"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x7f2c54083760"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x7f2c53f3f020"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f2c5408dd90"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f2c53f45678"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f2c5408dd90"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f2c53cb7578"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f2c5408dd90"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f2c53e7d420"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x7f2c540734c0"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x7f2c5408e020"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x7f2c54073af0"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x7f2c5408e750"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x7f2c540742b8"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x7f2c53e7b020"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x7f2c53f22698"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x7f2c540734c0"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="QEntryPool" scoped="" ref="0x7f2c53f30dd0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f2c53eea6e0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f2c53eea6e0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f2c52dfc370"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="MessagePool" scoped="" ref="0x7f2c53f2b630"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f2c53f12478"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f2c53f12478"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f2c52e0e020"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x7f2c53f34a08"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f2c53ee4d50"/></to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SentCache" scoped="" ref="0x7f2c53f27020"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x7f2c53e960d8"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="Cache" scoped="" ref="0x7f2c53e960d8"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x7f2c52de0020"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x7f2c53f36020"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x7f2c53e7b020"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconSend" scoped="" ref="0x7f2c53cb5aa8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2c53e7dbf0"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconReceive" scoped="" ref="0x7f2c53cb4740"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2c53e7c8d0"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x7f2c53cb4cd8"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x7f2c53e7b020"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CompareBit" scoped="" ref="0x7f2c53ca3020"/></from>
      <to><interface-ref name="CompareBit" scoped="" ref="0x7f2c53e742b8"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2c53cb2da0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2c54e15d10"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7f2c53cb0430"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f2c54e1d728"/></to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconTimer" scoped="" ref="0x7f2c53caf020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2c53e93020"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2c53e93020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f2c546bc1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RouteTimer" scoped="" ref="0x7f2c53caa540"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2c53e8c5e8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2c53e8c5e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f2c546bc1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x7f2c53ca5b80"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x7f2c54073af0"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x7f2c53f1e268"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x7f2c54073af0"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x7f2c53f255b8"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x7f2c53cb8020"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x7f2c53ca4888"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x7f2c53f3d020"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RetxmitTimer" scoped="" ref="0x7f2c53f3cde0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2c53c9a718"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2c53c9a718"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f2c546bc1c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f2c53ca5460"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f2c54927080"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f2c53f1fa10"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f2c54927080"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f2c53f3d7e0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2c53dc1d10"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f2c53dc1d10"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2c52db58f8"/></to>
    </wire>
    <wire loc="181:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f2c53f26940"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2c53dba390"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f2c53dba390"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2c54e17928"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x7f2c53f25020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2c53daf1c8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f2c53daf1c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f2c54e16498"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f2c53f35b50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2c53dc0908"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2c53dc0908"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2c52db3578"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f2c53f23b98"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f2c53cb9700"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x7f2c53f350e0"/></from>
      <to><interface-ref name="Routing" scoped="" ref="0x7f2c53cbabc8"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7f2c53f1ee60"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f2c54e1d728"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2c53f3c3f0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f2c53dbdbd8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f2c53dbdbd8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f2c52db18c8"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2c53f22e50"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2c53dbe578"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2c53dbe578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2c52db2268"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2c53f203f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2c54e49190"/></to>
    </wire>
    <wire loc="196:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f2c53e725f8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f2c54927080"/></to>
    </wire>
    <wire loc="198:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f2c53e74910"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2c53c8f490"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f2c53c8f490"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2c52d16718"/></to>
    </wire>
    <wire loc="199:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f2c53e73978"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2c53c8a9a8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f2c53c8a9a8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2c54e17928"/>
      <arguments>
        <value cst="I:112">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="200:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f2c53e77c78"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2c53c8e080"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2c53c8e080"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2c52d153f0"/></to>
    </wire>
    <wire loc="201:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x7f2c53e78680"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2c53c8ec38"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2c53c8ec38"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2c52d14020"/></to>
    </wire>
    <wire loc="225:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f2c53e72020"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f2c54dcd990"/></to>
    </wire>
    <wire loc="234:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7f2c53f1d948"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c55264b18"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x7f2c52dde960"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x7f2c54083760"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f2c52db58f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2c52da8a80"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2c52db3578"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2c54e15100"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2c52db2268"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2c54e15d10"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f2c52db18c8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2c54e0bcb0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f2c52da7760"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2c5421d708"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2c52da63f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2c54e15d10"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2c53dba928"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2c54e15100"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2c53db9578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2c54e15d10"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2c53daf760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2c54e15100"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2c53dae3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2c54e15d10"/></to>
    </wire>
    <wire loc="331:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <from><interface-ref name="updateRouteTask" scoped="" ref="0x7f2c53ca3638"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c55264b18"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <from><interface-ref name="sendBeaconTask" scoped="" ref="0x7f2c53ca3dd8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c55264b18"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f2c52d16718"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2c52d09a80"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2c52d153f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2c54e15100"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2c52d14020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2c54e15d10"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f2c53c8c2a8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f2c52d135b8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f2c52d135b8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2c54e0bcb0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f2c52d08760"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2c5421d708"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2c52d073f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2c54e15d10"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2c53c89020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2c54e15100"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2c53c89bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2c54e15d10"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2c53c51700"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2c52ceebd8"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2c52ceebd8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2c540a82a8"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f2c52cee020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2c540ad020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x7f2c5408e020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x7f2c52ce8888"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f2c52ce0358"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f2c53c334f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f2c52cdfa28"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f2c53ab78d8"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f2c53c2c020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f2c52cdfa28"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2c53c2ce38"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2c53c29918"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2c53c241c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2c52cde3f0"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f2c53c334f8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f2c53adc560"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x7f2c53c312f0"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x7f2c53b05880"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2c53ac2510"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2c53c2ce38"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f2c53b03e78"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f2c53c2c020"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f2c53ac5da8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f2c53b08c68"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f2c53b03020"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f2c53c21ac8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f2c53c21ac8"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f2c53c17508"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f2c53b02a50"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f2c543013c0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f2c53c1b420"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f2c53c17e60"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2c53c29918"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2c53b2b020"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2c53b2b020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2c52ccb060"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2c53b29960"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2c53c241c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f2c53c08940"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f2c53c19a18"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f2c53c19a18"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f2c53bd4cd0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f2c53c14d30"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f2c54fffb98"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f2c53b25478"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f2c53c18d18"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f2c53b10268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f2c53b2a4a8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f2c53b2a4a8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f2c52cca4c0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f2c53bcf0c0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f2c551993c8"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f2c53b2bd18"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f2c52ccbd58"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2c53b290e0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2c52cc90e0"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2c52cc9980"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2c53b29960"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f2c52cc8130"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f2c52ccd020"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f2c52cc62e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c55264b18"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f2c52c95020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f2c53b25478"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f2c52c95740"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f2c53b25b98"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f2c52c95cd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f2c53b10268"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2c52c93908"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2c53b10e20"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x7f2c53af00c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c55264b18"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f2c52c84550"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f2c52c811c8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f2c52c811c8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f2c53c334f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f2c52c7f778"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f2c53ab78d8"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f2c53c2c020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f2c52c7f778"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2c53c2ce38"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2c53c29918"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2c53c241c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2c52c7e060"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2c536eb020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2c53a882a8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2c53a882a8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2c53a2ed20"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2c536ebbd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2c53a86020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2c53a86020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2c53a2f738"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f2c536e92a8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2c53a85658"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2c53a85658"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2c53a2d908"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f2c52c72e08"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2c53a977f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2c52c71a10"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2c53a86020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f2c53a977f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2c53a941e0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f2c53a92020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2c53a8aaa8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f2c53a8aaa8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2c53a81460"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2c53a92bf8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2c53a86020"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2c53a90268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2c53a882a8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f2c53a8f020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c55264b18"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f2c53a8f7c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c55264b18"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f2c53a27728"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f2c539ffda8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f2c53a89c38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2c53a2f180"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2c53a27110"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c539ff790"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2c53a228f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2c53a84020"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f2c53a2c308"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2c53a25208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f2c53a2b020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2c53a26760"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f2c53a22020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7f2c537026e0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f2c53a25208"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2c538d9020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f2c53a26760"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2c538da868"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7f2c538d9db8"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f2c53a22020"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2c539f8bc8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2c53a228f8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2c538d7a50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2c53a228f8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2c538cf420"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2c53a228f8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f2c538d86c8"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f2c539f5b48"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7f2c538d7020"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7f2c539f9950"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7f2c539efb38"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7f2c538d3b30"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f2c539ee398"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f2c538d28b0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f2c538d28b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f2c538a7338"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f2c538c2448"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f2c538a90c0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f2c538a90c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f2c538a1310"/></to>
    </wire>
    <wire loc="332:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7f2c5399c830"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c55264b18"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7f2c539d3d70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c55264b18"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7f2c5399f020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c55264b18"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f2c53999918"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c55264b18"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7f2c538d5100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c55264b18"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7f2c538d58a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c55264b18"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f2c538a3290"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f2c538a7af0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f2c538a7af0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f2c5389ce58"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f2c538a1310"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f2c5385a5f8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f2c538a7338"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f2c5389c6f8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f2c538a0598"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2c537cc188"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f2c537cc188"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2c5370fc50"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f2c53857c60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2c538a0598"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x7f2c538595f8"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7f2c5383a700"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x7f2c5383a700"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7f2c53831730"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x7f2c53859d98"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7f2c53839020"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x7f2c53839020"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7f2c53830020"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x7f2c538585c0"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7f2c53839860"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x7f2c53839860"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7f2c538308a0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x7f2c53835020"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x7f2c5382d6d8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x7f2c53837e58"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x7f2c5382e568"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x7f2c538366f0"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x7f2c5382ee00"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f2c5382cc70"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f2c54fffb98"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f2c5382b950"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f2c551993c8"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f2c5370de20"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2c537c6020"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f2c537c6020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2c53719020"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2c537170e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2c537c4c30"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2c537c4c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2c537ae298"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f2c537bdc90"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f2c537a93d0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f2c537ba350"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2c537a8b18"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f2c537b51c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7f2c537a34e0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f2c537b51c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7f2c5379f770"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f2c537b51c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7f2c5379bb20"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2c53721740"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2c537c4c30"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2c536e6908"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2c53a882a8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2c536e5578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2c53a86020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f2c536e4bd8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2c53a85658"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f2c52b83760"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2c53a977f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2c52b823f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2c53a86020"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/lib/net/UARTDebugSenderP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7f2c536cea88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c55264b18"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="TestNetworkC" loc="16:TestNetworkC.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.1.2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.1.2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="39:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="39(RF230RadioC.RadioAlarmC.RadioAlarmP):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c55201020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c55201378"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f2c5484a778"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c55201020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c55201378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c55201020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c55201378"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c55201020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c55201378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TOne" ref="0x7f2c551bf9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TOne" ref="0x7f2c551bf9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f2c551ff788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f2c551ff788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f2c551ff788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/opt/tinyos-2.1.2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="DisseminationC" loc="46:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationC.nc">
        <short>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol.</short>
        <long>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol. StdControl controls all of the trickle&#10; timers used for all of the keys. &#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP" loc="47:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
        <short>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.</short>
        <long>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.&#10;&#10; TODO: Hook DisseminationProbe up to the serial instead of the radio.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineImplP" loc="45:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
        <short>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.</short>
        <long>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC" loc="47(DisseminationEngineP.DisseminationSendC):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC" loc="47(DisseminationEngineP.DisseminationSendC.SenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP" loc="43(DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationReceiveC" loc="43(DisseminationEngineP.DisseminationReceiveC):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC" loc="47(DisseminationEngineP.DisseminationProbeSendC):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC" loc="47(DisseminationEngineP.DisseminationProbeSendC.SenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP" loc="43(DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeReceiveC" loc="43(DisseminationEngineP.DisseminationProbeReceiveC):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestNetworkAppC.Object32C" loc="49(TestNetworkAppC.Object32C):/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorC"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.Object32C.DisseminatorP" loc="45(TestNetworkAppC.Object32C.DisseminatorP):/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008-02-16 01:31:50 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f2c5418e368"/></type-var>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP" loc="44:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationTimerP.nc">
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC" loc="51(DisseminationTimerP.TrickleTimerMilliC):/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerMilliC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1024">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP" loc="51(DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP):/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerImplP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC" loc="44(DisseminationTimerP.TrickleTimerMilliC.TimerMilliC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector" loc="44(DisseminationTimerP.TrickleTimerMilliC.PendingVector):/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector" loc="44(DisseminationTimerP.TrickleTimerMilliC.ChangeVector):/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CollectionC" loc="45:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP" loc="77:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP.Forwarder" loc="107(CtpP.Forwarder):/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <instance number="0">
        <component-ref qname="CtpForwardingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.MessagePoolP" loc="41(CtpP.MessagePoolP):/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
            <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.MessagePoolP.PoolP" loc="53(CtpP.MessagePoolP.PoolP):/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f2c53f14ad8"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.QEntryPoolP" loc="41(CtpP.QEntryPoolP):/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7f2c54068a98"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f2c54066020"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.QEntryPoolP.PoolP" loc="53(CtpP.QEntryPoolP.PoolP):/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f2c53f14ad8"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SendQueueP" loc="42(CtpP.SendQueueP):/opt/tinyos-2.1.2/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7f2c54068a98"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f2c54066020"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:13">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SentCacheP" loc="38(CtpP.SentCacheP):/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SentCacheP.CacheP" loc="43(CtpP.SentCacheP.CacheP):/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RoutingBeaconTimer" loc="44(CtpP.RoutingBeaconTimer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.RouteUpdateTimer" loc="44(CtpP.RouteUpdateTimer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LinkEstimatorP" loc="42:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <module/>
    </component>
    <component qname="CtpP.AMSenderC" loc="47(CtpP.AMSenderC):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC" loc="47(CtpP.AMSenderC.SenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC.AMQueueEntryP" loc="43(CtpP.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.AMReceiverC" loc="43(CtpP.AMReceiverC):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSnooperC" loc="44(CtpP.AMSnooperC):/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSnooperC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.Router" loc="107(CtpP.Router):/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CtpRoutingEngineP"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:128">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:512000">
            <type-int cname="long" size="I:4" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RetxmitTimer" loc="44(CtpP.RetxmitTimer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl" loc="47(CtpP.SendControl):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC" loc="47(CtpP.SendControl.SenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC.AMQueueEntryP" loc="43(CtpP.SendControl.SenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.ReceiveControl" loc="43(CtpP.ReceiveControl):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.CollectionSenderC" loc="43(TestNetworkAppC.CollectionSenderC):/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionSenderC"/>
        <arguments>
          <value cst="I:238">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.CollectionSenderC.CollectionSenderP" loc="34(TestNetworkAppC.CollectionSenderC.CollectionSenderP):/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
      <instance number="0">
        <component-ref qname="CollectionSenderP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x7f2c55179b58"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.CollectionSenderC.CollectionSenderP.CollectionIdP" loc="45(TestNetworkAppC.CollectionSenderC.CollectionSenderP.CollectionIdP):/opt/tinyos-2.1.2/tos/lib/net/CollectionIdP.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionIdP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x7f2c55179b58"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestNetworkAppC.TimerMilliC" loc="44(TestNetworkAppC.TimerMilliC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.BatteryVoltage" loc="39(TestNetworkAppC.BatteryVoltage):/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.BatteryVoltage.AdcReadClientC" loc="21(TestNetworkAppC.BatteryVoltage.AdcReadClientC):/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="17:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc" safe="">
      <documentation loc="40:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega1281 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega1281 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="47:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega1281 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1281 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc" safe="">
      <documentation loc="39:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="VoltageP" loc="38:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageP.nc">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageP.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestNetworkAppC.DemoSensorC" loc="41(TestNetworkAppC.DemoSensorC):/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DemoSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.DemoSensorC.DemoChannel" loc="39(TestNetworkAppC.DemoSensorC.DemoChannel):/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.DemoSensorC.DemoChannel.AdcReadClientC" loc="21(TestNetworkAppC.DemoSensorC.DemoChannel.AdcReadClientC):/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.SerialAMSenderC" loc="47(TestNetworkAppC.SerialAMSenderC):/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:238">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.SerialAMSenderC.AMQueueEntryP" loc="43(TestNetworkAppC.SerialAMSenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="102:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TThree" ref="0x7f2c551bfd70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f2c551ff788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TThree" ref="0x7f2c551bfd70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x7f2c551bd630"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestNetworkAppC.UARTSender" loc="47(TestNetworkAppC.UARTSender):/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:22">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.UARTSender.AMQueueEntryP" loc="43(TestNetworkAppC.UARTSender.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UARTDebugSenderP" loc="2:/opt/tinyos-2.1.2/tos/lib/net/UARTDebugSenderP.nc">
      <module/>
    </component>
    <component qname="TestNetworkAppC.QueueC" loc="42(TestNetworkAppC.QueueC):/opt/tinyos-2.1.2/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
              <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestNetworkAppC.PoolC" loc="41(TestNetworkAppC.PoolC):/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
            <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.PoolC.PoolP" loc="53(TestNetworkAppC.PoolC.PoolP):/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f2c53f14ad8"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestNetworkAppC.DebugMessagePool" loc="41(TestNetworkAppC.DebugMessagePool):/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
            <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.DebugMessagePool.PoolP" loc="53(TestNetworkAppC.DebugMessagePool.PoolP):/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f2c53f14ad8"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestNetworkAppC.DebugSendQueue" loc="42(TestNetworkAppC.DebugSendQueue):/opt/tinyos-2.1.2/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
              <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f2c54fa6d00" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f2c54fa30c8" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f2c54fa3410" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f2c54f98608" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f2c54f98970" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f2c54f98cd8" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f2c54f95060" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f2c54f07508" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f2c54f07870" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f2c54f07bd8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f2c54f06020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f2c54bd5ab0" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f2c54bc5170" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f2c5484a778" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f2c5484a778"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f2c5484aa68" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f2c54840c78" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f2c54840c78"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f2c5483c020" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2c54857c60" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2c54857c60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2c54720cc8" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2c54720cc8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f2c5471c020" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2c546d19f0" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2c546d19f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f2c543a1e00" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f2c543a1e00"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7f2c5439e1a0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f2c543a2750" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f2c543a2750"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f2c5438a020" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f2c5438a020"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7f2c5438a320" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f2c54348430" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f2c54348430"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f2c54348b80" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f2c54348b80"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f2c5432f918" loc="55:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f2c5432f918"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f2c5432c0a8" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f2c5432c0a8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f2c5432c470" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f2c5432c470"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f2c5432cbe8" loc="58:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f2c5432cbe8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f2c5432a020" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f2c5432a7b0" loc="60:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f2c5432a7b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f2c54242420" loc="47:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f2c542390c8" loc="47:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f2c54235b50" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f2c5421ba00" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f2c541bc768" loc="43:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorC" loc="49:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f2c5418e368" loc="49:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f2c5418e368"/></type-var>
        </typedef>
        <constant name="key" ref="0x7f2c5418e688" loc="49:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorP" loc="45:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008-02-16 01:31:50 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f2c54186870" loc="45:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
          <component-ref qname="DisseminatorP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f2c54186870"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TrickleTimerMilliC" loc="51:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x7f2c541512b0" loc="51:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x7f2c54151600" loc="52:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x7f2c54151920" loc="53:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x7f2c54151c68" loc="54:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="TrickleTimerImplP" loc="51:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x7f2c5414b108" loc="51:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x7f2c5414b458" loc="52:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x7f2c5414b778" loc="53:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x7f2c5414bac0" loc="54:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </constant>
        <constant name="scale" ref="0x7f2c5414be08" loc="55:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BitVectorC" loc="44:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="max_bits" ref="0x7f2c540e09d8" loc="44:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
          <component-ref qname="BitVectorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CtpForwardingEngineP" loc="107:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/opt/tinyos-2.1.2/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7f2c53f14ad8" loc="41:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f2c53f14ad8"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x7f2c53f14e28" loc="41:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/opt/tinyos-2.1.2/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7f2c53f0cb08" loc="53:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f2c53f0cb08"/></type-var>
        </typedef>
        <constant name="size" ref="0x7f2c53f0ce28" loc="53:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/opt/tinyos-2.1.2/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7f2c53ee56a8" loc="42:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7f2c53ee56a8"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7f2c53ee5a00" loc="42:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="LruCtpMsgCacheC" loc="38:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="CACHE_SIZE" ref="0x7f2c53ec64d0" loc="38:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
          <component-ref qname="LruCtpMsgCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LruCtpMsgCacheP" loc="43:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7f2c53ebe2c0" loc="43:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
          <component-ref qname="LruCtpMsgCacheP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSnooperC" loc="44:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f2c53db4060" loc="44:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
          <component-ref qname="AMSnooperC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CtpRoutingEngineP" loc="107:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc" abstract="">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="routingTableSize" ref="0x7f2c53da3a48" loc="107:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </constant>
        <constant name="minInterval" ref="0x7f2c53da3db8" loc="107:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
        </constant>
        <constant name="maxInterval" ref="0x7f2c53da2178" loc="107:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CollectionSenderC" loc="43:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x7f2c53c64998" loc="43:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
          <component-ref qname="CollectionSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x7f2c55179b58"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionSenderP" loc="34:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc" abstract="">
      <parameters>
        <constant name="collectid" ref="0x7f2c53c5f8b0" loc="35:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x7f2c55179b58"/></typename>
          </type-int>
        </constant>
        <constant name="clientid" ref="0x7f2c53c5fbf8" loc="35:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionIdP" loc="45:/opt/tinyos-2.1.2/tos/lib/net/CollectionIdP.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x7f2c53c5a830" loc="45:/opt/tinyos-2.1.2/tos/lib/net/CollectionIdP.nc">
          <component-ref qname="CollectionIdP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x7f2c55179b58"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="VoltageC" loc="39:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc" abstract="">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f2c53b9b7e0" loc="89:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7f2c53b91e38" loc="42:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f2c53b77da0" loc="52:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x7f2c53adb020" loc="23:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x7f2c53adb020"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="DemoSensorC" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f2c53aa2020" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="RootControl" ref="0x7f2c550b8e78" loc="27:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x7f2c550b8e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f2c550ba1f8"/>
        <function-ref name="setRoot" scoped="" ref="0x7f2c550ba380"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f2c550ba508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadBatteryVoltage" ref="0x7f2c550646b8" loc="41:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadBatteryVoltage" scoped="" ref="0x7f2c550646b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2c5505c370"/>
        <function-ref name="readDone" scoped="" ref="0x7f2c5505c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x7f2c55077cc8" loc="36:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x7f2c55077cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x7f2c5507e0a0"/>
        <function-ref name="logEventMsg" scoped="" ref="0x7f2c5507e228"/>
        <function-ref name="logEventSimple" scoped="" ref="0x7f2c5507e3b0"/>
        <function-ref name="logEventRoute" scoped="" ref="0x7f2c5507e538"/>
        <function-ref name="logEventDbg" scoped="" ref="0x7f2c5507e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionPacket" ref="0x7f2c550b7020" loc="30:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x7f2c550b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f2c550b7370"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f2c550b74f8"/>
        <function-ref name="setPassNodeId" scoped="" ref="0x7f2c550b7680"/>
        <function-ref name="setType" scoped="" ref="0x7f2c550b7808"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f2c550b7990"/>
        <function-ref name="getPassNodeId" scoped="" ref="0x7f2c550b7b18"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f2c550b7ca0"/>
        <function-ref name="getType" scoped="" ref="0x7f2c550b7e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f2c5515b3e0" loc="17:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f2c5515b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f2c5515b730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f2c5515d888" loc="19:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x7f2c5515d888"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2c5515dbd8"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2c5515dd60"/>
        <function-ref name="start" scoped="" ref="0x7f2c5515c020"/>
        <function-ref name="stop" scoped="" ref="0x7f2c5515c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pool" ref="0x7f2c55082b88" loc="35:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7f2c55082b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
            <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c55087b18"/>
        <function-ref name="maxSize" scoped="" ref="0x7f2c55087020"/>
        <function-ref name="empty" scoped="" ref="0x7f2c55088728"/>
        <function-ref name="put" scoped="" ref="0x7f2c55087470"/>
        <function-ref name="size" scoped="" ref="0x7f2c55088b78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTSend" ref="0x7f2c550a9230" loc="29:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UARTSend" scoped="" ref="0x7f2c550a9230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c550a9680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c550a9808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c550a9990"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c550a9b18"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c550a9ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f2c5508ba00" loc="34:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f2c5508ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
              <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f2c5508a2d8"/>
        <function-ref name="enqueue" scoped="" ref="0x7f2c55089020"/>
        <function-ref name="element" scoped="" ref="0x7f2c55089650"/>
        <function-ref name="maxSize" scoped="" ref="0x7f2c55093e18"/>
        <function-ref name="dequeue" scoped="" ref="0x7f2c5508a938"/>
        <function-ref name="empty" scoped="" ref="0x7f2c55093578"/>
        <function-ref name="size" scoped="" ref="0x7f2c550939c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationControl" ref="0x7f2c551566f8" loc="21:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationControl" scoped="" ref="0x7f2c551566f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c55156a48"/>
        <function-ref name="stop" scoped="" ref="0x7f2c55156bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7f2c55157be0" loc="18:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7f2c55157be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2c5515d020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2c5515d1a8"/>
        <function-ref name="start" scoped="" ref="0x7f2c5515d330"/>
        <function-ref name="stop" scoped="" ref="0x7f2c5515d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f2c550d89b8" loc="23:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f2c550d89b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c550d8d08"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c5514e020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c5514e1a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c5514e330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c5514e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f2c55092ae8" loc="33:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f2c55092ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f2c55092e38"/>
        <function-ref name="rand32" scoped="" ref="0x7f2c55096020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7f2c5505b970" loc="38:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f2c5505b970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c5505bcc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c5505be48"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c55076020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c550761a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c55076330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpInfo" ref="0x7f2c550a1020" loc="31:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x7f2c550a1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x7f2c550a1370"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f2c550a14f8"/>
        <function-ref name="numNeighbors" scoped="" ref="0x7f2c550a1680"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x7f2c550a1808"/>
        <function-ref name="getEtx" scoped="" ref="0x7f2c550a1990"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x7f2c550a1b18"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x7f2c550a1ca0"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x7f2c550a1e28"/>
        <function-ref name="getParent" scoped="" ref="0x7f2c550a0020"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x7f2c550a01a8"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x7f2c550a0330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadSensor" ref="0x7f2c550c9810" loc="25:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadSensor" scoped="" ref="0x7f2c550c9810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2c550cd390"/>
        <function-ref name="readDone" scoped="" ref="0x7f2c550cd7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationPeriod" ref="0x7f2c5514f568" loc="22:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationPeriod" scoped="" ref="0x7f2c5514f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x7f2c55153a88"/>
        <function-ref name="get" scoped="" ref="0x7f2c55153130"/>
        <function-ref name="set" scoped="" ref="0x7f2c551535b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForceParentInsertion" ref="0x7f2c5505abf8" loc="40:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForceParentInsertion" scoped="" ref="0x7f2c5505abf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForceParentInsertion"/>
      </instance>
      <interface-functions>
        <function-ref name="unSetParent" scoped="" ref="0x7f2c55064020"/>
        <function-ref name="forceParent" scoped="" ref="0x7f2c550641a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x7f2c55154db8" loc="20:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingControl" scoped="" ref="0x7f2c55154db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c55156170"/>
        <function-ref name="stop" scoped="" ref="0x7f2c551562f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f2c550b24b0" loc="28:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f2c550b24b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c550b2800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpCongestion" ref="0x7f2c55095c10" loc="32:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x7f2c55095c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x7f2c55097020"/>
        <function-ref name="setClientCongested" scoped="" ref="0x7f2c550971a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2c5514d020" loc="24:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f2c5514d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2c5514d370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2c5514d4f8"/>
        <function-ref name="led1On" scoped="" ref="0x7f2c5514d680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2c5514d808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2c5514d990"/>
        <function-ref name="get" scoped="" ref="0x7f2c5514db18"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2c5514dca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2c550d9330"/>
        <function-ref name="set" scoped="" ref="0x7f2c5514de28"/>
        <function-ref name="led0On" scoped="" ref="0x7f2c550d9020"/>
        <function-ref name="led2On" scoped="" ref="0x7f2c550d91a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f2c550654b8" loc="37:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f2c550654b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c55065808"/>
        <function-ref name="source" scoped="" ref="0x7f2c55065990"/>
        <function-ref name="address" scoped="" ref="0x7f2c55065b18"/>
        <function-ref name="destination" scoped="" ref="0x7f2c55065ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c55065e28"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c5507d020"/>
        <function-ref name="type" scoped="" ref="0x7f2c5507d1a8"/>
        <function-ref name="setType" scoped="" ref="0x7f2c5507d330"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c5507d4b8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c5507d640"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c5507d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2c550be4f8" loc="26:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f2c550be4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c55201020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c55201378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c550bc768"/>
        <function-ref name="fired" scoped="" ref="0x7f2c550c8e18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2c550c7b78"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2c550c7728"/>
        <function-ref name="getdt" scoped="" ref="0x7f2c550bb088"/>
        <function-ref name="gett0" scoped="" ref="0x7f2c550bcbb8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c550c72d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2c550c8088"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2c550bc198"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2c550c8528"/>
        <function-ref name="stop" scoped="" ref="0x7f2c550c89c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartEchoTask" ref="0x7f2c55058618" loc="44:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="uartEchoTask" scoped="" ref="0x7f2c55058618"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c55058b68"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c55058cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f2c5500bd18" loc="58:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c5500bd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c5500a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f2c5500e8d8" loc="57:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f2c5500e8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f2c5500ec28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f2c550049a0" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f2c550049a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c55004cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c5500ab90" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f2c5500ab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c55005020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f2c54fffb98" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f2c54fffb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f2c55004020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f2c550041a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f2c55004330"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f2c550044b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f2c55004640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f2c54ffcb90" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7f2c54ffcb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c54ffb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c54ffc4f0" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f2c54ffc4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c54ffc840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7f2c54ffb398" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7f2c54ffb398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c54ffb6e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f2c54ff6108" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f2c54ff6108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c54ff6458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f2c54ffea08" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f2c54ffea08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c54ffed58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f2c54ff27f8" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f2c54ff27f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c54ff2b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7f2c54fec5f8" loc="44:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7f2c54fec5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fec948"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fecad0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fecc58"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fecde0"/>
        <function-ref name="get" scoped="" ref="0x7f2c54ff2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54ff21a8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54ff2330"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54ff24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f2c54ff3428" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f2c54ff3428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c54ff3778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f2c54fafc78" loc="98:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f2c54fafc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fae5e8"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fae770"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fae8f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54faea80"/>
        <function-ref name="get" scoped="" ref="0x7f2c54faec08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54faed90"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fad020"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fad1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f2c54fc97e0" loc="72:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f2c54fc97e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fc9b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fc9cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fc9e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fc8020"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fc81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fc8330"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fc84b8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fc8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f2c54fbe7e0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f2c54fbe7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fbeb30"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fbecb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fbee40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fbd020"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fbd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fbd330"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fbd4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fbd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f2c54fb54d0" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f2c54fb54d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fb5820"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fb59a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fb5b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fb5cb8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fb5e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fb4020"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fb41a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fb4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7f2c54fa9af0" loc="103:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7f2c54fa9af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fa9e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fa8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fa81a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fa8330"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fa84b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fa8640"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fa87c8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fa8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f2c54fdf4d0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f2c54fdf4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fdf820"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fdf9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fdfb30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fdfcb8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fdfe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fde020"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fde1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fde330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f2c54fb71a0" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f2c54fb71a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fb74f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fb7678"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fb7800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fb7988"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fb7b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fb7c98"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fb7e20"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fb6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f2c54fdd7e0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f2c54fdd7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fddb30"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fddcb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fdde40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fdc020"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fdc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fdc330"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fdc4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fdc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f2c54fd2968" loc="64:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f2c54fd2968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fd2cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fd2e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fd1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fd11a8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fd1330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fd14b8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fd1640"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fd17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f2c54fc6c78" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f2c54fc6c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fc5020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fc51a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fc5330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fc54b8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fc5640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fc57c8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fc5950"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fc5ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f2c54fbbc78" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f2c54fbbc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fba020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fba1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fba330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fba4b8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fba640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fba7c8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fba950"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fbaad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f2c54fe6c78" loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f2c54fe6c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fe4020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fe41a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fe4330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fe44b8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fe4640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fe47c8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fe4950"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fe4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f2c54fdac78" loc="56:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f2c54fdac78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fd9020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fd91a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fd9330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fd94b8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fd9640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fd97c8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fd9950"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fd9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f2c54fcfe00" loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f2c54fcfe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fce1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fce330"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fce4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fce640"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fce7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fce950"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fcead8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fcec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f2c54fc21a0" loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f2c54fc21a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fc24f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fc2678"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fc2800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fc2988"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fc2b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fc2c98"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fc2e20"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fc1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f2c54fb2968" loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f2c54fb2968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fb2cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fb2e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fb1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fb11a8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fb1330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fb14b8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fb1640"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fb17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f2c54fab7e0" loc="101:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f2c54fab7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fabb30"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fabcb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fabe40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54faa020"/>
        <function-ref name="get" scoped="" ref="0x7f2c54faa1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54faa330"/>
        <function-ref name="set" scoped="" ref="0x7f2c54faa4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54faa640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f2c54fc04d0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f2c54fc04d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fc0820"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fc09a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fc0b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fc0cb8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fc0e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fbf020"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fbf1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fbf330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f2c54fe11a0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f2c54fe11a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fe14f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fe1678"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fe1800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fe1988"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fe1b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fe1c98"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fe1e20"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fe0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f2c54fd6348" loc="59:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f2c54fd6348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fd6698"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fd6820"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fd69a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fd6b30"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fd6cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fd6e40"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fd5020"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fd51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f2c54fad4d0" loc="99:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f2c54fad4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fad820"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fad9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fadb30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fadcb8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fade40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fac020"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fac1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fac330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f2c54fd4658" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f2c54fd4658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fd49a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fd4b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fd4cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fd4e40"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fd3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fd31a8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fd3330"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fd34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f2c54fc8968" loc="73:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f2c54fc8968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fc8cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fc8e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fc7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fc71a8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fc7330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fc74b8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fc7640"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fc77c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f2c54fbd968" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f2c54fbd968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fbdcb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fbde40"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fbc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fbc1a8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fbc330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fbc4b8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fbc640"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fbc7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f2c54fb4658" loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f2c54fb4658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fb49a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fb4b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fb4cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fb4e40"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fb3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fb31a8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fb3330"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fb34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f2c54fde658" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f2c54fde658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fde9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fdeb30"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fdecb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fdee40"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fdd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fdd1a8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fdd330"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fdd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f2c54fdc968" loc="54:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f2c54fdc968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fdccb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fdce40"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fdb020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fdb1a8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fdb330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fdb4b8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fdb640"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fdb7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f2c54fd1af0" loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f2c54fd1af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fd1e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fd0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fd01a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fd0330"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fd04b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fd0640"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fd07c8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fd0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f2c54fc5e00" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f2c54fc5e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fc41a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fc4330"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fc44b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fc4640"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fc47c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fc4950"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fc4ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fc4c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f2c54fbae00" loc="87:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f2c54fbae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fb91a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fb9330"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fb94b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fb9640"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fb97c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fb9950"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fb9ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fb9c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f2c54fe4e00" loc="46:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f2c54fe4e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fe31a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fe3330"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fe34b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fe3640"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fe37c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fe3950"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fe3ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fe3c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f2c54fd9e00" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f2c54fd9e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fd82e8"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fd8470"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fd85f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fd8780"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fd8908"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fd8a90"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fd8c18"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fd8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f2c54fcd020" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f2c54fcd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fcd370"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fcd4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fcd680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fcd808"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fcd990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fcdb18"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fcdca0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fcde28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f2c54fb1af0" loc="96:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f2c54fb1af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fb1e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54faf020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54faf1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54faf330"/>
        <function-ref name="get" scoped="" ref="0x7f2c54faf4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54faf640"/>
        <function-ref name="set" scoped="" ref="0x7f2c54faf7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54faf950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f2c54fcb348" loc="71:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f2c54fcb348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fcb898"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fcba20"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fcbba8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fcbd30"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fc9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fc91a8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fc9330"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fc94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f2c54fbf658" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f2c54fbf658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fbf9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fbfb30"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fbfcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fbfe40"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fbe020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fbe1a8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fbe330"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fbe4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f2c54fb6348" loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f2c54fb6348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fb6698"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fb6820"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fb69a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fb6b30"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fb6cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fb6e40"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fb5020"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fb51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f2c54faa968" loc="102:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f2c54faa968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54faacb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54faae40"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fa9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fa91a8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fa9330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fa94b8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fa9640"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fa97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f2c54fe0348" loc="49:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f2c54fe0348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fe0698"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fe0820"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fe09a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fe0b30"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fe0cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fe0e40"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fdf020"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fdf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f2c54fd54d0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f2c54fd54d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fd5820"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fd59a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fd5b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fd5cb8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fd5e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fd4020"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fd41a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fd4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f2c54fb8020" loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f2c54fb8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fb8370"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fb84f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fb8680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fb8808"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fb8990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fb8b18"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fb8ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fb8e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f2c54fd37e0" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f2c54fd37e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fd3b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fd3cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fd3e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fd2020"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fd21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fd2330"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fd24b8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fd2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f2c54fc7af0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f2c54fc7af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fc7e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fc6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fc61a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fc6330"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fc64b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fc6640"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fc67c8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fc6950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f2c54fbcaf0" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f2c54fbcaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fbce40"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fbb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fbb1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fbb330"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fbb4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fbb640"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fbb7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fbb950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f2c54fb37e0" loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f2c54fb37e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fb3b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fb3cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fb3e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fb2020"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fb21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fb2330"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fb24b8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fb2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f2c54ff5a70" loc="44:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f2c54ff5a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54ff5dc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fe6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fe61a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fe6330"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fe64b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fe6640"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fe67c8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fe6950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f2c54fdbaf0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f2c54fdbaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fdbe40"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fda020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fda1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fda330"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fda4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fda640"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fda7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fda950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f2c54fd0c78" loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f2c54fd0c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fcf020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fcf1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fcf330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fcf4b8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fcf640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fcf7c8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fcf950"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fcfad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f2c54fc3020" loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f2c54fc3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fc3370"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fc34f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fc3680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fc3808"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fc3990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fc3b18"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fc3ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fc3e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f2c54fac658" loc="100:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f2c54fac658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fac9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54facb30"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54faccb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54face40"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fab020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fab1a8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fab330"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fab4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f2c54fc1348" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f2c54fc1348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fc1698"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fc1820"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fc19a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fc1b30"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fc1cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fc1e40"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fc0020"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fc01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f2c54fcc1a0" loc="69:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f2c54fcc1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fcc4f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fcc678"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fcc800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fcc988"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fccb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fccc98"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fcce20"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fcb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f2c54fe2020" loc="47:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f2c54fe2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fe2370"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fe24f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fe2680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fe2808"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fe2990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fe2b18"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fe2ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fe2e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f2c54fd7100" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f2c54fd7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54fd7450"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54fd75d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54fd7760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54fd78e8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54fd7a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54fd7bf8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54fd7d80"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54fd6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f2c54f5f120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f2c54f5f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f5f470"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f5f5f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f5f780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f5f908"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f5fa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f5fc18"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f5fda0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f5e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f2c54f5c5b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f2c54f5c5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f5c908"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f5ca90"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f5cc18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f5cda0"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f5b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f5b1a8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f5b330"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f5b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f2c54f62dc0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f2c54f62dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f61170"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f612f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f61480"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f61608"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f61790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f61918"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f61aa0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f61c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f2c54f5e2a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f2c54f5e2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f5e5f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f5e780"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f5e908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f5ea90"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f5ec18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f5eda0"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f5d020"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f5d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f2c54f5b740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f2c54f5b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f5ba90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f5bc18"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f5bda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f5a020"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f5a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f5a330"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f5a4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f5a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f2c54f60020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f2c54f60020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f60370"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f604f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f60680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f60808"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f60990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f60b18"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f60ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f60e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f2c54f5d430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f2c54f5d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f5d780"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f5d908"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f5da90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f5dc18"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f5dda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f5c020"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f5c1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f5c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f2c54f5a8c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f2c54f5a8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f5ac18"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f5ada0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f59020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f591a8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f59330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f594b8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f59640"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f597c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c536313e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c536313e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c53631730"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c536318b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c53631a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c53631bc8"/>
        <function-ref name="get" scoped="" ref="0x7f2c53631d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c53630020"/>
        <function-ref name="set" scoped="" ref="0x7f2c536301a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c53630330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c5362e480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c5362e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c5362e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c5362e958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c5362eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c5362ec68"/>
        <function-ref name="get" scoped="" ref="0x7f2c5362edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c5362d020"/>
        <function-ref name="set" scoped="" ref="0x7f2c5362d1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c5362d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c5362b480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c5362b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c5362b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c5362b958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c5362bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c5362bc68"/>
        <function-ref name="get" scoped="" ref="0x7f2c5362bdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c5362a020"/>
        <function-ref name="set" scoped="" ref="0x7f2c5362a1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c5362a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c53628480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c53628480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c536287d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c53628958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c53628ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c53628c68"/>
        <function-ref name="get" scoped="" ref="0x7f2c53628df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c53627020"/>
        <function-ref name="set" scoped="" ref="0x7f2c536271a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c53627330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c53625480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c53625480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c536257d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c53625958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c53625ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c53625c68"/>
        <function-ref name="get" scoped="" ref="0x7f2c53625df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c53623020"/>
        <function-ref name="set" scoped="" ref="0x7f2c536231a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c53623330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c53621480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c53621480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c536217d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c53621958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c53621ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c53621c68"/>
        <function-ref name="get" scoped="" ref="0x7f2c53621df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c53620020"/>
        <function-ref name="set" scoped="" ref="0x7f2c536201a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c53620330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c5361e480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c5361e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c5361e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c5361e958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c5361eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c5361ec68"/>
        <function-ref name="get" scoped="" ref="0x7f2c5361edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c5361d020"/>
        <function-ref name="set" scoped="" ref="0x7f2c5361d1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c5361d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c5361b480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c5361b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c5361b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c5361b958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c5361bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c5361bc68"/>
        <function-ref name="get" scoped="" ref="0x7f2c5361bdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c5361a020"/>
        <function-ref name="set" scoped="" ref="0x7f2c5361a1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c5361a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f2c54f51bd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f2c54f51bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f50020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f501a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f50330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f504b8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f50640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f507c8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f50950"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f50ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f2c54f4d020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f2c54f4d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f4d370"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f4d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f4d680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f4d808"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f4d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f4db18"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f4dca0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f4de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f2c54f53930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f2c54f53930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f53c80"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f53e08"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f52020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f521a8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f52330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f524b8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f52640"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f527c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f2c54f50d60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f2c54f50d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f4f0d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f4f260"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f4f3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f4f570"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f4f6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f4f880"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f4fa08"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f4fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f2c54f4c120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f2c54f4c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f4c470"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f4c5f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f4c780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f4c908"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f4ca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f4cc18"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f4cda0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f4b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f2c54f52a50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f2c54f52a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f52da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f51020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f511a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f51330"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f514b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f51640"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f517c8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f51950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f2c54f4fe18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f2c54f4fe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f4e1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f4e330"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f4e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f4e640"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f4e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f4e950"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f4ead8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f4ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f2c54f4b2a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f2c54f4b2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f4b5f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f4b780"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f4b908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f4ba90"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f4bc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f4bda0"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f4a020"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f4a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c535c83e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c535c83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c535c8730"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c535c88b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c535c8a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c535c8bc8"/>
        <function-ref name="get" scoped="" ref="0x7f2c535c8d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c535c7020"/>
        <function-ref name="set" scoped="" ref="0x7f2c535c71a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c535c7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c535c5480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c535c5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c535c57d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c535c5958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c535c5ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c535c5c68"/>
        <function-ref name="get" scoped="" ref="0x7f2c535c5df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c535c4020"/>
        <function-ref name="set" scoped="" ref="0x7f2c535c41a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c535c4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c535c2480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c535c2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c535c27d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c535c2958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c535c2ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c535c2c68"/>
        <function-ref name="get" scoped="" ref="0x7f2c535c2df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c535c1020"/>
        <function-ref name="set" scoped="" ref="0x7f2c535c11a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c535c1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c535bf480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c535bf480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c535bf7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c535bf958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c535bfae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c535bfc68"/>
        <function-ref name="get" scoped="" ref="0x7f2c535bfdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c535be020"/>
        <function-ref name="set" scoped="" ref="0x7f2c535be1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c535be330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c535bc480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c535bc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c535bc7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c535bc958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c535bcae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c535bcc68"/>
        <function-ref name="get" scoped="" ref="0x7f2c535bcdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c535ba020"/>
        <function-ref name="set" scoped="" ref="0x7f2c535ba1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c535ba330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c535b8480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c535b8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c535b87d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c535b8958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c535b8ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c535b8c68"/>
        <function-ref name="get" scoped="" ref="0x7f2c535b8df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c535b7020"/>
        <function-ref name="set" scoped="" ref="0x7f2c535b71a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c535b7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c535b5480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c535b5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c535b57d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c535b5958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c535b5ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c535b5c68"/>
        <function-ref name="get" scoped="" ref="0x7f2c535b5df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c535b4020"/>
        <function-ref name="set" scoped="" ref="0x7f2c535b41a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c535b4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c535b2480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c535b2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c535b27d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c535b2958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c535b2ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c535b2c68"/>
        <function-ref name="get" scoped="" ref="0x7f2c535b2df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c535b1020"/>
        <function-ref name="set" scoped="" ref="0x7f2c535b11a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c535b1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f2c54f42740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f2c54f42740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f42a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f42c18"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f42da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f41020"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f411a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f41330"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f414b8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f41640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f2c54f3fbd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f2c54f3fbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f3d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f3d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f3d330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f3d4b8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f3d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f3d7c8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f3d950"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f3dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f2c54f44500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f2c54f44500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f44850"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f449d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f44b60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f44ce8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f44e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f43020"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f431a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f43330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f2c54f418c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f2c54f418c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f41c18"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f41da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f40020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f401a8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f40330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f404b8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f40640"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f407c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f2c54f3dd60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f2c54f3dd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f3c0d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f3c260"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f3c3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f3c570"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f3c6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f3c880"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f3ca08"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f3cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f2c54f435b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f2c54f435b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f43908"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f43a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f43c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f43da0"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f42020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f421a8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f42330"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f424b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f2c54f40a50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f2c54f40a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f40da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f3f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f3f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f3f330"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f3f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f3f640"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f3f7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f3f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f2c54f3ce18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f2c54f3ce18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f3b1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f3b330"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f3b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f3b640"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f3b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f3b950"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f3bad8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f3bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c535613e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c535613e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c53561730"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c535618b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c53561a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c53561bc8"/>
        <function-ref name="get" scoped="" ref="0x7f2c53561d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c53560020"/>
        <function-ref name="set" scoped="" ref="0x7f2c535601a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c53560330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c5355e480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c5355e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c5355e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c5355e958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c5355eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c5355ec68"/>
        <function-ref name="get" scoped="" ref="0x7f2c5355edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c5355d020"/>
        <function-ref name="set" scoped="" ref="0x7f2c5355d1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c5355d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c5355b480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c5355b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c5355b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c5355b958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c5355bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c5355bc68"/>
        <function-ref name="get" scoped="" ref="0x7f2c5355bdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c5355a020"/>
        <function-ref name="set" scoped="" ref="0x7f2c5355a1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c5355a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c53558480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c53558480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c535587d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c53558958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c53558ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c53558c68"/>
        <function-ref name="get" scoped="" ref="0x7f2c53558df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c53557020"/>
        <function-ref name="set" scoped="" ref="0x7f2c535571a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c53557330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c53555480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c53555480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c535557d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c53555958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c53555ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c53555c68"/>
        <function-ref name="get" scoped="" ref="0x7f2c53555df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c53554020"/>
        <function-ref name="set" scoped="" ref="0x7f2c535541a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c53554330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c53552480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c53552480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c535527d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c53552958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c53552ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c53552c68"/>
        <function-ref name="get" scoped="" ref="0x7f2c53552df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c53550020"/>
        <function-ref name="set" scoped="" ref="0x7f2c535501a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c53550330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c5354e480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c5354e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c5354e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c5354e958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c5354eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c5354ec68"/>
        <function-ref name="get" scoped="" ref="0x7f2c5354edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c5354d020"/>
        <function-ref name="set" scoped="" ref="0x7f2c5354d1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c5354d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c5354b480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c5354b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c5354b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c5354b958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c5354bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c5354bc68"/>
        <function-ref name="get" scoped="" ref="0x7f2c5354bdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c5354a020"/>
        <function-ref name="set" scoped="" ref="0x7f2c5354a1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c5354a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f2c54f33120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f2c54f33120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f33470"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f335f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f33780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f33908"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f33a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f33c18"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f33da0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f31020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f2c54f2f5b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f2c54f2f5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f2f908"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f2fa90"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f2fc18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f2fda0"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f2e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f2e1a8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f2e330"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f2e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f2c54f36e40" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f2c54f36e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f351c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f35348"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f354d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f35658"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f357e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f35968"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f35af0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f35c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f2c54f312a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f2c54f312a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f315f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f31780"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f31908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f31a90"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f31c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f31da0"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f30020"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f301a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f2c54f2e740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f2c54f2e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f2ea90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f2ec18"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f2eda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f2d020"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f2d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f2d330"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f2d4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f2d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f2c54f34020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f2c54f34020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f34370"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f344f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f34680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f34808"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f34990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f34b18"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f34ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f34e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f2c54f30430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f2c54f30430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f30780"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f30908"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f30a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f30c18"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f30da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f2f020"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f2f1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f2f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f2c54f2d8c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f2c54f2d8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f2dc18"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f2dda0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f2c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f2c1a8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f2c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f2c4b8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f2c640"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f2c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c534fa3e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c534fa3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c534fa730"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c534fa8b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c534faa40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c534fabc8"/>
        <function-ref name="get" scoped="" ref="0x7f2c534fad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c534f9020"/>
        <function-ref name="set" scoped="" ref="0x7f2c534f91a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c534f9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c534f7480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c534f7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c534f77d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c534f7958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c534f7ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c534f7c68"/>
        <function-ref name="get" scoped="" ref="0x7f2c534f7df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c534f6020"/>
        <function-ref name="set" scoped="" ref="0x7f2c534f61a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c534f6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c534f4480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c534f4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c534f47d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c534f4958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c534f4ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c534f4c68"/>
        <function-ref name="get" scoped="" ref="0x7f2c534f4df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c534f3020"/>
        <function-ref name="set" scoped="" ref="0x7f2c534f31a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c534f3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c534f1480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c534f1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c534f17d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c534f1958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c534f1ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c534f1c68"/>
        <function-ref name="get" scoped="" ref="0x7f2c534f1df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c534f0020"/>
        <function-ref name="set" scoped="" ref="0x7f2c534f01a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c534f0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c534ee480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c534ee480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c534ee7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c534ee958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c534eeae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c534eec68"/>
        <function-ref name="get" scoped="" ref="0x7f2c534eedf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c534ed020"/>
        <function-ref name="set" scoped="" ref="0x7f2c534ed1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c534ed330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c534eb480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c534eb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c534eb7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c534eb958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c534ebae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c534ebc68"/>
        <function-ref name="get" scoped="" ref="0x7f2c534ebdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c534e9020"/>
        <function-ref name="set" scoped="" ref="0x7f2c534e91a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c534e9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c534e7480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c534e7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c534e77d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c534e7958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c534e7ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c534e7c68"/>
        <function-ref name="get" scoped="" ref="0x7f2c534e7df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c534e6020"/>
        <function-ref name="set" scoped="" ref="0x7f2c534e61a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c534e6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c534e4480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c534e4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c534e47d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c534e4958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c534e4ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c534e4c68"/>
        <function-ref name="get" scoped="" ref="0x7f2c534e4df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c534e3020"/>
        <function-ref name="set" scoped="" ref="0x7f2c534e31a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c534e3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f2c54f24bd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f2c54f24bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f23020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f231a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f23330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f234b8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f23640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f237c8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f23950"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f23ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f2c54f20020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f2c54f20020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f20370"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f204f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f20680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f20808"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f20990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f20b18"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f20ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f20e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f2c54f26930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f2c54f26930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f26c80"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f26e08"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f25020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f251a8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f25330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f254b8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f25640"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f257c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f2c54f23d60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f2c54f23d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f220d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f22260"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f223e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f22570"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f226f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f22880"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f22a08"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f22b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f2c54f1f120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f2c54f1f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f1f470"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f1f5f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f1f780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f1f908"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f1fa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f1fc18"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f1fda0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f1e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f2c54f25a50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f2c54f25a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f25da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f24020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f241a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f24330"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f244b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f24640"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f247c8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f24950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f2c54f22e18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f2c54f22e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f211a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f21330"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f214b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f21640"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f217c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f21950"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f21ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f21c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f2c54f1e2a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f2c54f1e2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f1e5f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f1e780"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f1e908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f1ea90"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f1ec18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f1eda0"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f1d020"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f1d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c534933e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c534933e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c53493730"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c534938b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c53493a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c53493bc8"/>
        <function-ref name="get" scoped="" ref="0x7f2c53493d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c53492020"/>
        <function-ref name="set" scoped="" ref="0x7f2c534921a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c53492330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c53490480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c53490480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c534907d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c53490958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c53490ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c53490c68"/>
        <function-ref name="get" scoped="" ref="0x7f2c53490df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c5348f020"/>
        <function-ref name="set" scoped="" ref="0x7f2c5348f1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c5348f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c5348d480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c5348d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c5348d7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c5348d958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c5348dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c5348dc68"/>
        <function-ref name="get" scoped="" ref="0x7f2c5348ddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c5348c020"/>
        <function-ref name="set" scoped="" ref="0x7f2c5348c1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c5348c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c5348a480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c5348a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c5348a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c5348a958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c5348aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c5348ac68"/>
        <function-ref name="get" scoped="" ref="0x7f2c5348adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c53489020"/>
        <function-ref name="set" scoped="" ref="0x7f2c534891a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c53489330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c53487480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c53487480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c534877d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c53487958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c53487ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c53487c68"/>
        <function-ref name="get" scoped="" ref="0x7f2c53487df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c53486020"/>
        <function-ref name="set" scoped="" ref="0x7f2c534861a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c53486330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c53484480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c53484480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c534847d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c53484958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c53484ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c53484c68"/>
        <function-ref name="get" scoped="" ref="0x7f2c53484df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c53483020"/>
        <function-ref name="set" scoped="" ref="0x7f2c534831a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c53483330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c53481480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c53481480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c534817d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c53481958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c53481ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c53481c68"/>
        <function-ref name="get" scoped="" ref="0x7f2c53481df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c5347f020"/>
        <function-ref name="set" scoped="" ref="0x7f2c5347f1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c5347f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c5347d480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c5347d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c5347d7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c5347d958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c5347dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c5347dc68"/>
        <function-ref name="get" scoped="" ref="0x7f2c5347ddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c5347c020"/>
        <function-ref name="set" scoped="" ref="0x7f2c5347c1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c5347c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f2c54f15740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f2c54f15740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f15a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f15c18"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f15da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f14020"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f141a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f14330"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f144b8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f14640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f2c54f12bd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f2c54f12bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f11020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f111a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f11330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f114b8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f11640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f117c8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f11950"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f11ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f2c54f17500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f2c54f17500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f17850"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f179d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f17b60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f17ce8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f17e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f16020"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f161a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f16330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f2c54f148c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f2c54f148c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f14c18"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f14da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f13020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f131a8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f13330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f134b8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f13640"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f137c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f2c54f11d60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f2c54f11d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f100d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f10260"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f103e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f10570"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f106f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f10880"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f10a08"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f10b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f2c54f165b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f2c54f165b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f16908"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f16a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f16c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f16da0"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f15020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f151a8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f15330"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f154b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f2c54f13a50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f2c54f13a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f13da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f12020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f121a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f12330"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f124b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f12640"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f127c8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f12950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f2c54f10e18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f2c54f10e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f0e1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f0e330"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f0e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f0e640"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f0e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54f0e950"/>
        <function-ref name="set" scoped="" ref="0x7f2c54f0ead8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54f0ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c5342c3e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c5342c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c5342c730"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c5342c8b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c5342ca40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c5342cbc8"/>
        <function-ref name="get" scoped="" ref="0x7f2c5342cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c5342b020"/>
        <function-ref name="set" scoped="" ref="0x7f2c5342b1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c5342b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c53429480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c53429480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c534297d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c53429958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c53429ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c53429c68"/>
        <function-ref name="get" scoped="" ref="0x7f2c53429df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c53428020"/>
        <function-ref name="set" scoped="" ref="0x7f2c534281a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c53428330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c53426480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c53426480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c534267d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c53426958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c53426ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c53426c68"/>
        <function-ref name="get" scoped="" ref="0x7f2c53426df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c53425020"/>
        <function-ref name="set" scoped="" ref="0x7f2c534251a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c53425330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c53423480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c53423480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c534237d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c53423958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c53423ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c53423c68"/>
        <function-ref name="get" scoped="" ref="0x7f2c53423df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c53422020"/>
        <function-ref name="set" scoped="" ref="0x7f2c534221a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c53422330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c53420480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c53420480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c534207d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c53420958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c53420ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c53420c68"/>
        <function-ref name="get" scoped="" ref="0x7f2c53420df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c5341f020"/>
        <function-ref name="set" scoped="" ref="0x7f2c5341f1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c5341f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c5341d480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c5341d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c5341d7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c5341d958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c5341dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c5341dc68"/>
        <function-ref name="get" scoped="" ref="0x7f2c5341ddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c5341c020"/>
        <function-ref name="set" scoped="" ref="0x7f2c5341c1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c5341c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c5341a480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c5341a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c5341a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c5341a958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c5341aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c5341ac68"/>
        <function-ref name="get" scoped="" ref="0x7f2c5341adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c53418020"/>
        <function-ref name="set" scoped="" ref="0x7f2c534181a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c53418330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c53416480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c53416480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c534167d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c53416958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c53416ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c53416c68"/>
        <function-ref name="get" scoped="" ref="0x7f2c53416df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c53415020"/>
        <function-ref name="set" scoped="" ref="0x7f2c534151a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c53415330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c54f083e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c54f083e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54f08730"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54f088b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54f08a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54f08bc8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54f08d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54ef1020"/>
        <function-ref name="set" scoped="" ref="0x7f2c54ef11a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54ef1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c54eeec38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c54eeec38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54eed020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54eed1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54eed330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54eed4b8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54eed640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54eed7c8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54eed950"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54eedad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c54ee83e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c54ee83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54ee8730"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54ee88b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54ee8a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54ee8bc8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54ee8d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54ee7020"/>
        <function-ref name="set" scoped="" ref="0x7f2c54ee71a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54ee7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c54ee3c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c54ee3c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54ee2020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54ee21a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54ee2330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54ee24b8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54ee2640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54ee27c8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54ee2950"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54ee2ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c54ede3e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c54ede3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54ede730"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54ede8b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54edea40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54edebc8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54eded50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54edd020"/>
        <function-ref name="set" scoped="" ref="0x7f2c54edd1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54edd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c54ed9c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c54ed9c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54ed8020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54ed81a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54ed8330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54ed84b8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54ed8640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54ed87c8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54ed8950"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54ed8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c54ed3480" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c54ed3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54ed37d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54ed3958"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54ed3ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54ed3c68"/>
        <function-ref name="get" scoped="" ref="0x7f2c54ed3df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54ed2020"/>
        <function-ref name="set" scoped="" ref="0x7f2c54ed21a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54ed2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c54ecfc38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c54ecfc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54ece020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54ece1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54ece330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54ece4b8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54ece640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54ece7c8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54ece950"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54ecead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c54ec9520" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c54ec9520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54ec9870"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54ec99f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54ec9b80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54ec9d08"/>
        <function-ref name="get" scoped="" ref="0x7f2c54ec8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54ec81a8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54ec8330"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54ec84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c54ec4cd8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c54ec4cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54ec30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54ec3228"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54ec33b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54ec3538"/>
        <function-ref name="get" scoped="" ref="0x7f2c54ec36c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54ec3848"/>
        <function-ref name="set" scoped="" ref="0x7f2c54ec39d0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54ec3b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c54ebf3e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c54ebf3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54ebf730"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54ebf8b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54ebfa40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54ebfbc8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54ebfd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54ebe020"/>
        <function-ref name="set" scoped="" ref="0x7f2c54ebe1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54ebe330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c54ebac38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c54ebac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54eb9020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54eb91a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54eb9330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54eb94b8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54eb9640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54eb97c8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54eb9950"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54eb9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c54eb43e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c54eb43e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54eb4730"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54eb48b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54eb4a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54eb4bc8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54eb4d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54eb3020"/>
        <function-ref name="set" scoped="" ref="0x7f2c54eb31a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54eb3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c54eb0c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f2c54eb0c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54eaf020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54eaf1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54eaf330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54eaf4b8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54eaf640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54eaf7c8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54eaf950"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54eafad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c54e764b0" loc="61:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f2c54e764b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f2c5528b128"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f2c5528b128"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c54e76800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f2c54e76ae0" loc="62:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f2c54e76ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f2c54e76e30"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f2c54e75020"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f2c54e751a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f2c54e75330"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f2c54e754b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f2c54e56418" loc="60:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c54e56418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c54e56768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f2c55006c38" loc="57:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f2c55006c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f2c54e57020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f2c54e57ce0" loc="59:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f2c54e57ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c54e560a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f2c54e57308" loc="58:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f2c54e57308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c54e57658"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f2c54e577e0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f2c54e57968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f2c55264b18" loc="48:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f2c55264b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c55264e68"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c55271020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f2c55290080" loc="47:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f2c55290080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c552903d0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f2c55290558"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f2c552906e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f2c551b9c58" loc="56:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f2c551b9c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c551b8020"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c551b81a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f2c551b5168" loc="57:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f2c551b5168"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f2c551b54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f2c551bad88" loc="55:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f2c551bad88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c551b9170"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f2c551b92f8"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f2c551b9480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f2c55198988" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f2c55198988"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f2c55198cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f2c5526de28" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f2c5526de28"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f2c5519c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f2c551993c8" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f2c551993c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f2c55199718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f2c54e49190" loc="46:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f2c54e49190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2c54e494e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2c54e49668"/>
        <function-ref name="led1On" scoped="" ref="0x7f2c54e497f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2c54e49978"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2c54e49b00"/>
        <function-ref name="get" scoped="" ref="0x7f2c54e49c88"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2c54e49e10"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2c54e484b8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54e48020"/>
        <function-ref name="led0On" scoped="" ref="0x7f2c54e481a8"/>
        <function-ref name="led2On" scoped="" ref="0x7f2c54e48330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f2c54e43020" loc="50:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f2c54e43020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54e43370"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54e434f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54e43680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54e43808"/>
        <function-ref name="get" scoped="" ref="0x7f2c54e43990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54e43b18"/>
        <function-ref name="set" scoped="" ref="0x7f2c54e43ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54e43e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c54e45368" loc="46:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f2c54e45368"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c54e456b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f2c54e42190" loc="51:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f2c54e42190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54e424e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54e42668"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54e427f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54e42978"/>
        <function-ref name="get" scoped="" ref="0x7f2c54e42b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54e42c88"/>
        <function-ref name="set" scoped="" ref="0x7f2c54e42e10"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54e41020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f2c54e45930" loc="47:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f2c54e45930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2c54e45c80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2c54e45e08"/>
        <function-ref name="led1On" scoped="" ref="0x7f2c54e44020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2c54e441a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2c54e44330"/>
        <function-ref name="get" scoped="" ref="0x7f2c54e444b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2c54e44640"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2c54e44c60"/>
        <function-ref name="set" scoped="" ref="0x7f2c54e447c8"/>
        <function-ref name="led0On" scoped="" ref="0x7f2c54e44950"/>
        <function-ref name="led2On" scoped="" ref="0x7f2c54e44ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f2c54e41338" loc="52:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f2c54e41338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54e41688"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54e41810"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54e41998"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54e41b20"/>
        <function-ref name="get" scoped="" ref="0x7f2c54e41ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54e41e30"/>
        <function-ref name="set" scoped="" ref="0x7f2c54e3f020"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54e3f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f2c54e25090" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f2c54e25090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54e253e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54e25568"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54e256f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54e25878"/>
        <function-ref name="get" scoped="" ref="0x7f2c54e25a00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54e25b88"/>
        <function-ref name="set" scoped="" ref="0x7f2c54e25d10"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54e24020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f2c54e24378" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f2c54e24378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54e246c8"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54e24850"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54e249d8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54e24b60"/>
        <function-ref name="get" scoped="" ref="0x7f2c54e24ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54e24e70"/>
        <function-ref name="set" scoped="" ref="0x7f2c54e23020"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54e231a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f2c54e225e8" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f2c54e225e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c54e22938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f2c54e23500" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f2c54e23500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54e23850"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54e239d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54e23b60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54e23ce8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54e23e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54e22020"/>
        <function-ref name="set" scoped="" ref="0x7f2c54e221a8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54e22330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f2c54e1d728" loc="41:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f2c54e1d728"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2c54e1da78"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2c54e1dc00"/>
        <function-ref name="start" scoped="" ref="0x7f2c54e1dd88"/>
        <function-ref name="stop" scoped="" ref="0x7f2c54e19020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f2c54e11ad8" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f2c54e11ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f2c54e11e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2c54e15100" loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f2c54e15100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c54e15450"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c54e155d8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c54e15760"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c54e158e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c54e15a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2c54e19798" loc="43:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f2c54e19798"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c54e19ae8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c54e19c70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c54e19df8"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c54e17020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c54e171a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f2c54e16498" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f2c54e16498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c54e167e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f2c54e03418" loc="52:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f2c54e03418"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f2c54e03768"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f2c54e038f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f2c54e03a78"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f2c54e03c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2c54e17928" loc="44:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f2c54e17928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c54e17c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f2c54e0bcb0" loc="51:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2c54e0bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2c54e0f0a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f2c54e0f228"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2c54e0f3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f2c54dfb1d8" loc="53:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f2c54dfb1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f2c54dfb528"/>
        <function-ref name="setRetries" scoped="" ref="0x7f2c54dfb6b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f2c54dfb838"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f2c54dfb9c0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f2c54dfbb48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f2c54e15d10" loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f2c54e15d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c54e140a0"/>
        <function-ref name="source" scoped="" ref="0x7f2c54e14228"/>
        <function-ref name="address" scoped="" ref="0x7f2c54e143b0"/>
        <function-ref name="destination" scoped="" ref="0x7f2c54e14538"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c54e146c0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c54e14848"/>
        <function-ref name="type" scoped="" ref="0x7f2c54e149d0"/>
        <function-ref name="setType" scoped="" ref="0x7f2c54e14b58"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c54e14ce0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c54e14e68"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c54e12020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f2c54dfac48" loc="54:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f2c54dfac48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f2c54e05020"/>
        <function-ref name="setChannel" scoped="" ref="0x7f2c54e051a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f2c54e05330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x7f2c54df18c0" loc="56:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7f2c54df18c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f2c551ff788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f2c54df9d40"/>
        <function-ref name="clear" scoped="" ref="0x7f2c54df3458"/>
        <function-ref name="isValid" scoped="" ref="0x7f2c54df9660"/>
        <function-ref name="set" scoped="" ref="0x7f2c54df3b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f2c54df0758" loc="57:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f2c54df0758"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c55201020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c55201378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f2c54defcc0"/>
        <function-ref name="clear" scoped="" ref="0x7f2c54ded420"/>
        <function-ref name="isValid" scoped="" ref="0x7f2c54def5e0"/>
        <function-ref name="set" scoped="" ref="0x7f2c54dedb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f2c54decd10" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f2c54decd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2c54de90a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2c54de9228"/>
        <function-ref name="start" scoped="" ref="0x7f2c54de93b0"/>
        <function-ref name="stop" scoped="" ref="0x7f2c54de9538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f2c54dd30c8" loc="66:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f2c54dd30c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c54dd16a0"/>
        <function-ref name="get" scoped="" ref="0x7f2c54dd1190"/>
        <function-ref name="isSet" scoped="" ref="0x7f2c54dd3c48"/>
        <function-ref name="set" scoped="" ref="0x7f2c54dd1bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f2c54dc7860" loc="71:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f2c54dc7860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c55201020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c55201378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f2c54dc6cc0"/>
        <function-ref name="clear" scoped="" ref="0x7f2c54dc4420"/>
        <function-ref name="isValid" scoped="" ref="0x7f2c54dc65e0"/>
        <function-ref name="set" scoped="" ref="0x7f2c54dc4b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f2c54de54e8" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f2c54de54e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f2c54de5838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2c54de3360" loc="56:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f2c54de3360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c54de36b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c54de3838"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c54de39c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c54de3b48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c54de3cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2c54de9cb0" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f2c54de9cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c54de80a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c54de8228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c54de83b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c54de8538"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c54de86c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f2c54de69b8" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f2c54de69b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c54de6d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f2c54dd7d80" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f2c54dd7d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c54dd4388"/>
        <function-ref name="get" scoped="" ref="0x7f2c54dd6e38"/>
        <function-ref name="isSet" scoped="" ref="0x7f2c54dd6928"/>
        <function-ref name="set" scoped="" ref="0x7f2c54dd4898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f2c54de0020" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f2c54de0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f2c54de0370"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f2c54de04f8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f2c54de0680"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f2c54de0808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2c54de8e40" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f2c54de8e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c54de61c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f2c54dce978" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f2c54dce978"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f2c55109708"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f2c54dcce10"/>
        <function-ref name="clear" scoped="" ref="0x7f2c54dc8558"/>
        <function-ref name="isValid" scoped="" ref="0x7f2c54dcc730"/>
        <function-ref name="set" scoped="" ref="0x7f2c54dc8c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f2c54dca5a8" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f2c54dca5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f2c55109708"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c54dce150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f2c54dd8930" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f2c54dd8930"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c54dd7020"/>
        <function-ref name="get" scoped="" ref="0x7f2c54ddd9f0"/>
        <function-ref name="isSet" scoped="" ref="0x7f2c54ddd4e0"/>
        <function-ref name="set" scoped="" ref="0x7f2c54dd7530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f2c54de1658" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2c54de1658"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2c54de19a8"/>
        <function-ref name="noAck" scoped="" ref="0x7f2c54de1b30"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2c54de1cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f2c54de41c8" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f2c54de41c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c54de4518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f2c54de0ab8" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f2c54de0ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f2c54de0e08"/>
        <function-ref name="setRetries" scoped="" ref="0x7f2c54ddf020"/>
        <function-ref name="getRetries" scoped="" ref="0x7f2c54ddf1a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f2c54ddf330"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f2c54ddf4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f2c54de2020" loc="57:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f2c54de2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c54de2370"/>
        <function-ref name="source" scoped="" ref="0x7f2c54de24f8"/>
        <function-ref name="address" scoped="" ref="0x7f2c54de2680"/>
        <function-ref name="destination" scoped="" ref="0x7f2c54de2808"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c54de2990"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c54de2b18"/>
        <function-ref name="type" scoped="" ref="0x7f2c54de2ca0"/>
        <function-ref name="setType" scoped="" ref="0x7f2c54de2e28"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c54de1020"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c54de11a8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c54de1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f2c54ddf780" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f2c54ddf780"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f2c54ddfbd0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f2c54ddfd58"/>
        <function-ref name="getChannel" scoped="" ref="0x7f2c54dde020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f2c54dcd990" loc="67:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f2c54dcd990"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f2c54dcdce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f2c54de4d58" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f2c54de4d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c54de30d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f2c54dc3c50" loc="41:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f2c54dc3c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2c54dc0020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2c54dc01a8"/>
        <function-ref name="start" scoped="" ref="0x7f2c54dc0330"/>
        <function-ref name="stop" scoped="" ref="0x7f2c54dc04b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f2c54d988b8" loc="80:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f2c54d988b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c54d95020"/>
        <function-ref name="get" scoped="" ref="0x7f2c54d979a0"/>
        <function-ref name="isSet" scoped="" ref="0x7f2c54d97490"/>
        <function-ref name="set" scoped="" ref="0x7f2c54d95530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x7f2c54db7710" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x7f2c54db7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f2c54db7a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x7f2c54db64b8" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x7f2c54db64b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2c54db6908"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2c54db6a90"/>
        <function-ref name="request" scoped="" ref="0x7f2c54db6c18"/>
        <function-ref name="granted" scoped="" ref="0x7f2c54db6da0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2c54daf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f2c54dbc498" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f2c54dbc498"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f2c54dbc7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2c54dc0c30" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f2c54dc0c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c54dbf020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c54dbf1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c54dbf330"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c54dbf4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c54dbf640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f2c54dbe968" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f2c54dbe968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c54dbecb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f2c54da1308" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f2c54da1308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f2c54da1658"/>
        <function-ref name="address" scoped="" ref="0x7f2c54da17e0"/>
        <function-ref name="destination" scoped="" ref="0x7f2c54da1968"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c54da1af0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c54da1c78"/>
        <function-ref name="pan" scoped="" ref="0x7f2c54da1e00"/>
        <function-ref name="setPan" scoped="" ref="0x7f2c54daa020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c54daa1a8"/>
        <function-ref name="localPan" scoped="" ref="0x7f2c54daa330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x7f2c54daa6e0" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7f2c54daa6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c54daaa30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c54daabb8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c54daad40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c54da9020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c54da91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f2c54d9b5a0" loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f2c54d9b5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c54d99b70"/>
        <function-ref name="get" scoped="" ref="0x7f2c54d99660"/>
        <function-ref name="isSet" scoped="" ref="0x7f2c54d99150"/>
        <function-ref name="set" scoped="" ref="0x7f2c54d980c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f2c54da9e28" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f2c54da9e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f2c54da01a8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f2c54da0330"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f2c54da04b8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f2c54da0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x7f2c54db99e8" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f2c54db99e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c54db9d38"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c54db8020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c54db81a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c54db8330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c54db84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2c54dbfdc0" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f2c54dbfdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c54dbe170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f2c54d938b0" loc="84:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f2c54d938b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f2c55109708"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f2c54d90020"/>
        <function-ref name="clear" scoped="" ref="0x7f2c54d90700"/>
        <function-ref name="isValid" scoped="" ref="0x7f2c54d91828"/>
        <function-ref name="set" scoped="" ref="0x7f2c54d90de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f2c54d944e0" loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f2c54d944e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f2c55109708"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c54d93088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f2c54d9d1f8" loc="78:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f2c54d9d1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c54d9c7f8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54d9c2e8"/>
        <function-ref name="isSet" scoped="" ref="0x7f2c54d9dd78"/>
        <function-ref name="set" scoped="" ref="0x7f2c54d9cd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f2c54da94d0" loc="68:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2c54da94d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2c54da9820"/>
        <function-ref name="noAck" scoped="" ref="0x7f2c54da99a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2c54da9b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f2c54db0250" loc="58:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f2c54db0250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c54db05a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c54db0728"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c54db08b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c54db0a38"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c54db0bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f2c54dbb1c8" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f2c54dbb1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c54dbb518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f2c54da08f0" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f2c54da08f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f2c54da0c40"/>
        <function-ref name="setRetries" scoped="" ref="0x7f2c54da0dc8"/>
        <function-ref name="getRetries" scoped="" ref="0x7f2c54d9f020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f2c54d9f1a8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f2c54d9f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f2c54d9f5f8" loc="76:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f2c54d9f5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f2c54d9f948"/>
        <function-ref name="setChannel" scoped="" ref="0x7f2c54d9fad0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f2c54d9fc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f2c54dba378" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f2c54dba378"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c54dba6c8"/>
        <function-ref name="source" scoped="" ref="0x7f2c54dba850"/>
        <function-ref name="address" scoped="" ref="0x7f2c54dba9d8"/>
        <function-ref name="destination" scoped="" ref="0x7f2c54dbab60"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c54dbace8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c54dbae70"/>
        <function-ref name="type" scoped="" ref="0x7f2c54db9020"/>
        <function-ref name="setType" scoped="" ref="0x7f2c54db91a8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c54db9330"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c54db94b8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c54db9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f2c54d8e9d8" loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f2c54d8e9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c55201020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c55201378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f2c54d8de48"/>
        <function-ref name="clear" scoped="" ref="0x7f2c54d8c558"/>
        <function-ref name="isValid" scoped="" ref="0x7f2c54d8d768"/>
        <function-ref name="set" scoped="" ref="0x7f2c54d8cc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f2c54db7020" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f2c54db7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c54db7370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f2c54d95b78" loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f2c54d95b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f2c54d94020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f2c54dbbd58" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f2c54dbbd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c54dba0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x7f2c54d5d778" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x7f2c54d5d778"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f2c54d5dac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x7f2c54d6f370" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x7f2c54d6f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x7f2c54d6f6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x7f2c54d5fb48" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7f2c54d5fb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c54d66020"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f2c54d661a8"/>
        <function-ref name="source" scoped="" ref="0x7f2c54d66330"/>
        <function-ref name="destination" scoped="" ref="0x7f2c54d664b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c54d66640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c54d667c8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c54d66950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x7f2c54d67a48" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x7f2c54d67a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x7f2c54d67d98"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x7f2c54d71020"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x7f2c54d711a8"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x7f2c54d71330"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x7f2c54d714b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f2c54d3d640" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f2c54d3d640"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2c54d3d990"/>
        <function-ref name="wait" scoped="" ref="0x7f2c54d3db18"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c54d3dca0"/>
        <function-ref name="isFree" scoped="" ref="0x7f2c54d3de28"/>
        <function-ref name="getNow" scoped="" ref="0x7f2c54d42020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x7f2c54d37860" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x7f2c54d37860"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c54d37bb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c54d37d38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c54d41020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c54d411a8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f2c54d41330"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f2c54d414b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f2c54d41a40" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f2c54d41a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f2c55109708"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f2c54d35020"/>
        <function-ref name="clear" scoped="" ref="0x7f2c54d35700"/>
        <function-ref name="isValid" scoped="" ref="0x7f2c54d3c8f8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54d35de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x7f2c54d82428" loc="43:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x7f2c54d82428"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c54d82778"/>
        <function-ref name="headerLength" scoped="" ref="0x7f2c54d82900"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f2c54d82a88"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f2c54d82c10"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f2c54d82d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x7f2c54d80da0" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x7f2c54d80da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x7f2c54d77170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x7f2c54d780f0" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7f2c54d780f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7f2c54d78440"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7f2c54d785c8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f2c54d78750"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7f2c54d788d8"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7f2c54d78a60"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7f2c54d78be8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f2c54d78d70"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f2c54d81020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7f2c54d44858" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f2c54d44858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f2c54d44ba8"/>
        <function-ref name="getDSN" scoped="" ref="0x7f2c54d44d30"/>
        <function-ref name="setFCF" scoped="" ref="0x7f2c54d5e020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f2c54d5e1a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f2c54d5e330"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f2c54d5e4b8"/>
        <function-ref name="setDSN" scoped="" ref="0x7f2c54d5e640"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f2c54d5e7c8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f2c54d5e950"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f2c54d5ead8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f2c54d5ec60"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f2c54d5ede8"/>
        <function-ref name="localAddr" scoped="" ref="0x7f2c54d5c020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f2c54d5c2a8"/>
        <function-ref name="localPan" scoped="" ref="0x7f2c54d5c430"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f2c54d5c5b8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f2c54d5c740"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f2c54d5c8c8"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f2c54d5ca50"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c54d5cbd8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f2c54d5cd60"/>
        <function-ref name="getFCF" scoped="" ref="0x7f2c54d43020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f2c54d431a8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f2c54d43330"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f2c54d434b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x7f2c54d733b8" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7f2c54d733b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f2c54d73708"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f2c54d73890"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f2c54d73a18"/>
        <function-ref name="getSender" scoped="" ref="0x7f2c54d73ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x7f2c54d6c6c8" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7f2c54d6c6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f2c54d6ca18"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f2c54d6cba0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f2c54d6cd28"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f2c54d72020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7f2c54cdd910" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f2c54cdd910"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2c54cddc80"/>
        <function-ref name="wait" scoped="" ref="0x7f2c54cdde08"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c54cac020"/>
        <function-ref name="isFree" scoped="" ref="0x7f2c54cac1a8"/>
        <function-ref name="getNow" scoped="" ref="0x7f2c54cac330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f2c54cac958" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f2c54cac958"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f2c5528b128"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f2c5528b128"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f2c55109708"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f2c55109b08"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c54c9d020"/>
        <function-ref name="fired" scoped="" ref="0x7f2c54c9f0c0"/>
        <function-ref name="startAt" scoped="" ref="0x7f2c54c9f9d0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c54c9f548"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2c54c9d4a8"/>
        <function-ref name="start" scoped="" ref="0x7f2c54ca0730"/>
        <function-ref name="stop" scoped="" ref="0x7f2c54ca0c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7f2c533297e8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f2c533297e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2c53329b58"/>
        <function-ref name="wait" scoped="" ref="0x7f2c53329ce0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c53329e68"/>
        <function-ref name="isFree" scoped="" ref="0x7f2c53328020"/>
        <function-ref name="getNow" scoped="" ref="0x7f2c533281a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f2c53328660" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f2c53328660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f2c55109708"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f2c55109b08"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c53326cc0"/>
        <function-ref name="fired" scoped="" ref="0x7f2c53327d50"/>
        <function-ref name="startAt" scoped="" ref="0x7f2c533266b8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c53326230"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2c53324190"/>
        <function-ref name="start" scoped="" ref="0x7f2c533273f0"/>
        <function-ref name="stop" scoped="" ref="0x7f2c533278c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f2c53324568" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f2c53324568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f2c533248b8"/>
        <function-ref name="suspend" scoped="" ref="0x7f2c53324a40"/>
        <function-ref name="resume" scoped="" ref="0x7f2c53324bc8"/>
        <function-ref name="run" scoped="" ref="0x7f2c53324d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x7f2c54cab220" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f2c54cab220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f2c54cab570"/>
        <function-ref name="suspend" scoped="" ref="0x7f2c54cab6f8"/>
        <function-ref name="resume" scoped="" ref="0x7f2c54cab880"/>
        <function-ref name="run" scoped="" ref="0x7f2c54caba08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f2c54bef2a8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f2c54bef2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c54bef5f8"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c54bef780"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c54bef908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f2c54befb90" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f2c54befb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c54bee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f2c54bf1020" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f2c54bf1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f2c54bf1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2c54bf5578" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f2c54bf5578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c54bf58c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c54bf5a50"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c54bf5bd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c54bf5d60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c54bf4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2c54bf4388" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f2c54bf4388"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c54bf46f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c54bf4880"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c54bf4a08"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c54bf4b90"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c54bf4d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f2c54bf37e0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f2c54bf37e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c54bf3b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f2c54bf04d0" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f2c54bf04d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c54bf0820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c54bf09a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c54bf0b30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c54bf0cb8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f2c54bf0e40"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f2c54bef020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f2c54bee2a8" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f2c54bee2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c54bee5f8"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f2c54bee780"/>
        <function-ref name="source" scoped="" ref="0x7f2c54bee908"/>
        <function-ref name="destination" scoped="" ref="0x7f2c54beea90"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c54beec18"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c54beeda0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c54bed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2c54bf30c8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f2c54bf30c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c54bf3438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f2c54bf1738" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f2c54bf1738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c54bf1aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f2c54bf6020" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f2c54bf6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c54bf6370"/>
        <function-ref name="source" scoped="" ref="0x7f2c54bf64f8"/>
        <function-ref name="address" scoped="" ref="0x7f2c54bf6680"/>
        <function-ref name="destination" scoped="" ref="0x7f2c54bf6808"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c54bf6990"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c54bf6b18"/>
        <function-ref name="type" scoped="" ref="0x7f2c54bf6ca0"/>
        <function-ref name="setType" scoped="" ref="0x7f2c54bf6e28"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c54bf5020"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c54bf51a8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c54bf5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f2c54bf1e50" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f2c54bf1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c54bf01e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f2c53303908" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f2c53303908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c53303c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f2c53303020" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f2c53303020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c53303370"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c533034f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c53303680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f2c53306b58" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f2c53306b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f2c53305020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2c53308268" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f2c53308268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c533085b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c53308740"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c533088c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c53308a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c53308bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2c53307020" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f2c53307020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c53307390"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c53307518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c533076a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c53307828"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c533079b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f2c53306480" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f2c53306480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c533067f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f2c5330fde0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f2c5330fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c5330a170"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c5330a2f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c5330a480"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c5330a608"/>
        <function-ref name="headerLength" scoped="" ref="0x7f2c5330a790"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f2c5330a918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f2c53301020" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f2c53301020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c53301470"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f2c533015f8"/>
        <function-ref name="source" scoped="" ref="0x7f2c53301780"/>
        <function-ref name="destination" scoped="" ref="0x7f2c53301908"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c53301a90"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c53301c18"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c53301da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f2c53300020" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f2c53300020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f2c53300370"/>
        <function-ref name="changed" scoped="" ref="0x7f2c533004f8"/>
        <function-ref name="amGroup" scoped="" ref="0x7f2c53300680"/>
        <function-ref name="setAddress" scoped="" ref="0x7f2c53300808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f2c53304180" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f2c53304180"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c533044d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c53304658"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c533047e0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c53304968"/>
        <function-ref name="headerLength" scoped="" ref="0x7f2c53304af0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f2c53304c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2c53307d18" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f2c53307d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c533060d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f2c533053c8" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f2c533053c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c53305738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f2c5330ab60" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f2c5330ab60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c53309020"/>
        <function-ref name="source" scoped="" ref="0x7f2c533091a8"/>
        <function-ref name="address" scoped="" ref="0x7f2c53309330"/>
        <function-ref name="destination" scoped="" ref="0x7f2c533094b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c53309640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c533097c8"/>
        <function-ref name="type" scoped="" ref="0x7f2c53309950"/>
        <function-ref name="setType" scoped="" ref="0x7f2c53309ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c53309c60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c53309de8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c53308020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f2c53305ae0" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f2c53305ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c53305e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f2c54c0c560" loc="54:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f2c54c0c560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f2c54c0c8b0"/>
        <function-ref name="changed" scoped="" ref="0x7f2c54c0ca38"/>
        <function-ref name="amGroup" scoped="" ref="0x7f2c54c0cbc0"/>
        <function-ref name="setAddress" scoped="" ref="0x7f2c54c0cd48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f2c54be7a48" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f2c54be7a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c54be7d98"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c54bd8020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c54bd81a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f2c54bd83f0" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f2c54bd83f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2c54bd8740"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2c54bd88c8"/>
        <function-ref name="request" scoped="" ref="0x7f2c54bd8a50"/>
        <function-ref name="granted" scoped="" ref="0x7f2c54bd8bd8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2c54bd8d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f2c54be7100" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f2c54be7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c54be7450"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c54be75d8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c54be7760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f2c54b76020" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f2c54b76020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f2c54b76390"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2c54b76518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f2c54b74020" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2c54b74020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f2c54b74390"/>
        <function-ref name="configure" scoped="" ref="0x7f2c54b74518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2c54b77200" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f2c54b77200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2c54b77570"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2c54b776f8"/>
        <function-ref name="request" scoped="" ref="0x7f2c54b77880"/>
        <function-ref name="granted" scoped="" ref="0x7f2c54b77a08"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2c54b77b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f2c54b76760" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2c54b76760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f2c54b76ab0"/>
        <function-ref name="userId" scoped="" ref="0x7f2c54b76c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c532b0718" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f2c532b0718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c532b0a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f2c532b0cf0" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f2c532b0cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f2c532af0a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f2c532af228"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f2c532af3b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f2c532af538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f2c532ad820" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f2c532ad820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f2c532adb90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2c532add18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f2c532ac8c0" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2c532ac8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f2c532acc30"/>
        <function-ref name="configure" scoped="" ref="0x7f2c532acdb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f2c532aa0a0" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f2c532aa0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f2c532aa3f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f2c532aa578"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f2c532aa700"/>
        <function-ref name="dequeue" scoped="" ref="0x7f2c532aa888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2c532aeae0" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f2c532aeae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2c532aee50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2c532ad020"/>
        <function-ref name="request" scoped="" ref="0x7f2c532ad1a8"/>
        <function-ref name="granted" scoped="" ref="0x7f2c532ad330"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2c532ad4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f2c532ac020" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2c532ac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f2c532ac370"/>
        <function-ref name="userId" scoped="" ref="0x7f2c532ac4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f2c532aab50" loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f2c532aab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c532a9020"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c532a91a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f2c54b3fba0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f2c54b3fba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c54b3d020"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c54b3d1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c54b3d330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f2c54b3d5b8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f2c54b3d5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c54b3d908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f2c54b43840" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f2c54b43840"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f2c54b43b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2c54b71980" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f2c54b71980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c54b71cd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c54b71e58"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c54b44020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c54b441a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c54b44330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7f2c54b40d98" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f2c54b40d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c54b3f170"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c54b3f2f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c54b3f480"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c54b3f608"/>
        <function-ref name="headerLength" scoped="" ref="0x7f2c54b3f790"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f2c54b3f918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7f2c54b43e38" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f2c54b43e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f2c54b421c0"/>
        <function-ref name="getDSN" scoped="" ref="0x7f2c54b42348"/>
        <function-ref name="setFCF" scoped="" ref="0x7f2c54b424d0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f2c54b42658"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f2c54b427e0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f2c54b42968"/>
        <function-ref name="setDSN" scoped="" ref="0x7f2c54b42af0"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f2c54b42c78"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f2c54b42e00"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f2c54b41020"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f2c54b411a8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f2c54b41330"/>
        <function-ref name="localAddr" scoped="" ref="0x7f2c54b414b8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f2c54b41740"/>
        <function-ref name="localPan" scoped="" ref="0x7f2c54b418c8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f2c54b41a50"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f2c54b41bd8"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f2c54b41d60"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f2c54b40020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c54b401a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f2c54b40330"/>
        <function-ref name="getFCF" scoped="" ref="0x7f2c54b404b8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f2c54b40640"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f2c54b407c8"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f2c54b40950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f2c54b44578" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f2c54b44578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c54b448c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c54b44a50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c54b44bd8"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c54b44d60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c54b43020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f2c54b432a8" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f2c54b432a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c54b435f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f2c54b03e00" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f2c54b03e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c54b021a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c54b02330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c54b024b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f2c54b02740" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f2c54b02740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c54b02a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f2c54b06120" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f2c54b06120"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c54b06470"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c54b065f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c54b06780"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c54b06908"/>
        <function-ref name="headerLength" scoped="" ref="0x7f2c54b06a90"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f2c54b06c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x7f2c54b04908" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x7f2c54b04908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c54b04c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f2c54b02d18" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f2c54b02d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c54b010a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c54b01228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c54b013b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c54b01538"/>
        <function-ref name="headerLength" scoped="" ref="0x7f2c54b016c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f2c54b01848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x7f2c54b04020" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x7f2c54b04020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c54b04370"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c54b044f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c54b04680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f2c54b36230" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f2c54b36230"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c54b36580"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c54b36708"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c54b36890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f2c54b36b18" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f2c54b36b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c54b36e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x7f2c54b03020" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x7f2c54b03020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c54b03370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c54b034f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c54b03680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c54b03808"/>
        <function-ref name="headerLength" scoped="" ref="0x7f2c54b03990"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f2c54b03b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f2c54a72900" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f2c54a72900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f2c54a72c50"/>
        <function-ref name="address" scoped="" ref="0x7f2c54a72dd8"/>
        <function-ref name="destination" scoped="" ref="0x7f2c54a70020"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c54a701a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c54a70330"/>
        <function-ref name="pan" scoped="" ref="0x7f2c54a704b8"/>
        <function-ref name="setPan" scoped="" ref="0x7f2c54a70640"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c54a707c8"/>
        <function-ref name="localPan" scoped="" ref="0x7f2c54a70950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f2c54a70b98" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f2c54a70b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c54a6f020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c54a6f1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c54a6f330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c54a6f4b8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f2c54a6f640"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f2c54a6f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7f2c54a75980" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f2c54a75980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f2c54a75cd0"/>
        <function-ref name="getDSN" scoped="" ref="0x7f2c54a75e58"/>
        <function-ref name="setFCF" scoped="" ref="0x7f2c54a74020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f2c54a741a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f2c54a74330"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f2c54a744b8"/>
        <function-ref name="setDSN" scoped="" ref="0x7f2c54a74640"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f2c54a747c8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f2c54a74950"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f2c54a74ad8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f2c54a74c60"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f2c54a74de8"/>
        <function-ref name="localAddr" scoped="" ref="0x7f2c54a73020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f2c54a732a8"/>
        <function-ref name="localPan" scoped="" ref="0x7f2c54a73430"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f2c54a735b8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f2c54a73740"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f2c54a738c8"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f2c54a73a50"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c54a73bd8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f2c54a73d60"/>
        <function-ref name="getFCF" scoped="" ref="0x7f2c54a72020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f2c54a721a8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f2c54a72330"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f2c54a724b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f2c54a6fab0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f2c54a6fab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c54a6fe00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c54a6e020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c54a6e1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c54a6e330"/>
        <function-ref name="headerLength" scoped="" ref="0x7f2c54a6e4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f2c54a6e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f2c532442e0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f2c532442e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f2c53244630"/>
        <function-ref name="address" scoped="" ref="0x7f2c532447b8"/>
        <function-ref name="destination" scoped="" ref="0x7f2c53244940"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c53244ac8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c53244c50"/>
        <function-ref name="pan" scoped="" ref="0x7f2c53244dd8"/>
        <function-ref name="setPan" scoped="" ref="0x7f2c53243020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c532431a8"/>
        <function-ref name="localPan" scoped="" ref="0x7f2c53243330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f2c53243578" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f2c53243578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c532438c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c53243a50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c53243bd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c53243d60"/>
        <function-ref name="headerLength" scoped="" ref="0x7f2c53241020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f2c532411a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7f2c532472a8" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f2c532472a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f2c532475f8"/>
        <function-ref name="getDSN" scoped="" ref="0x7f2c53247780"/>
        <function-ref name="setFCF" scoped="" ref="0x7f2c53247908"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f2c53247a90"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f2c53247c18"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f2c53247da0"/>
        <function-ref name="setDSN" scoped="" ref="0x7f2c53246020"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f2c532461a8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f2c53246330"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f2c532464b8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f2c53246640"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f2c532467c8"/>
        <function-ref name="localAddr" scoped="" ref="0x7f2c53246950"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f2c53246bd8"/>
        <function-ref name="localPan" scoped="" ref="0x7f2c53246d60"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f2c53245020"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f2c532451a8"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f2c53245330"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f2c532454b8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c53245640"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f2c532457c8"/>
        <function-ref name="getFCF" scoped="" ref="0x7f2c53245950"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f2c53245ad8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f2c53245c60"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f2c53245de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f2c53241450" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f2c53241450"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f2c532417a0"/>
        <function-ref name="changed" scoped="" ref="0x7f2c53241928"/>
        <function-ref name="amGroup" scoped="" ref="0x7f2c53241ab0"/>
        <function-ref name="setAddress" scoped="" ref="0x7f2c53241c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f2c53240020" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f2c53240020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c53240370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c532404f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c53240680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c53240808"/>
        <function-ref name="headerLength" scoped="" ref="0x7f2c53240990"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f2c53240b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f2c54a07510" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f2c54a07510"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c54a07860"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c54a079e8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c54a07b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f2c54a07df8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f2c54a07df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c54a06170"/>
        <function-ref name="header" scoped="" ref="0x7f2c54a062f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2c54a08470" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f2c54a08470"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c54a087c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c54a08948"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c54a08ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f2c54a06580" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f2c54a06580"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f2c54a068d0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f2c54a06a58"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f2c54a06be0"/>
        <function-ref name="getSender" scoped="" ref="0x7f2c54a06d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f2c54a08d18" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f2c54a08d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c54a070a0"/>
        <function-ref name="header" scoped="" ref="0x7f2c54a07228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f2c531f4a28" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f2c531f4a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c531f4d78"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c531f3020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c531f31a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f2c531f3430" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f2c531f3430"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c531f3780"/>
        <function-ref name="header" scoped="" ref="0x7f2c531f3908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x7f2c531f13f0" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f2c531f13f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c531f1740"/>
        <function-ref name="clearAll" scoped="" ref="0x7f2c531f18c8"/>
        <function-ref name="get" scoped="" ref="0x7f2c531f1a50"/>
        <function-ref name="set" scoped="" ref="0x7f2c531f1bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2c531f6378" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f2c531f6378"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c531f66c8"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c531f6850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c531f69d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x7f2c531f2700" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f2c531f2700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f2c531f2a50"/>
        <function-ref name="insertNode" scoped="" ref="0x7f2c531f2bd8"/>
        <function-ref name="getNode" scoped="" ref="0x7f2c531f2d60"/>
        <function-ref name="evicted" scoped="" ref="0x7f2c531f1020"/>
        <function-ref name="getIndex" scoped="" ref="0x7f2c531f11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f2c531f6c20" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f2c531f6c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c531f4020"/>
        <function-ref name="header" scoped="" ref="0x7f2c531f41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c531f43f0" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f2c531f43f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c531f4740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x7f2c531f3b50" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7f2c531f3b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f2c531f2020"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f2c531f21a8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f2c531f2330"/>
        <function-ref name="getSender" scoped="" ref="0x7f2c531f24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7f2c54a3bd58" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f2c54a3bd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f2c54a380d8"/>
        <function-ref name="insertNode" scoped="" ref="0x7f2c54a38260"/>
        <function-ref name="getNode" scoped="" ref="0x7f2c54a383e8"/>
        <function-ref name="evicted" scoped="" ref="0x7f2c54a38570"/>
        <function-ref name="getIndex" scoped="" ref="0x7f2c54a386f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7f2c54a34b18" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f2c54a34b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c54a34e68"/>
        <function-ref name="clearAll" scoped="" ref="0x7f2c54a33020"/>
        <function-ref name="get" scoped="" ref="0x7f2c54a331a8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54a33330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7f2c54a35850" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f2c54a35850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f2c54a35ba0"/>
        <function-ref name="insertNode" scoped="" ref="0x7f2c54a35d28"/>
        <function-ref name="getNode" scoped="" ref="0x7f2c54a34020"/>
        <function-ref name="evicted" scoped="" ref="0x7f2c54a341a8"/>
        <function-ref name="getIndex" scoped="" ref="0x7f2c54a34330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c54a35238" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f2c54a35238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c54a35588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7f2c531ef870" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f2c531ef870"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c531efbc0"/>
        <function-ref name="clearAll" scoped="" ref="0x7f2c531efd48"/>
        <function-ref name="get" scoped="" ref="0x7f2c531ee020"/>
        <function-ref name="set" scoped="" ref="0x7f2c531ee1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f2c549f6c38" loc="85:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f2c549f6c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c549f5020"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c549f51a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c549f5330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f2c549f55b8" loc="86:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f2c549f55b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c549f5908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x7f2c549f1100" loc="93:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x7f2c549f1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2c549f1450"/>
        <function-ref name="noAck" scoped="" ref="0x7f2c549f15d8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2c549f1760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2c549f82e8" loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f2c549f82e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c549f8638"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c549f87c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c549f8948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f2c549f7e20" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f2c549f7e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c549f61a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c549f6330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c549f64b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c549f6640"/>
        <function-ref name="headerLength" scoped="" ref="0x7f2c549f67c8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f2c549f6950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f2c549f5b90" loc="87:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f2c549f5b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c549f3020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c549f31a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c549f3330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c549f34b8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f2c549f3640"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f2c549f37c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x7f2c549f2470" loc="92:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x7f2c549f2470"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f2c549f27c0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f2c549f2948"/>
        <function-ref name="getRetries" scoped="" ref="0x7f2c549f2ad0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f2c549f2c58"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f2c549f2de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2c549f8bd0" loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f2c549f8bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c549f7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f2c549f3a10" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2c549f3a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2c549f3d60"/>
        <function-ref name="noAck" scoped="" ref="0x7f2c549f2020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2c549f21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f2c549f7268" loc="79:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f2c549f7268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f2c549f75b8"/>
        <function-ref name="setRetries" scoped="" ref="0x7f2c549f7740"/>
        <function-ref name="getRetries" scoped="" ref="0x7f2c549f78c8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f2c549f7a50"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f2c549f7bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f2c549ec988" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f2c549ec988"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2c549eccd8"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2c549ece60"/>
        <function-ref name="start" scoped="" ref="0x7f2c549d8020"/>
        <function-ref name="stop" scoped="" ref="0x7f2c549d81a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f2c549d55c8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f2c549d55c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c549d5918"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c549d5aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c549d5c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f2c549d4020" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f2c549d4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c549d4370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2c549d8430" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f2c549d8430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c549d8780"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c549d8908"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c549d8a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f2c549d72e8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f2c549d72e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c549d7638"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c549d77c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c549d7948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c549d7ad0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f2c549d7c58"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f2c549d7de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f2c549d6060" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f2c549d6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f2c549d63b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f2c549d6538"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f2c549d66c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f2c549d6848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f2c549d6b30" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f2c549d6b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2c549d6e80"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2c549d5030"/>
        <function-ref name="start" scoped="" ref="0x7f2c549d51b8"/>
        <function-ref name="stop" scoped="" ref="0x7f2c549d5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2c549d8d18" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f2c549d8d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c549d70a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f2c549d45f8" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f2c549d45f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c549d4948"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c549d4ad0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c549d4c58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c549d4de0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f2c549d3020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f2c549d31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f2c531cce80" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f2c531cce80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f2c531cb1f8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f2c531cb380"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f2c531cb508"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f2c531cb690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f2c54968270" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f2c54968270"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2c549685c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2c54968748"/>
        <function-ref name="start" scoped="" ref="0x7f2c549688d0"/>
        <function-ref name="stop" scoped="" ref="0x7f2c54968a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7f2c549665d8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f2c549665d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f2c54966928"/>
        <function-ref name="turnOn" scoped="" ref="0x7f2c54966ab0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f2c54966c38"/>
        <function-ref name="done" scoped="" ref="0x7f2c54966dc0"/>
        <function-ref name="standby" scoped="" ref="0x7f2c54965020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f2c549651a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2c54968ce0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f2c54968ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c549670a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c54967228"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c549673b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7f2c54965c98" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f2c54965c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c54963020"/>
        <function-ref name="header" scoped="" ref="0x7f2c549631a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2c54967638" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f2c54967638"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c54967988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7f2c549653f0" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f2c549653f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c54965740"/>
        <function-ref name="ready" scoped="" ref="0x7f2c549658c8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c54965a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f2c54967bd0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f2c54967bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f2c54966020"/>
        <function-ref name="setChannel" scoped="" ref="0x7f2c549661a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f2c54966330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f2c531c30e0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f2c531c30e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2c531c3430"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2c531c35b8"/>
        <function-ref name="start" scoped="" ref="0x7f2c531c3740"/>
        <function-ref name="stop" scoped="" ref="0x7f2c531c38c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7f2c531c3b50" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c531c3b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c531c2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7f2c531c1b70" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f2c531c1b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f2c531c0020"/>
        <function-ref name="turnOn" scoped="" ref="0x7f2c531c01a8"/>
        <function-ref name="setChannel" scoped="" ref="0x7f2c531c0330"/>
        <function-ref name="done" scoped="" ref="0x7f2c531c04b8"/>
        <function-ref name="standby" scoped="" ref="0x7f2c531c0640"/>
        <function-ref name="getChannel" scoped="" ref="0x7f2c531c07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2c531c22a8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f2c531c22a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c531c25f8"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c531c2780"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c531c2908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7f2c531bdd98" loc="189:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x7f2c531bdd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c531bc170"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c531bc2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7f2c531bfe20" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f2c531bfe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c531bd1a8"/>
        <function-ref name="header" scoped="" ref="0x7f2c531bd330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x7f2c531bc5c0" loc="144:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x7f2c531bc5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c531bc910"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c531bca98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2c531c2b90" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f2c531c2b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c531c1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x7f2c531bd5f8" loc="322:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x7f2c531bd5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c531bd948"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c531bdad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7f2c531bf578" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f2c531bf578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c531bf8c8"/>
        <function-ref name="ready" scoped="" ref="0x7f2c531bfa50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c531bfbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f2c531c1268" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f2c531c1268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f2c531c15b8"/>
        <function-ref name="setChannel" scoped="" ref="0x7f2c531c1740"/>
        <function-ref name="getChannel" scoped="" ref="0x7f2c531c18c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f2c531c0a10" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f2c531c0a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f2c531c0d60"/>
        <function-ref name="suspend" scoped="" ref="0x7f2c531bf020"/>
        <function-ref name="resume" scoped="" ref="0x7f2c531bf1a8"/>
        <function-ref name="run" scoped="" ref="0x7f2c531bf330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f2c54913a28" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f2c54913a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c54913d78"/>
        <function-ref name="ready" scoped="" ref="0x7f2c54912020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c549121a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f2c54912430" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f2c54912430"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c54912780"/>
        <function-ref name="header" scoped="" ref="0x7f2c54912908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f2c54912b50" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f2c54912b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2c54911020"/>
        <function-ref name="wait" scoped="" ref="0x7f2c549111a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c54911330"/>
        <function-ref name="isFree" scoped="" ref="0x7f2c549114b8"/>
        <function-ref name="getNow" scoped="" ref="0x7f2c54911640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f2c549118c8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f2c549118c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f2c54911c18"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f2c54911da0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f2c54910020"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f2c549101a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f2c54913268" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f2c54913268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c549135b8"/>
        <function-ref name="header" scoped="" ref="0x7f2c54913740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f2c54914988" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f2c54914988"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c54914cd8"/>
        <function-ref name="ready" scoped="" ref="0x7f2c54914e60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c54913020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f2c53185bb0" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f2c53185bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c53184020"/>
        <function-ref name="ready" scoped="" ref="0x7f2c531841a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c53184330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f2c531845b8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f2c531845b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c53184908"/>
        <function-ref name="header" scoped="" ref="0x7f2c53184a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f2c53184cd8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f2c53184cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2c531830a0"/>
        <function-ref name="wait" scoped="" ref="0x7f2c53183228"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c531833b0"/>
        <function-ref name="isFree" scoped="" ref="0x7f2c53183538"/>
        <function-ref name="getNow" scoped="" ref="0x7f2c531836c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f2c53183908" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f2c53183908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f2c53183c58"/>
        <function-ref name="rand32" scoped="" ref="0x7f2c53183de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f2c531820a0" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f2c531820a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f2c531823f0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f2c53182578"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f2c53182700"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f2c53182888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f2c531853f0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f2c531853f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c53185740"/>
        <function-ref name="header" scoped="" ref="0x7f2c531858c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f2c531869b0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f2c531869b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c53186d00"/>
        <function-ref name="ready" scoped="" ref="0x7f2c53185020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c531851a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x7f2c53182b50" loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x7f2c53182b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c53180020"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c531801a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f2c54927080" loc="46:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f2c54927080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f2c549273d0"/>
        <function-ref name="rand32" scoped="" ref="0x7f2c54927558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f2c54928020" loc="45:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f2c54928020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c54928b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c5492a2b0" loc="44:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f2c5492a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c5492a600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f2c54921020" loc="48:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f2c54921020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f2c54921370"/>
        <function-ref name="rand32" scoped="" ref="0x7f2c549214f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f2c54923e48" loc="47:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f2c54923e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c549229e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c549235f0" loc="46:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f2c549235f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c54923940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f2c548e2d38" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f2c548e2d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c548e10d8"/>
        <function-ref name="ready" scoped="" ref="0x7f2c548e1260"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c548e13e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f2c548e1670" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f2c548e1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c548e19c0"/>
        <function-ref name="header" scoped="" ref="0x7f2c548e1b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f2c548e1d90" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f2c548e1d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2c548e0170"/>
        <function-ref name="wait" scoped="" ref="0x7f2c548e02f8"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c548e0480"/>
        <function-ref name="isFree" scoped="" ref="0x7f2c548e0608"/>
        <function-ref name="getNow" scoped="" ref="0x7f2c548e0790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x7f2c548debd8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x7f2c548debd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c548dd020"/>
        <function-ref name="get" scoped="" ref="0x7f2c548dd1a8"/>
        <function-ref name="setValue" scoped="" ref="0x7f2c548dd330"/>
        <function-ref name="set" scoped="" ref="0x7f2c548dd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f2c548e0a18" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f2c548e0a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7f2c548e0d68"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7f2c548de020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f2c548de1a8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7f2c548de330"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7f2c548de4b8"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7f2c548de640"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f2c548de7c8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f2c548de950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f2c5490cb50" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f2c5490cb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c548e2020"/>
        <function-ref name="header" scoped="" ref="0x7f2c548e21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f2c5490c2a8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f2c5490c2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c5490c5f8"/>
        <function-ref name="ready" scoped="" ref="0x7f2c5490c780"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c5490c908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f2c548e23f0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2c548e23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2c548e2740"/>
        <function-ref name="noAck" scoped="" ref="0x7f2c548e28c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2c548e2a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f2c548c5978" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f2c548c5978"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2c548c5cc8"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2c548c5e50"/>
        <function-ref name="start" scoped="" ref="0x7f2c548c4020"/>
        <function-ref name="stop" scoped="" ref="0x7f2c548c41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f2c548c0020" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f2c548c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f2c548c0370"/>
        <function-ref name="request" scoped="" ref="0x7f2c548c04f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f2c548bc5b8" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f2c548bc5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c548bc908"/>
        <function-ref name="ready" scoped="" ref="0x7f2c548bca90"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c548bcc18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f2c548bb020" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f2c548bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c548bb370"/>
        <function-ref name="header" scoped="" ref="0x7f2c548bb4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f2c548c3268" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f2c548c3268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f2c548c35b8"/>
        <function-ref name="turnOn" scoped="" ref="0x7f2c548c3740"/>
        <function-ref name="setChannel" scoped="" ref="0x7f2c548c38c8"/>
        <function-ref name="done" scoped="" ref="0x7f2c548c3a50"/>
        <function-ref name="standby" scoped="" ref="0x7f2c548c3bd8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f2c548c3d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f2c548c0740" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f2c548c0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c548c0a90"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c548c0c18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c548c0da0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c548bf020"/>
        <function-ref name="headerLength" scoped="" ref="0x7f2c548bf1a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f2c548bf330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7f2c548bd638" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7f2c548bd638"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f2c548bda88"/>
        <function-ref name="turnOn" scoped="" ref="0x7f2c548bdc10"/>
        <function-ref name="setChannel" scoped="" ref="0x7f2c548bdd98"/>
        <function-ref name="done" scoped="" ref="0x7f2c548bc020"/>
        <function-ref name="standby" scoped="" ref="0x7f2c548bc1a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f2c548bc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7f2c548bf5b8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f2c548bf5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f2c548bf908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f2c548c28c8" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f2c548c28c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c548c2c18"/>
        <function-ref name="header" scoped="" ref="0x7f2c548c2da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7f2c548bd060" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7f2c548bd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c548bd3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f2c548bfbf0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f2c548bfbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2c548be020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2c548be1a8"/>
        <function-ref name="start" scoped="" ref="0x7f2c548be330"/>
        <function-ref name="stop" scoped="" ref="0x7f2c548be4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f2c548ba020" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f2c548ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c548ba370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c548ba4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c548ba680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c548ba808"/>
        <function-ref name="headerLength" scoped="" ref="0x7f2c548ba990"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f2c548bab18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f2c548c4c98" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f2c548c4c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c548c3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f2c548bada0" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f2c548bada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f2c548b8170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7f2c548be740" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7f2c548be740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c548bea90"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c548bec18"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c548beda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f2c548c2020" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f2c548c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c548c2370"/>
        <function-ref name="ready" scoped="" ref="0x7f2c548c24f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c548c2680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7f2c548bb780" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7f2c548bb780"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f2c548bbad0"/>
        <function-ref name="request" scoped="" ref="0x7f2c548bbc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f2c548c43f0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f2c548c43f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c548c4740"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c548c48c8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c548c4a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7f2c546aa8c8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7f2c546aa8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c546aac18"/>
        <function-ref name="get" scoped="" ref="0x7f2c546aada0"/>
        <function-ref name="setValue" scoped="" ref="0x7f2c546a9020"/>
        <function-ref name="set" scoped="" ref="0x7f2c546a91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f2c546ae9f8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f2c546ae9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c546aed48"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c546ad020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c546ad1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c546ad330"/>
        <function-ref name="headerLength" scoped="" ref="0x7f2c546ad4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f2c546ad640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f2c546ac9f0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f2c546ac9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c546acd40"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c546aa020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c546aa1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c546aa330"/>
        <function-ref name="headerLength" scoped="" ref="0x7f2c546aa4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f2c546aa640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f2c546b1020" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f2c546b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f2c55109708"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f2c546af478"/>
        <function-ref name="clear" scoped="" ref="0x7f2c546afb58"/>
        <function-ref name="isValid" scoped="" ref="0x7f2c546b1d70"/>
        <function-ref name="set" scoped="" ref="0x7f2c546ae278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7f2c546ada30" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f2c546ada30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f2c55109708"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c546ac5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f2c546b4270" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f2c546b4270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c55201020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c55201378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f2c546b3700"/>
        <function-ref name="clear" scoped="" ref="0x7f2c546b3de0"/>
        <function-ref name="isValid" scoped="" ref="0x7f2c546b3020"/>
        <function-ref name="set" scoped="" ref="0x7f2c546b24f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7f2c53133ab0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7f2c53133ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c53133e00"/>
        <function-ref name="get" scoped="" ref="0x7f2c53132020"/>
        <function-ref name="setValue" scoped="" ref="0x7f2c531321a8"/>
        <function-ref name="set" scoped="" ref="0x7f2c53132330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f2c53134c78" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f2c53134c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c53133020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c531331a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c53133330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c531334b8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f2c53133640"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f2c531337c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f2c5312f8a8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f2c5312f8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c5312fbf8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c5312fd80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c5312e020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c5312e1a8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f2c5312e330"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f2c5312e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f2c53137270" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f2c53137270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f2c55109708"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f2c53136700"/>
        <function-ref name="clear" scoped="" ref="0x7f2c53136de0"/>
        <function-ref name="isValid" scoped="" ref="0x7f2c53136020"/>
        <function-ref name="set" scoped="" ref="0x7f2c531344f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7f2c531326c0" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f2c531326c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f2c55109708"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c531313a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f2c531318c8" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f2c531318c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c55201020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c55201378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c5312f490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f2c5313a590" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f2c5313a590"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c55201020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c55201378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f2c53139a88"/>
        <function-ref name="clear" scoped="" ref="0x7f2c53138190"/>
        <function-ref name="isValid" scoped="" ref="0x7f2c531393a8"/>
        <function-ref name="set" scoped="" ref="0x7f2c53138870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f2c54868dc0" loc="20:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f2c54868dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c55201020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c55201378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c54865968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f2c548614a0" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f2c548614a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c55201020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c55201378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c5485d6c8"/>
        <function-ref name="fired" scoped="" ref="0x7f2c54860db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2c5485ead8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2c5485e688"/>
        <function-ref name="getdt" scoped="" ref="0x7f2c5485c020"/>
        <function-ref name="gett0" scoped="" ref="0x7f2c5485db18"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c5485e238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2c54860020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2c5485d0f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2c548604c0"/>
        <function-ref name="stop" scoped="" ref="0x7f2c54860960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f2c5485c5e0" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f2c5485c5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c55201020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c55201378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c5485a190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c54864758" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f2c54864758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c54864aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7f2c5484c7b8" loc="29:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7f2c5484c7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c55201020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c55201378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c54851578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c54850020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c54851a00"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c548504a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c54859c18" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f2c54859c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c54856020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7f2c54856648" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7f2c54856648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c55201020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c55201378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c54853cc0"/>
        <function-ref name="fired" scoped="" ref="0x7f2c54855d50"/>
        <function-ref name="startAt" scoped="" ref="0x7f2c548536b8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c54853230"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2c54852190"/>
        <function-ref name="start" scoped="" ref="0x7f2c548553f0"/>
        <function-ref name="stop" scoped="" ref="0x7f2c548558c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2c547587c8" loc="61:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f2c547587c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c55201020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c55201378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c54754020"/>
        <function-ref name="fired" scoped="" ref="0x7f2c54755020"/>
        <function-ref name="startAt" scoped="" ref="0x7f2c54755930"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c547554a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2c547544a8"/>
        <function-ref name="start" scoped="" ref="0x7f2c54756578"/>
        <function-ref name="stop" scoped="" ref="0x7f2c54756a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c54758020" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f2c54758020"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f2c5528cd88"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f2c5528cd88"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c54758370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f2c54754a90" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f2c54754a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c55201020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c55201378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c54753828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c54751190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c54753cb0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c54751618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7f2c53103b60" loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f2c53103b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f2c53102020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f2c531021a8"/>
        <function-ref name="getControlA" scoped="" ref="0x7f2c53102330"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f2c531024b8"/>
        <function-ref name="setControlB" scoped="" ref="0x7f2c53102640"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f2c531027c8"/>
        <function-ref name="getControlB" scoped="" ref="0x7f2c53102950"/>
        <function-ref name="setControlA" scoped="" ref="0x7f2c53102ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2c5310f9b8" loc="61:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f2c5310f9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c55201020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c55201378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c5310b020"/>
        <function-ref name="fired" scoped="" ref="0x7f2c5310c0c0"/>
        <function-ref name="startAt" scoped="" ref="0x7f2c5310c9d0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c5310c548"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2c5310b4a8"/>
        <function-ref name="start" scoped="" ref="0x7f2c5310d730"/>
        <function-ref name="stop" scoped="" ref="0x7f2c5310dc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c5310f210" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f2c5310f210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c5310f560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f2c5310ba90" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f2c5310ba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c55201020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c55201378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c5310a828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c53108190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c5310acb0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c53108618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7f2c530fd060" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f2c530fd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f2c530fd3b0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f2c530fd538"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f2c530fd6c0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f2c530fd848"/>
        <function-ref name="countBusy" scoped="" ref="0x7f2c530fd9d0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f2c530fdb58"/>
        <function-ref name="getAssr" scoped="" ref="0x7f2c530fdce0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f2c530fde68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7f2c53102e68" loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f2c53102e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f2c530ff798"/>
        <function-ref name="fired" scoped="" ref="0x7f2c531004f8"/>
        <function-ref name="get" scoped="" ref="0x7f2c53101a18"/>
        <function-ref name="reset" scoped="" ref="0x7f2c53100980"/>
        <function-ref name="isOn" scoped="" ref="0x7f2c530ffc20"/>
        <function-ref name="set" scoped="" ref="0x7f2c53100020"/>
        <function-ref name="start" scoped="" ref="0x7f2c53100e08"/>
        <function-ref name="stop" scoped="" ref="0x7f2c530ff310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2c53108b98" loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f2c53108b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f2c53105db8"/>
        <function-ref name="test" scoped="" ref="0x7f2c531054a8"/>
        <function-ref name="get" scoped="" ref="0x7f2c53107760"/>
        <function-ref name="setScale" scoped="" ref="0x7f2c53103270"/>
        <function-ref name="getScale" scoped="" ref="0x7f2c53103748"/>
        <function-ref name="reset" scoped="" ref="0x7f2c53106580"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c531060f8"/>
        <function-ref name="isOn" scoped="" ref="0x7f2c53105930"/>
        <function-ref name="set" scoped="" ref="0x7f2c53107be8"/>
        <function-ref name="start" scoped="" ref="0x7f2c53106a08"/>
        <function-ref name="stop" scoped="" ref="0x7f2c53105020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f2c547c63c0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f2c547c63c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f2c547c6710"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f2c547c6898"/>
        <function-ref name="getControlA" scoped="" ref="0x7f2c547c6a20"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f2c547c6ba8"/>
        <function-ref name="setControlB" scoped="" ref="0x7f2c547c6d30"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f2c547c5020"/>
        <function-ref name="getControlB" scoped="" ref="0x7f2c547c51a8"/>
        <function-ref name="setControlA" scoped="" ref="0x7f2c547c5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f2c547c19e8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f2c547c19e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f2c547c1d38"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f2c547c0020"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f2c547c01a8"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f2c547c0330"/>
        <function-ref name="countBusy" scoped="" ref="0x7f2c547c04b8"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f2c547c0640"/>
        <function-ref name="getAssr" scoped="" ref="0x7f2c547c07c8"/>
        <function-ref name="setAssr" scoped="" ref="0x7f2c547c0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2c547c57f8" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f2c547c57f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f2c547c1020"/>
        <function-ref name="fired" scoped="" ref="0x7f2c547c4d08"/>
        <function-ref name="get" scoped="" ref="0x7f2c547c43a8"/>
        <function-ref name="reset" scoped="" ref="0x7f2c547c21f8"/>
        <function-ref name="isOn" scoped="" ref="0x7f2c547c14a8"/>
        <function-ref name="set" scoped="" ref="0x7f2c547c4830"/>
        <function-ref name="start" scoped="" ref="0x7f2c547c2680"/>
        <function-ref name="stop" scoped="" ref="0x7f2c547c2b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2c547cb288" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f2c547cb288"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f2c547c74a8"/>
        <function-ref name="test" scoped="" ref="0x7f2c547c9a40"/>
        <function-ref name="get" scoped="" ref="0x7f2c547cbe08"/>
        <function-ref name="setScale" scoped="" ref="0x7f2c547c7930"/>
        <function-ref name="getScale" scoped="" ref="0x7f2c547c7e08"/>
        <function-ref name="reset" scoped="" ref="0x7f2c547cac70"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c547ca7e8"/>
        <function-ref name="isOn" scoped="" ref="0x7f2c547c7020"/>
        <function-ref name="set" scoped="" ref="0x7f2c547ca310"/>
        <function-ref name="start" scoped="" ref="0x7f2c547c9130"/>
        <function-ref name="stop" scoped="" ref="0x7f2c547c95b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f2c547b7020" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f2c547b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f2c547b7370"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f2c547b74f8"/>
        <function-ref name="getControlA" scoped="" ref="0x7f2c547b7680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f2c547b7808"/>
        <function-ref name="setControlB" scoped="" ref="0x7f2c547b7990"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f2c547b7b18"/>
        <function-ref name="getControlB" scoped="" ref="0x7f2c547b7ca0"/>
        <function-ref name="setControlA" scoped="" ref="0x7f2c547b7e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f2c547b2578" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f2c547b2578"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f2c547b28c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f2c547b2c78" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f2c547b2c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f2c547b1020"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f2c547b11a8"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f2c547b1330"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f2c547b14b8"/>
        <function-ref name="countBusy" scoped="" ref="0x7f2c547b1640"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f2c547b17c8"/>
        <function-ref name="getAssr" scoped="" ref="0x7f2c547b1950"/>
        <function-ref name="setAssr" scoped="" ref="0x7f2c547b1ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2c547b6340" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f2c547b6340"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f2c547b3c20"/>
        <function-ref name="fired" scoped="" ref="0x7f2c547b5980"/>
        <function-ref name="get" scoped="" ref="0x7f2c547b5020"/>
        <function-ref name="reset" scoped="" ref="0x7f2c547b5e08"/>
        <function-ref name="isOn" scoped="" ref="0x7f2c547b20f8"/>
        <function-ref name="set" scoped="" ref="0x7f2c547b54a8"/>
        <function-ref name="start" scoped="" ref="0x7f2c547b3310"/>
        <function-ref name="stop" scoped="" ref="0x7f2c547b3798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2c547bfe00" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f2c547bfe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f2c547b80f8"/>
        <function-ref name="test" scoped="" ref="0x7f2c547b9798"/>
        <function-ref name="get" scoped="" ref="0x7f2c547bca18"/>
        <function-ref name="setScale" scoped="" ref="0x7f2c547b8580"/>
        <function-ref name="getScale" scoped="" ref="0x7f2c547b8a58"/>
        <function-ref name="reset" scoped="" ref="0x7f2c547bb980"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c547bb4f8"/>
        <function-ref name="isOn" scoped="" ref="0x7f2c547b9c20"/>
        <function-ref name="set" scoped="" ref="0x7f2c547bb020"/>
        <function-ref name="start" scoped="" ref="0x7f2c547bbe08"/>
        <function-ref name="stop" scoped="" ref="0x7f2c547b9310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f2c54722cf0" loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7f2c54722cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c547210a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c54721228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f2c54726c70" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f2c54726c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c55201020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c55201378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c54722410"/>
        <function-ref name="fired" scoped="" ref="0x7f2c547234a8"/>
        <function-ref name="startAt" scoped="" ref="0x7f2c54723db8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c54723930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2c54722898"/>
        <function-ref name="start" scoped="" ref="0x7f2c547249f0"/>
        <function-ref name="stop" scoped="" ref="0x7f2c54723020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2c5472bab0" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f2c5472bab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c55201020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c55201378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c54727d60"/>
        <function-ref name="fired" scoped="" ref="0x7f2c54728470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2c547271c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2c54728d10"/>
        <function-ref name="getdt" scoped="" ref="0x7f2c54726648"/>
        <function-ref name="gett0" scoped="" ref="0x7f2c547261f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c547288c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2c54729620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2c54727790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2c54729ac0"/>
        <function-ref name="stop" scoped="" ref="0x7f2c54728020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f2c546d4930" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7f2c546d4930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c546d4c80"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c546d4e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f2c546d9858" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7f2c546d9858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c55201020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c55201378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c546d5bc0"/>
        <function-ref name="fired" scoped="" ref="0x7f2c546d61c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2c546d5020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2c546d6a60"/>
        <function-ref name="getdt" scoped="" ref="0x7f2c546d44d8"/>
        <function-ref name="gett0" scoped="" ref="0x7f2c546d4088"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c546d6610"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2c546d73d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2c546d55f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2c546d7878"/>
        <function-ref name="stop" scoped="" ref="0x7f2c546d7d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2c546df5e0" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f2c546df5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c55201020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c55201378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c546da988"/>
        <function-ref name="fired" scoped="" ref="0x7f2c546dc020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2c546dcd70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2c546dc900"/>
        <function-ref name="getdt" scoped="" ref="0x7f2c546d92d8"/>
        <function-ref name="gett0" scoped="" ref="0x7f2c546dadf8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c546dc490"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2c546dd198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2c546da398"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2c546dd658"/>
        <function-ref name="stop" scoped="" ref="0x7f2c546ddb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f2c546c6128" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f2c546c6128"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c55201020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c55201378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c546c6ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f2c546c5330" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f2c546c5330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c55201020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c55201378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c546c40c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c546c49d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c546c4548"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c546c4e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f2c546bc1c8" loc="49:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f2c546bc1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c55201020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c55201378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c546b95f0"/>
        <function-ref name="fired" scoped="" ref="0x7f2c546bbaf0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2c546ba8c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2c546ba470"/>
        <function-ref name="getdt" scoped="" ref="0x7f2c546b7020"/>
        <function-ref name="gett0" scoped="" ref="0x7f2c546b9a40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c546ba020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2c546bcd10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2c546b9020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2c546bb200"/>
        <function-ref name="stop" scoped="" ref="0x7f2c546bb6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f2c546860e0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f2c546860e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c54686430"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c546865b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c54686740"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c546868c8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f2c54686a50"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f2c54686bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f2c54685020" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f2c54685020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c54685370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c546854f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c54685680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c54685808"/>
        <function-ref name="headerLength" scoped="" ref="0x7f2c54685990"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f2c54685b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x7f2c546a4660" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x7f2c546a4660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c546a49d0"/>
        <function-ref name="get" scoped="" ref="0x7f2c546a4b58"/>
        <function-ref name="setValue" scoped="" ref="0x7f2c546a4ce0"/>
        <function-ref name="set" scoped="" ref="0x7f2c546a4e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f2c54683b78" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f2c54683b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2c54682020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2c546821a8"/>
        <function-ref name="start" scoped="" ref="0x7f2c54682330"/>
        <function-ref name="stop" scoped="" ref="0x7f2c546824b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f2c5467e3f0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f2c5467e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f2c5467e740"/>
        <function-ref name="request" scoped="" ref="0x7f2c5467e8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f2c5467a8c8" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f2c5467a8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c5467ac18"/>
        <function-ref name="ready" scoped="" ref="0x7f2c5467ada0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c54679020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f2c546792a8" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f2c546792a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c546795f8"/>
        <function-ref name="header" scoped="" ref="0x7f2c54679780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f2c546815b8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f2c546815b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f2c54681908"/>
        <function-ref name="turnOn" scoped="" ref="0x7f2c54681a90"/>
        <function-ref name="setChannel" scoped="" ref="0x7f2c54681c18"/>
        <function-ref name="done" scoped="" ref="0x7f2c54681da0"/>
        <function-ref name="standby" scoped="" ref="0x7f2c5467f020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f2c5467f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f2c5467eb10" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f2c5467eb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c5467ee60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c5467d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c5467d1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c5467d330"/>
        <function-ref name="headerLength" scoped="" ref="0x7f2c5467d4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f2c5467d640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7f2c5467ba08" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7f2c5467ba08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f2c5467be58"/>
        <function-ref name="turnOn" scoped="" ref="0x7f2c5467a020"/>
        <function-ref name="setChannel" scoped="" ref="0x7f2c5467a1a8"/>
        <function-ref name="done" scoped="" ref="0x7f2c5467a330"/>
        <function-ref name="standby" scoped="" ref="0x7f2c5467a4b8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f2c5467a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7f2c5467d8c8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f2c5467d8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f2c5467dc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f2c5467fc98" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f2c5467fc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c5467e020"/>
        <function-ref name="header" scoped="" ref="0x7f2c5467e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7f2c5467b430" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7f2c5467b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c5467b780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f2c5467c020" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f2c5467c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2c5467c370"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2c5467c4f8"/>
        <function-ref name="start" scoped="" ref="0x7f2c5467c680"/>
        <function-ref name="stop" scoped="" ref="0x7f2c5467c808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f2c546772a8" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f2c546772a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c546775f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c54677780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c54677908"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c54677a90"/>
        <function-ref name="headerLength" scoped="" ref="0x7f2c54677c18"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f2c54677da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f2c54681020" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f2c54681020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c54681370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f2c54676060" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f2c54676060"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f2c546763b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7f2c5467ca90" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7f2c5467ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c5467cde0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c5467b020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c5467b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f2c5467f3f0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f2c5467f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c5467f740"/>
        <function-ref name="ready" scoped="" ref="0x7f2c5467f8c8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c5467fa50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7f2c54679a08" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7f2c54679a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f2c54679d58"/>
        <function-ref name="request" scoped="" ref="0x7f2c54677020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f2c54682700" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f2c54682700"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c54682a50"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c54682bd8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c54682d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f2c5466e448" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f2c5466e448"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f2c5466e798"/>
        <function-ref name="request" scoped="" ref="0x7f2c5466e920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f2c546690c8" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f2c546690c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c546686a0"/>
        <function-ref name="get" scoped="" ref="0x7f2c54668190"/>
        <function-ref name="isSet" scoped="" ref="0x7f2c54669c48"/>
        <function-ref name="set" scoped="" ref="0x7f2c54668bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7f2c54654020" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7f2c54654020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c54654370"/>
        <function-ref name="get" scoped="" ref="0x7f2c546544f8"/>
        <function-ref name="setValue" scoped="" ref="0x7f2c54654680"/>
        <function-ref name="set" scoped="" ref="0x7f2c54654808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f2c54659730" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f2c54659730"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f2c55109708"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f2c54658c58"/>
        <function-ref name="clear" scoped="" ref="0x7f2c54656380"/>
        <function-ref name="isValid" scoped="" ref="0x7f2c54658578"/>
        <function-ref name="set" scoped="" ref="0x7f2c54656a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f2c546723e0" loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f2c546723e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f2c54672730"/>
        <function-ref name="turnOn" scoped="" ref="0x7f2c546728b8"/>
        <function-ref name="setChannel" scoped="" ref="0x7f2c54672a40"/>
        <function-ref name="done" scoped="" ref="0x7f2c54672bc8"/>
        <function-ref name="standby" scoped="" ref="0x7f2c54672d50"/>
        <function-ref name="getChannel" scoped="" ref="0x7f2c5466f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f2c54653768" loc="66:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f2c54653768"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2c54653ab8"/>
        <function-ref name="wait" scoped="" ref="0x7f2c54653c40"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c54653dc8"/>
        <function-ref name="isFree" scoped="" ref="0x7f2c54652020"/>
        <function-ref name="getNow" scoped="" ref="0x7f2c546521a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f2c5466dcd0" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f2c5466dcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c5466b388"/>
        <function-ref name="get" scoped="" ref="0x7f2c5466ce00"/>
        <function-ref name="isSet" scoped="" ref="0x7f2c5466c8f0"/>
        <function-ref name="set" scoped="" ref="0x7f2c5466b898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f2c5466ebd8" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f2c5466ebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c5466d020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c5466d1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c5466d330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c5466d4b8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f2c5466d640"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f2c5466d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f2c5465a5c8" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f2c5465a5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c5465aa18"/>
        <function-ref name="headerLength" scoped="" ref="0x7f2c5465aba0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f2c5465ad28"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f2c54659020"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f2c546591a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f2c5466fbf0" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f2c5466fbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c5466e020"/>
        <function-ref name="header" scoped="" ref="0x7f2c5466e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2c5465e4b8" loc="55:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f2c5465e4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f2c55109708"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f2c55109b08"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c5465cb18"/>
        <function-ref name="fired" scoped="" ref="0x7f2c5465db90"/>
        <function-ref name="startAt" scoped="" ref="0x7f2c5465c510"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c5465c088"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2c5465a020"/>
        <function-ref name="start" scoped="" ref="0x7f2c5465d230"/>
        <function-ref name="stop" scoped="" ref="0x7f2c5465d708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f2c54666458" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f2c54666458"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c54665a40"/>
        <function-ref name="get" scoped="" ref="0x7f2c54665530"/>
        <function-ref name="isSet" scoped="" ref="0x7f2c54665020"/>
        <function-ref name="set" scoped="" ref="0x7f2c54664020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f2c5465f220" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f2c5465f220"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f2c55109708"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c5465fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f2c5466f2c8" loc="43:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f2c5466f2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c5466f618"/>
        <function-ref name="ready" scoped="" ref="0x7f2c5466f7a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c5466f928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f2c54664860" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f2c54664860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c54662e30"/>
        <function-ref name="get" scoped="" ref="0x7f2c54662920"/>
        <function-ref name="isSet" scoped="" ref="0x7f2c54662410"/>
        <function-ref name="set" scoped="" ref="0x7f2c54661388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7f2c54654b78" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f2c54654b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c54653020"/>
        <function-ref name="get" scoped="" ref="0x7f2c546531a8"/>
        <function-ref name="setValue" scoped="" ref="0x7f2c54653330"/>
        <function-ref name="set" scoped="" ref="0x7f2c546534b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7f2c54655378" loc="63:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f2c54655378"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c546556c8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54655850"/>
        <function-ref name="setValue" scoped="" ref="0x7f2c546559d8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54655b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f2c546619d0" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f2c546619d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f2c54661d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f2c546492c0" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f2c546492c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f2c54649610"/>
        <function-ref name="request" scoped="" ref="0x7f2c54649798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f2c5462bc60" loc="74:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f2c5462bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f2c551ff788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f2c5462f9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f2c54644020" loc="56:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f2c54644020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c54643608"/>
        <function-ref name="get" scoped="" ref="0x7f2c546430f8"/>
        <function-ref name="isSet" scoped="" ref="0x7f2c54644ba0"/>
        <function-ref name="set" scoped="" ref="0x7f2c54643b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7f2c54628988" loc="80:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7f2c54628988"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c54628cd8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54628e60"/>
        <function-ref name="setValue" scoped="" ref="0x7f2c54627020"/>
        <function-ref name="set" scoped="" ref="0x7f2c546271a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7f2c5464cbf0" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c5464cbf0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f2c5528b128"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f2c5528b128"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c5464b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f2c546262b0" loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f2c546262b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f2c55109708"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f2c54625910"/>
        <function-ref name="clear" scoped="" ref="0x7f2c54623020"/>
        <function-ref name="isValid" scoped="" ref="0x7f2c54625230"/>
        <function-ref name="set" scoped="" ref="0x7f2c54623700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f2c54637e70" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f2c54637e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c546361e8"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54636370"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c546364f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54636680"/>
        <function-ref name="get" scoped="" ref="0x7f2c54636808"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54636990"/>
        <function-ref name="set" scoped="" ref="0x7f2c54636b18"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54636ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f2c54622ab8" loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f2c54622ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2c54622e08"/>
        <function-ref name="wait" scoped="" ref="0x7f2c54621020"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c546211a8"/>
        <function-ref name="isFree" scoped="" ref="0x7f2c54621330"/>
        <function-ref name="getNow" scoped="" ref="0x7f2c546214b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f2c5464b2d0" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f2c5464b2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f2c5464b620"/>
        <function-ref name="turnOn" scoped="" ref="0x7f2c5464b7a8"/>
        <function-ref name="setChannel" scoped="" ref="0x7f2c5464b930"/>
        <function-ref name="done" scoped="" ref="0x7f2c5464bab8"/>
        <function-ref name="standby" scoped="" ref="0x7f2c5464bc40"/>
        <function-ref name="getChannel" scoped="" ref="0x7f2c5464bdc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x7f2c5462c020" loc="75:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f2c5462c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f2c55109708"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c5462cba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f2c54648b48" loc="55:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f2c54648b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c54645190"/>
        <function-ref name="get" scoped="" ref="0x7f2c54647c38"/>
        <function-ref name="isSet" scoped="" ref="0x7f2c54647728"/>
        <function-ref name="set" scoped="" ref="0x7f2c546456a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f2c54649a50" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f2c54649a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c54649da0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c54648020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c546481a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c54648330"/>
        <function-ref name="headerLength" scoped="" ref="0x7f2c546484b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f2c54648640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x7f2c54632d00" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7f2c54632d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c546370a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54637228"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c546373b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54637538"/>
        <function-ref name="get" scoped="" ref="0x7f2c546376c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54637848"/>
        <function-ref name="set" scoped="" ref="0x7f2c546379d0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54637b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f2c54629100" loc="77:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f2c54629100"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c54629450"/>
        <function-ref name="headerLength" scoped="" ref="0x7f2c546295d8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f2c54629760"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f2c546298e8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f2c54629a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f2c5464a9e8" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f2c5464a9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c5464ad38"/>
        <function-ref name="header" scoped="" ref="0x7f2c54649020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x7f2c54596d98" loc="847:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x7f2c54596d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c54595170"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c545952f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f2c546413b0" loc="57:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f2c546413b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c54640a40"/>
        <function-ref name="get" scoped="" ref="0x7f2c54640530"/>
        <function-ref name="isSet" scoped="" ref="0x7f2c54640020"/>
        <function-ref name="set" scoped="" ref="0x7f2c5463e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f2c5464c138" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f2c5464c138"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f2c5528b128"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f2c5528b128"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c5464c488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f2c546394f8" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f2c546394f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2c54639848"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2c546399d0"/>
        <function-ref name="request" scoped="" ref="0x7f2c54639b58"/>
        <function-ref name="granted" scoped="" ref="0x7f2c54639ce0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2c54639e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x7f2c5463a130" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7f2c5463a130"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c5463a580"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c5463a708"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c5463a890"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c5463aa18"/>
        <function-ref name="get" scoped="" ref="0x7f2c5463aba0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c5463ad28"/>
        <function-ref name="set" scoped="" ref="0x7f2c54639020"/>
        <function-ref name="clr" scoped="" ref="0x7f2c546391a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f2c5463e860" loc="58:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f2c5463e860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c5463de30"/>
        <function-ref name="get" scoped="" ref="0x7f2c5463d920"/>
        <function-ref name="isSet" scoped="" ref="0x7f2c5463d410"/>
        <function-ref name="set" scoped="" ref="0x7f2c5463c388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f2c5464a0c0" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f2c5464a0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c5464a410"/>
        <function-ref name="ready" scoped="" ref="0x7f2c5464a598"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c5464a720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x7f2c5462d5e8" loc="72:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f2c5462d5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f2c5462d938"/>
        <function-ref name="disable" scoped="" ref="0x7f2c5462dac0"/>
        <function-ref name="captured" scoped="" ref="0x7f2c5462dc48"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f2c5462ddd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x7f2c546321f0" loc="67:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f2c546321f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f2c54632540"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f2c546326c8"/>
        <function-ref name="splitRead" scoped="" ref="0x7f2c54632850"/>
        <function-ref name="write" scoped="" ref="0x7f2c546329d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7f2c54627518" loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f2c54627518"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c54627868"/>
        <function-ref name="get" scoped="" ref="0x7f2c546279f0"/>
        <function-ref name="setValue" scoped="" ref="0x7f2c54627b78"/>
        <function-ref name="set" scoped="" ref="0x7f2c54627d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7f2c54629e10" loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f2c54629e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c546281a8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54628330"/>
        <function-ref name="setValue" scoped="" ref="0x7f2c546284b8"/>
        <function-ref name="set" scoped="" ref="0x7f2c54628640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f2c5463c9d0" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f2c5463c9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f2c5463cd20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f2c54622020" loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f2c54622020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f2c54622370"/>
        <function-ref name="suspend" scoped="" ref="0x7f2c546224f8"/>
        <function-ref name="resume" scoped="" ref="0x7f2c54622680"/>
        <function-ref name="run" scoped="" ref="0x7f2c54622808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f2c54552338" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f2c54552338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54552688"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54552810"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54552998"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54552b20"/>
        <function-ref name="get" scoped="" ref="0x7f2c54552ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54552e30"/>
        <function-ref name="set" scoped="" ref="0x7f2c54551020"/>
        <function-ref name="clr" scoped="" ref="0x7f2c545511a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x7f2c54553140" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7f2c54553140"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54553490"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54553618"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c545537a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54553928"/>
        <function-ref name="get" scoped="" ref="0x7f2c54553ab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54553c38"/>
        <function-ref name="set" scoped="" ref="0x7f2c54553dc0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54552020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2c545502e0" loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f2c545502e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f2c55109708"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c5454d928"/>
        <function-ref name="fired" scoped="" ref="0x7f2c5454f9e8"/>
        <function-ref name="startAt" scoped="" ref="0x7f2c5454d320"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c5454fe70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2c5454ddb0"/>
        <function-ref name="start" scoped="" ref="0x7f2c5454f088"/>
        <function-ref name="stop" scoped="" ref="0x7f2c5454f560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x7f2c54555990" loc="42:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f2c54555990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2c54555ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2c54555e68"/>
        <function-ref name="request" scoped="" ref="0x7f2c54554020"/>
        <function-ref name="granted" scoped="" ref="0x7f2c545541a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2c54554330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x7f2c54558710" loc="41:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7f2c54558710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c54558a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c54558be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c54558d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c54555020"/>
        <function-ref name="get" scoped="" ref="0x7f2c545551a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c54555330"/>
        <function-ref name="set" scoped="" ref="0x7f2c545554b8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c54555640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7f2c545514c0" loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f2c545514c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f2c54551810"/>
        <function-ref name="disable" scoped="" ref="0x7f2c54551998"/>
        <function-ref name="captured" scoped="" ref="0x7f2c54551b20"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f2c54551ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f2c545545e8" loc="43:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f2c545545e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f2c54554938"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f2c54554ac0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f2c54554c48"/>
        <function-ref name="write" scoped="" ref="0x7f2c54554dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f2c5454c438" loc="50:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f2c5454c438"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f2c55109708"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c5454b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x7f2c5453cc18" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x7f2c5453cc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c5453b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c5453b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c5453b330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c5453b4b8"/>
        <function-ref name="get" scoped="" ref="0x7f2c5453b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c5453b7c8"/>
        <function-ref name="set" scoped="" ref="0x7f2c5453b950"/>
        <function-ref name="clr" scoped="" ref="0x7f2c5453bad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x7f2c5453e540" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f2c5453e540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f2c5453c6f8"/>
        <function-ref name="test" scoped="" ref="0x7f2c54545db8"/>
        <function-ref name="get" scoped="" ref="0x7f2c545460f8"/>
        <function-ref name="captured" scoped="" ref="0x7f2c54546a58"/>
        <function-ref name="reset" scoped="" ref="0x7f2c54545020"/>
        <function-ref name="isOn" scoped="" ref="0x7f2c5453c270"/>
        <function-ref name="set" scoped="" ref="0x7f2c54546580"/>
        <function-ref name="start" scoped="" ref="0x7f2c545454a8"/>
        <function-ref name="stop" scoped="" ref="0x7f2c54545930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x7f2c5453be08" loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x7f2c5453be08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c5453a1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c5453a330"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c5453a4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c5453a640"/>
        <function-ref name="get" scoped="" ref="0x7f2c5453a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c5453a950"/>
        <function-ref name="set" scoped="" ref="0x7f2c5453aad8"/>
        <function-ref name="clr" scoped="" ref="0x7f2c5453ac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f2c54548870" loc="40:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f2c54548870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c54548bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7f2c5454bcd8" loc="39:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f2c5454bcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f2c545480a0"/>
        <function-ref name="disable" scoped="" ref="0x7f2c54548228"/>
        <function-ref name="captured" scoped="" ref="0x7f2c545483b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f2c54548538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f2c545201d8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f2c545201d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c54520528"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c545206b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f2c54528388" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f2c54528388"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f2c545286d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c54549cd0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f2c54549cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c5452c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f2c545289d0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f2c545289d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f2c54528d20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f2c5452b020"/>
        <function-ref name="splitRead" scoped="" ref="0x7f2c5452b1a8"/>
        <function-ref name="write" scoped="" ref="0x7f2c5452b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2c54520e80" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f2c54520e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2c5452a1f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2c5452a380"/>
        <function-ref name="request" scoped="" ref="0x7f2c5452a508"/>
        <function-ref name="granted" scoped="" ref="0x7f2c5452a690"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2c5452a818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7f2c544deb58" loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7f2c544deb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c544dd020"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c544dd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f2c5451c120" loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f2c5451c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c5451c470"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c5451c5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7f2c544ff3c8" loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7f2c544ff3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2c544ff718"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2c544ff8a0"/>
        <function-ref name="request" scoped="" ref="0x7f2c544ffa28"/>
        <function-ref name="granted" scoped="" ref="0x7f2c544ffbb0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2c544ffd38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f2c5451d020" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f2c5451d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f2c5451d370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c54527a18" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f2c54527a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c54527d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7f2c54500150" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7f2c54500150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f2c545004a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f2c54519950"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f2c545007b0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f2c54519ad8"/>
        <function-ref name="initMaster" scoped="" ref="0x7f2c54500ac0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f2c54500c48"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f2c54500dd0"/>
        <function-ref name="read" scoped="" ref="0x7f2c5451a020"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f2c5451a1a8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f2c5451a330"/>
        <function-ref name="setClock" scoped="" ref="0x7f2c5451a4b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2c5451a640"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f2c5451a7c8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f2c5451aa50"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f2c5451abd8"/>
        <function-ref name="write" scoped="" ref="0x7f2c5451ad60"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f2c54519020"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f2c545191a8"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f2c54519330"/>
        <function-ref name="getClock" scoped="" ref="0x7f2c545194b8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f2c54519640"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f2c54500628"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f2c54500938"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f2c545197c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f2c5451d628" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f2c5451d628"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f2c5451d978"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f2c5451db00"/>
        <function-ref name="splitRead" scoped="" ref="0x7f2c5451dc88"/>
        <function-ref name="write" scoped="" ref="0x7f2c5451de10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2c5451cd88" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f2c5451cd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2c5451b170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2c5451b2f8"/>
        <function-ref name="request" scoped="" ref="0x7f2c5451b480"/>
        <function-ref name="granted" scoped="" ref="0x7f2c5451b608"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2c5451b790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f2c544fe020" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2c544fe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f2c544fe370"/>
        <function-ref name="userId" scoped="" ref="0x7f2c544fe4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f2c544fe7c8" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f2c544fe7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f2c544feb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7f2c544b3020" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7f2c544b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f2c544b3370"/>
        <function-ref name="sleep" scoped="" ref="0x7f2c544b17c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f2c544b3680"/>
        <function-ref name="dataReady" scoped="" ref="0x7f2c544b1950"/>
        <function-ref name="initMaster" scoped="" ref="0x7f2c544b3990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f2c544b3b18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f2c544b3ca0"/>
        <function-ref name="read" scoped="" ref="0x7f2c544b3e28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f2c544b2020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f2c544b21a8"/>
        <function-ref name="setClock" scoped="" ref="0x7f2c544b2330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2c544b24b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f2c544b2640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f2c544b28c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f2c544b2a50"/>
        <function-ref name="write" scoped="" ref="0x7f2c544b2bd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f2c544b2d60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f2c544b1020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f2c544b11a8"/>
        <function-ref name="getClock" scoped="" ref="0x7f2c544b1330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f2c544b14b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f2c544b34f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f2c544b3808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f2c544b1640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7f2c544a3190" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7f2c544a3190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c544a34e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c544a3668"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c544a37f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c544a3978"/>
        <function-ref name="get" scoped="" ref="0x7f2c544a3b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c544a3c88"/>
        <function-ref name="set" scoped="" ref="0x7f2c544a3e10"/>
        <function-ref name="clr" scoped="" ref="0x7f2c544a2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7f2c544a9de0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7f2c544a9de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c544a8170"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c544a82f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c544a8480"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c544a8608"/>
        <function-ref name="get" scoped="" ref="0x7f2c544a8790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c544a8918"/>
        <function-ref name="set" scoped="" ref="0x7f2c544a8aa0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c544a8c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7f2c544a5c70" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7f2c544a5c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c544a9020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c544a91a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c544a9330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c544a94b8"/>
        <function-ref name="get" scoped="" ref="0x7f2c544a9640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c544a97c8"/>
        <function-ref name="set" scoped="" ref="0x7f2c544a9950"/>
        <function-ref name="clr" scoped="" ref="0x7f2c544a9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f2c544a5438" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f2c544a5438"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c544a5788"/>
        <function-ref name="stop" scoped="" ref="0x7f2c544a5910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7f2c544a2350" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7f2c544a2350"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f2c544a26a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7f2c544b0dc0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7f2c544b0dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f2c544ac170"/>
        <function-ref name="sleep" scoped="" ref="0x7f2c544aa640"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f2c544ac480"/>
        <function-ref name="dataReady" scoped="" ref="0x7f2c544aa7c8"/>
        <function-ref name="initMaster" scoped="" ref="0x7f2c544ac790"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f2c544ac918"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f2c544acaa0"/>
        <function-ref name="read" scoped="" ref="0x7f2c544acc28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f2c544acdb0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f2c544ab020"/>
        <function-ref name="setClock" scoped="" ref="0x7f2c544ab1a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2c544ab330"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f2c544ab4b8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f2c544ab740"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f2c544ab8c8"/>
        <function-ref name="write" scoped="" ref="0x7f2c544aba50"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f2c544abbd8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f2c544abd60"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f2c544aa020"/>
        <function-ref name="getClock" scoped="" ref="0x7f2c544aa1a8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f2c544aa330"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f2c544ac2f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f2c544ac608"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f2c544aa4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7f2c544a4020" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7f2c544a4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c544a4370"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c544a44f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c544a4680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c544a4808"/>
        <function-ref name="get" scoped="" ref="0x7f2c544a4990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c544a4b18"/>
        <function-ref name="set" scoped="" ref="0x7f2c544a4ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c544a4e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f2c5445a510" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f2c5445a510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f2c5445a880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2c5445aa08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f2c54459550" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2c54459550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f2c544598c0"/>
        <function-ref name="configure" scoped="" ref="0x7f2c54459a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2c5445b748" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f2c5445b748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2c5445bab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2c5445bc40"/>
        <function-ref name="request" scoped="" ref="0x7f2c5445bdc8"/>
        <function-ref name="granted" scoped="" ref="0x7f2c5445a020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2c5445a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f2c5445ac50" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2c5445ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f2c54459020"/>
        <function-ref name="userId" scoped="" ref="0x7f2c544591a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c530765e8" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f2c530765e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c53076938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f2c53076bc0" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f2c53076bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f2c53074020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f2c530741a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f2c53074330"/>
        <function-ref name="dequeue" scoped="" ref="0x7f2c530744b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f2c53072820" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f2c53072820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f2c53072b90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2c53072d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f2c530718c0" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2c530718c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f2c53071c30"/>
        <function-ref name="configure" scoped="" ref="0x7f2c53071db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f2c530700a0" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f2c530700a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f2c530703f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f2c53070578"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f2c53070700"/>
        <function-ref name="dequeue" scoped="" ref="0x7f2c53070888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2c53073a28" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f2c53073a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2c53073d98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2c53072020"/>
        <function-ref name="request" scoped="" ref="0x7f2c530721a8"/>
        <function-ref name="granted" scoped="" ref="0x7f2c53072330"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2c530724b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f2c53071020" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2c53071020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f2c53071370"/>
        <function-ref name="userId" scoped="" ref="0x7f2c530714f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f2c53070b50" loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f2c53070b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c5306f020"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c5306f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f2c544405e8" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f2c544405e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f2c54440938"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f2c54440ac0"/>
        <function-ref name="getControlA" scoped="" ref="0x7f2c54440c48"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f2c54440dd0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f2c54449020"/>
        <function-ref name="setControlB" scoped="" ref="0x7f2c544491a8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f2c54449330"/>
        <function-ref name="getControlB" scoped="" ref="0x7f2c544494b8"/>
        <function-ref name="setControlC" scoped="" ref="0x7f2c54449640"/>
        <function-ref name="setControlA" scoped="" ref="0x7f2c544497c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2c54449ca0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f2c54449ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f2c5443ee20"/>
        <function-ref name="test" scoped="" ref="0x7f2c5443e510"/>
        <function-ref name="get" scoped="" ref="0x7f2c54448858"/>
        <function-ref name="captured" scoped="" ref="0x7f2c5443f238"/>
        <function-ref name="reset" scoped="" ref="0x7f2c5443f710"/>
        <function-ref name="isOn" scoped="" ref="0x7f2c5443e998"/>
        <function-ref name="set" scoped="" ref="0x7f2c54448ce0"/>
        <function-ref name="start" scoped="" ref="0x7f2c5443fb98"/>
        <function-ref name="stop" scoped="" ref="0x7f2c5443e088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2c5443ca20" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f2c5443ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f2c54438270"/>
        <function-ref name="fired" scoped="" ref="0x7f2c5443a020"/>
        <function-ref name="get" scoped="" ref="0x7f2c5443b5d8"/>
        <function-ref name="reset" scoped="" ref="0x7f2c5443a4a8"/>
        <function-ref name="isOn" scoped="" ref="0x7f2c544386f8"/>
        <function-ref name="set" scoped="" ref="0x7f2c5443ba60"/>
        <function-ref name="start" scoped="" ref="0x7f2c5443a930"/>
        <function-ref name="stop" scoped="" ref="0x7f2c5443adb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2c544516e0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f2c544516e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f2c5444b930"/>
        <function-ref name="test" scoped="" ref="0x7f2c5444b020"/>
        <function-ref name="get" scoped="" ref="0x7f2c5444e3a8"/>
        <function-ref name="setScale" scoped="" ref="0x7f2c5444bdb8"/>
        <function-ref name="getScale" scoped="" ref="0x7f2c5444a2f0"/>
        <function-ref name="reset" scoped="" ref="0x7f2c5444d1f8"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c5444ed08"/>
        <function-ref name="isOn" scoped="" ref="0x7f2c5444b4a8"/>
        <function-ref name="set" scoped="" ref="0x7f2c5444e830"/>
        <function-ref name="start" scoped="" ref="0x7f2c5444d680"/>
        <function-ref name="stop" scoped="" ref="0x7f2c5444db08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f2c54430c90" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f2c54430c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f2c5442f020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f2c5442f1a8"/>
        <function-ref name="getControlA" scoped="" ref="0x7f2c5442f330"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f2c5442f4b8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f2c5442f640"/>
        <function-ref name="setControlB" scoped="" ref="0x7f2c5442f7c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f2c5442f950"/>
        <function-ref name="getControlB" scoped="" ref="0x7f2c5442fad8"/>
        <function-ref name="setControlC" scoped="" ref="0x7f2c5442fc60"/>
        <function-ref name="setControlA" scoped="" ref="0x7f2c5442fde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7f2c5442ac48" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7f2c5442ac48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f2c544264a8"/>
        <function-ref name="fired" scoped="" ref="0x7f2c544271d0"/>
        <function-ref name="get" scoped="" ref="0x7f2c54429820"/>
        <function-ref name="reset" scoped="" ref="0x7f2c54427658"/>
        <function-ref name="isOn" scoped="" ref="0x7f2c54426930"/>
        <function-ref name="set" scoped="" ref="0x7f2c54429ca8"/>
        <function-ref name="start" scoped="" ref="0x7f2c54427ae0"/>
        <function-ref name="stop" scoped="" ref="0x7f2c54426020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2c5442e350" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f2c5442e350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f2c5442a580"/>
        <function-ref name="test" scoped="" ref="0x7f2c5442bc20"/>
        <function-ref name="get" scoped="" ref="0x7f2c5442d020"/>
        <function-ref name="captured" scoped="" ref="0x7f2c5442d980"/>
        <function-ref name="reset" scoped="" ref="0x7f2c5442de58"/>
        <function-ref name="isOn" scoped="" ref="0x7f2c5442a0f8"/>
        <function-ref name="set" scoped="" ref="0x7f2c5442d4a8"/>
        <function-ref name="start" scoped="" ref="0x7f2c5442b310"/>
        <function-ref name="stop" scoped="" ref="0x7f2c5442b798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7f2c54425020" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7f2c54425020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f2c544227a8"/>
        <function-ref name="fired" scoped="" ref="0x7f2c54423560"/>
        <function-ref name="get" scoped="" ref="0x7f2c54425ba0"/>
        <function-ref name="reset" scoped="" ref="0x7f2c544239e8"/>
        <function-ref name="isOn" scoped="" ref="0x7f2c54422c30"/>
        <function-ref name="set" scoped="" ref="0x7f2c54423088"/>
        <function-ref name="start" scoped="" ref="0x7f2c54423e70"/>
        <function-ref name="stop" scoped="" ref="0x7f2c54422320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7f2c54421360" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7f2c54421360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f2c5441ec20"/>
        <function-ref name="fired" scoped="" ref="0x7f2c54420980"/>
        <function-ref name="get" scoped="" ref="0x7f2c54420020"/>
        <function-ref name="reset" scoped="" ref="0x7f2c54420e08"/>
        <function-ref name="isOn" scoped="" ref="0x7f2c5441d0f8"/>
        <function-ref name="set" scoped="" ref="0x7f2c544204a8"/>
        <function-ref name="start" scoped="" ref="0x7f2c5441e310"/>
        <function-ref name="stop" scoped="" ref="0x7f2c5441e798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2c54437be0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f2c54437be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f2c54431db8"/>
        <function-ref name="test" scoped="" ref="0x7f2c544314a8"/>
        <function-ref name="get" scoped="" ref="0x7f2c544347a0"/>
        <function-ref name="setScale" scoped="" ref="0x7f2c54430270"/>
        <function-ref name="getScale" scoped="" ref="0x7f2c54430748"/>
        <function-ref name="reset" scoped="" ref="0x7f2c544325b8"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c54432130"/>
        <function-ref name="isOn" scoped="" ref="0x7f2c54431930"/>
        <function-ref name="set" scoped="" ref="0x7f2c54434c28"/>
        <function-ref name="start" scoped="" ref="0x7f2c54432a40"/>
        <function-ref name="stop" scoped="" ref="0x7f2c54431020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2c54359b68" loc="30:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f2c54359b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TOne" ref="0x7f2c551bf9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c54356238"/>
        <function-ref name="fired" scoped="" ref="0x7f2c543572b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f2c54357bc0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c54357738"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2c543566c0"/>
        <function-ref name="start" scoped="" ref="0x7f2c543588f8"/>
        <function-ref name="stop" scoped="" ref="0x7f2c54358dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c543a0dc0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f2c543a0dc0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f2c5528cd88"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f2c5528cd88"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c5439f170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2c5439f540" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f2c5439f540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f2c543906f8"/>
        <function-ref name="test" scoped="" ref="0x7f2c54391db8"/>
        <function-ref name="get" scoped="" ref="0x7f2c543920f8"/>
        <function-ref name="setScale" scoped="" ref="0x7f2c54390b80"/>
        <function-ref name="getScale" scoped="" ref="0x7f2c5438e088"/>
        <function-ref name="reset" scoped="" ref="0x7f2c54391020"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c54392a58"/>
        <function-ref name="isOn" scoped="" ref="0x7f2c54390270"/>
        <function-ref name="set" scoped="" ref="0x7f2c54392580"/>
        <function-ref name="start" scoped="" ref="0x7f2c543914a8"/>
        <function-ref name="stop" scoped="" ref="0x7f2c54391930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2c530359d8" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f2c530359d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7f2c5528ca20"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7f2c5528ca20"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TOne" ref="0x7f2c551bf9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c53032088"/>
        <function-ref name="fired" scoped="" ref="0x7f2c530330f8"/>
        <function-ref name="startAt" scoped="" ref="0x7f2c53033a08"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c53033580"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2c53032510"/>
        <function-ref name="start" scoped="" ref="0x7f2c53034768"/>
        <function-ref name="stop" scoped="" ref="0x7f2c53034c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7f2c5302da80" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f2c5302da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f2c53029270"/>
        <function-ref name="fired" scoped="" ref="0x7f2c5302a020"/>
        <function-ref name="get" scoped="" ref="0x7f2c5302c658"/>
        <function-ref name="reset" scoped="" ref="0x7f2c5302a4a8"/>
        <function-ref name="isOn" scoped="" ref="0x7f2c530296f8"/>
        <function-ref name="set" scoped="" ref="0x7f2c5302cae0"/>
        <function-ref name="start" scoped="" ref="0x7f2c5302a930"/>
        <function-ref name="stop" scoped="" ref="0x7f2c5302adb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7f2c53032a30" loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f2c53032a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f2c5302eb80"/>
        <function-ref name="test" scoped="" ref="0x7f2c5302e270"/>
        <function-ref name="get" scoped="" ref="0x7f2c530315d8"/>
        <function-ref name="setScale" scoped="" ref="0x7f2c5302d088"/>
        <function-ref name="getScale" scoped="" ref="0x7f2c5302d560"/>
        <function-ref name="reset" scoped="" ref="0x7f2c5302f4a8"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c5302f020"/>
        <function-ref name="isOn" scoped="" ref="0x7f2c5302e6f8"/>
        <function-ref name="set" scoped="" ref="0x7f2c53031a60"/>
        <function-ref name="start" scoped="" ref="0x7f2c5302f930"/>
        <function-ref name="stop" scoped="" ref="0x7f2c5302fdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f2c54352400" loc="39:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f2c54352400"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f2c551ff788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c54350020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f2c5434d108" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f2c5434d108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TOne" ref="0x7f2c551bf9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c5434de58"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c5434c798"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c5434c310"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c5434cc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f2c5434ae08" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f2c5434ae08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TOne" ref="0x7f2c551bf9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c54349be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c54337548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c543370c0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c543379d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2c54335020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f2c54335020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f2c543310f8"/>
        <function-ref name="test" scoped="" ref="0x7f2c543337a8"/>
        <function-ref name="get" scoped="" ref="0x7f2c54335ba0"/>
        <function-ref name="setScale" scoped="" ref="0x7f2c54331580"/>
        <function-ref name="getScale" scoped="" ref="0x7f2c54331a58"/>
        <function-ref name="reset" scoped="" ref="0x7f2c543349e8"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c54334560"/>
        <function-ref name="isOn" scoped="" ref="0x7f2c54333c30"/>
        <function-ref name="set" scoped="" ref="0x7f2c54334088"/>
        <function-ref name="start" scoped="" ref="0x7f2c54334e70"/>
        <function-ref name="stop" scoped="" ref="0x7f2c54333320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f2c54311450" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7f2c54311450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f2c551ff788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c543101d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c54310ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c54310658"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c5430e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f2c5432d270" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f2c5432d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f2c551ff788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c54312020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c54312930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c543124a8"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c54312db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f2c5430dc38" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f2c5430dc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f2c551ff788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c5430c820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f2c5430ce48" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f2c5430ce48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f2c551ff788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c5430bbe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c54309548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c543090c0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c543099d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f2c543013c0" loc="36:/opt/tinyos-2.1.2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f2c543013c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f2c551ff788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f2c54300150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f2c542a75b8" loc="47:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationC.nc">
      <component-ref qname="DisseminationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f2c542a75b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c542a7908"/>
        <function-ref name="stop" scoped="" ref="0x7f2c542a7a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x7f2c5429c2d0" loc="52:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x7f2c5429c2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2c5429c620"/>
        <function-ref name="incrementCounter" scoped="" ref="0x7f2c5429c7a8"/>
        <function-ref name="reset" scoped="" ref="0x7f2c5429c930"/>
        <function-ref name="start" scoped="" ref="0x7f2c5429cab8"/>
        <function-ref name="stop" scoped="" ref="0x7f2c5429cc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x7f2c542a25a8" loc="51:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x7f2c542a25a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x7f2c542a2a80"/>
        <function-ref name="stop" scoped="" ref="0x7f2c542a11a8"/>
        <function-ref name="newData" scoped="" ref="0x7f2c542a2c08"/>
        <function-ref name="start" scoped="" ref="0x7f2c542a2d90"/>
        <function-ref name="requestSeqno" scoped="" ref="0x7f2c542a1020"/>
        <function-ref name="requestData" scoped="" ref="0x7f2c542a28f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f2c542a67b0" loc="48:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f2c542a67b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c542a6b00"/>
        <function-ref name="stop" scoped="" ref="0x7f2c542a6c88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x7f2c5429b520" loc="53:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x7f2c5429b520"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c5429b870"/>
        <function-ref name="stop" scoped="" ref="0x7f2c5429b9f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeReceive" ref="0x7f2c5428e4f8" loc="57:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeReceive" scoped="" ref="0x7f2c5428e4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c5428e848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeAMSend" ref="0x7f2c5428f6a8" loc="56:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeAMSend" scoped="" ref="0x7f2c5428f6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c5428f9f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c5428fb80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c5428fd08"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c5428e020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c5428e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f2c542902a8" loc="53:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f2c542902a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c542905f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c54290780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c54290908"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c54290a90"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c54290c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x7f2c542927f0" loc="50:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x7f2c542927f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2c54292b40"/>
        <function-ref name="incrementCounter" scoped="" ref="0x7f2c54292cc8"/>
        <function-ref name="reset" scoped="" ref="0x7f2c54292e50"/>
        <function-ref name="start" scoped="" ref="0x7f2c54291020"/>
        <function-ref name="stop" scoped="" ref="0x7f2c542911a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x7f2c542944b0" loc="49:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x7f2c542944b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x7f2c54294988"/>
        <function-ref name="stop" scoped="" ref="0x7f2c54292020"/>
        <function-ref name="newData" scoped="" ref="0x7f2c54294b10"/>
        <function-ref name="start" scoped="" ref="0x7f2c54294c98"/>
        <function-ref name="requestSeqno" scoped="" ref="0x7f2c54294e20"/>
        <function-ref name="requestData" scoped="" ref="0x7f2c54294800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f2c5428f020" loc="54:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f2c5428f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c5428f370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2c5428eac0" loc="59:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f2c5428eac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2c5428ee10"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2c5428d020"/>
        <function-ref name="led1On" scoped="" ref="0x7f2c5428d1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2c5428d330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2c5428d4b8"/>
        <function-ref name="get" scoped="" ref="0x7f2c5428d640"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2c5428d7c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2c5428dde8"/>
        <function-ref name="set" scoped="" ref="0x7f2c5428d950"/>
        <function-ref name="led0On" scoped="" ref="0x7f2c5428dad8"/>
        <function-ref name="led2On" scoped="" ref="0x7f2c5428dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f2c54297730" loc="46:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f2c54297730"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c54297a80"/>
        <function-ref name="stop" scoped="" ref="0x7f2c54297c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x7f2c54291a58" loc="51:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x7f2c54291a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c54291da8"/>
        <function-ref name="stop" scoped="" ref="0x7f2c54290020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2c541c1080" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f2c541c1080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c541c13d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c541c1558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c541c16e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c541c1868"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c541c19f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2c541c1c38" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f2c541c1c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c541c0020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c541c01a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c541c0330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c541c04b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c541c0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f2c541c0888" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f2c541c0888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c541c0bd8"/>
        <function-ref name="source" scoped="" ref="0x7f2c541c0d60"/>
        <function-ref name="address" scoped="" ref="0x7f2c541bf020"/>
        <function-ref name="destination" scoped="" ref="0x7f2c541bf1a8"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c541bf330"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c541bf4b8"/>
        <function-ref name="type" scoped="" ref="0x7f2c541bf640"/>
        <function-ref name="setType" scoped="" ref="0x7f2c541bf7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c541bf950"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c541bfad8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c541bfc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f2c541be020" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f2c541be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2c541be370"/>
        <function-ref name="noAck" scoped="" ref="0x7f2c541be4f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2c541be680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2c52ff9140" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f2c52ff9140"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c52ff9490"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c52ff9618"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c52ff97a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c52ff9928"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c52ff9ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2c52ff9cf8" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f2c52ff9cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c52ff70a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c52ff7228"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c52ff73b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c52ff7538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c52ff76c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f2c52ff7908" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f2c52ff7908"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c52ff7c58"/>
        <function-ref name="source" scoped="" ref="0x7f2c52ff7de0"/>
        <function-ref name="address" scoped="" ref="0x7f2c52ff6020"/>
        <function-ref name="destination" scoped="" ref="0x7f2c52ff61a8"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c52ff6330"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c52ff64b8"/>
        <function-ref name="type" scoped="" ref="0x7f2c52ff6640"/>
        <function-ref name="setType" scoped="" ref="0x7f2c52ff67c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c52ff6950"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c52ff6ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c52ff6c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f2c52ff5020" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f2c52ff5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2c52ff5370"/>
        <function-ref name="noAck" scoped="" ref="0x7f2c52ff54f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2c52ff5680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2c52fec958" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f2c52fec958"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c52fecca8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c52fece30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c52feb020"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c52feb1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c52feb330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f2c52feb5d8" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f2c52feb5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c52feb928"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c52febab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c52febc38"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c52febdc0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c52fea020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f2c52fea268" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f2c52fea268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c52fea5b8"/>
        <function-ref name="source" scoped="" ref="0x7f2c52fea740"/>
        <function-ref name="address" scoped="" ref="0x7f2c52fea8c8"/>
        <function-ref name="destination" scoped="" ref="0x7f2c52feaa50"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c52feabd8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c52fead60"/>
        <function-ref name="type" scoped="" ref="0x7f2c52fe9020"/>
        <function-ref name="setType" scoped="" ref="0x7f2c52fe91a8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c52fe9330"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c52fe94b8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c52fe9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2c5421d708" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f2c5421d708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c5421da58"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c5421dbe0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c5421dd68"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c5421c020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c5421c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f2c541d5a08" loc="48:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f2c541d5a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c541d5d78"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c541d4020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c541d41a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c541d4330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c541d44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2c541d6b98" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f2c541d6b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c541d5020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c541d51a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c541d5330"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c541d54b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c541d5640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f2c541d3d20" loc="50:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f2c541d3d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c541d20a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c541d2228"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c541d23b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c541d2538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c541d26c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f2c541d2988" loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x7f2c541d2988"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c541d2cd8"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c541d2e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f2c541d1160" loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x7f2c541d1160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c541d14b0"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c541d1638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f2c541d4700" loc="49:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f2c541d4700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c541d4a50"/>
        <function-ref name="source" scoped="" ref="0x7f2c541d4bd8"/>
        <function-ref name="address" scoped="" ref="0x7f2c541d4d60"/>
        <function-ref name="destination" scoped="" ref="0x7f2c541d3020"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c541d31a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c541d3330"/>
        <function-ref name="type" scoped="" ref="0x7f2c541d34b8"/>
        <function-ref name="setType" scoped="" ref="0x7f2c541d3640"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c541d37c8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c541d3950"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c541d3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2c541b4020" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f2c541b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c541b4370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c541b44f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c541b4680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c541b4808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c541b4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2c541ba970" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f2c541ba970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c541bacc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f2c541b4bd8" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f2c541b4bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c541b3020"/>
        <function-ref name="source" scoped="" ref="0x7f2c541b31a8"/>
        <function-ref name="address" scoped="" ref="0x7f2c541b3330"/>
        <function-ref name="destination" scoped="" ref="0x7f2c541b34b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c541b3640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c541b37c8"/>
        <function-ref name="type" scoped="" ref="0x7f2c541b3950"/>
        <function-ref name="setType" scoped="" ref="0x7f2c541b3ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c541b3c60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c541b3de8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c541b2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2c541b03f8" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f2c541b03f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c541b0748"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c541b08d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c541b0a58"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c541b0be0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c541b0d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2c541af020" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f2c541af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c541af370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c541af4f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c541af680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c541af808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c541af990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f2c541afbd8" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f2c541afbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c541ad020"/>
        <function-ref name="source" scoped="" ref="0x7f2c541ad1a8"/>
        <function-ref name="address" scoped="" ref="0x7f2c541ad330"/>
        <function-ref name="destination" scoped="" ref="0x7f2c541ad4b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c541ad640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c541ad7c8"/>
        <function-ref name="type" scoped="" ref="0x7f2c541ad950"/>
        <function-ref name="setType" scoped="" ref="0x7f2c541adad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c541adc60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c541adde8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c541ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f2c541ac2a8" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f2c541ac2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2c541ac5f8"/>
        <function-ref name="noAck" scoped="" ref="0x7f2c541ac780"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2c541ac908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2c52f9d978" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f2c52f9d978"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c52f9dcc8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c52f9de50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c52f9c020"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c52f9c1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c52f9c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2c52f9c578" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f2c52f9c578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c52f9c8c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c52f9ca50"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c52f9cbd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c52f9cd60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c52f9b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f2c52f9b268" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f2c52f9b268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c52f9b5b8"/>
        <function-ref name="source" scoped="" ref="0x7f2c52f9b740"/>
        <function-ref name="address" scoped="" ref="0x7f2c52f9b8c8"/>
        <function-ref name="destination" scoped="" ref="0x7f2c52f9ba50"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c52f9bbd8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c52f9bd60"/>
        <function-ref name="type" scoped="" ref="0x7f2c52f9a020"/>
        <function-ref name="setType" scoped="" ref="0x7f2c52f9a1a8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c52f9a330"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c52f9a4b8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c52f9a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f2c52f9a8c8" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f2c52f9a8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2c52f9ac18"/>
        <function-ref name="noAck" scoped="" ref="0x7f2c52f9ada0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2c52f99020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2c52f90378" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f2c52f90378"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c52f906c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c52f90850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c52f909d8"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c52f90b60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c52f90ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f2c52f8f020" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f2c52f8f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c52f8f370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c52f8f4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c52f8f680"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c52f8f808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c52f8f990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f2c52f8fbd8" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f2c52f8fbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c52f8e020"/>
        <function-ref name="source" scoped="" ref="0x7f2c52f8e1a8"/>
        <function-ref name="address" scoped="" ref="0x7f2c52f8e330"/>
        <function-ref name="destination" scoped="" ref="0x7f2c52f8e4b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c52f8e640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c52f8e7c8"/>
        <function-ref name="type" scoped="" ref="0x7f2c52f8e950"/>
        <function-ref name="setType" scoped="" ref="0x7f2c52f8ead8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c52f8ec60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c52f8ede8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c52f8d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2c541a9618" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f2c541a9618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c541a9968"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c541a9af0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c541a9c78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c541a9e00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c541a8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2c541a9080" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f2c541a9080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c541a93d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f2c541a8268" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f2c541a8268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c541a85b8"/>
        <function-ref name="source" scoped="" ref="0x7f2c541a8740"/>
        <function-ref name="address" scoped="" ref="0x7f2c541a88c8"/>
        <function-ref name="destination" scoped="" ref="0x7f2c541a8a50"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c541a8bd8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c541a8d60"/>
        <function-ref name="type" scoped="" ref="0x7f2c541a7020"/>
        <function-ref name="setType" scoped="" ref="0x7f2c541a71a8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c541a7330"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c541a74b8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c541a7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c541a3228" loc="46:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f2c541a3228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c541a3578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f2c541a3830" loc="47:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f2c541a3830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2c541a3b80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2c541a3d08"/>
        <function-ref name="led1On" scoped="" ref="0x7f2c541a2020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2c541a21a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2c541a2330"/>
        <function-ref name="get" scoped="" ref="0x7f2c541a24b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2c541a2640"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2c541a2c60"/>
        <function-ref name="set" scoped="" ref="0x7f2c541a27c8"/>
        <function-ref name="led0On" scoped="" ref="0x7f2c541a2950"/>
        <function-ref name="led2On" scoped="" ref="0x7f2c541a2ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x7f2c540b2290" loc="51:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="TestNetworkAppC.Object32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x7f2c540b2290"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x7f2c540b2dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x7f2c540b5808" loc="50:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="TestNetworkAppC.Object32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x7f2c540b5808"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x7f2c540b4d20"/>
        <function-ref name="get" scoped="" ref="0x7f2c540b43c8"/>
        <function-ref name="set" scoped="" ref="0x7f2c540b4850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="changedTask" ref="0x7f2c52f6a5f8" loc="62:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="TestNetworkAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="changedTask" scoped="" ref="0x7f2c52f6a5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c52f6a948"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c52f6aad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationCache" ref="0x7f2c52f6c208" loc="50:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="TestNetworkAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x7f2c52f6c208"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-functions>
        <function-ref name="requestData" scoped="" ref="0x7f2c52f6c6e0"/>
        <function-ref name="storeData" scoped="" ref="0x7f2c52f6cd00"/>
        <function-ref name="newData" scoped="" ref="0x7f2c52f6c868"/>
        <function-ref name="start" scoped="" ref="0x7f2c52f6c9f0"/>
        <function-ref name="requestSeqno" scoped="" ref="0x7f2c52f6cb78"/>
        <function-ref name="stop" scoped="" ref="0x7f2c52f6c558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x7f2c52f6d020" loc="49:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="TestNetworkAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x7f2c52f6d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x7f2c52f6db68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2c52f6b020" loc="52:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="TestNetworkAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f2c52f6b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2c52f6b370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2c52f6b4f8"/>
        <function-ref name="led1On" scoped="" ref="0x7f2c52f6b680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2c52f6b808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2c52f6b990"/>
        <function-ref name="get" scoped="" ref="0x7f2c52f6bb18"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2c52f6bca0"/>
        <function-ref name="led0On" scoped="" ref="0x7f2c52f6a330"/>
        <function-ref name="set" scoped="" ref="0x7f2c52f6a020"/>
        <function-ref name="led2On" scoped="" ref="0x7f2c52f6be28"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2c52f6a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x7f2c52f75538" loc="48:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="TestNetworkAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x7f2c52f75538"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x7f2c52f74a50"/>
        <function-ref name="get" scoped="" ref="0x7f2c52f740f8"/>
        <function-ref name="set" scoped="" ref="0x7f2c52f74580"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f2c52f77bf8" loc="46:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="TestNetworkAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f2c52f77bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c52f75020"/>
        <function-ref name="stop" scoped="" ref="0x7f2c52f751a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x7f2c54155498" loc="45:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationTimerP.nc">
      <component-ref qname="DisseminationTimerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x7f2c54155498"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2c541557e8"/>
        <function-ref name="incrementCounter" scoped="" ref="0x7f2c54155970"/>
        <function-ref name="reset" scoped="" ref="0x7f2c54155af8"/>
        <function-ref name="start" scoped="" ref="0x7f2c54155c80"/>
        <function-ref name="stop" scoped="" ref="0x7f2c54155e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x7f2c540b8478" loc="55:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x7f2c540b8478"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2c540b87e8"/>
        <function-ref name="incrementCounter" scoped="" ref="0x7f2c540b8970"/>
        <function-ref name="reset" scoped="" ref="0x7f2c540b8af8"/>
        <function-ref name="start" scoped="" ref="0x7f2c540b8c80"/>
        <function-ref name="stop" scoped="" ref="0x7f2c540b8e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pending" ref="0x7f2c52f495d8" loc="62:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pending" scoped="" ref="0x7f2c52f495d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7f2c52f49928"/>
        <function-ref name="clear" scoped="" ref="0x7f2c52f49ab0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c52f49c38"/>
        <function-ref name="get" scoped="" ref="0x7f2c52f49dc0"/>
        <function-ref name="assign" scoped="" ref="0x7f2c52f48020"/>
        <function-ref name="setAll" scoped="" ref="0x7f2c52f481a8"/>
        <function-ref name="set" scoped="" ref="0x7f2c52f48330"/>
        <function-ref name="size" scoped="" ref="0x7f2c52f484b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Changed" ref="0x7f2c52f48740" loc="63:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Changed" scoped="" ref="0x7f2c52f48740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7f2c52f48a90"/>
        <function-ref name="clear" scoped="" ref="0x7f2c52f48c18"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c52f48da0"/>
        <function-ref name="get" scoped="" ref="0x7f2c52f47020"/>
        <function-ref name="assign" scoped="" ref="0x7f2c52f471a8"/>
        <function-ref name="setAll" scoped="" ref="0x7f2c52f47330"/>
        <function-ref name="set" scoped="" ref="0x7f2c52f474b8"/>
        <function-ref name="size" scoped="" ref="0x7f2c52f47640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f2c52f47888" loc="64:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f2c52f47888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f2c52f47bd8"/>
        <function-ref name="rand32" scoped="" ref="0x7f2c52f47d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x7f2c52f4f6d8" loc="58:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x7f2c52f4f6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2c52f4fa48"/>
        <function-ref name="incrementCounter" scoped="" ref="0x7f2c52f4fbd0"/>
        <function-ref name="reset" scoped="" ref="0x7f2c52f4fd58"/>
        <function-ref name="start" scoped="" ref="0x7f2c52f4e020"/>
        <function-ref name="stop" scoped="" ref="0x7f2c52f4e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c52f4f020" loc="57:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f2c52f4f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c52f4f370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="timerTask" ref="0x7f2c52f455f8" loc="154:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="timerTask" scoped="" ref="0x7f2c52f455f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c52f45948"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c52f45ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2c52f46020" loc="65:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f2c52f46020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2c52f46370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2c52f464f8"/>
        <function-ref name="led1On" scoped="" ref="0x7f2c52f46680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2c52f46808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2c52f46990"/>
        <function-ref name="get" scoped="" ref="0x7f2c52f46b18"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2c52f46ca0"/>
        <function-ref name="led0On" scoped="" ref="0x7f2c52f45330"/>
        <function-ref name="set" scoped="" ref="0x7f2c52f45020"/>
        <function-ref name="led2On" scoped="" ref="0x7f2c52f46e28"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2c52f451a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2c52f4e558" loc="61:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f2c52f4e558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c55201020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c55201378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c52f4a8f0"/>
        <function-ref name="fired" scoped="" ref="0x7f2c52f4c020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2c52f4cd10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2c52f4c8c0"/>
        <function-ref name="getdt" scoped="" ref="0x7f2c52f491c0"/>
        <function-ref name="gett0" scoped="" ref="0x7f2c52f4ad40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c52f4c470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2c52f4d0f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2c52f4a320"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2c52f4d598"/>
        <function-ref name="stop" scoped="" ref="0x7f2c52f4da38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2c52f41550" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f2c52f41550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c55201020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c55201378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c52f3e768"/>
        <function-ref name="fired" scoped="" ref="0x7f2c52f40e50"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2c52f3fb78"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2c52f3f728"/>
        <function-ref name="getdt" scoped="" ref="0x7f2c52f3c088"/>
        <function-ref name="gett0" scoped="" ref="0x7f2c52f3ebb8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c52f3f2d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2c52f400c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2c52f3e198"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2c52f40560"/>
        <function-ref name="stop" scoped="" ref="0x7f2c52f40a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c52f3b880" loc="46:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f2c52f3b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c52f3bbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x7f2c52f3be58" loc="47:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7f2c52f3be58"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7f2c52f3a1e8"/>
        <function-ref name="clear" scoped="" ref="0x7f2c52f3a370"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c52f3a4f8"/>
        <function-ref name="get" scoped="" ref="0x7f2c52f3a680"/>
        <function-ref name="assign" scoped="" ref="0x7f2c52f3a808"/>
        <function-ref name="setAll" scoped="" ref="0x7f2c52f3a990"/>
        <function-ref name="set" scoped="" ref="0x7f2c52f3ab18"/>
        <function-ref name="size" scoped="" ref="0x7f2c52f3aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c52f384f0" loc="46:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f2c52f384f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c52f38840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x7f2c52f38ac8" loc="47:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7f2c52f38ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7f2c52f38e18"/>
        <function-ref name="clear" scoped="" ref="0x7f2c52f37020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c52f371a8"/>
        <function-ref name="get" scoped="" ref="0x7f2c52f37330"/>
        <function-ref name="assign" scoped="" ref="0x7f2c52f374b8"/>
        <function-ref name="setAll" scoped="" ref="0x7f2c52f37640"/>
        <function-ref name="set" scoped="" ref="0x7f2c52f377c8"/>
        <function-ref name="size" scoped="" ref="0x7f2c52f37950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7f2c54090a80" loc="59:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x7f2c54090a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f2c54090dd0"/>
        <function-ref name="setRoot" scoped="" ref="0x7f2c5408f020"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f2c5408f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x7f2c540a6020" loc="54:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x7f2c540a6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f2c540a6370"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f2c540a64f8"/>
        <function-ref name="setPassNodeId" scoped="" ref="0x7f2c540a6680"/>
        <function-ref name="setType" scoped="" ref="0x7f2c540a6808"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f2c540a6990"/>
        <function-ref name="getPassNodeId" scoped="" ref="0x7f2c540a6b18"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f2c540a6ca0"/>
        <function-ref name="getType" scoped="" ref="0x7f2c540a6e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x7f2c5408e750" loc="66:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x7f2c5408e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x7f2c5408eaa0"/>
        <function-ref name="logEventMsg" scoped="" ref="0x7f2c5408ec28"/>
        <function-ref name="logEventSimple" scoped="" ref="0x7f2c5408edb0"/>
        <function-ref name="logEventRoute" scoped="" ref="0x7f2c5408d020"/>
        <function-ref name="logEventDbg" scoped="" ref="0x7f2c5408d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x7f2c540a5b48" loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x7f2c540a5b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f2c55179b58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7f2c540a8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2c540a82a8" loc="53:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f2c540a82a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c540a85f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c540a8780"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c540a8908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c540a8a90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c540a8c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f2c540abd08" loc="50:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f2c540abd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f2c55179b58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c540aa0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2c540ad020" loc="48:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f2c540ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c540ad370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c540ad4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c540ad680"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c540ad808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c540ad990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x7f2c540a2ce0" loc="57:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x7f2c540a2ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x7f2c540910a0"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f2c54091228"/>
        <function-ref name="numNeighbors" scoped="" ref="0x7f2c540913b0"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x7f2c54091538"/>
        <function-ref name="getEtx" scoped="" ref="0x7f2c540916c0"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x7f2c54091848"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x7f2c540919d0"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x7f2c54091b58"/>
        <function-ref name="getParent" scoped="" ref="0x7f2c54091ce0"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x7f2c54091e68"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x7f2c54090020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForceParentInsertion" ref="0x7f2c5408f4c0" loc="61:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForceParentInsertion" scoped="" ref="0x7f2c5408f4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForceParentInsertion"/>
      </instance>
      <interface-functions>
        <function-ref name="unSetParent" scoped="" ref="0x7f2c5408f810"/>
        <function-ref name="forceParent" scoped="" ref="0x7f2c5408f998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2c540ab1c8" loc="49:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f2c540ab1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f2c55179b58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c540ab518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x7f2c540902f0" loc="58:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x7f2c540902f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x7f2c54090640"/>
        <function-ref name="setClientCongested" scoped="" ref="0x7f2c540907c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x7f2c54092cd8" loc="55:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x7f2c54092cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f2c540a30a0"/>
        <function-ref name="option" scoped="" ref="0x7f2c540a3228"/>
        <function-ref name="setEtx" scoped="" ref="0x7f2c540a33b0"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f2c540a3538"/>
        <function-ref name="clearOption" scoped="" ref="0x7f2c540a36c0"/>
        <function-ref name="setPassNodeId" scoped="" ref="0x7f2c540a3848"/>
        <function-ref name="getEtx" scoped="" ref="0x7f2c540a39d0"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f2c540a3b58"/>
        <function-ref name="setType" scoped="" ref="0x7f2c540a3ce0"/>
        <function-ref name="getPassNodeId" scoped="" ref="0x7f2c540a3e68"/>
        <function-ref name="setOption" scoped="" ref="0x7f2c540a2020"/>
        <function-ref name="matchPacket" scoped="" ref="0x7f2c540a21a8"/>
        <function-ref name="getThl" scoped="" ref="0x7f2c540a2330"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f2c540a25b8"/>
        <function-ref name="matchInstance" scoped="" ref="0x7f2c540a2740"/>
        <function-ref name="getType" scoped="" ref="0x7f2c540a28c8"/>
        <function-ref name="setThl" scoped="" ref="0x7f2c540a2a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f2c540ae390" loc="47:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f2c540ae390"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c540ae6e0"/>
        <function-ref name="stop" scoped="" ref="0x7f2c540ae868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x7f2c5408e020" loc="65:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x7f2c5408e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x7f2c5408e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7f2c5407cc08" loc="92:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x7f2c5407cc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f2c5407b020"/>
        <function-ref name="setRoot" scoped="" ref="0x7f2c5407b1a8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f2c5407b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x7f2c54084620" loc="86:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x7f2c54084620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f2c54084970"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f2c54084af8"/>
        <function-ref name="setPassNodeId" scoped="" ref="0x7f2c54084c80"/>
        <function-ref name="setType" scoped="" ref="0x7f2c54084e08"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f2c54083020"/>
        <function-ref name="getPassNodeId" scoped="" ref="0x7f2c540831a8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f2c54083330"/>
        <function-ref name="getType" scoped="" ref="0x7f2c540834b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x7f2c540742b8" loc="90:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x7f2c540742b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x7f2c54074608"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x7f2c54074790"/>
        <function-ref name="txNoAck" scoped="" ref="0x7f2c54074918"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x7f2c54074aa0"/>
        <function-ref name="evicted" scoped="" ref="0x7f2c54074c28"/>
        <function-ref name="clearDLQ" scoped="" ref="0x7f2c54074db0"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x7f2c5407c020"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x7f2c5407c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x7f2c54073af0" loc="99:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x7f2c54073af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x7f2c54073e40"/>
        <function-ref name="logEventMsg" scoped="" ref="0x7f2c54072020"/>
        <function-ref name="logEventSimple" scoped="" ref="0x7f2c540721a8"/>
        <function-ref name="logEventRoute" scoped="" ref="0x7f2c54072330"/>
        <function-ref name="logEventDbg" scoped="" ref="0x7f2c540724b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x7f2c54085398" loc="83:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x7f2c54085398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f2c55179b58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7f2c540856e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2c54085970" loc="85:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f2c54085970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c54085cc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c54085e48"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c54084020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c540841a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c54084330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f2c54086810" loc="82:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f2c54086810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f2c55179b58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c54086b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2c54089a88" loc="80:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f2c54089a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c54089dd8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c54087020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c540871a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c54087330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c540874b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x7f2c5407f848" loc="89:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x7f2c5407f848"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x7f2c5407fb98"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f2c5407fd20"/>
        <function-ref name="numNeighbors" scoped="" ref="0x7f2c5407e020"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x7f2c5407e1a8"/>
        <function-ref name="getEtx" scoped="" ref="0x7f2c5407e330"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x7f2c5407e4b8"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x7f2c5407e640"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x7f2c5407e7c8"/>
        <function-ref name="getParent" scoped="" ref="0x7f2c5407e950"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x7f2c5407ead8"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x7f2c5407ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForceParentInsertion" ref="0x7f2c5407b648" loc="94:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForceParentInsertion" scoped="" ref="0x7f2c5407b648"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForceParentInsertion"/>
      </instance>
      <interface-functions>
        <function-ref name="unSetParent" scoped="" ref="0x7f2c5407ba98"/>
        <function-ref name="forceParent" scoped="" ref="0x7f2c5407bc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2c54087c88" loc="81:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f2c54087c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f2c55179b58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c54086020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x7f2c5407c478" loc="91:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x7f2c5407c478"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x7f2c5407c7c8"/>
        <function-ref name="setClientCongested" scoped="" ref="0x7f2c5407c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x7f2c54083760" loc="87:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x7f2c54083760"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f2c54083ab0"/>
        <function-ref name="option" scoped="" ref="0x7f2c54083c38"/>
        <function-ref name="setEtx" scoped="" ref="0x7f2c54083dc0"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f2c54082020"/>
        <function-ref name="clearOption" scoped="" ref="0x7f2c540821a8"/>
        <function-ref name="setPassNodeId" scoped="" ref="0x7f2c54082330"/>
        <function-ref name="getEtx" scoped="" ref="0x7f2c540824b8"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f2c54082640"/>
        <function-ref name="setType" scoped="" ref="0x7f2c540827c8"/>
        <function-ref name="getPassNodeId" scoped="" ref="0x7f2c54082950"/>
        <function-ref name="setOption" scoped="" ref="0x7f2c54082ad8"/>
        <function-ref name="matchPacket" scoped="" ref="0x7f2c54082c60"/>
        <function-ref name="getThl" scoped="" ref="0x7f2c54082de8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f2c5407f120"/>
        <function-ref name="matchInstance" scoped="" ref="0x7f2c5407f2a8"/>
        <function-ref name="getType" scoped="" ref="0x7f2c5407f430"/>
        <function-ref name="setThl" scoped="" ref="0x7f2c5407f5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f2c5408dd90" loc="79:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f2c5408dd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c54089170"/>
        <function-ref name="stop" scoped="" ref="0x7f2c540892f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x7f2c540734c0" loc="98:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x7f2c540734c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x7f2c54073810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f2c53f26940" loc="142:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f2c53f26940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c53f26c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x7f2c53f23b98" loc="145:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x7f2c53f23b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f2c53f22020"/>
        <function-ref name="setRoot" scoped="" ref="0x7f2c53f221a8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f2c53f22330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f2c53f3d7e0" loc="126:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f2c53f3d7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c53f3db30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c53f3dcb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c53f3de40"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c53f3c020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c53f3c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x7f2c53f1e268" loc="156:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x7f2c53f1e268"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x7f2c53f1e5b8"/>
        <function-ref name="logEventMsg" scoped="" ref="0x7f2c53f1e740"/>
        <function-ref name="logEventSimple" scoped="" ref="0x7f2c53f1e8c8"/>
        <function-ref name="logEventRoute" scoped="" ref="0x7f2c53f1ea50"/>
        <function-ref name="logEventDbg" scoped="" ref="0x7f2c53f1ebd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x7f2c53f41e20" loc="116:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x7f2c53f41e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f2c53f401a8"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f2c53f40330"/>
        <function-ref name="setPassNodeId" scoped="" ref="0x7f2c53f404b8"/>
        <function-ref name="setType" scoped="" ref="0x7f2c53f40640"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f2c53f407c8"/>
        <function-ref name="getPassNodeId" scoped="" ref="0x7f2c53f40950"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f2c53f40ad8"/>
        <function-ref name="getType" scoped="" ref="0x7f2c53f40c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x7f2c53f36020" loc="129:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x7f2c53f36020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x7f2c53f36370"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x7f2c53f364f8"/>
        <function-ref name="txNoAck" scoped="" ref="0x7f2c53f36680"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x7f2c53f36808"/>
        <function-ref name="evicted" scoped="" ref="0x7f2c53f36990"/>
        <function-ref name="clearDLQ" scoped="" ref="0x7f2c53f36b18"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x7f2c53f36ca0"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x7f2c53f36e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SentCache" ref="0x7f2c53f27020" loc="140:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SentCache" scoped="" ref="0x7f2c53f27020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
              <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x7f2c53f27b68"/>
        <function-ref name="flush" scoped="" ref="0x7f2c53f26528"/>
        <function-ref name="lookup" scoped="" ref="0x7f2c53f26088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x7f2c53f43b58" loc="114:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x7f2c53f43b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f2c55179b58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7f2c53f41020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2c53f41268" loc="115:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f2c53f41268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c53f415b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c53f41740"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c53f418c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c53f41a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c53f41bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f2c53f43480" loc="113:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f2c53f43480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f2c55179b58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c53f437f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f2c53f1fa10" loc="149:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f2c53f1fa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f2c53f1fd60"/>
        <function-ref name="rand32" scoped="" ref="0x7f2c53f1e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2c53f44020" loc="111:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f2c53f44020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c53f44390"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c53f44518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c53f446a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c53f44828"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c53f449b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RetxmitTimer" ref="0x7f2c53f3cde0" loc="128:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RetxmitTimer" scoped="" ref="0x7f2c53f3cde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c55201020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c55201378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c53f37238"/>
        <function-ref name="fired" scoped="" ref="0x7f2c53f3a910"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2c53f38648"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2c53f381f8"/>
        <function-ref name="getdt" scoped="" ref="0x7f2c53f37ad8"/>
        <function-ref name="gett0" scoped="" ref="0x7f2c53f37688"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c53f3ad60"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2c53f3bae0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2c53f38c18"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2c53f3a020"/>
        <function-ref name="stop" scoped="" ref="0x7f2c53f3a4c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7f2c53f1ee60" loc="162:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7f2c53f1ee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2c53f1d1e8"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2c53f1d370"/>
        <function-ref name="start" scoped="" ref="0x7f2c53f1d4f8"/>
        <function-ref name="stop" scoped="" ref="0x7f2c53f1d680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7f2c53f1d948" loc="234:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x7f2c53f1d948"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c53f1dc98"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c53f1de20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x7f2c53f34a08" loc="137:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0x7f2c53f34a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7f2c54068a98"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f2c54066020"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f2c53f312d8"/>
        <function-ref name="enqueue" scoped="" ref="0x7f2c53f30020"/>
        <function-ref name="element" scoped="" ref="0x7f2c53f30650"/>
        <function-ref name="maxSize" scoped="" ref="0x7f2c53f32e18"/>
        <function-ref name="dequeue" scoped="" ref="0x7f2c53f31938"/>
        <function-ref name="empty" scoped="" ref="0x7f2c53f32578"/>
        <function-ref name="size" scoped="" ref="0x7f2c53f329c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpInfo" ref="0x7f2c53f255b8" loc="144:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x7f2c53f255b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x7f2c53f25908"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f2c53f25a90"/>
        <function-ref name="numNeighbors" scoped="" ref="0x7f2c53f25c18"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x7f2c53f25da0"/>
        <function-ref name="getEtx" scoped="" ref="0x7f2c53f23020"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x7f2c53f231a8"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x7f2c53f23330"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x7f2c53f234b8"/>
        <function-ref name="getParent" scoped="" ref="0x7f2c53f23640"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x7f2c53f237c8"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x7f2c53f23950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f2c53f35b50" loc="131:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f2c53f35b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c53f34020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c53f341a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c53f34330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c53f344b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c53f34640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c53f450e0" loc="109:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f2c53f450e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c53f45430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2c53f44d18" loc="112:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f2c53f44d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f2c55179b58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c53f430d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x7f2c53f3d020" loc="118:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x7f2c53f3d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x7f2c53f3d370"/>
        <function-ref name="setClientCongested" scoped="" ref="0x7f2c53f3d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnicastNameFreeRouting" ref="0x7f2c53f350e0" loc="130:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x7f2c53f350e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x7f2c53f35430"/>
        <function-ref name="routeFound" scoped="" ref="0x7f2c53f355b8"/>
        <function-ref name="nextHop" scoped="" ref="0x7f2c53f35740"/>
        <function-ref name="noRoute" scoped="" ref="0x7f2c53f358c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2c53f203f0" loc="148:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f2c53f203f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2c53f20740"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2c53f208c8"/>
        <function-ref name="led1On" scoped="" ref="0x7f2c53f20a50"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2c53f20bd8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2c53f20d60"/>
        <function-ref name="get" scoped="" ref="0x7f2c53f1f020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2c53f1f1a8"/>
        <function-ref name="led2On" scoped="" ref="0x7f2c53f1f7c8"/>
        <function-ref name="set" scoped="" ref="0x7f2c53f1f4b8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2c53f1f330"/>
        <function-ref name="led0On" scoped="" ref="0x7f2c53f1f640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f2c53f3c3f0" loc="127:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2c53f3c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2c53f3c740"/>
        <function-ref name="noAck" scoped="" ref="0x7f2c53f3c8c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2c53f3ca50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x7f2c53f3f020" loc="117:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x7f2c53f3f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f2c53f3f370"/>
        <function-ref name="option" scoped="" ref="0x7f2c53f3f4f8"/>
        <function-ref name="setEtx" scoped="" ref="0x7f2c53f3f680"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f2c53f3f808"/>
        <function-ref name="clearOption" scoped="" ref="0x7f2c53f3f990"/>
        <function-ref name="setPassNodeId" scoped="" ref="0x7f2c53f3fb18"/>
        <function-ref name="getEtx" scoped="" ref="0x7f2c53f3fca0"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f2c53f3fe28"/>
        <function-ref name="setType" scoped="" ref="0x7f2c53f3e020"/>
        <function-ref name="getPassNodeId" scoped="" ref="0x7f2c53f3e1a8"/>
        <function-ref name="setOption" scoped="" ref="0x7f2c53f3e330"/>
        <function-ref name="matchPacket" scoped="" ref="0x7f2c53f3e4b8"/>
        <function-ref name="getThl" scoped="" ref="0x7f2c53f3e640"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f2c53f3e8c8"/>
        <function-ref name="matchInstance" scoped="" ref="0x7f2c53f3ea50"/>
        <function-ref name="getType" scoped="" ref="0x7f2c53f3ebd8"/>
        <function-ref name="setThl" scoped="" ref="0x7f2c53f3ed60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="QEntryPool" ref="0x7f2c53f30dd0" loc="138:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QEntryPool" scoped="" ref="0x7f2c53f30dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7f2c54068a98"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f2c54066020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c53f2ddd0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f2c53f2d2d8"/>
        <function-ref name="empty" scoped="" ref="0x7f2c53f2e9e0"/>
        <function-ref name="put" scoped="" ref="0x7f2c53f2d728"/>
        <function-ref name="size" scoped="" ref="0x7f2c53f2ee30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f2c53f22e50" loc="147:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f2c53f22e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c53f211e8"/>
        <function-ref name="source" scoped="" ref="0x7f2c53f21370"/>
        <function-ref name="address" scoped="" ref="0x7f2c53f214f8"/>
        <function-ref name="destination" scoped="" ref="0x7f2c53f21680"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c53f21808"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c53f21990"/>
        <function-ref name="type" scoped="" ref="0x7f2c53f21b18"/>
        <function-ref name="setType" scoped="" ref="0x7f2c53f21ca0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c53f21e28"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c53f20020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c53f201a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f2c53f45678" loc="110:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f2c53f45678"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c53f459c8"/>
        <function-ref name="stop" scoped="" ref="0x7f2c53f45b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x7f2c53f25020" loc="143:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSnoop" scoped="" ref="0x7f2c53f25020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c53f25370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MessagePool" ref="0x7f2c53f2b630" loc="139:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MessagePool" scoped="" ref="0x7f2c53f2b630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
            <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c53f296c8"/>
        <function-ref name="maxSize" scoped="" ref="0x7f2c53f2aa88"/>
        <function-ref name="empty" scoped="" ref="0x7f2c53f2a1e8"/>
        <function-ref name="put" scoped="" ref="0x7f2c53f29020"/>
        <function-ref name="size" scoped="" ref="0x7f2c53f2a638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x7f2c53f22698" loc="146:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x7f2c53f22698"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x7f2c53f22c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f2c53f12478" loc="42:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <component-ref qname="CtpP.MessagePoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7f2c53f12478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
            <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c53eec3e8"/>
        <function-ref name="maxSize" scoped="" ref="0x7f2c53eee8c0"/>
        <function-ref name="empty" scoped="" ref="0x7f2c53eee020"/>
        <function-ref name="put" scoped="" ref="0x7f2c53eeed10"/>
        <function-ref name="size" scoped="" ref="0x7f2c53eee470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f2c52e0e020" loc="56:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7f2c52e0e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
            <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c52e0c020"/>
        <function-ref name="maxSize" scoped="" ref="0x7f2c52e0d470"/>
        <function-ref name="empty" scoped="" ref="0x7f2c52e0eb68"/>
        <function-ref name="put" scoped="" ref="0x7f2c52e0d8c0"/>
        <function-ref name="size" scoped="" ref="0x7f2c52e0d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c52e0f7e8" loc="55:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f2c52e0f7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c52e0fb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f2c53eea6e0" loc="42:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <component-ref qname="CtpP.QEntryPoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7f2c53eea6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7f2c54068a98"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f2c54066020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c53ee7730"/>
        <function-ref name="maxSize" scoped="" ref="0x7f2c53ee9c10"/>
        <function-ref name="empty" scoped="" ref="0x7f2c53ee9370"/>
        <function-ref name="put" scoped="" ref="0x7f2c53ee7088"/>
        <function-ref name="size" scoped="" ref="0x7f2c53ee97c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f2c52dfc370" loc="56:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7f2c52dfc370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7f2c54068a98"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f2c54066020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c52df93e8"/>
        <function-ref name="maxSize" scoped="" ref="0x7f2c52dfb8c0"/>
        <function-ref name="empty" scoped="" ref="0x7f2c52dfb020"/>
        <function-ref name="put" scoped="" ref="0x7f2c52dfbd10"/>
        <function-ref name="size" scoped="" ref="0x7f2c52dfb470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c52dfdc68" loc="55:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f2c52dfdc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c52dfc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f2c53ee4d50" loc="43:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
      <component-ref qname="CtpP.SendQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f2c53ee4d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7f2c54068a98"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f2c54066020"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f2c53eca610"/>
        <function-ref name="enqueue" scoped="" ref="0x7f2c53ec8300"/>
        <function-ref name="element" scoped="" ref="0x7f2c53ec8930"/>
        <function-ref name="maxSize" scoped="" ref="0x7f2c53eca1c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f2c53ecac70"/>
        <function-ref name="empty" scoped="" ref="0x7f2c53ee38f0"/>
        <function-ref name="size" scoped="" ref="0x7f2c53ee3d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x7f2c53e960d8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <component-ref qname="CtpP.SentCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x7f2c53e960d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
              <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x7f2c53e96c20"/>
        <function-ref name="flush" scoped="" ref="0x7f2c53e95598"/>
        <function-ref name="lookup" scoped="" ref="0x7f2c53e950f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x7f2c52de0020" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x7f2c52de0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
              <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x7f2c52de0b68"/>
        <function-ref name="flush" scoped="" ref="0x7f2c52dde528"/>
        <function-ref name="lookup" scoped="" ref="0x7f2c52dde088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c52de18f8" loc="45:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f2c52de18f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c52de1c48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpPacket" ref="0x7f2c52dde960" loc="49:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x7f2c52dde960"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f2c52ddecb0"/>
        <function-ref name="option" scoped="" ref="0x7f2c52ddee38"/>
        <function-ref name="setEtx" scoped="" ref="0x7f2c52ddd020"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f2c52ddd1a8"/>
        <function-ref name="clearOption" scoped="" ref="0x7f2c52ddd330"/>
        <function-ref name="setPassNodeId" scoped="" ref="0x7f2c52ddd4b8"/>
        <function-ref name="getEtx" scoped="" ref="0x7f2c52ddd640"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f2c52ddd7c8"/>
        <function-ref name="setType" scoped="" ref="0x7f2c52ddd950"/>
        <function-ref name="getPassNodeId" scoped="" ref="0x7f2c52dddad8"/>
        <function-ref name="setOption" scoped="" ref="0x7f2c52dddc60"/>
        <function-ref name="matchPacket" scoped="" ref="0x7f2c52dddde8"/>
        <function-ref name="getThl" scoped="" ref="0x7f2c52ddc020"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f2c52ddc2a8"/>
        <function-ref name="matchInstance" scoped="" ref="0x7f2c52ddc430"/>
        <function-ref name="getType" scoped="" ref="0x7f2c52ddc5b8"/>
        <function-ref name="setThl" scoped="" ref="0x7f2c52ddc740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2c53e93020" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RoutingBeaconTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f2c53e93020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c55201020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c55201378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c53e8f2b8"/>
        <function-ref name="fired" scoped="" ref="0x7f2c53e91978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2c53e906c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2c53e90278"/>
        <function-ref name="getdt" scoped="" ref="0x7f2c53e8fb58"/>
        <function-ref name="gett0" scoped="" ref="0x7f2c53e8f708"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c53e91dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2c53e93b68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2c53e90c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2c53e91088"/>
        <function-ref name="stop" scoped="" ref="0x7f2c53e91528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2c53e8c5e8" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RouteUpdateTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f2c53e8c5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c55201020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c55201378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c53e898f0"/>
        <function-ref name="fired" scoped="" ref="0x7f2c53e8a020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2c53e8ad10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2c53e8a8c0"/>
        <function-ref name="getdt" scoped="" ref="0x7f2c53e871c0"/>
        <function-ref name="gett0" scoped="" ref="0x7f2c53e89d40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c53e8a470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2c53e8b158"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2c53e89320"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2c53e8b5f8"/>
        <function-ref name="stop" scoped="" ref="0x7f2c53e8ba98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f2c53e73978" loc="57:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f2c53e73978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c53e73cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x7f2c53e7b020" loc="47:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x7f2c53e7b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x7f2c53e7b370"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x7f2c53e7b4f8"/>
        <function-ref name="txNoAck" scoped="" ref="0x7f2c53e7b680"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x7f2c53e7b808"/>
        <function-ref name="evicted" scoped="" ref="0x7f2c53e7b990"/>
        <function-ref name="clearDLQ" scoped="" ref="0x7f2c53e7bb18"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x7f2c53e7bca0"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x7f2c53e7be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2c53e7a698" loc="49:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f2c53e7a698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c53e7a9e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c53e7ab70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c53e7acf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c53e7ae80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c53e79030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f2c53e74910" loc="54:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f2c53e74910"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c53e74c60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c53e74de8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c53e78020"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c53e781a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c53e78330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2c53e7dbf0" loc="45:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f2c53e7dbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c53e7c020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c53e7c1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c53e7c330"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c53e7c4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c53e7c640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f2c53e725f8" loc="59:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f2c53e725f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f2c53e72a48"/>
        <function-ref name="rand32" scoped="" ref="0x7f2c53e72bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f2c53e77c78" loc="56:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f2c53e77c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c53e73020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c53e731a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c53e73330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c53e734b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c53e73640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c53e7a0c0" loc="48:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f2c53e7a0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c53e7a410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x7f2c53e78680" loc="55:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMPacket" scoped="" ref="0x7f2c53e78680"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c53e789d0"/>
        <function-ref name="source" scoped="" ref="0x7f2c53e78b58"/>
        <function-ref name="address" scoped="" ref="0x7f2c53e78ce0"/>
        <function-ref name="destination" scoped="" ref="0x7f2c53e78e68"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c53e77020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c53e771a8"/>
        <function-ref name="type" scoped="" ref="0x7f2c53e77330"/>
        <function-ref name="setType" scoped="" ref="0x7f2c53e774b8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c53e77640"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c53e777c8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c53e77950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2c53e7c8d0" loc="46:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f2c53e7c8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c53e7cc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareBit" ref="0x7f2c53e742b8" loc="50:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0x7f2c53e742b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x7f2c53e74608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f2c53e7d420" loc="44:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f2c53e7d420"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c53e7d770"/>
        <function-ref name="stop" scoped="" ref="0x7f2c53e7d8f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkPacketMetadata" ref="0x7f2c53e72020" loc="58:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f2c53e72020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f2c53e72370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2c53dc1d10" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f2c53dc1d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c53dc00a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c53dc0228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c53dc03b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c53dc0538"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c53dc06c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2c53dc0908" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f2c53dc0908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c53dc0c58"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c53dc0de0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c53dbe020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c53dbe1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c53dbe330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f2c53dbe578" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f2c53dbe578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c53dbe8c8"/>
        <function-ref name="source" scoped="" ref="0x7f2c53dbea50"/>
        <function-ref name="address" scoped="" ref="0x7f2c53dbebd8"/>
        <function-ref name="destination" scoped="" ref="0x7f2c53dbed60"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c53dbd020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c53dbd1a8"/>
        <function-ref name="type" scoped="" ref="0x7f2c53dbd330"/>
        <function-ref name="setType" scoped="" ref="0x7f2c53dbd4b8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c53dbd640"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c53dbd7c8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c53dbd950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f2c53dbdbd8" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f2c53dbdbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2c53dbc020"/>
        <function-ref name="noAck" scoped="" ref="0x7f2c53dbc1a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2c53dbc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2c52db58f8" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f2c52db58f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c52db5c48"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c52db5dd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c52db3020"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c52db31a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c52db3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2c52db3578" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f2c52db3578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c52db38c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c52db3a50"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c52db3bd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c52db3d60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c52db2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f2c52db2268" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f2c52db2268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c52db25b8"/>
        <function-ref name="source" scoped="" ref="0x7f2c52db2740"/>
        <function-ref name="address" scoped="" ref="0x7f2c52db28c8"/>
        <function-ref name="destination" scoped="" ref="0x7f2c52db2a50"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c52db2bd8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c52db2d60"/>
        <function-ref name="type" scoped="" ref="0x7f2c52db1020"/>
        <function-ref name="setType" scoped="" ref="0x7f2c52db11a8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c52db1330"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c52db14b8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c52db1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f2c52db18c8" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f2c52db18c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2c52db1c18"/>
        <function-ref name="noAck" scoped="" ref="0x7f2c52db1da0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2c52db0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2c52da8a80" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f2c52da8a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c52da8dd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c52da7020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c52da71a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c52da7330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c52da74b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f2c52da7760" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f2c52da7760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c52da7ab0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c52da7c38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c52da7dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c52da6020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c52da61a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f2c52da63f0" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f2c52da63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c52da6740"/>
        <function-ref name="source" scoped="" ref="0x7f2c52da68c8"/>
        <function-ref name="address" scoped="" ref="0x7f2c52da6a50"/>
        <function-ref name="destination" scoped="" ref="0x7f2c52da6bd8"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c52da6d60"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c52da5020"/>
        <function-ref name="type" scoped="" ref="0x7f2c52da51a8"/>
        <function-ref name="setType" scoped="" ref="0x7f2c52da5330"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c52da54b8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c52da5640"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c52da57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2c53dba928" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f2c53dba928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c53dbac78"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c53dbae00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c53db9020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c53db91a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c53db9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2c53dba390" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f2c53dba390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c53dba6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f2c53db9578" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f2c53db9578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c53db98c8"/>
        <function-ref name="source" scoped="" ref="0x7f2c53db9a50"/>
        <function-ref name="address" scoped="" ref="0x7f2c53db9bd8"/>
        <function-ref name="destination" scoped="" ref="0x7f2c53db9d60"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c53db8020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c53db81a8"/>
        <function-ref name="type" scoped="" ref="0x7f2c53db8330"/>
        <function-ref name="setType" scoped="" ref="0x7f2c53db84b8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c53db8640"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c53db87c8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c53db8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2c53daf760" loc="47:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f2c53daf760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c53dafab0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c53dafc38"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c53dafdc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c53dae020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c53dae1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2c53daf1c8" loc="46:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f2c53daf1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c53daf518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f2c53dae3f0" loc="48:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f2c53dae3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c53dae740"/>
        <function-ref name="source" scoped="" ref="0x7f2c53dae8c8"/>
        <function-ref name="address" scoped="" ref="0x7f2c53daea50"/>
        <function-ref name="destination" scoped="" ref="0x7f2c53daebd8"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c53daed60"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c53dad020"/>
        <function-ref name="type" scoped="" ref="0x7f2c53dad1a8"/>
        <function-ref name="setType" scoped="" ref="0x7f2c53dad330"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c53dad4b8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c53dad640"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c53dad7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7f2c53cb9700" loc="110:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x7f2c53cb9700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f2c53cb9a50"/>
        <function-ref name="setRoot" scoped="" ref="0x7f2c53cb9bd8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f2c53cb9d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateRouteTask" ref="0x7f2c53ca3638" loc="331:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateRouteTask" scoped="" ref="0x7f2c53ca3638"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c53ca3988"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c53ca3b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x7f2c53ca5b80" loc="127:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x7f2c53ca5b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x7f2c53ca4020"/>
        <function-ref name="logEventMsg" scoped="" ref="0x7f2c53ca41a8"/>
        <function-ref name="logEventSimple" scoped="" ref="0x7f2c53ca4330"/>
        <function-ref name="logEventRoute" scoped="" ref="0x7f2c53ca44b8"/>
        <function-ref name="logEventDbg" scoped="" ref="0x7f2c53ca4640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x7f2c53cb4cd8" loc="121:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x7f2c53cb4cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x7f2c53cb20a0"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x7f2c53cb2228"/>
        <function-ref name="txNoAck" scoped="" ref="0x7f2c53cb23b0"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x7f2c53cb2538"/>
        <function-ref name="evicted" scoped="" ref="0x7f2c53cb26c0"/>
        <function-ref name="clearDLQ" scoped="" ref="0x7f2c53cb2848"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x7f2c53cb29d0"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x7f2c53cb2b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpRoutingPacket" ref="0x7f2c53cb7c98" loc="113:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpRoutingPacket" scoped="" ref="0x7f2c53cb7c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpRoutingPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clearOptions" scoped="" ref="0x7f2c53cb6020"/>
        <function-ref name="setEtx" scoped="" ref="0x7f2c53cb61a8"/>
        <function-ref name="clearOption" scoped="" ref="0x7f2c53cb6330"/>
        <function-ref name="getEtx" scoped="" ref="0x7f2c53cb64b8"/>
        <function-ref name="setOption" scoped="" ref="0x7f2c53cb6640"/>
        <function-ref name="setParent" scoped="" ref="0x7f2c53cb67c8"/>
        <function-ref name="getParent" scoped="" ref="0x7f2c53cb6950"/>
        <function-ref name="getOption" scoped="" ref="0x7f2c53cb6ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7f2c53cb0430" loc="123:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7f2c53cb0430"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2c53cb0780"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2c53cb0908"/>
        <function-ref name="start" scoped="" ref="0x7f2c53cb0a90"/>
        <function-ref name="stop" scoped="" ref="0x7f2c53cb0c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f2c53ca5460" loc="126:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f2c53ca5460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f2c53ca57b0"/>
        <function-ref name="rand32" scoped="" ref="0x7f2c53ca5938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x7f2c53cb8020" loc="111:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x7f2c53cb8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x7f2c53cb8370"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f2c53cb84f8"/>
        <function-ref name="numNeighbors" scoped="" ref="0x7f2c53cb8680"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x7f2c53cb8808"/>
        <function-ref name="getEtx" scoped="" ref="0x7f2c53cb8990"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x7f2c53cb8b18"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x7f2c53cb8ca0"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x7f2c53cb8e28"/>
        <function-ref name="getParent" scoped="" ref="0x7f2c53cb7020"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x7f2c53cb71a8"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x7f2c53cb7330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendBeaconTask" ref="0x7f2c53ca3dd8" loc="173:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendBeaconTask" scoped="" ref="0x7f2c53ca3dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c53ca2170"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c53ca22f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c53cb6d20" loc="114:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f2c53cb6d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c53cb50a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForceParentInsertion" ref="0x7f2c53cb52e8" loc="116:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForceParentInsertion" scoped="" ref="0x7f2c53cb52e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForceParentInsertion"/>
      </instance>
      <interface-functions>
        <function-ref name="unSetParent" scoped="" ref="0x7f2c53cb5638"/>
        <function-ref name="forceParent" scoped="" ref="0x7f2c53cb57c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSend" ref="0x7f2c53cb5aa8" loc="119:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSend" scoped="" ref="0x7f2c53cb5aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c53cb5df8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c53cb4020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c53cb41a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c53cb4330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c53cb44b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconTimer" ref="0x7f2c53caf020" loc="124:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconTimer" scoped="" ref="0x7f2c53caf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c55201020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c55201378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c53cab5f0"/>
        <function-ref name="fired" scoped="" ref="0x7f2c53caea48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2c53cad8c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2c53cad470"/>
        <function-ref name="getdt" scoped="" ref="0x7f2c53caa020"/>
        <function-ref name="gett0" scoped="" ref="0x7f2c53caba40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c53cad020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2c53cafc68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2c53cab020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2c53cae158"/>
        <function-ref name="stop" scoped="" ref="0x7f2c53cae5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteTimer" ref="0x7f2c53caa540" loc="125:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteTimer" scoped="" ref="0x7f2c53caa540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c55201020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c55201378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c53ca6768"/>
        <function-ref name="fired" scoped="" ref="0x7f2c53ca9e50"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2c53ca8b78"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2c53ca8728"/>
        <function-ref name="getdt" scoped="" ref="0x7f2c53ca5088"/>
        <function-ref name="gett0" scoped="" ref="0x7f2c53ca6bb8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c53ca82d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2c53ca90c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2c53ca6198"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2c53ca9560"/>
        <function-ref name="stop" scoped="" ref="0x7f2c53ca9a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpCongestion" ref="0x7f2c53ca4888" loc="128:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x7f2c53ca4888"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x7f2c53ca4bd8"/>
        <function-ref name="setClientCongested" scoped="" ref="0x7f2c53ca4d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareBit" ref="0x7f2c53ca3020" loc="130:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0x7f2c53ca3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x7f2c53ca3370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconReceive" ref="0x7f2c53cb4740" loc="120:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconReceive" scoped="" ref="0x7f2c53cb4740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c53cb4a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f2c53cb2da0" loc="122:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f2c53cb2da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c53cb1170"/>
        <function-ref name="source" scoped="" ref="0x7f2c53cb12f8"/>
        <function-ref name="address" scoped="" ref="0x7f2c53cb1480"/>
        <function-ref name="destination" scoped="" ref="0x7f2c53cb1608"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c53cb1790"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c53cb1918"/>
        <function-ref name="type" scoped="" ref="0x7f2c53cb1aa0"/>
        <function-ref name="setType" scoped="" ref="0x7f2c53cb1c28"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c53cb1db0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c53cb0020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c53cb01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f2c53cb7578" loc="112:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f2c53cb7578"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c53cb78c8"/>
        <function-ref name="stop" scoped="" ref="0x7f2c53cb7a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Routing" ref="0x7f2c53cbabc8" loc="109:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Routing" scoped="" ref="0x7f2c53cbabc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x7f2c53cb9020"/>
        <function-ref name="routeFound" scoped="" ref="0x7f2c53cb91a8"/>
        <function-ref name="nextHop" scoped="" ref="0x7f2c53cb9330"/>
        <function-ref name="noRoute" scoped="" ref="0x7f2c53cb94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2c53c9a718" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RetxmitTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f2c53c9a718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c55201020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c55201378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c53c96a18"/>
        <function-ref name="fired" scoped="" ref="0x7f2c53c97158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2c53c97e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2c53c979f8"/>
        <function-ref name="getdt" scoped="" ref="0x7f2c53c952e8"/>
        <function-ref name="gett0" scoped="" ref="0x7f2c53c96e68"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c53c975a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2c53c98370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2c53c96448"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2c53c98810"/>
        <function-ref name="stop" scoped="" ref="0x7f2c53c98cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2c53c8f490" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f2c53c8f490"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c53c8f7e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c53c8f968"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c53c8faf0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c53c8fc78"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c53c8fe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2c53c8e080" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f2c53c8e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c53c8e3d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c53c8e558"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c53c8e6e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c53c8e868"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c53c8e9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f2c53c8ec38" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f2c53c8ec38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c53c8d020"/>
        <function-ref name="source" scoped="" ref="0x7f2c53c8d1a8"/>
        <function-ref name="address" scoped="" ref="0x7f2c53c8d330"/>
        <function-ref name="destination" scoped="" ref="0x7f2c53c8d4b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c53c8d640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c53c8d7c8"/>
        <function-ref name="type" scoped="" ref="0x7f2c53c8d950"/>
        <function-ref name="setType" scoped="" ref="0x7f2c53c8dad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c53c8dc60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c53c8dde8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c53c8c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f2c53c8c2a8" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f2c53c8c2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2c53c8c5f8"/>
        <function-ref name="noAck" scoped="" ref="0x7f2c53c8c780"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2c53c8c908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2c52d16718" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f2c52d16718"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c52d16a68"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c52d16bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c52d16d78"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c52d15020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c52d151a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2c52d153f0" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f2c52d153f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c52d15740"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c52d158c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c52d15a50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c52d15bd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c52d15d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f2c52d14020" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f2c52d14020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c52d14370"/>
        <function-ref name="source" scoped="" ref="0x7f2c52d144f8"/>
        <function-ref name="address" scoped="" ref="0x7f2c52d14680"/>
        <function-ref name="destination" scoped="" ref="0x7f2c52d14808"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c52d14990"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c52d14b18"/>
        <function-ref name="type" scoped="" ref="0x7f2c52d14ca0"/>
        <function-ref name="setType" scoped="" ref="0x7f2c52d14e28"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c52d13020"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c52d131a8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c52d13330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f2c52d135b8" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f2c52d135b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2c52d13908"/>
        <function-ref name="noAck" scoped="" ref="0x7f2c52d13a90"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2c52d13c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2c52d09a80" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f2c52d09a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c52d09dd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c52d08020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c52d081a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c52d08330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c52d084b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f2c52d08760" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f2c52d08760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c52d08ab0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c52d08c38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c52d08dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c52d07020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c52d071a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f2c52d073f0" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f2c52d073f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c52d07740"/>
        <function-ref name="source" scoped="" ref="0x7f2c52d078c8"/>
        <function-ref name="address" scoped="" ref="0x7f2c52d07a50"/>
        <function-ref name="destination" scoped="" ref="0x7f2c52d07bd8"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c52d07d60"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c52d06020"/>
        <function-ref name="type" scoped="" ref="0x7f2c52d061a8"/>
        <function-ref name="setType" scoped="" ref="0x7f2c52d06330"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c52d064b8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c52d06640"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c52d067c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2c53c89020" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f2c53c89020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c53c89370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c53c894f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c53c89680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c53c89808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c53c89990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2c53c8a9a8" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f2c53c8a9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c53c8acf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f2c53c89bd8" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f2c53c89bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c53c88020"/>
        <function-ref name="source" scoped="" ref="0x7f2c53c881a8"/>
        <function-ref name="address" scoped="" ref="0x7f2c53c88330"/>
        <function-ref name="destination" scoped="" ref="0x7f2c53c884b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c53c88640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c53c887c8"/>
        <function-ref name="type" scoped="" ref="0x7f2c53c88950"/>
        <function-ref name="setType" scoped="" ref="0x7f2c53c88ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c53c88c60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c53c88de8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c53c87020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2c53c51700" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
      <component-ref qname="TestNetworkAppC.CollectionSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f2c53c51700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c53c51a50"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c53c51bd8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c53c51d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c53c50020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c53c501a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2c53c629b0" loc="45:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
      <component-ref qname="TestNetworkAppC.CollectionSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f2c53c629b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c53c62d00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c53c51020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c53c511a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c53c51330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c53c514b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2c52ceebd8" loc="38:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
      <component-ref qname="TestNetworkAppC.CollectionSenderC.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f2c52ceebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c52ced020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c52ced1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c52ced330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c52ced4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c52ced640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2c52cee020" loc="37:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
      <component-ref qname="TestNetworkAppC.CollectionSenderC.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f2c52cee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c52cee370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c52cee4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c52cee680"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c52cee808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c52cee990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionId" ref="0x7f2c52ce8888" loc="46:/opt/tinyos-2.1.2/tos/lib/net/CollectionIdP.nc">
      <component-ref qname="TestNetworkAppC.CollectionSenderC.CollectionSenderP.CollectionIdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x7f2c52ce8888"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x7f2c52ce8bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2c53c4f8d8" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="TestNetworkAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f2c53c4f8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c55201020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c55201378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c53c4bbc0"/>
        <function-ref name="fired" scoped="" ref="0x7f2c53c4c238"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2c53c4b020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2c53c4cad8"/>
        <function-ref name="getdt" scoped="" ref="0x7f2c53c4a4d8"/>
        <function-ref name="gett0" scoped="" ref="0x7f2c53c4a088"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c53c4c688"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2c53c4d458"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2c53c4b5f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2c53c4d8f8"/>
        <function-ref name="stop" scoped="" ref="0x7f2c53c4dd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f2c53c41020" loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <component-ref qname="TestNetworkAppC.BatteryVoltage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f2c53c41020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2c53c41b68"/>
        <function-ref name="readDone" scoped="" ref="0x7f2c53ab5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f2c52cde3f0" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestNetworkAppC.BatteryVoltage.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2c52cde3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f2c52cde740"/>
        <function-ref name="configure" scoped="" ref="0x7f2c52cde8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f2c52ce0358" loc="22:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestNetworkAppC.BatteryVoltage.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f2c52ce0358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2c52cdf020"/>
        <function-ref name="readDone" scoped="" ref="0x7f2c52cdf470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f2c52cdfa28" loc="24:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestNetworkAppC.BatteryVoltage.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f2c52cdfa28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f2c52cdfd78"/>
        <function-ref name="getChannel" scoped="" ref="0x7f2c52cde020"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f2c52cde1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f2c53c334f8" loc="19:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f2c53c334f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2c53c32088"/>
        <function-ref name="readDone" scoped="" ref="0x7f2c53c324d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f2c53c312f0" loc="20:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7f2c53c312f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2c53c31e70"/>
        <function-ref name="readDone" scoped="" ref="0x7f2c53c30320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f2c53c2c020" loc="23:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f2c53c2c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f2c53c2c370"/>
        <function-ref name="getChannel" scoped="" ref="0x7f2c53c2c4f8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f2c53c2c680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f2c53c2ce38" loc="24:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f2c53c2ce38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2c53c2b1c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2c53c2b348"/>
        <function-ref name="request" scoped="" ref="0x7f2c53c2b4d0"/>
        <function-ref name="granted" scoped="" ref="0x7f2c53c2b658"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2c53c2b7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f2c53c241c8" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2c53c241c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f2c53c24518"/>
        <function-ref name="configure" scoped="" ref="0x7f2c53c246a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7f2c53c1b420" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f2c53c1b420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f2c53c1b770"/>
        <function-ref name="dataReady" scoped="" ref="0x7f2c53c1b8f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7f2c53c21ac8" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f2c53c21ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f2c53c21e18"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c53c25020"/>
        <function-ref name="dataReady" scoped="" ref="0x7f2c53c251a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2c53c29918" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f2c53c29918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2c53c29c68"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2c53c29df0"/>
        <function-ref name="request" scoped="" ref="0x7f2c53c26020"/>
        <function-ref name="granted" scoped="" ref="0x7f2c53c261a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2c53c26330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c53c186e8" loc="54:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f2c53c186e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c53c18a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7f2c53c17e60" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f2c53c17e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f2c53c161e8"/>
        <function-ref name="dataReady" scoped="" ref="0x7f2c53c16370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7f2c53c17508" loc="56:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f2c53c17508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f2c53c17858"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c53c179e0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f2c53c17b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x7f2c53c08940" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f2c53c08940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f2c53c08c90"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f2c53c08e18"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f2c53c15020"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f2c53c151a8"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f2c53c15330"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f2c53c154b8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f2c53c15640"/>
        <function-ref name="isComplete" scoped="" ref="0x7f2c53c157c8"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c53c15950"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f2c53c15ad8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f2c53c15c60"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f2c53c15de8"/>
        <function-ref name="startConversion" scoped="" ref="0x7f2c53c14020"/>
        <function-ref name="isStarted" scoped="" ref="0x7f2c53c142a8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f2c53c14430"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f2c53c145b8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f2c53c14740"/>
        <function-ref name="getValue" scoped="" ref="0x7f2c53c148c8"/>
        <function-ref name="dataReady" scoped="" ref="0x7f2c53c14a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f2c53c18d18" loc="55:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f2c53c18d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c53c170a0"/>
        <function-ref name="stop" scoped="" ref="0x7f2c53c17228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7f2c53c14d30" loc="61:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f2c53c14d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f2c53c070d8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f2c53c07260"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f2c53c073e8"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f2c53c07570"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f2c53c076f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7f2c53c19a18" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f2c53c19a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f2c53c19d68"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f2c53bd6020"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f2c53bd61a8"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f2c53bd6330"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f2c53bd64b8"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f2c53bd6640"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f2c53bd67c8"/>
        <function-ref name="isComplete" scoped="" ref="0x7f2c53bd6950"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c53bd6ad8"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f2c53bd6c60"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f2c53bd6de8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f2c53bd5020"/>
        <function-ref name="startConversion" scoped="" ref="0x7f2c53bd51a8"/>
        <function-ref name="isStarted" scoped="" ref="0x7f2c53bd5430"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f2c53bd55b8"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f2c53bd5740"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f2c53bd58c8"/>
        <function-ref name="getValue" scoped="" ref="0x7f2c53bd5a50"/>
        <function-ref name="dataReady" scoped="" ref="0x7f2c53bd5bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7f2c53bd4cd0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f2c53bd4cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f2c53bd10a0"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f2c53bd1228"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f2c53bd13b0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f2c53bd1538"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f2c53bd16c0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f2c53bd1848"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f2c53bd19d0"/>
        <function-ref name="isComplete" scoped="" ref="0x7f2c53bd1b58"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c53bd1ce0"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f2c53bd1e68"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f2c53bd0020"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f2c53bd01a8"/>
        <function-ref name="startConversion" scoped="" ref="0x7f2c53bd0330"/>
        <function-ref name="isStarted" scoped="" ref="0x7f2c53bd05b8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f2c53bd0740"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f2c53bd08c8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f2c53bd0a50"/>
        <function-ref name="getValue" scoped="" ref="0x7f2c53bd0bd8"/>
        <function-ref name="dataReady" scoped="" ref="0x7f2c53bd0d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f2c53bcf0c0" loc="49:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f2c53bcf0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f2c53bcf410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f2c53b2bd18" loc="92:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f2c53b2bd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f2c53b2a0d8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2c53b2a260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f2c53b29960" loc="96:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2c53b29960"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f2c53b29cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f2c53b29e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f2c53b2a4a8" loc="93:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f2c53b2a4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2c53b2a7f8"/>
        <function-ref name="requested" scoped="" ref="0x7f2c53b2a980"/>
        <function-ref name="granted" scoped="" ref="0x7f2c53b2ab08"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2c53b2ac90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2c53b2ae18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2c53b2b020" loc="91:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f2c53b2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2c53b2b390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2c53b2b518"/>
        <function-ref name="request" scoped="" ref="0x7f2c53b2b6a0"/>
        <function-ref name="granted" scoped="" ref="0x7f2c53b2b828"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2c53b2b9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f2c53b290e0" loc="94:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2c53b290e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f2c53b29430"/>
        <function-ref name="userId" scoped="" ref="0x7f2c53b295b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c52ccf8e8" loc="44:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f2c52ccf8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c52ccfc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f2c52ccd020" loc="45:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f2c52ccd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f2c52ccd370"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f2c52ccd4f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f2c52ccd680"/>
        <function-ref name="dequeue" scoped="" ref="0x7f2c52ccd808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f2c52ccbd58" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f2c52ccbd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f2c52cca0f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2c52cca278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f2c52cc9980" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2c52cc9980"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f2c52cc9cf0"/>
        <function-ref name="configure" scoped="" ref="0x7f2c52cc9e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f2c52cc8130" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f2c52cc8130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f2c52cc8480"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f2c52cc8608"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f2c52cc8790"/>
        <function-ref name="dequeue" scoped="" ref="0x7f2c52cc8918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f2c52cca4c0" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f2c52cca4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2c52cca810"/>
        <function-ref name="requested" scoped="" ref="0x7f2c52cca998"/>
        <function-ref name="granted" scoped="" ref="0x7f2c52ccab20"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2c52ccaca8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2c52ccae30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2c52cc8b60" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f2c52cc8b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2c52cc7020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2c52cc71a8"/>
        <function-ref name="led1On" scoped="" ref="0x7f2c52cc7330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2c52cc74b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2c52cc7640"/>
        <function-ref name="get" scoped="" ref="0x7f2c52cc77c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2c52cc7950"/>
        <function-ref name="led0On" scoped="" ref="0x7f2c52cc6020"/>
        <function-ref name="set" scoped="" ref="0x7f2c52cc7c60"/>
        <function-ref name="led2On" scoped="" ref="0x7f2c52cc7ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2c52cc7de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2c52ccb060" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f2c52ccb060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2c52ccb3d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2c52ccb558"/>
        <function-ref name="request" scoped="" ref="0x7f2c52ccb6e0"/>
        <function-ref name="granted" scoped="" ref="0x7f2c52ccb868"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2c52ccb9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f2c52cc90e0" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2c52cc90e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f2c52cc9430"/>
        <function-ref name="userId" scoped="" ref="0x7f2c52cc95b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f2c52cc62e8" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f2c52cc62e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c52cc6638"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c52cc67c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f2c53b25b98" loc="72:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f2c53b25b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f2c53b10020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f2c53b10268" loc="73:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f2c53b10268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2c53b105b8"/>
        <function-ref name="requested" scoped="" ref="0x7f2c53b10740"/>
        <function-ref name="granted" scoped="" ref="0x7f2c53b108c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2c53b10a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2c53b10bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f2c53b25478" loc="70:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f2c53b25478"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c53b257c8"/>
        <function-ref name="stop" scoped="" ref="0x7f2c53b25950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f2c53b10e20" loc="74:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2c53b10e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f2c53b0f1a8"/>
        <function-ref name="userId" scoped="" ref="0x7f2c53b0f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f2c52c95740" loc="62:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f2c52c95740"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f2c52c95a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f2c52c95cd8" loc="63:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f2c52c95cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2c52c930a0"/>
        <function-ref name="requested" scoped="" ref="0x7f2c52c93228"/>
        <function-ref name="granted" scoped="" ref="0x7f2c52c933b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2c52c93538"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2c52c936c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f2c52c95020" loc="60:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f2c52c95020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c52c95370"/>
        <function-ref name="stop" scoped="" ref="0x7f2c52c954f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f2c52c93908" loc="64:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2c52c93908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f2c52c93c58"/>
        <function-ref name="userId" scoped="" ref="0x7f2c52c93de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f2c53b02a50" loc="54:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f2c53b02a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f2c551ff788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f2c53b00828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f2c53b08c68" loc="48:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f2c53b08c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2c53b077e8"/>
        <function-ref name="readDone" scoped="" ref="0x7f2c53b07c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f2c53b05880" loc="49:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7f2c53b05880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2c53b04490"/>
        <function-ref name="readDone" scoped="" ref="0x7f2c53b04918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f2c53b03e78" loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f2c53b03e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f2c53b021f8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f2c53b02380"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f2c53b02508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x7f2c53b03020" loc="52:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f2c53b03020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f2c53b03370"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c53b034f8"/>
        <function-ref name="dataReady" scoped="" ref="0x7f2c53b03680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x7f2c53af00c0" loc="104:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x7f2c53af00c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c53af0410"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c53af0598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f2c53adc560" loc="24:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f2c53adc560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2c53ac50f8"/>
        <function-ref name="readDone" scoped="" ref="0x7f2c53ac5568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f2c53ac5da8" loc="26:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7f2c53ac5da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2c53ac39e0"/>
        <function-ref name="readDone" scoped="" ref="0x7f2c53ac3e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f2c53ac2510" loc="27:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f2c53ac2510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2c53ac2880"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2c53ac2a08"/>
        <function-ref name="request" scoped="" ref="0x7f2c53ac2b90"/>
        <function-ref name="granted" scoped="" ref="0x7f2c53ac2d18"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2c53ac0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7f2c53ab78d8" loc="40:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f2c53ab78d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f2c53ab7c28"/>
        <function-ref name="getChannel" scoped="" ref="0x7f2c53ab7db0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f2c53ab4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f2c53aaeaf0" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc">
      <component-ref qname="TestNetworkAppC.DemoSensorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f2c53aaeaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2c53aad670"/>
        <function-ref name="readDone" scoped="" ref="0x7f2c53aadac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f2c52c84550" loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <component-ref qname="TestNetworkAppC.DemoSensorC.DemoChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f2c52c84550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2c52c830c0"/>
        <function-ref name="readDone" scoped="" ref="0x7f2c52c83510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f2c52c7e060" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestNetworkAppC.DemoSensorC.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2c52c7e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f2c52c7e3b0"/>
        <function-ref name="configure" scoped="" ref="0x7f2c52c7e538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f2c52c811c8" loc="22:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestNetworkAppC.DemoSensorC.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f2c52c811c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2c52c81d10"/>
        <function-ref name="readDone" scoped="" ref="0x7f2c52c7f1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f2c52c7f778" loc="24:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestNetworkAppC.DemoSensorC.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f2c52c7f778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f2c52c7fac8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f2c52c7fc50"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f2c52c7fdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2c536ec398" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="TestNetworkAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f2c536ec398"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c536ec6e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c536ec870"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c536ec9f8"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c536ecb80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c536ecd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2c536eb020" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="TestNetworkAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f2c536eb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c536eb370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c536eb4f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c536eb680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c536eb808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c536eb990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f2c536ebbd8" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="TestNetworkAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f2c536ebbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c536ea020"/>
        <function-ref name="source" scoped="" ref="0x7f2c536ea1a8"/>
        <function-ref name="address" scoped="" ref="0x7f2c536ea330"/>
        <function-ref name="destination" scoped="" ref="0x7f2c536ea4b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c536ea640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c536ea7c8"/>
        <function-ref name="type" scoped="" ref="0x7f2c536ea950"/>
        <function-ref name="setType" scoped="" ref="0x7f2c536eaad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c536eac60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c536eade8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c536e9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f2c536e92a8" loc="52:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="TestNetworkAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f2c536e92a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2c536e95f8"/>
        <function-ref name="noAck" scoped="" ref="0x7f2c536e9780"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2c536e9908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2c52c721f0" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestNetworkAppC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f2c52c721f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c52c72540"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c52c726c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c52c72850"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c52c729d8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c52c72b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f2c52c72e08" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestNetworkAppC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f2c52c72e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c52c711a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c52c71330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c52c714b8"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c52c71640"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c52c717c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f2c52c71a10" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestNetworkAppC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f2c52c71a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c52c71d60"/>
        <function-ref name="source" scoped="" ref="0x7f2c52c70020"/>
        <function-ref name="address" scoped="" ref="0x7f2c52c701a8"/>
        <function-ref name="destination" scoped="" ref="0x7f2c52c70330"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c52c704b8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c52c70640"/>
        <function-ref name="type" scoped="" ref="0x7f2c52c707c8"/>
        <function-ref name="setType" scoped="" ref="0x7f2c52c70950"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c52c70ad8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c52c70c60"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c52c70de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2c53a977f8" loc="44:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f2c53a977f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c53a97b48"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c53a97cd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c53a97e58"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c53a96020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c53a961a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f2c53a92020" loc="48:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f2c53a92020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c53a92390"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c53a92518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c53a926a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c53a92828"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c53a929b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2c53a941e0" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f2c53a941e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c53a94550"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c53a946d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c53a94860"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c53a949e8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c53a94b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f2c53a90268" loc="50:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f2c53a90268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c53a905b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c53a90740"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c53a908c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c53a90a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c53a90bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f2c53a8f020" loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x7f2c53a8f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c53a8f370"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c53a8f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f2c53a8f7c0" loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x7f2c53a8f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c53a8fb10"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c53a8fc98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f2c53a92bf8" loc="49:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f2c53a92bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c53a91020"/>
        <function-ref name="source" scoped="" ref="0x7f2c53a911a8"/>
        <function-ref name="address" scoped="" ref="0x7f2c53a91330"/>
        <function-ref name="destination" scoped="" ref="0x7f2c53a914b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c53a91640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c53a917c8"/>
        <function-ref name="type" scoped="" ref="0x7f2c53a91950"/>
        <function-ref name="setType" scoped="" ref="0x7f2c53a91ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c53a91c60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c53a91de8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c53a90020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f2c53a8daa0" loc="46:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f2c53a8daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2c53a8ddf0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2c53a8a020"/>
        <function-ref name="start" scoped="" ref="0x7f2c53a8a1a8"/>
        <function-ref name="stop" scoped="" ref="0x7f2c53a8a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2c53a8aaa8" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f2c53a8aaa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c53a8adf8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c53a89020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c53a891a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c53a89330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c53a894b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2c53a882a8" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f2c53a882a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c53a885f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c53a88780"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c53a88908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c53a88a90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c53a88c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2c53a89c38" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f2c53a89c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c53a88020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2c53a84020" loc="53:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f2c53a84020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2c53a84370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2c53a844f8"/>
        <function-ref name="led1On" scoped="" ref="0x7f2c53a84680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2c53a84808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2c53a84990"/>
        <function-ref name="get" scoped="" ref="0x7f2c53a84b18"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2c53a84ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2c53a83330"/>
        <function-ref name="set" scoped="" ref="0x7f2c53a84e28"/>
        <function-ref name="led0On" scoped="" ref="0x7f2c53a83020"/>
        <function-ref name="led2On" scoped="" ref="0x7f2c53a831a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f2c53a85658" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2c53a85658"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2c53a859a8"/>
        <function-ref name="noAck" scoped="" ref="0x7f2c53a85b30"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2c53a85cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f2c53a86020" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f2c53a86020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c53a86370"/>
        <function-ref name="source" scoped="" ref="0x7f2c53a864f8"/>
        <function-ref name="address" scoped="" ref="0x7f2c53a86680"/>
        <function-ref name="destination" scoped="" ref="0x7f2c53a86808"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c53a86990"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c53a86b18"/>
        <function-ref name="type" scoped="" ref="0x7f2c53a86ca0"/>
        <function-ref name="setType" scoped="" ref="0x7f2c53a86e28"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c53a85020"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c53a851a8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c53a85330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f2c53a2c308" loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f2c53a2c308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c53a2c658"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c53a2c7e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c53a2c968"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c53a2caf0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c53a2cc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f2c53a2b020" loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f2c53a2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c53a2b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2c53a81460" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f2c53a81460"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c53a817d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c53a81958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c53a81ae0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c53a81c68"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c53a81df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2c53a2ed20" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f2c53a2ed20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c53a2d0a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c53a2d228"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c53a2d3b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c53a2d538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c53a2d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2c53a2f180" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f2c53a2f180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c53a2f4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f2c53a2d908" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2c53a2d908"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2c53a2dc58"/>
        <function-ref name="noAck" scoped="" ref="0x7f2c53a2dde0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2c53a2c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f2c53a2f738" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f2c53a2f738"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c53a2fa88"/>
        <function-ref name="source" scoped="" ref="0x7f2c53a2fc10"/>
        <function-ref name="address" scoped="" ref="0x7f2c53a2fd98"/>
        <function-ref name="destination" scoped="" ref="0x7f2c53a2e020"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c53a2e1a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c53a2e330"/>
        <function-ref name="type" scoped="" ref="0x7f2c53a2e4b8"/>
        <function-ref name="setType" scoped="" ref="0x7f2c53a2e640"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c53a2e7c8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c53a2e950"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c53a2ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f2c53a27728" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f2c53a27728"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2c53a27a78"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2c53a27c00"/>
        <function-ref name="start" scoped="" ref="0x7f2c53a27d88"/>
        <function-ref name="stop" scoped="" ref="0x7f2c53a26020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2c53a25208" loc="52:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f2c53a25208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f2c550f3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c53a25558"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c53a256e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c53a25868"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c53a259f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c53a25b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c53a27110" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f2c53a27110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c53a27460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2c53a26760" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f2c53a26760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f2c550f3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c53a26ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2c53a228f8" loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f2c53a228f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2c53a22c48"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2c53a22dd0"/>
        <function-ref name="led1On" scoped="" ref="0x7f2c53a1e020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2c53a1e1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2c53a1e330"/>
        <function-ref name="get" scoped="" ref="0x7f2c53a1e4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2c53a1e640"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2c53a1ec60"/>
        <function-ref name="set" scoped="" ref="0x7f2c53a1e7c8"/>
        <function-ref name="led0On" scoped="" ref="0x7f2c53a1e950"/>
        <function-ref name="led2On" scoped="" ref="0x7f2c53a1ead8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7f2c53a22020" loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f2c53a22020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f2c550f3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f2c53a22370"/>
        <function-ref name="offset" scoped="" ref="0x7f2c53a224f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f2c53a22680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f2c539ffda8" loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f2c539ffda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2c539fe170"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2c539fe2f8"/>
        <function-ref name="start" scoped="" ref="0x7f2c539fe480"/>
        <function-ref name="stop" scoped="" ref="0x7f2c539fe608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7f2c5399c830" loc="332:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x7f2c5399c830"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c5399cb80"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c5399cd08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f2c539ee398" loc="74:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x7f2c539ee398"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c539ee6e8"/>
        <function-ref name="stop" scoped="" ref="0x7f2c539ee870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7f2c539d3d70" loc="191:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x7f2c539d3d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c539d20f0"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c539d2278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c539ff790" loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f2c539ff790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c539ffae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7f2c539ebe40" loc="75:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x7f2c539ebe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7f2c539ed1c0"/>
        <function-ref name="flush" scoped="" ref="0x7f2c539ed348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7f2c5399f020" loc="322:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x7f2c5399f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c5399f370"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c5399f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7f2c539efb38" loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f2c539efb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f2c539f8020"/>
        <function-ref name="resetSend" scoped="" ref="0x7f2c539f81a8"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f2c539f8330"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f2c539f84b8"/>
        <function-ref name="putData" scoped="" ref="0x7f2c539f8640"/>
        <function-ref name="putDone" scoped="" ref="0x7f2c539f87c8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f2c539f8950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2c539f8bc8" loc="73:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f2c539f8bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2c539f4020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2c539f41a8"/>
        <function-ref name="led1On" scoped="" ref="0x7f2c539f4330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2c539f44b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2c539f4640"/>
        <function-ref name="get" scoped="" ref="0x7f2c539f47c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2c539f4950"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2c539ee020"/>
        <function-ref name="set" scoped="" ref="0x7f2c539f4ad8"/>
        <function-ref name="led0On" scoped="" ref="0x7f2c539f4c60"/>
        <function-ref name="led2On" scoped="" ref="0x7f2c539f4de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7f2c53999918" loc="341:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f2c53999918"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c53999c68"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c53999df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7f2c539f9950" loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x7f2c539f9950"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f2c539f9ca0"/>
        <function-ref name="nextByte" scoped="" ref="0x7f2c539f9e28"/>
        <function-ref name="startSend" scoped="" ref="0x7f2c539fd020"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f2c539fd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7f2c539f5b48" loc="68:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f2c539f5b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f2c539fc020"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f2c539fc1a8"/>
        <function-ref name="endPacket" scoped="" ref="0x7f2c539fc330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7f2c538d5100" loc="275:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x7f2c538d5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c538d5450"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c538d55d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2c538d9020" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f2c538d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f2c550f3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c538d9390"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c538d9518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c538d96a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c538d9828"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c538d99b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7f2c538d58a0" loc="158:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x7f2c538d58a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c538d5bf0"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c538d5d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2c538da868" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f2c538da868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f2c550f3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c538dabd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7f2c538d9db8" loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x7f2c538d9db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f2c550f3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f2c538d8170"/>
        <function-ref name="offset" scoped="" ref="0x7f2c538d82f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f2c538d8480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2c538d7a50" loc="57:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f2c538d7a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2c538d7da0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2c538d6020"/>
        <function-ref name="led1On" scoped="" ref="0x7f2c538d61a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2c538d6330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2c538d64b8"/>
        <function-ref name="get" scoped="" ref="0x7f2c538d6640"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2c538d67c8"/>
        <function-ref name="led2On" scoped="" ref="0x7f2c538d6de8"/>
        <function-ref name="set" scoped="" ref="0x7f2c538d6ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2c538d6950"/>
        <function-ref name="led0On" scoped="" ref="0x7f2c538d6c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7f2c538d7020" loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x7f2c538d7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f2c538d7370"/>
        <function-ref name="nextByte" scoped="" ref="0x7f2c538d74f8"/>
        <function-ref name="startSend" scoped="" ref="0x7f2c538d7680"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f2c538d7808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7f2c538d86c8" loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f2c538d86c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f2c538d8a18"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f2c538d8ba0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f2c538d8d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f2c538c2448" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f2c538c2448"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c538c2798"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f2c538c2920"/>
        <function-ref name="receive" scoped="" ref="0x7f2c538c2aa8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f2c538c2c30"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f2c538c2db8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f2c538cf020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c538cf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7f2c538d3b30" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f2c538d3b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f2c538d3e80"/>
        <function-ref name="resetSend" scoped="" ref="0x7f2c538d0030"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f2c538d01b8"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f2c538d0340"/>
        <function-ref name="putData" scoped="" ref="0x7f2c538d04c8"/>
        <function-ref name="putDone" scoped="" ref="0x7f2c538d0650"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f2c538d07d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2c538cf420" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f2c538cf420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2c538cf770"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2c538cf8f8"/>
        <function-ref name="led1On" scoped="" ref="0x7f2c538cfa80"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2c538cfc08"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2c538cfd90"/>
        <function-ref name="get" scoped="" ref="0x7f2c538ce020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2c538ce1a8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2c538ce7c8"/>
        <function-ref name="set" scoped="" ref="0x7f2c538ce330"/>
        <function-ref name="led0On" scoped="" ref="0x7f2c538ce4b8"/>
        <function-ref name="led2On" scoped="" ref="0x7f2c538ce640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f2c538a3290" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f2c538a3290"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c538a35e0"/>
        <function-ref name="receive" scoped="" ref="0x7f2c538a3768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f2c538a90c0" loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f2c538a90c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c538a9410"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f2c538a9598"/>
        <function-ref name="receive" scoped="" ref="0x7f2c538a9720"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f2c538a98a8"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f2c538a9a30"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f2c538a9bb8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c538a9d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f2c538d28b0" loc="40:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f2c538d28b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c538d2c00"/>
        <function-ref name="stop" scoped="" ref="0x7f2c538d2d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f2c538a7af0" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f2c538a7af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c538a7e40"/>
        <function-ref name="receive" scoped="" ref="0x7f2c538a1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f2c538a1310" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f2c538a1310"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c538a1660"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f2c538a17e8"/>
        <function-ref name="receive" scoped="" ref="0x7f2c538a1970"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f2c538a1af8"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f2c538a1c80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f2c538a1e08"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c538a0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f2c538a0598" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f2c538a0598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f2c551ff788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c5389f3a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c5389fcb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c5389f830"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c5389e190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f2c538a7338" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f2c538a7338"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c538a7688"/>
        <function-ref name="stop" scoped="" ref="0x7f2c538a7810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f2c5389ce58" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f2c5389ce58"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c5385a1e8"/>
        <function-ref name="receive" scoped="" ref="0x7f2c5385a370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x7f2c538595f8" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x7f2c538595f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c53859948"/>
        <function-ref name="stop" scoped="" ref="0x7f2c53859ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c5389c120" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f2c5389c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c5389c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f2c5385a5f8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f2c5385a5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c5385a948"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f2c5385aad0"/>
        <function-ref name="receive" scoped="" ref="0x7f2c5385ac58"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f2c5385ade0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f2c53859020"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f2c538591a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c53859330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f2c53857c60" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f2c53857c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f2c551ff788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c538569f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c53855330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c53856e78"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c538557b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x7f2c538585c0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x7f2c538585c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f2c53858910"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f2c53858a98"/>
        <function-ref name="rxDone" scoped="" ref="0x7f2c53858c20"/>
        <function-ref name="txDone" scoped="" ref="0x7f2c53858da8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f2c53857020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f2c538571a8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f2c53857330"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f2c538574b8"/>
        <function-ref name="tx" scoped="" ref="0x7f2c53857640"/>
        <function-ref name="rx" scoped="" ref="0x7f2c538577c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f2c5389c6f8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f2c5389c6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c5389ca48"/>
        <function-ref name="stop" scoped="" ref="0x7f2c5389cbd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x7f2c53859d98" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x7f2c53859d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c53858170"/>
        <function-ref name="stop" scoped="" ref="0x7f2c538582f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7f2c53839860" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7f2c53839860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f2c53839bb0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f2c53839d38"/>
        <function-ref name="rxDone" scoped="" ref="0x7f2c53837020"/>
        <function-ref name="txDone" scoped="" ref="0x7f2c538371a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f2c53837330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f2c538374b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f2c53837640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f2c538377c8"/>
        <function-ref name="tx" scoped="" ref="0x7f2c53837950"/>
        <function-ref name="rx" scoped="" ref="0x7f2c53837ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7f2c53835020" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7f2c53835020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f2c53835370"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f2c538354f8"/>
        <function-ref name="rxDone" scoped="" ref="0x7f2c53835680"/>
        <function-ref name="txDone" scoped="" ref="0x7f2c53835808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f2c53835990"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f2c53835b18"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f2c53835ca0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f2c53835e28"/>
        <function-ref name="tx" scoped="" ref="0x7f2c53834020"/>
        <function-ref name="rx" scoped="" ref="0x7f2c538341a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7f2c53839020" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7f2c53839020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c53839370"/>
        <function-ref name="stop" scoped="" ref="0x7f2c538394f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7f2c53837e58" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7f2c53837e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c538361e8"/>
        <function-ref name="stop" scoped="" ref="0x7f2c53836370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7f2c538366f0" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7f2c538366f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c53836a40"/>
        <function-ref name="stop" scoped="" ref="0x7f2c53836bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7f2c5383a700" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7f2c5383a700"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c5383aa50"/>
        <function-ref name="stop" scoped="" ref="0x7f2c5383abd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x7f2c53831020" loc="114:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x7f2c53831020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c53831370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7f2c538308a0" loc="117:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7f2c538308a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f2c53830bf0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f2c53830d78"/>
        <function-ref name="rxDone" scoped="" ref="0x7f2c5382f020"/>
        <function-ref name="txDone" scoped="" ref="0x7f2c5382f1a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f2c5382f330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f2c5382f4b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f2c5382f640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f2c5382f7c8"/>
        <function-ref name="tx" scoped="" ref="0x7f2c5382f950"/>
        <function-ref name="rx" scoped="" ref="0x7f2c5382fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x7f2c5382fe30" loc="119:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x7f2c5382fe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c5382e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7f2c5382d6d8" loc="122:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7f2c5382d6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f2c5382da28"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f2c5382dbb0"/>
        <function-ref name="rxDone" scoped="" ref="0x7f2c5382dd38"/>
        <function-ref name="txDone" scoped="" ref="0x7f2c5382c020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f2c5382c1a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f2c5382c330"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f2c5382c4b8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f2c5382c640"/>
        <function-ref name="tx" scoped="" ref="0x7f2c5382c7c8"/>
        <function-ref name="rx" scoped="" ref="0x7f2c5382c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7f2c53830020" loc="116:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7f2c53830020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c53830370"/>
        <function-ref name="stop" scoped="" ref="0x7f2c538304f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7f2c5382e568" loc="120:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7f2c5382e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c5382e8b8"/>
        <function-ref name="stop" scoped="" ref="0x7f2c5382ea40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7f2c5382ee00" loc="121:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7f2c5382ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c5382d1a8"/>
        <function-ref name="stop" scoped="" ref="0x7f2c5382d330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7f2c5382cc70" loc="124:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f2c5382cc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f2c5382b020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f2c5382b1a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f2c5382b330"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f2c5382b4b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f2c5382b640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f2c5382b950" loc="125:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f2c5382b950"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f2c5382bca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7f2c53831730" loc="115:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7f2c53831730"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c53831a80"/>
        <function-ref name="stop" scoped="" ref="0x7f2c53831c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f2c537cc188" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f2c537cc188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f2c551ff788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c537cb020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c537cb930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c537cb4a8"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c537cbdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f2c537c6020" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f2c537c6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TThree" ref="0x7f2c551bfd70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c537c6d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c537c56b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c537c5230"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c537c5b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f2c537bdc90" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f2c537bdc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f2c537bb020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f2c537bb1a8"/>
        <function-ref name="getControlA" scoped="" ref="0x7f2c537bb330"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f2c537bb4b8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f2c537bb640"/>
        <function-ref name="setControlB" scoped="" ref="0x7f2c537bb7c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f2c537bb950"/>
        <function-ref name="getControlB" scoped="" ref="0x7f2c537bbad8"/>
        <function-ref name="setControlC" scoped="" ref="0x7f2c537bbc60"/>
        <function-ref name="setControlA" scoped="" ref="0x7f2c537bbde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2c537ba350" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f2c537ba350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f2c537b7580"/>
        <function-ref name="test" scoped="" ref="0x7f2c537b8c20"/>
        <function-ref name="get" scoped="" ref="0x7f2c537b9020"/>
        <function-ref name="captured" scoped="" ref="0x7f2c537b9980"/>
        <function-ref name="reset" scoped="" ref="0x7f2c537b9e58"/>
        <function-ref name="isOn" scoped="" ref="0x7f2c537b70f8"/>
        <function-ref name="set" scoped="" ref="0x7f2c537b94a8"/>
        <function-ref name="start" scoped="" ref="0x7f2c537b8310"/>
        <function-ref name="stop" scoped="" ref="0x7f2c537b8798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2c537b51c8" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f2c537b51c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f2c537b3930"/>
        <function-ref name="fired" scoped="" ref="0x7f2c537b46d0"/>
        <function-ref name="get" scoped="" ref="0x7f2c537b5d48"/>
        <function-ref name="reset" scoped="" ref="0x7f2c537b4b58"/>
        <function-ref name="isOn" scoped="" ref="0x7f2c537b3db8"/>
        <function-ref name="set" scoped="" ref="0x7f2c537b41f8"/>
        <function-ref name="start" scoped="" ref="0x7f2c537b3020"/>
        <function-ref name="stop" scoped="" ref="0x7f2c537b34a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2c537c4c30" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f2c537c4c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f2c537bedb8"/>
        <function-ref name="test" scoped="" ref="0x7f2c537be4a8"/>
        <function-ref name="get" scoped="" ref="0x7f2c537c1820"/>
        <function-ref name="setScale" scoped="" ref="0x7f2c537bd270"/>
        <function-ref name="getScale" scoped="" ref="0x7f2c537bd748"/>
        <function-ref name="reset" scoped="" ref="0x7f2c537bf658"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c537bf1d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f2c537be930"/>
        <function-ref name="set" scoped="" ref="0x7f2c537c1ca8"/>
        <function-ref name="start" scoped="" ref="0x7f2c537bfae0"/>
        <function-ref name="stop" scoped="" ref="0x7f2c537be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f2c537a93d0" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f2c537a93d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f2c537a9720"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f2c537a98a8"/>
        <function-ref name="getControlA" scoped="" ref="0x7f2c537a9a30"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f2c537a9bb8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f2c537a9d40"/>
        <function-ref name="setControlB" scoped="" ref="0x7f2c537a8020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f2c537a81a8"/>
        <function-ref name="getControlB" scoped="" ref="0x7f2c537a8330"/>
        <function-ref name="setControlC" scoped="" ref="0x7f2c537a84b8"/>
        <function-ref name="setControlA" scoped="" ref="0x7f2c537a8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7f2c537a34e0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7f2c537a34e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f2c537a0c30"/>
        <function-ref name="fired" scoped="" ref="0x7f2c537a29e8"/>
        <function-ref name="get" scoped="" ref="0x7f2c537a2088"/>
        <function-ref name="reset" scoped="" ref="0x7f2c537a2e70"/>
        <function-ref name="isOn" scoped="" ref="0x7f2c5379f0f8"/>
        <function-ref name="set" scoped="" ref="0x7f2c537a2510"/>
        <function-ref name="start" scoped="" ref="0x7f2c537a0320"/>
        <function-ref name="stop" scoped="" ref="0x7f2c537a07a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2c537a8b18" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f2c537a8b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f2c537a4db8"/>
        <function-ref name="test" scoped="" ref="0x7f2c537a44a8"/>
        <function-ref name="get" scoped="" ref="0x7f2c537a7728"/>
        <function-ref name="captured" scoped="" ref="0x7f2c537a50c0"/>
        <function-ref name="reset" scoped="" ref="0x7f2c537a5598"/>
        <function-ref name="isOn" scoped="" ref="0x7f2c537a4930"/>
        <function-ref name="set" scoped="" ref="0x7f2c537a7bb0"/>
        <function-ref name="start" scoped="" ref="0x7f2c537a5a20"/>
        <function-ref name="stop" scoped="" ref="0x7f2c537a4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7f2c5379f770" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7f2c5379f770"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f2c5379b020"/>
        <function-ref name="fired" scoped="" ref="0x7f2c5379ed08"/>
        <function-ref name="get" scoped="" ref="0x7f2c5379e3a8"/>
        <function-ref name="reset" scoped="" ref="0x7f2c5379c1f8"/>
        <function-ref name="isOn" scoped="" ref="0x7f2c5379b4a8"/>
        <function-ref name="set" scoped="" ref="0x7f2c5379e830"/>
        <function-ref name="start" scoped="" ref="0x7f2c5379c680"/>
        <function-ref name="stop" scoped="" ref="0x7f2c5379cb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7f2c5379bb20" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7f2c5379bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f2c53797310"/>
        <function-ref name="fired" scoped="" ref="0x7f2c537990c0"/>
        <function-ref name="get" scoped="" ref="0x7f2c5379a728"/>
        <function-ref name="reset" scoped="" ref="0x7f2c53799548"/>
        <function-ref name="isOn" scoped="" ref="0x7f2c53797798"/>
        <function-ref name="set" scoped="" ref="0x7f2c5379abb0"/>
        <function-ref name="start" scoped="" ref="0x7f2c537999d0"/>
        <function-ref name="stop" scoped="" ref="0x7f2c53799e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2c537ae298" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f2c537ae298"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f2c537aa4a8"/>
        <function-ref name="test" scoped="" ref="0x7f2c537aba40"/>
        <function-ref name="get" scoped="" ref="0x7f2c537aee18"/>
        <function-ref name="setScale" scoped="" ref="0x7f2c537aa930"/>
        <function-ref name="getScale" scoped="" ref="0x7f2c537aae08"/>
        <function-ref name="reset" scoped="" ref="0x7f2c537adc70"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c537ad7e8"/>
        <function-ref name="isOn" scoped="" ref="0x7f2c537aa020"/>
        <function-ref name="set" scoped="" ref="0x7f2c537ad310"/>
        <function-ref name="start" scoped="" ref="0x7f2c537ab130"/>
        <function-ref name="stop" scoped="" ref="0x7f2c537ab5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c53721020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f2c53721020"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f2c5528cd88"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f2c5528cd88"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c53721370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2c53721740" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f2c53721740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f2c5371d930"/>
        <function-ref name="test" scoped="" ref="0x7f2c5371d020"/>
        <function-ref name="get" scoped="" ref="0x7f2c537203a8"/>
        <function-ref name="setScale" scoped="" ref="0x7f2c5371ddb8"/>
        <function-ref name="getScale" scoped="" ref="0x7f2c5371c2f0"/>
        <function-ref name="reset" scoped="" ref="0x7f2c5371f1f8"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c53720d08"/>
        <function-ref name="isOn" scoped="" ref="0x7f2c5371d4a8"/>
        <function-ref name="set" scoped="" ref="0x7f2c53720830"/>
        <function-ref name="start" scoped="" ref="0x7f2c5371f680"/>
        <function-ref name="stop" scoped="" ref="0x7f2c5371fb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f2c53719020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f2c53719020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TThree" ref="0x7f2c551bfd70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c53719d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c537186b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c53718230"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c53718b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2c537170e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f2c537170e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f2c53713270"/>
        <function-ref name="test" scoped="" ref="0x7f2c53714930"/>
        <function-ref name="get" scoped="" ref="0x7f2c53717c60"/>
        <function-ref name="setScale" scoped="" ref="0x7f2c537136f8"/>
        <function-ref name="getScale" scoped="" ref="0x7f2c53713bd0"/>
        <function-ref name="reset" scoped="" ref="0x7f2c53715a90"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c53715608"/>
        <function-ref name="isOn" scoped="" ref="0x7f2c53714db8"/>
        <function-ref name="set" scoped="" ref="0x7f2c53715130"/>
        <function-ref name="start" scoped="" ref="0x7f2c53714020"/>
        <function-ref name="stop" scoped="" ref="0x7f2c537144a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f2c5370de20" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7f2c5370de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TThree" ref="0x7f2c551bfd70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c5370bbe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c5370a548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c5370a0c0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c5370a9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f2c5370fc50" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f2c5370fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c551ff430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f2c551ff788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c5370e9f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c5370d330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c5370ee78"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c5370d7b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7f2c537026e0" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x7f2c537026e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f2c53702a30"/>
        <function-ref name="offset" scoped="" ref="0x7f2c53702bb8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f2c53702d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2c536e7cd0" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="TestNetworkAppC.UARTSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f2c536e7cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c536e60a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c536e6228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c536e63b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c536e6538"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c536e66c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2c536e6908" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="TestNetworkAppC.UARTSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f2c536e6908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c536e6c58"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c536e6de0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c536e5020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c536e51a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c536e5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f2c536e5578" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="TestNetworkAppC.UARTSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f2c536e5578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c536e58c8"/>
        <function-ref name="source" scoped="" ref="0x7f2c536e5a50"/>
        <function-ref name="address" scoped="" ref="0x7f2c536e5bd8"/>
        <function-ref name="destination" scoped="" ref="0x7f2c536e5d60"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c536e4020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c536e41a8"/>
        <function-ref name="type" scoped="" ref="0x7f2c536e4330"/>
        <function-ref name="setType" scoped="" ref="0x7f2c536e44b8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c536e4640"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c536e47c8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c536e4950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f2c536e4bd8" loc="52:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="TestNetworkAppC.UARTSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f2c536e4bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2c536e3020"/>
        <function-ref name="noAck" scoped="" ref="0x7f2c536e31a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2c536e3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2c52b84af8" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestNetworkAppC.UARTSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f2c52b84af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c52b84e48"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c52b83020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c52b831a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c52b83330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c52b834b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f2c52b83760" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestNetworkAppC.UARTSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f2c52b83760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c52b83ab0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c52b83c38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c52b83dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c52b82020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c52b821a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f2c52b823f0" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestNetworkAppC.UARTSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f2c52b823f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c52b82740"/>
        <function-ref name="source" scoped="" ref="0x7f2c52b828c8"/>
        <function-ref name="address" scoped="" ref="0x7f2c52b82a50"/>
        <function-ref name="destination" scoped="" ref="0x7f2c52b82bd8"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c52b82d60"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c52b81020"/>
        <function-ref name="type" scoped="" ref="0x7f2c52b811a8"/>
        <function-ref name="setType" scoped="" ref="0x7f2c52b81330"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c52b814b8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c52b81640"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c52b817c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionDebug" ref="0x7f2c536e2be8" loc="4:/opt/tinyos-2.1.2/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x7f2c536e2be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x7f2c536df020"/>
        <function-ref name="logEventMsg" scoped="" ref="0x7f2c536df1a8"/>
        <function-ref name="logEventSimple" scoped="" ref="0x7f2c536df330"/>
        <function-ref name="logEventRoute" scoped="" ref="0x7f2c536df4b8"/>
        <function-ref name="logEventDbg" scoped="" ref="0x7f2c536df640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f2c536df938" loc="7:/opt/tinyos-2.1.2/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f2c536df938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f2c536dfc88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTSend" ref="0x7f2c536d5020" loc="10:/opt/tinyos-2.1.2/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UARTSend" scoped="" ref="0x7f2c536d5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c536d5370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c536d54f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c536d5680"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c536d5808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c536d5990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x7f2c536dba68" loc="9:/opt/tinyos-2.1.2/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0x7f2c536dba68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
              <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f2c536d8470"/>
        <function-ref name="enqueue" scoped="" ref="0x7f2c536d7158"/>
        <function-ref name="element" scoped="" ref="0x7f2c536d7788"/>
        <function-ref name="maxSize" scoped="" ref="0x7f2c536d8020"/>
        <function-ref name="dequeue" scoped="" ref="0x7f2c536d8ad0"/>
        <function-ref name="empty" scoped="" ref="0x7f2c536d9620"/>
        <function-ref name="size" scoped="" ref="0x7f2c536d9a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7f2c536cea88" loc="36:/opt/tinyos-2.1.2/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x7f2c536cea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c536cedd8"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c536cd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MessagePool" ref="0x7f2c536dd1b8" loc="8:/opt/tinyos-2.1.2/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MessagePool" scoped="" ref="0x7f2c536dd1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
            <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c536db158"/>
        <function-ref name="maxSize" scoped="" ref="0x7f2c536dc610"/>
        <function-ref name="empty" scoped="" ref="0x7f2c536ddd00"/>
        <function-ref name="put" scoped="" ref="0x7f2c536dca60"/>
        <function-ref name="size" scoped="" ref="0x7f2c536dc1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f2c536964e0" loc="43:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
      <component-ref qname="TestNetworkAppC.QueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f2c536964e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
              <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f2c53695d78"/>
        <function-ref name="enqueue" scoped="" ref="0x7f2c53693a68"/>
        <function-ref name="element" scoped="" ref="0x7f2c536920c0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f2c53695928"/>
        <function-ref name="dequeue" scoped="" ref="0x7f2c53693408"/>
        <function-ref name="empty" scoped="" ref="0x7f2c53695088"/>
        <function-ref name="size" scoped="" ref="0x7f2c536954d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f2c5368f128" loc="42:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <component-ref qname="TestNetworkAppC.PoolC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7f2c5368f128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
            <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c5368d088"/>
        <function-ref name="maxSize" scoped="" ref="0x7f2c5368e548"/>
        <function-ref name="empty" scoped="" ref="0x7f2c5368fc70"/>
        <function-ref name="put" scoped="" ref="0x7f2c5368e998"/>
        <function-ref name="size" scoped="" ref="0x7f2c5368e0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f2c52b65a30" loc="56:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="TestNetworkAppC.PoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7f2c52b65a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
            <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c52b62980"/>
        <function-ref name="maxSize" scoped="" ref="0x7f2c52b63e40"/>
        <function-ref name="empty" scoped="" ref="0x7f2c52b635a0"/>
        <function-ref name="put" scoped="" ref="0x7f2c52b622d8"/>
        <function-ref name="size" scoped="" ref="0x7f2c52b639f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c52b65390" loc="55:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="TestNetworkAppC.PoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f2c52b65390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c52b656e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f2c53685748" loc="42:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <component-ref qname="TestNetworkAppC.DebugMessagePool"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7f2c53685748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
            <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c53683730"/>
        <function-ref name="maxSize" scoped="" ref="0x7f2c53684c10"/>
        <function-ref name="empty" scoped="" ref="0x7f2c53684370"/>
        <function-ref name="put" scoped="" ref="0x7f2c53683088"/>
        <function-ref name="size" scoped="" ref="0x7f2c536847c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f2c52b52c98" loc="56:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="TestNetworkAppC.DebugMessagePool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7f2c52b52c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
            <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c52b50bf0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f2c52b500f8"/>
        <function-ref name="empty" scoped="" ref="0x7f2c52b51820"/>
        <function-ref name="put" scoped="" ref="0x7f2c52b50548"/>
        <function-ref name="size" scoped="" ref="0x7f2c52b51c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c52b525f8" loc="55:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="TestNetworkAppC.DebugMessagePool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f2c52b525f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c52b52948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f2c536807c8" loc="43:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
      <component-ref qname="TestNetworkAppC.DebugSendQueue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f2c536807c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
              <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f2c5367e088"/>
        <function-ref name="enqueue" scoped="" ref="0x7f2c5367ed48"/>
        <function-ref name="element" scoped="" ref="0x7f2c5367c3a8"/>
        <function-ref name="maxSize" scoped="" ref="0x7f2c5367fc10"/>
        <function-ref name="dequeue" scoped="" ref="0x7f2c5367e6e8"/>
        <function-ref name="empty" scoped="" ref="0x7f2c5367f370"/>
        <function-ref name="size" scoped="" ref="0x7f2c5367f7c0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="RootControl" loc="40:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x7f2c550b8be0" loc="43:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x7f2c550bbe38" loc="41:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x7f2c550b8558" loc="42:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f2c550d9bf8" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f2c550d9bf8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f2c550cb490" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f2c550c92a0" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f2c550d9bf8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f2c550cbba0" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f2c550c9020" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f2c550d9bf8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionDebug" loc="59:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
        <short> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure.</short>
        <long> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure. An implementer can choose to send the event&#10;  information to different destinations. Primary examples can include:&#10;  &#60;ul>&#10;    &#60;li> logging to the UART, in case of a testbed of network-connected&#10;         nodes;&#10;    &#60;li> logging to flash, if the logs are to be retrieved later&#10;    &#60;li> logging to the standard output, in the case of TOSSIM.&#10;  &#60;/ul>&#10;  &#10;  The interface does not specify in what format the log is to be produced,&#10;  or if other information, like timestamps, should be added, and this is&#10;  up to the implementer.&#10; &#10;  Some commands are generic, like Event, EventSimple, and EventDbg, while others&#10;  are for more specific events related to collection, like EventRoute and EventMsg.&#10;&#10; @author Rodrigo Fonseca&#10; @author Kyle Jamieson&#10; @date   $Date: 2010-06-29 22:07:47 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="logEvent" ref="0x7f2c5507c290" loc="61:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f2c5507c020" loc="61:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventMsg" ref="0x7f2c550796a0" loc="73:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f2c5507aa38" loc="73:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f2c5507ad58" loc="73:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </variable>
          <variable name="origin" ref="0x7f2c550790c8" loc="73:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </variable>
          <variable name="node" ref="0x7f2c55079400" loc="73:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventSimple" ref="0x7f2c5507b020" loc="64:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f2c5507c980" loc="64:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
          <variable name="arg" ref="0x7f2c5507cca0" loc="64:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventRoute" ref="0x7f2c55077a30" loc="79:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f2c55079d88" loc="79:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
          <variable name="parent" ref="0x7f2c55077108" loc="79:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </variable>
          <variable name="hopcount" ref="0x7f2c55077450" loc="79:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
          <variable name="metric" ref="0x7f2c55077790" loc="79:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventDbg" ref="0x7f2c5507a368" loc="67:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f2c5507b6f0" loc="67:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
          <variable name="arg1" ref="0x7f2c5507ba20" loc="67:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </variable>
          <variable name="arg2" ref="0x7f2c5507bd50" loc="67:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </variable>
          <variable name="arg3" ref="0x7f2c5507a0c8" loc="67:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionPacket" loc="42:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x7f2c550a36a8" loc="50:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c550a3100" loc="50:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x7f2c550a3428" loc="50:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x7f2c550a7900" loc="44:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c550a7348" loc="44:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f2c550a7680" loc="44:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPassNodeId" ref="0x7f2c550a2d20" loc="57:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c550a2768" loc="57:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="_passni" ref="0x7f2c550a2aa0" loc="57:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f2c550a5020" loc="47:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x7f2c55179b58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c550a6950" loc="47:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x7f2c550a6ca8" loc="47:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x7f2c55179b58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x7f2c550b9c48" loc="43:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c550b99d8" loc="43:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPassNodeId" ref="0x7f2c550a20a8" loc="56:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c550a3e10" loc="56:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x7f2c550a59c0" loc="49:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c550a5750" loc="49:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x7f2c550a62d0" loc="46:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x7f2c55179b58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c550a6060" loc="46:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f2c5515b020" loc="60:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f2c55159378" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f2c55159108" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f2c55157780" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f2c55157510" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f2c5515a748" loc="104:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f2c55159b60" loc="130:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f2c55086330" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f2c55086330"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f2c55082290" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f2c55086330"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f2c55084b88" loc="80:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f2c55086b58" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x7f2c55083588" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f2c55086330"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f2c55083318" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f2c55086330"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f2c55084378" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f2c550b3d40" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f2c550b3440" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f2c550b37a0" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2c550b3ab0" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f2c550ab2d8" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c550adbe8" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2c550ab020" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f2c550ad3e0" loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f2c550af108" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c550b0e50" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f2c550ae5c8" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c550ae020" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f2c550ae348" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f2c550967a0" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f2c550967a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7f2c5508f728" loc="73:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f2c550967a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7f2c5508c020" loc="90:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f2c550967a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f2c5508dd78" loc="90:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f2c550967a0"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7f2c55b71488"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0x7f2c55b71488"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7f2c5508b020" loc="101:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f2c550967a0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f2c5508cc50" loc="101:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f2c5508f020" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f2c5508d290" loc="81:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f2c550967a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f2c55090020" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f2c55090740" loc="58:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f2c55154110" loc="95:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f2c551548b0" loc="105:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
      <function command="" provided="0" name="send" ref="0x7f2c550df658" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c550df0c8" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2c550df3d8" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f2c550daa68" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c550da4a0" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2c550da7b0" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f2c550dec70" loc="112:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f2c550dd8c8" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c550dd658" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f2c550dccf8" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c550dc750" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f2c550dca78" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f2c550927b8" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f2c55092020" loc="46:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f2c55063670" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c55063400" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f2c55062670" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c55062400" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f2c5505f7c0" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c5505f1f8" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2c5505f508" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f2c5505e8f8" loc="106:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f2c55060a38" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c550604a8" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2c550607b8" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpInfo" loc="44:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
      <function command="" provided="0" name="getNeighborLinkQuality" ref="0x7f2c550999a0" loc="96:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f2c55099730" loc="96:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="recomputeRoutes" ref="0x7f2c5509c070" loc="83:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
          <short> &#10; Tell the routing engine it might want to recompute its routes.</short>
          <long> &#10; Tell the routing engine it might want to recompute its routes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="numNeighbors" ref="0x7f2c55099020" loc="95:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerRouteUpdate" ref="0x7f2c5509d020" loc="71:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.</short>
          <long>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x7f2c5509e6e0" loc="64:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the ETX for the current path to the root through the current&#10; parent.</short>
          <long>&#10; Get the ETX for the current path to the root through the current&#10; parent. Sets etx argument to ETX*10.  The pointer is allocated by&#10; the caller.  If the parent is invalid, return FAIL (no info).&#10; The caller MUST NOT use the value in parent if the return is not&#10; SUCCESS. Calling getEtx at the root will set the etx argument to&#10; 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="etx" ref="0x7f2c5509e470" loc="64:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerImmediateRouteUpdate" ref="0x7f2c5509d848" loc="78:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.</short>
          <long>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setNeighborCongested" ref="0x7f2c5509cd98" loc="88:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Informs the routing engine that a neighbor is congested&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f2c5509c7e0" loc="88:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </variable>
          <variable name="congested" ref="0x7f2c5509cb18" loc="88:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborAddr" ref="0x7f2c55098cb8" loc="98:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f2c55098a48" loc="98:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x7f2c550aac50" loc="53:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the parent of the node in the tree.</short>
          <long>&#10; Get the parent of the node in the tree.  The pointer is allocated&#10; by the caller.  If the parent is invalid, return FAIL.  The&#10; caller MUST NOT use the value in parent if the return is not&#10; SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="parent" ref="0x7f2c550aa9e0" loc="53:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborRouteQuality" ref="0x7f2c55098378" loc="97:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f2c55098108" loc="97:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isNeighborCongested" ref="0x7f2c5509b788" loc="93:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10;  Returns the currently known state about a neighbor's congestion state&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f2c5509b518" loc="93:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationValue" loc="44:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <short>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.</short>
        <long>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10;&#10; @date   Jan 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f2c55155468" loc="44:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <interfacedef-ref qname="DisseminationValue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f2c55155468"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="changed" ref="0x7f2c5514f020" loc="69:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Signalled whenever variable may have changed.</short>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f2c55155cc8" loc="55:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Obtain a pointer to the variable.</short>
          <long>&#10; Obtain a pointer to the variable. The provider of this&#10; interface only will change the memory the pointer references&#10; in tasks. Therefore the memory region does not change during&#10; the execution of any other task. A user of this interface&#10; must not in any circumstance write to this memory location.&#10;&#10; @return A const pointer to the variable.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f2c55155468"/></type-var>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f2c55151708" loc="64:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Set the variable to a new value.</short>
          <long>&#10; Set the variable to a new value. The provider of this interface&#10; will copy the value from the pointer. NOTE: This command does&#10; not cause the new value to begin disseminating. It is intended to&#10; be used for setting default values.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f2c55155468"/></type-var>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x7f2c55151498" loc="64:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f2c55155468"/></type-var>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ForceParentInsertion" loc="3:/opt/tinyos-2.1.2/tos/lib/net/ctp/ForceParentInsertion.nc">
      <function command="" provided="0" name="unSetParent" ref="0x7f2c5505a960" loc="5:/opt/tinyos-2.1.2/tos/lib/net/ctp/ForceParentInsertion.nc">
        <interfacedef-ref qname="ForceParentInsertion"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="forceParent" ref="0x7f2c5505a290" loc="4:/opt/tinyos-2.1.2/tos/lib/net/ctp/ForceParentInsertion.nc">
        <interfacedef-ref qname="ForceParentInsertion"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="parent" ref="0x7f2c5505a020" loc="4:/opt/tinyos-2.1.2/tos/lib/net/ctp/ForceParentInsertion.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f2c550b6a98" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
              <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c550b6198" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f2c550b64c0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2c550b67d0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpCongestion" loc="1:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpCongestion.nc">
      <function command="" provided="0" name="isCongested" ref="0x7f2c55095020" loc="7:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClientCongested" ref="0x7f2c55095978" loc="14:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="congested" ref="0x7f2c55095708" loc="14:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpCongestion.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f2c550d3428" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f2c550d3b60" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f2c550d2328" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f2c550d01d8" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f2c550cf810" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f2c550ce020" loc="117:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f2c550d2a40" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f2c550ceb20" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f2c550ce8b0" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f2c550d4cd8" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f2c550d0948" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f2c550cf0d8" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f2c55068020" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f2c5517e3d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2c5506dcb8" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f2c55071020" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2c55073d88" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f2c550744c0" loc="68:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f2c55073020" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2c55074ca8" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f2c5506f760" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2c5506f1a8" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f2c5506f4e0" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f2c55070348" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2c55071d60" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f2c550700c8" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f2c5506ba60" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2c5506b7f0" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f2c5506ace0" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2c5506a760" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f2c5506aa60" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f2c5517e020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f2c5506c908" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2c5506c698" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f2c550673e0" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f2c5517e3d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2c55068e00" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f2c55067160" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f2c5517e3d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f2c55065178" loc="195:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f2c5517e3d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2c550cc518" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2c550cc518"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f2c550bf020" loc="136:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f2c550c48f8" loc="83:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f2c550c25b8" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f2c550c2020" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f2c550c2338" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f2c550c3870" loc="98:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f2c550be020" loc="151:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f2c550bf740" loc="144:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f2c550c30d8" loc="92:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f2c550c6020" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f2c550ccd78" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f2c550c15b8" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f2c550c1020" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f2c550c1338" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f2c550c6a60" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f2c550c67f0" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f2c550c4258" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f2c55266a38" loc="67:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f2c55264258" loc="75:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f2c5500b870" loc="62:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7f2c54fff810" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7f2c54fff5a0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7f2c55001020" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7f2c55001a18" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f2c550017a8" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7f2c550004d0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f2c55000260" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7f2c55000d18" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f2c54feedc0" loc="44:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f2c54fed4c8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f2c54fee070" loc="42:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f2c54fec290" loc="47:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f2c54fee710" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f2c54fedb80" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f2c54ff0328" loc="40:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f2c54ff0998" loc="41:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f2c55b79dd8" loc="57:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f2c55270cd0" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f2c55270530" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f2c551b8e28" loc="76:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f2c551984f8" loc="62:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f2c5522a940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f2c55199020" loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f2c54e13cc0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f2c54e136e0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f2c54e13a40" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f2c54e07ad0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54e074e8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f2c54e07850" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f2c54e04bc0" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54e04950" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f2c54e08c90" loc="57:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f2c54e08338" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f2c54e080c8" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f2c54e0d0a8" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54e12dd0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f2c54e0c290" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54e0c020" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f2c54e0b338" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54e0b0c8" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f2c54dfea48" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54dfe7d8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f2c54e0ed50" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54e0e768" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f2c54e0ead0" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f2c54e02af0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54e02880" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f2c54e020b8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54e01a90" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f2c54e01df8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f2c54dfd970" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54dfd700" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x7f2c54dfa178" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f2c54e09990" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f2c54e09720" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f2c54dfa950" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f2c54e05a58" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2c54e05a58"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f2c54e05c88" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c54e05c88"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f2c54df5938" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c54e05c88"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54df56c8" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f2c54df4a38" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54df47c8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f2c54df77d0" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54df7560" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f2c54df2c68" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c54e05c88"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54df26a8" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f2c54df29e8" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c54e05c88"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x7f2c54dde6d8" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f2c54dde6d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x7f2c54dd96a8" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54dd9438" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f2c54ddac88" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f2c54dde6d8"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54ddaa18" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f2c54dda290" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54dda020" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f2c54dd8388" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f2c54dde6d8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54dd9d98" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f2c54dd8108" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f2c54dde6d8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2c54dcf720" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2c54dcf720"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f2c54dca020" loc="61:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f2c54dcd020" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54dd0c50" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f2c54dab0d8" loc="120:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f2c54dac178" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f2c54dae848" loc="88:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f2c54dac900" loc="102:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f2c54dabac0" loc="128:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x7f2c54da6020" loc="41:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f2c55105020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54da7cc8" loc="41:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f2c54dafbc8" loc="37:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f2c55105020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f2c54da75b8" loc="39:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f2c55105020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54da7348" loc="39:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f2c54da5988" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f2c55105020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54da5398" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f2c54da5708" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f2c55105020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f2c54da6cd8" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f2c55105020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54da66e8" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f2c54da6a58" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f2c55105020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x7f2c54da4c30" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f2c55107b38"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54da49c0" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x7f2c54da2928" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7f2c55107b38"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54da2348" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f2c54da26a8" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7f2c55107b38"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f2c54da42d0" loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54da4060" loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7f2c54da1070" loc="53:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f2c55107b38"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f2c54db5a70" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f2c55105020"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f2c54db5170" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f2c55105020"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f2c54db54d0" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2c54db57e0" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f2c54db1df0" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54db1828" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2c54db1b38" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f2c54db1020" loc="110:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f2c54db47e8" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54db4578" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f2c54db26e8" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54db2140" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f2c54db2468" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x7f2c54d5d498" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x7f2c54d6f0a8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d77de0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x7f2c54d60108" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f2c5517e3d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d62e30" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x7f2c54d5f758" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d5f4e8" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f2c54d63a48" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d637d8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f2c54d643b0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d64140" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f2c54d62718" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d62160" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f2c54d62498" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f2c54d630b8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d64ab8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f2c54d64df0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f2c54d60d88" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f2c5517e3d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d607d8" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f2c54d60b08" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f2c5517e3d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x7f2c54d72cd0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x7f2c54d69610" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x7f2c54d67768" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d674f8" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x7f2c54d68108" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d69e28" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x7f2c54d68b90" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d68920" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x7f2c54d3fb28" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x7f2c54d40ca8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7f2c55109b08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x7f2c54d40a38" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7f2c55109b08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f2c54d3f420" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x7f2c54d40258" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x7f2c54d3d328" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f2c55109b08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x7f2c54d37468" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d371f8" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f2c54d3b968" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d3b6f8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f2c54d38020" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f2c54d3a710" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d3a160" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f2c54d3a490" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7f2c54d42e48" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d42bd8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7f2c54d38a38" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d387c8" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f2c54d84258" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7f2c54d87a38" loc="40:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d877c8" loc="40:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7f2c54d84d10" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d84aa0" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x7f2c54d83590" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x7f2c54d82108" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d83e28" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x7f2c54d80a18" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d807a8" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x7f2c54d79d68" loc="86:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x7f2c54d79600" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2c54d79020" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f2c54d79380" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7f2c54d7d290" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d7d020" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x7f2c54d7dd30" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d7dac0" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x7f2c54d7cbe0" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2c54d7c600" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f2c54d7c960" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x7f2c54d85a20" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7f2c54d7e7f0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d7e278" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f2c54d7e570" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7f2c54d7a718" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d7a4a8" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x7f2c54d4d4e8" loc="131:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d4d278" loc="131:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x7f2c54d50cc8" loc="120:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d50a58" loc="120:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x7f2c54d5a9e0" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d5a440" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x7f2c54d5a760" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x7f2c54d58a90" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d58820" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x7f2c54d482a0" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d49ba0" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f2c54d48020" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x7f2c54d58020" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d59c70" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x7f2c54d4ea78" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d4e4e8" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x7f2c54d4e7f8" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x7f2c54d553c0" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2c54d56db8" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f2c54d55140" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x7f2c54d49468" loc="151:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d491f8" loc="151:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x7f2c54d59468" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d591f8" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x7f2c54d54d28" loc="99:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d54ab8" loc="99:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x7f2c54d542a0" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2c54d55c10" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f2c54d54020" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x7f2c54d457c0" loc="178:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f2c55105020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7f2c54d48ca0" loc="162:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d48a30" loc="162:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7f2c54d45030" loc="173:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f2c55107b38"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x7f2c54d4ba20" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d4b470" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f2c54d4b7a0" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x7f2c54d565b8" loc="81:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d56348" loc="81:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x7f2c54d502e0" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d51ce0" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x7f2c54d50060" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x7f2c54d4c2a0" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d4dc40" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x7f2c54d4c020" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f2c54d44290" loc="185:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d44020" loc="185:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7f2c54d52a78" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d52500" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f2c54d527f8" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x7f2c54d65c88" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d65a18" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7f2c54d477b8" loc="168:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d47548" loc="168:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x7f2c54d4cca8" loc="141:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d4ca38" loc="141:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x7f2c54d51538" loc="110:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d512c8" loc="110:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x7f2c54d747a8" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d741f8" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x7f2c54d74528" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x7f2c54d73020" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x7f2c54d75020" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d81c50" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x7f2c54d75a40" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d757d0" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x7f2c54d6d118" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d6ee78" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x7f2c54d6e630" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d6e3c0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x7f2c54d6d900" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x7f2c54d6c3b0" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54d6c140" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2c54cdbb20" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2c54cdbb20"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f2c54cdbd50" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c54cdbd50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f2c54cd47a0" loc="109:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c54cdbd50"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f2c54cd67c0" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f2c54cd5d70" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c54cdbd50"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c54cdbd50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f2c54cd57d0" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c54cdbd50"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f2c54cd5af0" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c54cdbd50"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f2c54cd5020" loc="88:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f2c54cd3020" loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c54cdbd50"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f2c54cd8848" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c54cdbd50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f2c54cd85d8" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c54cdbd50"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f2c54cd6070" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x7f2c54cc5a18" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x7f2c54cc4328" loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x7f2c54cc4c40" loc="79:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x7f2c54cc5328" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x7f2c54c908c8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54c90658" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f2c54c8b290" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54c8b020" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f2c54c8c7a0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54c8c1f8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f2c54c8c520" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7f2c54c8fc10" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
              <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54c8f968" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f2c54c778f8" loc="50:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f2c54c757c8" loc="60:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f2c54c750d8" loc="55:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f2c5517e3d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f2c54c77118" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f2c5517e3d0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f2c54c7aae8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f2c5517e3d0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f2c54c7ae20" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f2c54bd0c90" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f2c54bcd580" loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f2c54bc8bf0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f2c54bc8440" loc="59:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f2c54bcb360" loc="90:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f2c54bcbb50" loc="98:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f2c54bbfac8" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f2c54bc9c40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f2c54bbf858" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f2c54bc9c40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f2c54bc4ae8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f2c54bc05e8" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f2c54bc9c40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f2c54bc0378" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f2c54bc9c40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f2c54bbf020" loc="70:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f2c54bc9c40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7f2c54a66e70" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
              <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54a66bc8" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x7f2c54a66290" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54a66020" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f2c54a53020" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f2c54a54ce0" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x7f2c54a53790" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f2c54a5dcf8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f2c54a5da88" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f2c54a54640" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f2c54a543d0" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x7f2c54a59020" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f2c54a5ad80" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x7f2c54a584e0" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f2c54a58270" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x7f2c54a59ab0" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f2c54a59840" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x7f2c54a56020" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f2c54a58ce8" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x7f2c54a5a5b0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f2c54a5a340" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x7f2c549cb748" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x7f2c549c7808" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f2c549c6290" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f2c549c6020" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x7f2c549c69f0" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x7f2c549c7020" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f2c549c5258" loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x7f2c549c2020" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c549cad10" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x7f2c549c13a0" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f2c549c2b58" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f2c549c28e8" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f2c5492ae48" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f2c5492ae48"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f2c54926918" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f2c5492ae48"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f2c549266a8" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f2c5492ae48"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x7f2c54901ca0" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54901a30" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f2c54905c18" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c549059a8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x7f2c54902928" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54902398" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f2c549026a8" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f2c54901338" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c549010c8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x7f2c548cf5b8" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f2c548cf348" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f2c548d2b70" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2c54852df8" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2c54852df8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f2c5484f068" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c5484f068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f2c5484f900" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c5484f068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f2c5484d968" loc="76:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f2c5484d178" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f2c5484c0d8" loc="82:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f2c54821488" loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f2c54822360" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f2c54825110" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f2c54822cd0" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f2c54822a60" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f2c54824bb8" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f2c54824948" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f2c54821e00" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f2c54821b90" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f2c54825840" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f2c54824290" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f2c54824020" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x7f2c548119a8" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x7f2c54813a60" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x7f2c548121d8" loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x7f2c548129a8" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7f2c548101d8" loc="98:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x7f2c548111d8" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7f2c54817888" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f2c551e6978"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f2c551e6d80"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7f2c54813290" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f2c551e6978"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f2c551e6d80"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f2c54813020" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f2c551e6978"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f2c551e6d80"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f2c54827848" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c54827848"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7f2c5481a020" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f2c5481c258" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f2c5481e178" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c54827848"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f2c5481c960" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f2c5481a770" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f2c5481eac0" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c54827848"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f2c5481e850" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c54827848"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f2c5481b0d8" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f2c5481b7c0" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f2c54835b60" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f2c54835b60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7f2c5482c020" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f2c5482e178" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f2c54832438" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f2c54835b60"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7f2c5482c970" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f2c5482c700" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7f2c5482b178" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f2c54830c00" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f2c548304e0" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f2c5482e8d0" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f2c54832d70" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f2c54835b60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f2c54832b00" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f2c54835b60"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f2c5482f328" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f2c5482fa10" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2c54630908" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2c54630908"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f2c54630b38" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c54630b38"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f2c5462b630" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c54630b38"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f2c5462b3c0" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c54630b38"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f2c5462e1d8" loc="54:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f2c5462d290" loc="66:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f2c5462eb00" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f2c5462e890" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f2c546319a0" loc="53:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f2c54635020" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2c54638ce0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f2c54634338" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2c546340c8" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f2c54635820" loc="68:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f2c54634d40" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2c54634ad0" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f2c545474d0" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c545474d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7f2c5453e020" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7f2c54540c98" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f2c54541e18" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f2c54547d88" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c545474d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f2c54542108" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c545474d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f2c54543e28" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c545474d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f2c54542848" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f2c545405c0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f2c545436f0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c545474d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f2c54543480" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c545474d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f2c54541020" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f2c54541708" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f2c54526b88" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f2c54526278" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f2c545265d8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2c545268f8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f2c54522020" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f2c545252b0" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f2c54525610" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2c54525930" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f2c54525c78" loc="83:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f2c54528020" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f2c5452cc18" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7f2c5450f328" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7f2c54507c40" loc="126:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7f2c5450a7a8" loc="117:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7f2c54505610" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7f2c545053a0" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7f2c54511ba8" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7f2c54508338" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7f2c545080c8" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f2c5450c020" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7f2c5450dc88" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f2c5450e1d8" loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7f2c54501de0" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f2c54501b70" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f2c5450c758" loc="114:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7f2c54504690" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7f2c54504420" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f2c54503538" loc="136:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7f2c54507518" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7f2c545072a8" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7f2c545014a0" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7f2c54509290" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7f2c54509020" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f2c5450eb30" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2c5450e8c0" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f2c5450a0a8" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7f2c5450cdf8" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7f2c54508b48" loc="123:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7f2c54505d18" loc="129:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7f2c54504d80" loc="132:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f2c54503c80" loc="138:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7f2c545099a8" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f2c5450fa40" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f2c5450d4e0" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2c5450d270" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f2c544a7748" loc="95:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f2c544a5020" loc="105:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x7f2c544461d8" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f2c54443578" loc="87:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f2c54447328" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f2c54442780" loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f2c54442020" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f2c54443c78" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f2c544444c0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f2c54444250" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f2c54440290" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f2c54440020" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f2c54447a58" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x7f2c54444de8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f2c54444b78" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f2c54446b00" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f2c54446890" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrickleTimer" loc="57:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
      <function event="" provided="0" name="fired" ref="0x7f2c54298a78" loc="90:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
        <documentation loc="87:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
          <short>&#10; The trickle timer has fired.</short>
          <long>&#10; The trickle timer has fired. Signaled if C &#38;gt; K.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="incrementCounter" ref="0x7f2c542983a0" loc="85:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Increment the counter C.</short>
          <long>&#10; Increment the counter C. When an interval ends, C is set to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f2c5429abe0" loc="80:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Reset the timer period to L.</short>
          <long>&#10; Reset the timer period to L. If called while the timer is running,&#10; then a new interval (of length L) begins immediately.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f2c542a1cf8" loc="68:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Start the trickle timer.</short>
          <long>&#10; Start the trickle timer. At boot, the timer period is its maximum&#10; value (H). If a protocol requires starting at the minimum value&#10; (e.g., fast start), then it should call &#60;tt>reset&#60;/tt> before&#10; &#60;tt>start&#60;/tt>.&#10;&#10; @return error_t SUCCESS if the timer was started, EBUSY if it is already&#10; running, and FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f2c5429a500" loc="74:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Stop the trickle timer.</short>
          <long>&#10; Stop the trickle timer. This call sets the timer period to H and&#10; C to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationCache" loc="44:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <short>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.</short>
        <long>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-04 04:31:08 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestData" ref="0x7f2c542a0ac0" loc="47:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="size" ref="0x7f2c542a0818" loc="47:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="storeData" ref="0x7f2c5429d020" loc="48:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2c5429f5b0" loc="48:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x7f2c5429f8d0" loc="48:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
          <variable name="seqno" ref="0x7f2c5429fc08" loc="48:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="newData" ref="0x7f2c5429dd70" loc="50:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="start" ref="0x7f2c542a3a90" loc="45:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestSeqno" ref="0x7f2c5429d710" loc="49:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c55b6b608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="stop" ref="0x7f2c542a0178" loc="46:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationUpdate" loc="48:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
        <short>&#10; Update a network shared (disseminated) value.</short>
        <long>&#10; Update a network shared (disseminated) value. Updates are assured&#10; to be eventually consistent across a connected network. If multiple&#10; nodes update a value simultaneously, then nodes within the network&#10; will see a series of one or more updates, the last update will&#10; be the same for all nodes. Components that need to use the&#10; variable should use the DisseminationValue interface.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10; @date   January 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f2c5418bd00" loc="48:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
          <interfacedef-ref qname="DisseminationUpdate"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f2c5418bd00"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="change" ref="0x7f2c54188ad0" loc="60:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
          <short>&#10; Update the variable to a new value.</short>
          <long>&#10; Update the variable to a new value. This changes the local copy&#10; and begins to disseminate the new value throughout the network.&#10; As other nodes may have also changed the variable, it is possible&#10; that an update may not 'stick,' but will instead be overwritten by&#10; a separate update.&#10;&#10; @param newVal A pointer to the new value. The memory pointed to&#10; by newVal is copied out, so newVal can be reclaimed when&#10; &#60;tt>change&#60;/tt> returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f2c5418bd00"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f2c54188860" loc="60:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f2c5418bd00"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitVector" loc="40:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <short>&#10; Interface to a bit vector.</short>
        <long>&#10; Interface to a bit vector.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearAll" ref="0x7f2c541414a8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Clear all bits in the vector.</short>
          <long>&#10; Clear all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f2c5413e990" loc="69:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to clear.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7f2c5413e720" loc="69:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f2c5413d338" loc="75:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Toggle a bit in the vector.</short>
          <long>&#10; Toggle a bit in the vector.&#10; @param bitnum Bit to toggle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7f2c5413d0c8" loc="75:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f2c5413f518" loc="57:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Read a bit from the vector.</short>
          <long>&#10; Read a bit from the vector.&#10; @param bitnum Bit to read.&#10; @return Bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7f2c5413f2a8" loc="57:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="assign" ref="0x7f2c5413c020" loc="82:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Write a bit in the vector.</short>
          <long>&#10; Write a bit in the vector.&#10; @param bitnum Bit to clear.&#10; @param value New bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7f2c5413da48" loc="82:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x7f2c5413dd58" loc="82:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAll" ref="0x7f2c54141ba0" loc="50:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Set all bits in the vector.</short>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f2c5413e020" loc="63:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to set.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7f2c5413fc18" loc="63:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f2c5413c790" loc="88:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Return bit vector length.</short>
          <long>&#10; Return bit vector length.&#10; @return Bit vector length.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Intercept" loc="15:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0x7f2c540a75c0" loc="31:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
        <documentation loc="16:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination.</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param 'message_t* ONE msg' The complete message received.&#10;&#10; @param 'void* COUNT(len) payload' The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c540aac70" loc="31:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f2c540a7020" loc="31:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2c540a7330" loc="31:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpPacket" loc="44:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <short>&#10;  ADT for CTP data frames.</short>
        <long>&#10;  ADT for CTP data frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007-11-28 04:42:52 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSequenceNumber" ref="0x7f2c54098348" loc="64:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54099d58" loc="64:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x7f2c540980c8" loc="64:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="option" ref="0x7f2c540a0a48" loc="52:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f2c55175088"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c540a0478" loc="52:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x7f2c540a07c8" loc="52:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f2c55175088"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x7f2c5409c5c0" loc="58:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c5409c020" loc="58:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x7f2c5409c340" loc="58:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x7f2c5409ac70" loc="61:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c5409a6b8" loc="61:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f2c5409a9f0" loc="61:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x7f2c540a1d70" loc="49:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f2c55175088"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c540a1780" loc="49:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x7f2c540a1af0" loc="49:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f2c55175088"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPassNodeId" ref="0x7f2c54092a40" loc="74:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54092488" loc="74:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="_passni" ref="0x7f2c540927c0" loc="74:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x7f2c5409d960" loc="57:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c5409d6f0" loc="57:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x7f2c5409a020" loc="60:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c5409ccb8" loc="60:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f2c540968d0" loc="67:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54096348" loc="67:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x7f2c54096650" loc="67:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPassNodeId" ref="0x7f2c54094d58" loc="73:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54094ae8" loc="73:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x7f2c540a10b8" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f2c55175088"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c540a4a80" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x7f2c540a4df0" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f2c55175088"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchPacket" ref="0x7f2c540943c0" loc="70:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x7f2c54095da8" loc="70:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x7f2c54094140" loc="70:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getThl" ref="0x7f2c5409f3b0" loc="54:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c5409f140" loc="54:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x7f2c54099670" loc="63:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54099400" loc="63:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchInstance" ref="0x7f2c540956d8" loc="69:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x7f2c54095100" loc="69:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x7f2c54095458" loc="69:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x7f2c54098c80" loc="66:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c54098a10" loc="66:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setThl" ref="0x7f2c5409d020" loc="55:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c5409fa28" loc="55:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="thl" ref="0x7f2c5409fd38" loc="55:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionId" loc="45:/opt/tinyos-2.1.2/tos/lib/net/CollectionId.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/CollectionId.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="fetch" ref="0x7f2c5408c720" loc="46:/opt/tinyos-2.1.2/tos/lib/net/CollectionId.nc">
        <interfacedef-ref qname="CollectionId"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x7f2c55179b58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkEstimator" loc="46:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <short> Provides an additive quality measure for a neighbor.</short>
        <long> Provides an additive quality measure for a neighbor. The&#10; provided quality increases when the true link quality increases.&#10;  @author Rodrigo Fonseca&#10;  @author Omprakash Gnawali&#10;  @date   $Date: 2010-06-29 22:07:47 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="txAck" ref="0x7f2c54077338" loc="62:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f2c540770c8" loc="62:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pinNeighbor" ref="0x7f2c54078020" loc="55:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f2c54079d00" loc="55:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="txNoAck" ref="0x7f2c54077c90" loc="66:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f2c54077a20" loc="66:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNeighbor" ref="0x7f2c540795f0" loc="52:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f2c54079380" loc="52:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x7f2c54074020" loc="72:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f2c54076cd0" loc="72:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearDLQ" ref="0x7f2c54076630" loc="69:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f2c540763c0" loc="69:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="unpinNeighbor" ref="0x7f2c540789b8" loc="58:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f2c54078748" loc="58:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLinkQuality" ref="0x7f2c5407dc18" loc="49:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f2c5407d9a8" loc="49:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Cache" loc="44:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
        <short>&#10; A data item cache.</short>
        <long>&#10; A data item cache. The cache does not own the items it caches:&#10; there is no allocation/deallocation policy, or notification of&#10; eviction. Correspondingly, using references (pointers) as data&#10; items can be difficult.&#10; &#10; @author Rodrigo Fonseca&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f2c54045d38" loc="44:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
          <interfacedef-ref qname="Cache"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f2c54045d38"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="insert" ref="0x7f2c540417a0" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
          <short>&#10; Inserts an item in the cache, evicting if necessary.</short>
          <long>&#10; Inserts an item in the cache, evicting if necessary.&#10; An atomic lookup after insert should return true.&#10;&#10; @param item - the data item to insert.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f2c54045d38"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7f2c54041530" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f2c54045d38"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f2c540409b8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
          <short>&#10; Flush the cache of all entries.</short>
          <long>&#10; Flush the cache of all entries.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="lookup" ref="0x7f2c54040290" loc="59:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
          <short>&#10; Return whether the data item is in the cache.</short>
          <long>&#10; Return whether the data item is in the cache.&#10;&#10; @param item - the data item to query&#10; @return Whether the item is in the cache.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f2c54045d38"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7f2c54040020" loc="59:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f2c54045d38"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UnicastNameFreeRouting" loc="41:/opt/tinyos-2.1.2/tos/lib/net/UnicastNameFreeRouting.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/UnicastNameFreeRouting.nc">
        <short>&#10;  Provides a single next hop on a name-free protocol.</short>
        <long>&#10;  Provides a single next hop on a name-free protocol.&#10;&#10;  @author Philip Levis&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="hasRoute" ref="0x7f2c54051988" loc="49:/opt/tinyos-2.1.2/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="routeFound" ref="0x7f2c54050030" loc="51:/opt/tinyos-2.1.2/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="nextHop" ref="0x7f2c540511d8" loc="48:/opt/tinyos-2.1.2/tos/lib/net/UnicastNameFreeRouting.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/lib/net/UnicastNameFreeRouting.nc">
          <short>&#10; Get the address of the best next hop set to the destination.</short>
          <long>&#10; Get the address of the best next hop set to the destination.&#10; If there is not best next hop, the address is the local address.&#10; @return : The next best hop, or the local address if there is no route.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="noRoute" ref="0x7f2c54050690" loc="52:/opt/tinyos-2.1.2/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CompareBit" loc="47:/opt/tinyos-2.1.2/tos/lib/net/ctp/CompareBit.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/ctp/CompareBit.nc">
        <short> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table.</short>
        <long> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table. The return value is the &#34;pin bit&#34; - if true&#10; insert into the neighbor table. In the reference implementation&#10; the router will return true if the path through the source&#10; will be better than a path through at least one current neighbor.&#10;@ author Omprakash Gnawali&#10;@ Created: September 16, 2006&#10;@date   $Date: 2010-06-29 22:07:49 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="shouldInsert" ref="0x7f2c53e74020" loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CompareBit.nc">
        <interfacedef-ref qname="CompareBit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c53e76228" loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f2c53e769e0" loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2c53e76cf0" loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CompareBit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpRoutingPacket" loc="43:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <short>&#10;  ADT for CTP routing frames.</short>
        <long>&#10;  ADT for CTP routing frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2009-09-21 02:19:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearOptions" ref="0x7f2c53d98a10" loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c53d987a0" loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x7f2c53d922a0" loc="57:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c53d94cd0" loc="57:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x7f2c53d92020" loc="57:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x7f2c53d99d60" loc="48:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f2c55175088"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c53d99790" loc="48:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x7f2c53d99ae0" loc="48:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f2c55175088"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x7f2c53d94338" loc="56:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c53d940c8" loc="56:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x7f2c53d9ad50" loc="47:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f2c55175088"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c53d9a780" loc="47:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x7f2c53d9aad0" loc="47:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f2c55175088"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setParent" ref="0x7f2c53d95680" loc="54:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c53d950c8" loc="54:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f2c53d95400" loc="54:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x7f2c53d966d0" loc="53:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f2c5517e788"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c53d96460" loc="53:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOption" ref="0x7f2c53d9cd50" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f2c55175088"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c53d9c780" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x7f2c53d9cad0" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f2c55175088"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x7f2c53c37960" loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f2c53c37178" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x7f2c53c35178" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f2c53c2f378" loc="52:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f2c53c2f378"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f2c53c2fbe8" loc="58:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f2c53c2e8e8" loc="66:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f2c53c2f378"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f2c53c2e368" loc="66:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f2c53c2e668" loc="66:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f2c53c2f378"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f2c53c1d138" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f2c53c1e420" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7f2c53c1e778" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7f2c53c1eae0" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7f2c53c1ee30" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f2c53c1cda8" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2c53c1dd00" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7f2c53c1c060" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7f2c53c1c398" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x7f2c53c1c748" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x7f2c53c1caf8" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f2c53c23d78" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f2c53c230c8" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7f2c53c23420" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7f2c53c23788" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7f2c53c23ad8" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f2c53c216a8" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f2c53c22e08" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2c53c22868" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7f2c53c22b88" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x7f2c53c0c0d8" loc="114:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x7f2c53c13258" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2c5520c3a0"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x7f2c5520c858"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x7f2c53c09338" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="135:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f2c53c090c8" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f2c53c0c918" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="118:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x7f2c53c11d68" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x7f2c53c13c30" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2c5520c3a0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7f2c5520c858"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x7f2c53c139c0" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2c5520c3a0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7f2c5520c858"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x7f2c53c0fbc0" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x7f2c53c0a870" loc="133:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f2c53c09ad0" loc="150:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="142:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x7f2c53c0f480" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x7f2c53c0ea80" loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x7f2c53c0e360" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7f2c53c0d1d8" loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x7f2c53c0a0d8" loc="127:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x7f2c53c12e30" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2c55206ce0"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f2c55205438"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x7f2c53c12bc0" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2c55206ce0"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f2c55205438"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x7f2c53c0d990" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="107:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x7f2c53c12440" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2c55206ce0"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f2c55205438"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f2c53c11608" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f2c53c08640" loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="152:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2c53c083d0" loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f2c53b95df8" loc="56:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f2c53b94e38" loc="73:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f2c53b955d8" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f2c53b94670" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f2c53b92760" loc="81:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f2c53b210d8" loc="62:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7f2c53a1f640" loc="31:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c53a1f060" loc="31:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7f2c53a1f3c0" loc="31:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7f2c53a23948" loc="15:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7f2c53a20760" loc="23:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c53a20198" loc="23:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c550e23a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c550e18e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7f2c53a204e0" loc="23:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7f2c539ebb60" loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f2c539eb450" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7f2c539f31d8" loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7f2c539f2528" loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7f2c539ef020" loc="94:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2c539f1d60" loc="94:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7f2c539f2d40" loc="79:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7f2c539f3cc8" loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2c539f3a58" loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7f2c539ef818" loc="100:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7f2c539f15b8" loc="85:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7f2c539fa110" loc="71:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7f2c539fa9c8" loc="81:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7f2c539fb7b8" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7f2c539fb548" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7f2c539f94e8" loc="91:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f2c539f9278" loc="91:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7f2c539f7020" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7f2c539f7bc8" loc="69:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2c539f7958" loc="69:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7f2c539f5640" loc="80:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f2c539f53d0" loc="80:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f2c538cd9b8" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f2c538cd418" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2c538cd738" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f2c538c74a8" loc="79:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f2c538c7238" loc="79:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f2c538c62a0" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f2c538c7c20" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2c538c6020" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f2c538c91d8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f2c538c5a38" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f2c538c5160" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2c538c5480" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f2c538c57a8" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f2c538c9a50" loc="72:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f2c538cb2b0" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f2c538ca880" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2c538caba0" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c55b6cb98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f2c538cb020" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f2c538a8bb0" loc="46:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f2c538a8940" loc="46:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f2c538a59b0" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f2c538a53f8" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f2c538a5730" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f2c53892578" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f2c53893738" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x7f2c5388fc08" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2c5388f998" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f2c53891c08" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f2c538967f8" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f2c53893020" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f2c53893e58" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c552685d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x7f2c53892c58" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c5528d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f2c53891578" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2c53891308" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f2c5388f328" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c55b6c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
