<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="35:TestNetworkLplAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f3dd20fc850"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f3dd1fc2968"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f3dd1fc2968"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f3dd1fbac38"/></to>
    </wire>
    <wire loc="36:TestNetworkLplAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7f3dd20fd020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f3dd1dd1728"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f3dd1dd1728"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f3dd1da46d8"/></to>
    </wire>
    <wire loc="37:TestNetworkLplAppC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f3dd20fdbd8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f3dd094aaa0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f3dd094aaa0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f3dd08e4728"/></to>
    </wire>
    <wire loc="38:TestNetworkLplAppC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x7f3dd20f7170"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f3dd0f51390"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f3dd0f51390"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f3dd0f33720"/></to>
    </wire>
    <wire loc="39:TestNetworkLplAppC.nc">
      <from><interface-ref name="DisseminationControl" scoped="" ref="0x7f3dd20f7a48"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f3dd1157a00"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f3dd1157a00"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f3dd1156d18"/></to>
    </wire>
    <wire loc="40:TestNetworkLplAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f3dd20ee020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f3dd1dfd190"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f3dd1dfd190"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f3dd1df9930"/></to>
    </wire>
    <wire loc="41:TestNetworkLplAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f3dd20674f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f3dd0b06da0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f3dd0b06da0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f3dd19554e8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:TestNetworkLplAppC.nc">
      <from><interface-ref name="DisseminationPeriod" scoped="" ref="0x7f3dd20f08a8"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x7f3dd0f59808"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminationValue" scoped="" ref="0x7f3dd0f59808"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x7f3dcfd38020"/></to>
    </wire>
    <wire loc="43:TestNetworkLplAppC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f3dd20809b8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3dd0b1a1a8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f3dd0b1a1a8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3dcfa83c90"/></to>
    </wire>
    <wire loc="44:TestNetworkLplAppC.nc">
      <from><interface-ref name="ReadSensor" scoped="" ref="0x7f3dd2072810"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f3dd0affaf0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f3dd0affaf0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f3dcfa74020"/></to>
    </wire>
    <wire loc="45:TestNetworkLplAppC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f3dd2061e78"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f3dd0f36d90"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f3dd0f36d90"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f3dd0f23020"/></to>
    </wire>
    <wire loc="46:TestNetworkLplAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f3dd205b4b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f3dd0f4f1c8"/>
      <arguments>
        <value cst="I:238">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:TestNetworkLplAppC.nc">
      <from><interface-ref name="UARTSend" scoped="" ref="0x7f3dd2052230"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f3dd05a9398"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f3dd05a9398"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f3dcfa11790"/></to>
    </wire>
    <wire loc="48:TestNetworkLplAppC.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x7f3dd204c940"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x7f3dd0f4b020"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x7f3dd0f4b020"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x7f3dd0f29020"/></to>
    </wire>
    <wire loc="49:TestNetworkLplAppC.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x7f3dd20426a0"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x7f3dd0f46020"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x7f3dd0f46020"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x7f3dd0f27b58"/></to>
    </wire>
    <wire loc="50:TestNetworkLplAppC.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x7f3dd203f340"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x7f3dd0f36600"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x7f3dd0f36600"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x7f3dd0f24788"/></to>
    </wire>
    <wire loc="51:TestNetworkLplAppC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f3dd203c198"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f3dd162a690"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f3dd162a690"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f3dd16234c8"/></to>
    </wire>
    <wire loc="52:TestNetworkLplAppC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f3dd2032020"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f3dd059c058"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f3dd059c058"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f3dcf91b168"/></to>
    </wire>
    <wire loc="53:TestNetworkLplAppC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f3dd2036df8"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f3dd05a3478"/></to>
    </wire>
    <wire loc="54:TestNetworkLplAppC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f3dd200f020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f3dd1dc9100"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f3dd1dc9100"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f3dd1d9de38"/></to>
    </wire>
    <wire loc="55:TestNetworkLplAppC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f3dd2001ab8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f3dd1dc46a8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f3dd1dc46a8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f3dd1d99af8"/></to>
    </wire>
    <wire loc="67:TestNetworkLplAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3dd20118a0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f3dd1dc9d10"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3dd1dc9d10"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f3dd1d9ba80"/></to>
    </wire>
    <wire loc="43:TestNetworkLplC.nc">
      <from><interface-ref name="uartEchoTask" scoped="" ref="0x7f3dd200ee48"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3dd223a1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f3dd1fbfd68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3dcf91ca70"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f3dd1fbfd68"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x7f3dd06ed020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f3dd1fbfd68"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x7f3dd06ebe30"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f3dd1fbfd68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3dd0758120"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f3dd1fbfd68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3dd08e4110"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f3dd1fbfd68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3dcfa5f140"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f3dd1fbfd68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3dcfbb01a8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f3dd1fbfd68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3dcfbcc5f8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f3dd1fbfd68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3dcfbdf140"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f3dd1fbfd68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3dd0b6c578"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f3dd1fbfd68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3dd0dfc020"/></to>
    </wire>
    <wire loc="226:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f3dd1fbfd68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3dd0d34d50"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f3dd1fbfd68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3dcfd189b0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f3dd1fbfd68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3dcfe637b0"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f3dd1fbfd68"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f3dd14fcbf0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f3dd1fbfd68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3dd1629b30"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f3dd1fbfd68"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f3dcffd1a90"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f3dd1fbfd68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3dd1950e38"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f3dd1fbfd68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3dd19e6238"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f3dd1fbfd68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3dd0112de8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f3dd1fbfd68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3dd01cdc38"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f3dd1e0c308"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f3dd22175c8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f3dd22175c8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f3dd2164d88"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f3dd1e0cce0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f3dd13f7870"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f3dd1e0cce0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f3dd14fc138"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f3dd1e0cce0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3dd1fbebe0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f3dd1fbebe0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3dd1fb04f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f3dd1e0b418"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f3dd1fbfd68"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f3dd1fb89a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3dd05de020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f3dd1fb89a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3dd0adadd0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f3dd1fb89a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3dd1250dc0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f3dd1fb3b98"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f3dd1e2aae0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7f3dd1faf398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3dd1e2a4b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f3dd1fb0b90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3dd1dd65e8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f3dd1fb0b90"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f3dd1fb2a08"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f3dd1fb2a08"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f3dd1fa7428"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f3dd1faa108"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f3dd1fb89a0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7f3dd1fa05f8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7f3dd1f961a0"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f3dd1f961a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f3dd1f12430"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f3dd1fa67f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f3dd1faa108"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f3dd1f64c78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd1e7e520"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f3dd1f7e7e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f3dd1ee8020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f3dd1ee8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd0414100"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f3dd1f737e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f3dd1ed8d60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f3dd1ed8d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd03a7100"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f3dd1f694d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f3dd1ec88c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f3dd1ec88c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd0340100"/></to>
    </wire>
    <wire loc="196:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7f3dd1f5eaf0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd1e64c38"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f3dd1f944d0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f3dd1f0f740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f3dd1f0f740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd053c020"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f3dd1f6b1a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f3dd1ecb5b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f3dd1ecb5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd0346100"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f3dd1f927e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f3dd1f08930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f3dd1f08930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd04e7180"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f3dd1f86968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f3dd1ef6740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f3dd1ef6740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd047a100"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f3dd1f7bc78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f3dd1ee5430"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f3dd1ee5430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd040b100"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f3dd1f6fc78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f3dd1ed3120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f3dd1ed3120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd039e100"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f3dd1f9ac78"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f3dd1f15020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f3dd1f15020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd054b020"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f3dd1f8fc78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f3dd1f04d60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f3dd1f04d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd04de100"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f3dd1f83e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f3dd1ef3bd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f3dd1ef3bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd0471100"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f3dd1f771a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f3dd1ee28c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f3dd1ee28c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd0402100"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f3dd1f66968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f3dd1ec5d60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f3dd1ec5d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd0337100"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f3dd1f607e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd1e6fc38"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f3dd1f754d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f3dd1edaa50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f3dd1edaa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd03ad100"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f3dd1f12430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd0542020"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f3dd1f8a348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f3dd1f00120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f3dd1f00120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd04d5100"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f3dd1f624d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd1e79cd8"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f3dd1f88658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f3dd1ef8500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f3dd1ef8500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd0480180"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f3dd1f7d968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f3dd1ee7120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f3dd1ee7120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd0411100"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f3dd1f71968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f3dd1ed7e18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f3dd1ed7e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd03a4100"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f3dd1f68658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f3dd1ec7a50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f3dd1ec7a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd033d100"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f3dd1f93658"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f3dd1f0e8c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f3dd1f0e8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd0538020"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f3dd1f91968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f3dd1f07a50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f3dd1f07a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd04e4100"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f3dd1f85af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f3dd1ef58c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f3dd1ef58c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd0477100"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f3dd1f7ae00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f3dd1ee45b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f3dd1ee45b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd0408100"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f3dd1f6ee00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f3dd1ed22a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f3dd1ed22a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd039b100"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f3dd1f99e00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f3dd1f14120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f3dd1f14120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd0548020"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f3dd1f8ee00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f3dd1f03e18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f3dd1f03e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd04db100"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f3dd1f81020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f3dd1ef2d60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f3dd1ef2d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd046e100"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f3dd1f65af0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f3dd1ec4e18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f3dd1ec4e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd0334100"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f3dd1f7f348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f3dd1eeae40"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f3dd1eeae40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd0417180"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f3dd1f74658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f3dd1ed9bd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f3dd1ed9bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd03aa100"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f3dd1f6a348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f3dd1ec9740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f3dd1ec9740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd0343100"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f3dd1f5f968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd1e693e0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f3dd1f95348"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f3dd1f115b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f3dd1f115b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd053f020"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f3dd1f894d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f3dd1eff2a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f3dd1eff2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd04d2100"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f3dd1f6c020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f3dd1ecc500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f3dd1ecc500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd0349180"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f3dd1f877e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f3dd1ef75b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f3dd1ef75b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd047d100"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f3dd1f7caf0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f3dd1ee62a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f3dd1ee62a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd040e100"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f3dd1f70af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f3dd1ed4020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f3dd1ed4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd03a1100"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f3dd1f677e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f3dd1ec6bd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f3dd1ec6bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd033a100"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f3dd1fa9a70"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f3dd1f17dc0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f3dd1f17dc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd054e020"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f3dd1f90af0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f3dd1f06bd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f3dd1f06bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd04e1100"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f3dd1f84c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f3dd1ef4a50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f3dd1ef4a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd0474100"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f3dd1f78020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f3dd1ee3740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f3dd1ee3740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd0405100"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f3dd1f61658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd1e733e0"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f3dd1f76348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f3dd1edb930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f3dd1edb930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd03b0180"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f3dd1f801a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f3dd1ef1e18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f3dd1ef1e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd046b100"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f3dd1f97020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f3dd1f132a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f3dd1f132a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd0545020"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f3dd1f8b100"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f3dd1f01020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f3dd1f01020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3dd04d8100"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f3dd223a1c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3dd2163c58"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f3dd215f168"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f3dd2216e28"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f3dd2142988"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f3dd189db78"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f3dd1dd65e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3dd1df9368"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f3dd1df7020"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f3dd1dd9090"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f3dd1dd9090"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7f3dd1f99e00"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f3dd1df6190"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f3dd1dd8378"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f3dd1dd8378"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7f3dd1f9ac78"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f3dd1df5338"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f3dd1dd7500"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f3dd1dd7500"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7f3dd1fa9a70"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f3dd1da46d8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f3dd1d7c810"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f3dd1dc5ad8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f3dd1d9e020"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f3dd1d9e020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f3dd1d75020"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f3dd1d9de38"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f3dd1d72550"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f3dd1dcd798"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f3dd1da1798"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f3dd1da1798"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f3dd1d79798"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f3dd1dcb498"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f3dd1d9f498"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f3dd1d9f498"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f3dd1d76498"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f3dd1d99af8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f3dd1d59a18"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f3dd1dcc928"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f3dd1da0928"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f3dd1da0928"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f3dd1d78928"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3dd1dbfcb0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3dd1d991a0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3dd1d991a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3dd1d590c0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f3dd1db6828"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f3dd1d985e0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f3dd1d985e0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f3dd1d585e0"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3dd1d9ba80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f3dd1d74e50"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f3dd1db2550"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f3dd1d972e8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f3dd1d972e8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f3dd1d572e8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7f3dd1db5260"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f3dd1d865d0"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f3dd1d865d0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f3dd1d4b3f8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f3dd1da8130"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f3dd1d80478"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f3dd1d80478"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f3dd1d47478"/></to>
    </wire>
    <wire loc="215:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f3dd1d7c810"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f3dd16de548"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f3dd1d8dd28"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f3dd1d50600"/></to>
    </wire>
    <wire loc="305:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f3dd1d50600"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f3dd15190c8"/></to>
    </wire>
    <wire loc="270:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f3dd1d47478"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f3dd1565270"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f3dd1d75020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f3dd1ba21a0"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f3dd1d72550"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f3dd1ba5700"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f3dd1d79798"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f3dd1ba4510"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f3dd1d76498"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f3dd1ba3aa0"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f3dd1d95870"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f3dd1d532d0"/></to>
    </wire>
    <wire loc="303:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f3dd1d532d0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f3dd151dcd0"/></to>
    </wire>
    <wire loc="216:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f3dd1d59a18"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f3dd16dbd60"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f3dd1d78928"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f3dd1ba3388"/></to>
    </wire>
    <wire loc="269:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f3dd1d4b3f8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f3dd1561020"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f3dd1d871d8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f3dd1d4c020"/></to>
    </wire>
    <wire loc="307:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f3dd1d4c020"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f3dd1510220"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f3dd1d90390"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f3dd1d57e40"/></to>
    </wire>
    <wire loc="304:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f3dd1d57e40"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f3dd1514860"/></to>
    </wire>
    <wire loc="248:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3dd1d590c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3dd15e43f0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7f3dd1d9ebe0"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7f3dd1d75be0"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7f3dd1d75be0"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7f3dd1ba28b8"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f3dd1d585e0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f3dd17a0ca0"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3dd1d74e50"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f3dd1ba61f0"/></to>
    </wire>
    <wire loc="224:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f3dd1d572e8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f3dd1669268"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f3dd1d84570"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f3dd1d4e778"/></to>
    </wire>
    <wire loc="306:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f3dd1d4e778"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f3dd15119d0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7f3dd1d9d860"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7f3dd1d74860"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7f3dd1d74860"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7f3dd1ba1020"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f3dd16de548"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f3dd003bad8"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f3dd15190c8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f3dd14f4020"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x7f3dd1d6f218"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f3dd1af3840"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x7f3dd1d68208"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3dd1b27200"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f3dd1b27200"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3dd01ca100"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f3dd1ba21a0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f3dd0222020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f3dd1ba4510"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f3dd0224388"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f3dd1ba3aa0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f3dd02237e0"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7f3dd1d62020"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f3dd1a22900"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7f3dd1a22900"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f3dd0161778"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7f3dd1d613d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f3dd1b22980"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f3dd151dcd0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f3dd14f8b48"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f3dd16dbd60"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f3dd00373f0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f3dd1ba5700"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f3dd0225578"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f3dd1ba3388"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f3dd02230c8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f3dd1561020"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f3dcfeb37d8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f3dd1510220"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f3dd13fb438"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f3dd1514860"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f3dd14ef860"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x7f3dd1d6ad80"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7f3dd1af5578"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7f3dd1ba28b8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7f3dd0222738"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f3dd17a0ca0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f3dd00f08c8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f3dd1669268"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f3dcffcf020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3dd1ba61f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f3dd0227020"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f3dd1565270"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f3dcfeb7a68"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x7f3dd1d70af0"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7f3dd1af32a8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f3dd15119d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f3dd14ec9d0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7f3dd1ba1020"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7f3dd0222e50"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f3dd1cfad58"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f3dd1a25980"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f3dd1a25980"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f3dd01647f8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f3dd1cf3bd8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f3dd1c8ec50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f3dd1cf2080"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f3dd1561020"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x7f3dd1cede08"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f3dd151ebd8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f3dd151ebd8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f3dd14f9a50"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f3dd1c51c68"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f3dd150e4b8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f3dd150e4b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f3dd13ff2e0"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f3dd1b9e328"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7f3dd1d18760"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f3dd1ba0430"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f3dd1b97100"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f3dd1ba0d18"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x7f3dd1ab5908"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f3dd1ba1678"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x7f3dd1ab4020"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f3dd1b883f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3dd1b27200"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f3dd1b97a48"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x7f3dd1ab5020"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f3dd1af3e38"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f3dd1a25980"/></to>
    </wire>
    <wire loc="154:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f3dd1aefba0"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7f3dd1ae7230"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f3dd1aee5b8"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7f3dd1ae7b18"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f3dd1af0d98"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f3dd1ab6120"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f3dd1ab4e00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3dd19b8470"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f3dd19b8470"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3dd0115da0"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f3dd1ab3740"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f3dd17a0708"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f3dd17a0708"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f3dd179d0c0"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f3dd1ab3d18"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f3dd1a21b98"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f3dd1a21b98"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f3dd0160a10"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f3dd1a20ab0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f3dd179f888"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f3dd179f888"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f3dd00ef578"/></to>
    </wire>
    <wire loc="181:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f3dd19b6580"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x7f3dd1d2db40"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f3dd19b7510"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3dd17a2dc8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f3dd17a2dc8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3dd00f0020"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3dd179c400"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3dd15e43f0"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f3dd179e7a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3dd16dd020"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f3dd16dd020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3dd003a5b8"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f3dd179d0c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f3dd16dd908"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f3dd16dd908"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f3dd0039020"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f3dd179d698"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f3dd16db020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f3dd16db020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f3dd00395b8"/></to>
    </wire>
    <wire loc="202:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f3dd16d7120"/></from>
      <to><interface-ref name="LowPowerListeningConfig" scoped="" ref="0x7f3dd1d13cc0"/></to>
    </wire>
    <wire loc="206:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3dd16d79c8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3dd15e43f0"/></to>
    </wire>
    <wire loc="211:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f3dd16da858"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f3dd166b708"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f3dd166b708"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f3dcffd1020"/></to>
    </wire>
    <wire loc="212:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f3dd16d9430"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3dd166a2a8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f3dd166a2a8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3dcffd00a0"/></to>
    </wire>
    <wire loc="213:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f3dd16d9d18"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f3dd166ab90"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f3dd166ab90"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f3dcffd0988"/></to>
    </wire>
    <wire loc="214:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f3dd16d8328"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f3dd155e9f8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f3dd155e9f8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f3dcfeb0220"/></to>
    </wire>
    <wire loc="221:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f3dd1668a10"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f3dd1615020"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f3dd1615020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f3dcff13020"/></to>
    </wire>
    <wire loc="222:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f3dd16673f0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f3dd19b8d18"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f3dd19b8d18"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f3dd01126c8"/></to>
    </wire>
    <wire loc="223:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f3dd1669b70"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f3dd15315b8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f3dd15315b8"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7f3dd152ba08"/></to>
    </wire>
    <wire loc="228:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f3dd19b7df8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f3dd16158c8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f3dd16158c8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f3dcff138c8"/></to>
    </wire>
    <wire loc="237:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f3dd1613ce8"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7f3dd1d240d0"/></to>
    </wire>
    <wire loc="238:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f3dd16140c0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f3dd160d2a8"/></to>
    </wire>
    <wire loc="239:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f3dd16149a8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f3dd160db50"/></to>
    </wire>
    <wire loc="240:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f3dd16130f0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f3dd1c8ec50"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="246:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x7f3dd15e0bd8"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f3dd1554660"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="247:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f3dd15e3d90"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f3dd1c8ec50"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f3dd15e2a18"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7f3dd1d33af0"/></to>
    </wire>
    <wire loc="253:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f3dd15e4d38"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f3dd15c5020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f3dd15c5020"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f3dd15bf5b8"/></to>
    </wire>
    <wire loc="254:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f3dd15e3670"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f3dd15c58c8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f3dd15c58c8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f3dd15be020"/></to>
    </wire>
    <wire loc="259:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f3dd15bdda0"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7f3dd1d15300"/></to>
    </wire>
    <wire loc="260:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f3dd15bf5b8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f3dd15303f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f3dd15303f0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f3dd152a8c8"/></to>
    </wire>
    <wire loc="261:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f3dd15be020"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f3dd1530c98"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f3dd1530c98"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f3dd15292a8"/></to>
    </wire>
    <wire loc="262:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x7f3dd15be780"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7f3dd151e448"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f3dd151e448"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7f3dd14f92c0"/></to>
    </wire>
    <wire loc="267:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f3dd155da30"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f3dd1510220"/></to>
    </wire>
    <wire loc="268:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f3dd155c9f0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f3dd15360e0"/></to>
    </wire>
    <wire loc="271:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7f3dd155b8c8"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f3dd1554660"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="276:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f3dd1535020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f3dd151ebd8"/></to>
    </wire>
    <wire loc="286:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f3dd1527060"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7f3dd1d15300"/></to>
    </wire>
    <wire loc="287:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f3dd152a8c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f3dd151f2c8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f3dd151f2c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f3dd14fa0c0"/></to>
    </wire>
    <wire loc="288:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f3dd15292a8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f3dd151fbf0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f3dd151fbf0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f3dd14fa9e8"/></to>
    </wire>
    <wire loc="289:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x7f3dd152ba08"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f3dd15223e0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f3dd15223e0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f3dd14fb2d0"/></to>
    </wire>
    <wire loc="301:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f3dd150a5c8"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x7f3dd1d3be48"/></to>
    </wire>
    <wire loc="302:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f3dd1509730"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f3dd1561020"/></to>
    </wire>
    <wire loc="309:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f3dd1505378"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f3dd1554660"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="310:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7f3dd1504020"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f3dd1554660"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="311:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f3dd1504b78"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f3dd1554660"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="312:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f3dd1503768"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f3dd1c8ec50"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f3dd1c8ec50"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f3dd0246910"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f3dd02457e8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f3dd1c51c68"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f3dd023f880"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f3dd1c5e5b8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f3dd021d3f0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f3dd1bbec60"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f3dd02214d0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f3dd1ba1678"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f3dd02202a8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f3dd1ba0430"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f3dd0220b90"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f3dd1ba0d18"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f3dd021f2a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f3dd1b9e328"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f3dd1b26020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f3dd01cadf8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3dd1b26760"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3dd01c9578"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3dd01c9e18"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3dd1b25020"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f3dd01c85d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f3dd01cc2a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f3dd01c7100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3dd223a1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f3dd015f8e8"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f3dd1bbec60"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f3dd015e430"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f3dd1a20ab0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7f3dd010e020"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7f3dd19ecd58"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7f3dd19ecd58"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7f3dd19e6850"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f3dd010ebd8"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f3dd010b140"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f3dd010b140"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f3dd19e4b18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f3dd0111458"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f3dd19b7510"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f3dd0111d40"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f3dd19b7df8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x7f3dd010f4a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f3dd19b6580"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f3dd00ee490"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f3dd179e7a0"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3dd00eed38"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3dd179c400"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f3dd00e8700"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f3dd179d698"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="DelayTimer" scoped="" ref="0x7f3dd00ec778"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f3dd00e4d88"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f3dd00e4d88"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f3dd19554e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <from><interface-ref name="send" scoped="" ref="0x7f3dd00e65f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3dd223a1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f3dd19554e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f3dd194cb68"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f3dd194cb68"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f3dd17c95e0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f3dd1950e38"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3dd1941310"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f3dd1947c48"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f3dd17ba128"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f3dd1941310"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3dd1842148"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f3dd17c3858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f3dd1815ab0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f3dd1810c70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7f3dd1941c88"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7f3dd1941c88"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f3dd18428f0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f3dd17b1330"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7f3dd1938e40"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7f3dd1938e40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f3dd183fa90"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f3dd183fa90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f3dd00a9ce0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f3dd1842148"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3dd00ac438"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f3dd18428f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f3dd00acbe0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f3dd00a5020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f3dd18b9a08"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f3dd18b9a08"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f3dd18a75d0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f3dd00a1e70"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f3dd18b2a98"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f3dd18b2a98"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f3dd18a15c0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f3dd009f060"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f3dd18b1e18"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f3dd18b1e18"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f3dd18a0980"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f3dd009b200"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f3dd18ac228"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f3dd18ac228"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f3dd189b3d0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f3dd180ccf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3dd223a1c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f3dd17be930"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3dd223a1c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f3dd0036020"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f3dd16da858"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f3dd0036a90"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f3dd16d9430"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f3dd0035430"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f3dd16d9d18"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f3dd0035a08"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f3dd16d8328"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f3dd00332a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f3dd16d7120"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3dd0034888"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3dd16d79c8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f3dd0033c58"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f3dd00285e8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f3dd00285e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f3dd19554e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x7f3dd002eb20"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x7f3dd1703798"/></to>
    </wire>
    <wire loc="9:/opt/tinyos-2.1.2/tos/system/SystemLowPowerListeningC.nc">
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x7f3dd1703798"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x7f3dd1700c10"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f3dd002d700"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f3dd16f2628"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <from><interface-ref name="transition" scoped="" ref="0x7f3dd002cda0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3dd223a1c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f3dcffcf928"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f3dd1669b70"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f3dcffce700"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f3dd1c5e5b8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f3dcffcc268"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f3dd1668a10"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f3dcffccb10"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f3dd16673f0"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7f3dcffcba88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3dd223a1c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x7f3dcffca2e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3dd223a1c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x7f3dcffcb2e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3dd223a1c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f3dcff120c0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f3dd16140c0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f3dcff0f430"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f3dd1613ce8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f3dcff129a8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f3dd16149a8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f3dcff110f0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f3dd16130f0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f3dcff11ca8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f3dd162a690"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x7f3dcff0e020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3dd223a1c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f3dd1628668"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f3dd16243b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f3dd162f930"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3dd1629b30"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f3dd15c8978"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f3dd15c2bf0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f3dd15c3020"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7f3dd15be780"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f3dd15c6268"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7f3dd15c0638"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f3dd15c3740"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f3dd15bd020"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f3dd15c25b8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f3dd15bdda0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f3dd15c7c98"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7f3dd15c0060"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f3dd15c73f0"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7f3dd15c1740"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f3dcfeacc88"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f3dd155c9f0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f3dcfeafbd8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f3dd155da30"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f3dcfeadcc0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f3dd156bdc0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f3dd156bdc0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f3dd1947c48"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7f3dcfeaf060"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x7f3dd155b8c8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f3dd1533b78"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f3dd152c020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f3dd152f3f0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7f3dd1529a08"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f3dd152fb10"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f3dd15282a8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f3dd152d8c8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f3dd1527060"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f3dd1531020"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7f3dd152b430"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f3dd1532700"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7f3dd152ca90"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f3dd13ff2e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f3dd120ab68"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f3dd1516458"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f3dd14f13b0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f3dd13fb438"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f3dd1202400"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f3dd14d8100"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f3dd150a5c8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f3dd14d8e10"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f3dd1505378"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7f3dd14d7988"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x7f3dd1504020"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f3dd14d6518"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f3dd1504b78"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f3dd14d52b0"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f3dd1509730"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f3dd14d9020"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f3dd13fb438"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f3dd14d1ab8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f3dd1503768"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7f3dd14ea130"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x7f3dd1407710"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7f3dd1407710"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f3dd1f927e0"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f3dd14e94f8"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x7f3dd1404990"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f3dd1404990"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3dd13cfe80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f3dd14e31f0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f3dd14035e8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f3dd14035e8"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f3dd13d89d0"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7f3dd14e3d00"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x7f3dd1402140"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7f3dd1402140"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7f3dd1f894d0"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f3dd14e7e70"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f3dd1401338"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f3dd1401338"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7f3dd1f944d0"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7f3dd14dd5e8"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7f3dd14004c0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7f3dd14004c0"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7f3dd13facd8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f3dd14d1020"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f3dd1c5e5b8"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f3dd14dac60"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f3dd11b03c0"/></to>
    </wire>
    <wire loc="847:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x7f3dd1445d98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3dd223a1c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f3dd120ab68"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f3dcfe34bc8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f3dd13d89d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f3dd13cd628"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f3dd1202400"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f3dd11bcc38"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x7f3dd13ecc18"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7f3dd1f78020"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x7f3dd13eae08"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7f3dd1f7bc78"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f3dd13ed540"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f3dd12f9ca0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f3dd12f9ca0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f3dd12de350"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f3dd13cf1d8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f3dd13cc120"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f3dd13d8388"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f3dd13cd020"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f3dd13f8cd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3dd13d7a18"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f3dd13cfe80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3dd13ccd88"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7f3dd13ae3c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3dd130c748"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f3dd130c748"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3dcfe61b80"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3dd13ad020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3dd130ac50"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3dd130ac50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3dcfe5f268"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7f3dd13af150"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7f3dd1362020"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7f3dd1362020"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7f3dd135fdc0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f3dd13ad7c8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f3dd21433c8"/></to>
    </wire>
    <wire loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7f3dd138db58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3dd223a1c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7f3dd1352350"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f3dd21433c8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7f3dd1356c70"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f3dd1f927e0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f3dd1359de0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7f3dd1f91968"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7f3dd1354020"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7f3dd1f90af0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7f3dd1353190"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7f3dd1f8fc78"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f3dd130a510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f3dcfe609a8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3dcfe5fb08"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3dd1309550"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f3dcfe5e2b8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f3dcfe63d88"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f3dcfe5ed68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3dd223a1c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f3dd12f15e8"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f3dd12e0c90"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f3dd13016e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f3dd12e7be0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f3dd12eca20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7f3dd12dac48"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f3dd12eca20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7f3dd12d5020"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f3dd12eca20"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7f3dd12d1360"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f3dcfe31c18"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f3dd13016e0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f3dcfe2cc68"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f3dd12eca20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f3dd124f540"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f3dd13016e0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f3dd11bbe48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f3dd11dc270"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f3dd11c0450"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f3dd11fd108"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f3dd11fd108"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f3dd11fae08"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f3dd11e5020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f3dd13016e0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f3dd1156d18"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f3dd114ace0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x7f3dd1143a90"/></from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x7f3dd114b998"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x7f3dd1142e10"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x7f3dd11466c0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x7f3dd113f1c8"/></from>
      <to><interface-ref name="DisseminatorControl" scoped="" ref="0x7f3dd1150a58"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f3dd113f928"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f3dd10f1da8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f3dd10f1da8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f3dcfdf8020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f3dd113e5c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f3dd10456d8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f3dd10456d8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f3dd1dcc928"/>
      <arguments>
        <value cst="I:96">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeAMSend" scoped="" ref="0x7f3dd113ec48"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f3dd103b1c8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f3dd103b1c8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f3dcfd7c618"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeReceive" scoped="" ref="0x7f3dd113d990"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f3dd1036e78"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f3dd1036e78"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f3dd1dcc928"/>
      <arguments>
        <value cst="I:97">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f3dd113c020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f3dd16f2628"/></to>
    </wire>
    <wire loc="20:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f3dcfdf8020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f3dcfde6a60"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f3dd104c9d8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f3dcfdf8bd8"/></to>
    </wire>
    <wire loc="21:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f3dcfdf8bd8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f3dcfdea578"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3dd104b700"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f3dcfdf6888"/></to>
    </wire>
    <wire loc="22:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3dcfdf6888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f3dcfde9268"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f3dd104ad60"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f3dcfdf4020"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f3dcfdf4020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f3dcfde88c8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f3dcfdea578"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f3dd1dc9100"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3dcfde9268"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f3dd1dc9d10"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f3dcfde88c8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3dd1dbfcb0"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <from><interface-ref name="SubAMSend" scoped="" ref="0x7f3dcfde57a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f3dcfdeb978"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f3dcfdeb978"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f3dcfdd7548"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Lpl" scoped="" ref="0x7f3dcfde4430"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f3dd1dc46a8"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x7f3dcfde4e60"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x7f3dd1703798"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f3dcfdd62c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3dd10c64f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3dcfdd6e80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f3dd1dc9d10"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f3dd10c64f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3dd107f920"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f3dd107e6f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f3dd1dcd798"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3dd107d3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f3dd1dc9d10"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f3dd107ca10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f3dd1dc9100"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f3dd107b780"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3dd223a1c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f3dd107a020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3dd223a1c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f3dd1045c70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f3dd1dc9100"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3dd103f888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f3dd1dc9d10"/></to>
    </wire>
    <wire loc="20:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f3dcfd7c618"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f3dcfd69120"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f3dd103bd80"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f3dcfd7a268"/></to>
    </wire>
    <wire loc="21:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f3dcfd7a268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f3dcfd6ebd8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3dd103a9d8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f3dcfd7ae20"/></to>
    </wire>
    <wire loc="22:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3dcfd7ae20"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f3dcfd6d888"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f3dd10380a0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f3dcfd78430"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f3dcfd78430"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f3dcfd6b020"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f3dcfd6ebd8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f3dd1dc9100"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3dcfd6d888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f3dd1dc9d10"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f3dcfd6b020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3dd1dbfcb0"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <from><interface-ref name="SubAMSend" scoped="" ref="0x7f3dcfd69d78"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f3dcfd6e020"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f3dcfd6e020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f3dcfd5baa0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Lpl" scoped="" ref="0x7f3dcfd68998"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f3dd1dc46a8"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x7f3dcfd673f0"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x7f3dd1703798"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f3dcfd5a760"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3dd10c64f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3dcfd593f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f3dd1dc9d10"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f3dd1035440"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f3dd1dc9100"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3dd1034020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f3dd1dc9d10"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminationUpdate" scoped="" ref="0x7f3dd0f57290"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x7f3dcfd37a78"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x7f3dd114b998"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x7f3dcfd35c70"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x7f3dd1150a58"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f3dcfd396b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x7f3dd11466c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x7f3dd0ff3498"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f3dcfd34a50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f3dd1dfd190"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <from><interface-ref name="changedTask" scoped="" ref="0x7f3dcfd32100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3dd223a1c8"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationTimerP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x7f3dd0ff3498"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x7f3dd0f5d478"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x7f3dd0f5d478"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x7f3dcfd170c8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f3dcfd17e08"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f3dcfd0acd8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f3dcfd0acd8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f3dd19554e8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f3dcfd0f020"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f3dd162a690"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Changed" scoped="" ref="0x7f3dcfd11e30"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x7f3dcfd00328"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Pending" scoped="" ref="0x7f3dcfd12d78"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x7f3dcfd037d0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f3dcfd0f740"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f3dd1dfd190"/></to>
    </wire>
    <wire loc="154:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <from><interface-ref name="timerTask" scoped="" ref="0x7f3dcfd0dda0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3dd223a1c8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f3dd0f23020"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f3dd0b70e08"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x7f3dd0f29020"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x7f3dd0df9c38"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x7f3dd0f48b48"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x7f3dd0f2cd00"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x7f3dd0f2cd00"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x7f3dd0dfaaa0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f3dd0f4c2a8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f3dd0f2b328"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f3dd0f2b328"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f3dd0df9080"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f3dd0f4fd08"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f3dd0f2c1c8"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f3dd0f2c1c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f3dd0dfa3c8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f3dd0f50020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3dd0f2e3f0"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f3dd0f2e3f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3dd0dfcdf8"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x7f3dd0f27b58"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x7f3dd0b6f700"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f3dd0f4f1c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f3dd0f2d560"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f3dd0f2d560"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f3dd0dfbb30"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x7f3dd0f24788"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x7f3dd0df6800"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x7f3dd0f37350"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x7f3dd0f29dc0"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x7f3dd0f29dc0"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x7f3dd0df8a10"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f3dd0f33720"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f3dd0dfc5b8"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f3dd0f33720"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f3dd0b6ed20"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f3dd0f33720"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f3dd0d371a8"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x7f3dd0f1c020"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x7f3dd0f32a28"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x7f3dd0f1c750"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x7f3dd0f34080"/></to>
    </wire>
    <wire loc="190:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x7f3dd0f1d568"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x7f3dd0d36be0"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x7f3dd0ddb9e8"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x7f3dd0f1c020"/></to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="QEntryPool" scoped="" ref="0x7f3dd0de7558"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f3dd0da2228"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f3dd0da2228"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f3dcfbccc98"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="MessagePool" scoped="" ref="0x7f3dd0de4ca0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f3dd0dca020"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f3dd0dca020"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f3dcfbdf7e0"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x7f3dd0deb1a0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f3dd0d9c6e0"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SentCache" scoped="" ref="0x7f3dd0de0448"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x7f3dd0d7de10"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="Cache" scoped="" ref="0x7f3dd0d7de10"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x7f3dcfbb0880"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x7f3dd0def6c0"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x7f3dd0d36be0"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconSend" scoped="" ref="0x7f3dd0b6cbb0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3dd0d37978"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconReceive" scoped="" ref="0x7f3dd0b6b8c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f3dd0d365c0"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x7f3dd0b6be60"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x7f3dd0d36be0"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CompareBit" scoped="" ref="0x7f3dd0b5a060"/></from>
      <to><interface-ref name="CompareBit" scoped="" ref="0x7f3dd0d31020"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3dd0b69020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f3dd1dc9d10"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7f3dd0b685b8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f3dd1dd1728"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconTimer" scoped="" ref="0x7f3dd0b66168"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f3dd0d4dcf8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f3dd0d4dcf8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f3dd19554e8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RouteTimer" scoped="" ref="0x7f3dd0b62540"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f3dd0d46350"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f3dd0d46350"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f3dd19554e8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x7f3dd0b5ccb8"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x7f3dd0f1c750"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x7f3dd0dd7740"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x7f3dd0f1c750"/></to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x7f3dd0ddd910"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x7f3dd0b6f700"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x7f3dd0b5b908"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x7f3dd0df6800"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RetxmitTimer" scoped="" ref="0x7f3dd0df36c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f3dd0b51350"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f3dd0b51350"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f3dd19554e8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f3dd0b5c598"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f3dd162a690"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f3dd0dd7020"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f3dd162a690"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f3dd0df5020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f3dd0c7ad10"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f3dd0c7ad10"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f3dcfb85cc8"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f3dd0ddfd78"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f3dd0c74390"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f3dd0c74390"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f3dd1dcc928"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x7f3dd0ddd378"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f3dd0c691c8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f3dd0c691c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f3dd1dcb498"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f3dd0dec430"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f3dd0c79908"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f3dd0c79908"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f3dcfb84908"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f3dd0ddb020"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f3dd0b70e08"/></to>
    </wire>
    <wire loc="181:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x7f3dd0ded888"/></from>
      <to><interface-ref name="Routing" scoped="" ref="0x7f3dd0b703d8"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7f3dd0dd5430"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f3dd1dd1728"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3dd0df5bd8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f3dd0c77bd8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f3dd0c77bd8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f3dcfb82bd8"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3dd0dda268"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f3dd0c78578"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3dd0c78578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f3dcfb83578"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f3dd0dd9888"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f3dd1dfd190"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f3dd0d2c328"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f3dd162a690"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f3dd0d31678"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f3dd0b471a8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f3dd0b471a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f3dcfac55e0"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f3dd0d2d668"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f3dd0b41710"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f3dd0b41710"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f3dd1dcc928"/>
      <arguments>
        <value cst="I:112">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f3dd0d2e968"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f3dd0b47d60"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f3dd0b47d60"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f3dcfac4268"/></to>
    </wire>
    <wire loc="197:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x7f3dd0d30370"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f3dd0b46940"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3dd0b46940"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f3dcfac4e20"/></to>
    </wire>
    <wire loc="221:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f3dd0d2dcb8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f3dd1d84570"/></to>
    </wire>
    <wire loc="234:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7f3dd0dd4020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3dd223a1c8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x7f3dcfbad220"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x7f3dd0f29dc0"/></to>
    </wire>
    <wire loc="20:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f3dcfb85cc8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f3dcfb74e58"/></to>
    </wire>
    <wire loc="21:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f3dcfb84908"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f3dcfb789d8"/></to>
    </wire>
    <wire loc="22:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3dcfb83578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f3dcfb77700"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f3dcfb82bd8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f3dcfb76d60"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f3dcfb789d8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f3dd1dc9100"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3dcfb77700"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f3dd1dc9d10"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f3dcfb76d60"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3dd1dbfcb0"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <from><interface-ref name="SubAMSend" scoped="" ref="0x7f3dcfb72af0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f3dcfb7adb8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f3dcfb7adb8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f3dcfb65a80"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Lpl" scoped="" ref="0x7f3dcfb71740"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f3dd1dc46a8"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x7f3dcfb70268"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x7f3dd1703798"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f3dcfb64760"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3dd10c64f8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3dcfb633f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f3dd1dc9d10"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f3dd0c74928"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f3dd1dc9100"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3dd0c73578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f3dd1dc9d10"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f3dd0c69760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f3dd1dc9100"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3dd0c683f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f3dd1dc9d10"/></to>
    </wire>
    <wire loc="271:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <from><interface-ref name="updateRouteTask" scoped="" ref="0x7f3dd0b5ae18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3dd223a1c8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="390:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <from><interface-ref name="sendBeaconTask" scoped="" ref="0x7f3dd0b5a678"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3dd223a1c8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="20:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f3dcfac55e0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f3dcfab48e0"/></to>
    </wire>
    <wire loc="21:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f3dcfac4268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f3dcfab83f0"/></to>
    </wire>
    <wire loc="22:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3dcfac4e20"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f3dcfab7020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f3dd0b43020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f3dcfac2430"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f3dcfac2430"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f3dcfab65b8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f3dcfab83f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f3dd1dc9100"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3dcfab7020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f3dd1dc9d10"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f3dcfab65b8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3dd1dbfcb0"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <from><interface-ref name="SubAMSend" scoped="" ref="0x7f3dcfab3618"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f3dcfab97b0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f3dcfab97b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f3dcfaa5418"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Lpl" scoped="" ref="0x7f3dcfab22a8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f3dd1dc46a8"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x7f3dcfab2cd8"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x7f3dd1703798"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f3dcfaa4060"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3dd10c64f8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3dcfaa4c18"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f3dd1dc9d10"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f3dd0b41ca8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f3dd1dc9100"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3dd0b40888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f3dd1dc9d10"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f3dd0b1ad60"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f3dcfa82888"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f3dcfa82888"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f3dd0f4c2a8"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f3dcfa83c90"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3dd0f50020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x7f3dd0f32a28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x7f3dcfa7c5c8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f3dcfa74020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f3dcfa72cb8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f3dcfa72cb8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f3dd0aebcc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f3dcfa702a0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f3dd096b438"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f3dd0ae2670"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f3dcfa702a0"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f3dd0ae14c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3dd0add020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3dd0adb890"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3dcfa70b48"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f3dd0aebcc0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f3dd0990020"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x7f3dd0ae3a00"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x7f3dd09b9428"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f3dd0976020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3dd0ae14c0"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f3dd09b79a0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f3dd0ae2670"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f3dd0979860"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f3dd09bc6a0"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f3dd09b8b18"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f3dd0ad60d0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f3dd0ad60d0"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f3dd0acec08"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f3dd09b6578"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f3dd11b03c0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f3dd0ad19b0"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f3dd0acd628"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f3dd0add020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3dd09e1840"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f3dd09e1840"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3dcfa5d830"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3dd09dd3c8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3dd0adb890"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f3dd0abd0d0"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f3dd0a8c020"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f3dd0a8c020"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f3dd0a87248"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f3dd0ac9610"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f3dd1fb3b98"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f3dd09da060"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f3dd0ace450"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f3dd09dad18"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f3dd09e0dd8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f3dd09e0dd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f3dcfa5cdd8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f3dd0a857c8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f3dd21433c8"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f3dd09e0698"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f3dcfa5c698"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3dd09de9d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3dcfa5a9d8"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3dcfa593e8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3dd09dd3c8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f3dcfa59b68"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f3dcfa5f718"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f3dcfa57da0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3dd223a1c8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f3dcfa27e38"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f3dd09da060"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f3dcfa25590"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f3dd09da780"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f3dcfa25b28"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f3dd09dad18"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3dcfa24710"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3dd09c5908"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x7f3dd09a5bf8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3dd223a1c8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f3dd05a8020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f3dd09442a8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f3dd09442a8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f3dd08ebd20"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3dd05a8bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f3dd0943020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3dd0943020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f3dd08ec738"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f3dd05a62a8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3dd0942658"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3dd0942658"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3dd08ea908"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f3dcfa10450"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3dd09547f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3dcfa0f060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f3dd0943020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f3dd09547f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3dd09501e0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f3dd094f020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f3dd0947aa8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f3dd0947aa8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f3dd093e460"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3dd094fbf8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f3dd0943020"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f3dd094d268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f3dd09442a8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f3dd094c020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3dd223a1c8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f3dd094c7c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3dd223a1c8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f3dd08e4728"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f3dd08bcda8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f3dd0946c38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f3dd08ec180"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f3dd08e4110"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3dd08bc790"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f3dd08df8f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f3dd0941020"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f3dd08e9308"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3dd08e1208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f3dd08e8020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f3dd08e3760"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f3dd08df020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7f3dd05bf6e0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f3dd08e1208"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3dd0796020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f3dd08e3760"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f3dd0797868"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7f3dd0796db8"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f3dd08df020"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f3dd08b5bc8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f3dd08df8f8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f3dd0794a50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f3dd08df8f8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f3dd078b420"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f3dd08df8f8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f3dd07956c8"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f3dd08b2b48"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7f3dd0794020"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7f3dd08b6950"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7f3dd08acb38"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7f3dd078fb30"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f3dd08ab398"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f3dd078e8b0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f3dd078e8b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f3dd0763338"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f3dd077e448"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f3dd07650c0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f3dd07650c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f3dd075d310"/></to>
    </wire>
    <wire loc="332:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7f3dd0859830"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3dd223a1c8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7f3dd0890d70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3dd223a1c8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7f3dd085c020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3dd223a1c8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f3dd0856918"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3dd223a1c8"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7f3dd0792100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3dd223a1c8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7f3dd07928a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3dd223a1c8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f3dd075f290"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f3dd0763af0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f3dd0763af0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f3dd0758e58"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f3dd075d310"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f3dd07165f8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f3dd0763338"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f3dd07586f8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f3dd075c598"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f3dd0689188"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f3dd0689188"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f3dd05ccc50"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f3dd0713c60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f3dd075c598"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x7f3dd07155f8"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7f3dd06f5700"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x7f3dd06f5700"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7f3dd06ed730"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x7f3dd0715d98"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7f3dd06f4020"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x7f3dd06f4020"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7f3dd06ec020"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x7f3dd07145c0"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7f3dd06f4860"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x7f3dd06f4860"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7f3dd06ec8a0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x7f3dd06f1020"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x7f3dd06e96d8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x7f3dd06f3e58"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x7f3dd06ea568"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x7f3dd06f26f0"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x7f3dd06eae00"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f3dd06e8c70"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f3dd1fb3b98"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f3dd06e7950"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f3dd21433c8"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f3dd05c9e20"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f3dd0683020"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f3dd0683020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f3dd05d6020"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f3dd05d40e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f3dd0680c30"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f3dd0680c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f3dd066b298"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f3dd067ac90"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f3dd06663d0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f3dd0677350"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f3dd0665b18"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f3dd06721c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7f3dd06604e0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f3dd06721c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7f3dd065c770"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f3dd06721c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7f3dd0658b20"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f3dd05de740"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f3dd0680c30"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="TestNetworkLplC" loc="17:TestNetworkLplC.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.1.2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.1.2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="39:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="39(RF230RadioC.RadioAlarmC.RadioAlarmP):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP" loc="40(RF230RadioC.PacketLinkLayerC.PacketLinkLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <instance number="0">
        <component-ref qname="PacketLinkLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC.DelayTimerC" loc="44(RF230RadioC.PacketLinkLayerC.DelayTimerC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f3dd1936ca0"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP" loc="39(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <documentation loc="12:/opt/tinyos-2.1.2/tos/types/Lpl.h">
        <short>&#10; The LPL defaults to stay-on.</short>
      </documentation>
      <instance number="0">
        <component-ref qname="LowPowerListeningLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.TimerMilliC" loc="44(RF230RadioC.LowPowerListeningLayerC.TimerMilliC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SystemLowPowerListeningC" loc="1:/opt/tinyos-2.1.2/tos/system/SystemLowPowerListeningC.nc">
      <configuration/>
    </component>
    <component qname="SystemLowPowerListeningP" loc="3:/opt/tinyos-2.1.2/tos/system/SystemLowPowerListeningP.nc">
      <module/>
    </component>
    <component qname="NoLedsC" loc="45:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TOne" ref="0x7f3dd21699f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TOne" ref="0x7f3dd21699f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f3dd21a9788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f3dd21a9788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f3dd21a9788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/opt/tinyos-2.1.2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="DisseminationC" loc="46:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationC.nc">
        <short>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol.</short>
        <long>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol. StdControl controls all of the trickle&#10; timers used for all of the keys. &#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP" loc="47:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
        <short>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.</short>
        <long>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.&#10;&#10; TODO: Hook DisseminationProbe up to the serial instead of the radio.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineImplP" loc="45:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
        <short>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.</short>
        <long>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC" loc="47(DisseminationEngineP.DisseminationSendC):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC" loc="3(DisseminationEngineP.DisseminationSendC.SenderC):/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <instance number="0">
        <component-ref qname="LplAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC" loc="47(DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC.AMQueueEntryP" loc="43(DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC.LplAMSenderP" loc="1(DisseminationEngineP.DisseminationSendC.SenderC.LplAMSenderP):/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <instance number="0">
        <component-ref qname="LplAMSenderP"/>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationReceiveC" loc="43(DisseminationEngineP.DisseminationReceiveC):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC" loc="47(DisseminationEngineP.DisseminationProbeSendC):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC" loc="3(DisseminationEngineP.DisseminationProbeSendC.SenderC):/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <instance number="1">
        <component-ref qname="LplAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC" loc="47(DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC.AMQueueEntryP" loc="43(DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.LplAMSenderP" loc="1(DisseminationEngineP.DisseminationProbeSendC.SenderC.LplAMSenderP):/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <instance number="1">
        <component-ref qname="LplAMSenderP"/>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeReceiveC" loc="43(DisseminationEngineP.DisseminationProbeReceiveC):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkLplAppC.Object32C" loc="49(TestNetworkLplAppC.Object32C):/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorC"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkLplAppC.Object32C.DisseminatorP" loc="45(TestNetworkLplAppC.Object32C.DisseminatorP):/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008-02-16 01:31:50 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f3dd102c068"/></type-var>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP" loc="44:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationTimerP.nc">
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC" loc="51(DisseminationTimerP.TrickleTimerMilliC):/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerMilliC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1024">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP" loc="51(DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP):/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerImplP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC" loc="44(DisseminationTimerP.TrickleTimerMilliC.TimerMilliC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector" loc="44(DisseminationTimerP.TrickleTimerMilliC.PendingVector):/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector" loc="44(DisseminationTimerP.TrickleTimerMilliC.ChangeVector):/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CollectionC" loc="45:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP" loc="77:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP.Forwarder" loc="107(CtpP.Forwarder):/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <instance number="0">
        <component-ref qname="CtpForwardingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.MessagePoolP" loc="41(CtpP.MessagePoolP):/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
            <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.MessagePoolP.PoolP" loc="53(CtpP.MessagePoolP.PoolP):/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f3dd0dcca08"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.QEntryPoolP" loc="41(CtpP.QEntryPoolP):/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7f3dd0f11710"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f3dd0f11bc8"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.QEntryPoolP.PoolP" loc="53(CtpP.QEntryPoolP.PoolP):/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f3dd0dcca08"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SendQueueP" loc="42(CtpP.SendQueueP):/opt/tinyos-2.1.2/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7f3dd0f11710"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f3dd0f11bc8"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:13">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SentCacheP" loc="38(CtpP.SentCacheP):/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SentCacheP.CacheP" loc="43(CtpP.SentCacheP.CacheP):/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RoutingBeaconTimer" loc="44(CtpP.RoutingBeaconTimer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.RouteUpdateTimer" loc="44(CtpP.RouteUpdateTimer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LinkEstimatorP" loc="42:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <module/>
    </component>
    <component qname="CtpP.AMSenderC" loc="47(CtpP.AMSenderC):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC" loc="3(CtpP.AMSenderC.SenderC):/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <instance number="2">
        <component-ref qname="LplAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC.DirectAMSenderC" loc="47(CtpP.AMSenderC.SenderC.DirectAMSenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC.DirectAMSenderC.AMQueueEntryP" loc="43(CtpP.AMSenderC.SenderC.DirectAMSenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC.LplAMSenderP" loc="1(CtpP.AMSenderC.SenderC.LplAMSenderP):/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <instance number="2">
        <component-ref qname="LplAMSenderP"/>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.AMReceiverC" loc="43(CtpP.AMReceiverC):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSnooperC" loc="44(CtpP.AMSnooperC):/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSnooperC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.Router" loc="107(CtpP.Router):/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CtpRoutingEngineP"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:128">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:512000">
            <type-int cname="long" size="I:4" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RetxmitTimer" loc="44(CtpP.RetxmitTimer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl" loc="47(CtpP.SendControl):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC" loc="3(CtpP.SendControl.SenderC):/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <instance number="3">
        <component-ref qname="LplAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC.DirectAMSenderC" loc="47(CtpP.SendControl.SenderC.DirectAMSenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC.DirectAMSenderC.AMQueueEntryP" loc="43(CtpP.SendControl.SenderC.DirectAMSenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SendControl.SenderC.LplAMSenderP" loc="1(CtpP.SendControl.SenderC.LplAMSenderP):/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <instance number="3">
        <component-ref qname="LplAMSenderP"/>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.ReceiveControl" loc="43(CtpP.ReceiveControl):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkLplAppC.CollectionSenderC" loc="43(TestNetworkLplAppC.CollectionSenderC):/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionSenderC"/>
        <arguments>
          <value cst="I:238">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkLplAppC.CollectionSenderC.CollectionSenderP" loc="34(TestNetworkLplAppC.CollectionSenderC.CollectionSenderP):/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
      <instance number="0">
        <component-ref qname="CollectionSenderP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x7f3dd2118278"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkLplAppC.CollectionSenderC.CollectionSenderP.CollectionIdP" loc="45(TestNetworkLplAppC.CollectionSenderC.CollectionSenderP.CollectionIdP):/opt/tinyos-2.1.2/tos/lib/net/CollectionIdP.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionIdP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x7f3dd2118278"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestNetworkLplAppC.TimerMilliC" loc="44(TestNetworkLplAppC.TimerMilliC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkLplAppC.DemoSensorC" loc="41(TestNetworkLplAppC.DemoSensorC):/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DemoSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkLplAppC.DemoSensorC.DemoChannel" loc="39(TestNetworkLplAppC.DemoSensorC.DemoChannel):/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkLplAppC.DemoSensorC.DemoChannel.AdcReadClientC" loc="21(TestNetworkLplAppC.DemoSensorC.DemoChannel.AdcReadClientC):/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="17:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc" safe="">
      <documentation loc="40:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega1281 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega1281 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="47:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega1281 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1281 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc" safe="">
      <documentation loc="39:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="VoltageP" loc="38:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageP.nc">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageP.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestNetworkLplAppC.SerialAMSenderC" loc="47(TestNetworkLplAppC.SerialAMSenderC):/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:238">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkLplAppC.SerialAMSenderC.AMQueueEntryP" loc="43(TestNetworkLplAppC.SerialAMSenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="102:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TThree" ref="0x7f3dd2169d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f3dd21a9788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TThree" ref="0x7f3dd2169d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x7f3dd2167630"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestNetworkLplAppC.QueueC" loc="42(TestNetworkLplAppC.QueueC):/opt/tinyos-2.1.2/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
              <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestNetworkLplAppC.PoolC" loc="41(TestNetworkLplAppC.PoolC):/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
            <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkLplAppC.PoolC.PoolP" loc="53(TestNetworkLplAppC.PoolC.PoolP):/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f3dd0dcca08"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f3dd1f5ad00" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f3dd1f570c8" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f3dd1f57410" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f3dd1f4d608" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f3dd1f4d970" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f3dd1f4dcd8" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f3dd1f4a060" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f3dd1ebb508" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f3dd1ebb870" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f3dd1ebbbd8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f3dd1eba020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f3dd1b85ab0" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f3dd1b75170" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerP" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f3dd1936ca0" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f3dd1936ca0"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f3dd1933020" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f3dd1928440" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f3dd1928440"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f3dd1928730" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f3dd1942c60" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f3dd1942c60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f3dd180acc8" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f3dd180acc8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f3dd1807020" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f3dd17bc9f0" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f3dd17bc9f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="LowPowerListeningLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningLayerP" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc" abstract="">
      <documentation loc="12:/opt/tinyos-2.1.2/tos/types/Lpl.h">
        <short>&#10; The LPL defaults to stay-on.</short>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f3dd1251e00" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f3dd1251e00"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7f3dd124e1a0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f3dd123d750" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f3dd123d750"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f3dd123a020" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f3dd123a020"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7f3dd123a320" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f3dd11f8430" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f3dd11f8430"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f3dd11f8b80" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f3dd11f8b80"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f3dd11df918" loc="55:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f3dd11df918"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f3dd11db0a8" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f3dd11db0a8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f3dd11db470" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f3dd11db470"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f3dd11dbbe8" loc="58:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f3dd11dbbe8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f3dd11d9020" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f3dd11d97b0" loc="60:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f3dd11d97b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f3dd10f38a8" loc="47:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LplAMSenderC" loc="3:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc" abstract="">
      <parameters>
        <constant name="AMId" ref="0x7f3dd10ea060" loc="3:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
          <component-ref qname="LplAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f3dd10e5a08" loc="47:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f3dd10dc380" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f3dd10c4730" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="LplAMSenderP" loc="1:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f3dd1047490" loc="43:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorC" loc="49:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f3dd102c068" loc="49:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f3dd102c068"/></type-var>
        </typedef>
        <constant name="key" ref="0x7f3dd102c388" loc="49:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorP" loc="45:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008-02-16 01:31:50 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f3dd10247e0" loc="45:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
          <component-ref qname="DisseminatorP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f3dd10247e0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TrickleTimerMilliC" loc="51:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x7f3dd0fef2b0" loc="51:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x7f3dd0fef600" loc="52:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x7f3dd0fef920" loc="53:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x7f3dd0fefc68" loc="54:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="TrickleTimerImplP" loc="51:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x7f3dd0fe9108" loc="51:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x7f3dd0fe9458" loc="52:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x7f3dd0fe9778" loc="53:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x7f3dd0fe9ac0" loc="54:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </constant>
        <constant name="scale" ref="0x7f3dd0fe9e08" loc="55:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BitVectorC" loc="44:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="max_bits" ref="0x7f3dd0f859d8" loc="44:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
          <component-ref qname="BitVectorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CtpForwardingEngineP" loc="107:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/opt/tinyos-2.1.2/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7f3dd0dcca08" loc="41:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f3dd0dcca08"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x7f3dd0dccd58" loc="41:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/opt/tinyos-2.1.2/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7f3dd0dc59d8" loc="53:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f3dd0dc59d8"/></type-var>
        </typedef>
        <constant name="size" ref="0x7f3dd0dc5cf8" loc="53:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/opt/tinyos-2.1.2/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7f3dd0d9b198" loc="42:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7f3dd0d9b198"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7f3dd0d9b4f0" loc="42:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="LruCtpMsgCacheC" loc="38:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="CACHE_SIZE" ref="0x7f3dd0d7fe40" loc="38:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
          <component-ref qname="LruCtpMsgCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LruCtpMsgCacheP" loc="43:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7f3dd0d7abd0" loc="43:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
          <component-ref qname="LruCtpMsgCacheP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSnooperC" loc="44:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f3dd0c6d060" loc="44:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
          <component-ref qname="AMSnooperC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CtpRoutingEngineP" loc="107:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc" abstract="">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="routingTableSize" ref="0x7f3dd0c5ca48" loc="107:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </constant>
        <constant name="minInterval" ref="0x7f3dd0c5cdb8" loc="107:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
        </constant>
        <constant name="maxInterval" ref="0x7f3dd0c5b178" loc="107:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CollectionSenderC" loc="43:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x7f3dd0b19168" loc="43:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
          <component-ref qname="CollectionSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x7f3dd2118278"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionSenderP" loc="34:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc" abstract="">
      <parameters>
        <constant name="collectid" ref="0x7f3dd0b13020" loc="35:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x7f3dd2118278"/></typename>
          </type-int>
        </constant>
        <constant name="clientid" ref="0x7f3dd0b13368" loc="35:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionIdP" loc="45:/opt/tinyos-2.1.2/tos/lib/net/CollectionIdP.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x7f3dd0b0e020" loc="45:/opt/tinyos-2.1.2/tos/lib/net/CollectionIdP.nc">
          <component-ref qname="CollectionIdP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x7f3dd2118278"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="DemoSensorC" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="VoltageC" loc="39:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc" abstract="">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f3dd0a4f020" loc="89:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7f3dd0a455d8" loc="42:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f3dd0a295c0" loc="52:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x7f3dd0992b28" loc="23:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x7f3dd0992b28"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f3dd095f020" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="RootControl" ref="0x7f3dd2061e78" loc="28:TestNetworkLplC.nc">
      <component-ref qname="TestNetworkLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x7f3dd2061e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f3dd20631f8"/>
        <function-ref name="setRoot" scoped="" ref="0x7f3dd2063380"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f3dd2063508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionPacket" ref="0x7f3dd204c940" loc="31:TestNetworkLplC.nc">
      <component-ref qname="TestNetworkLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x7f3dd204c940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f3dd204cc90"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f3dd204ce18"/>
        <function-ref name="setType" scoped="" ref="0x7f3dd205c020"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f3dd205c1a8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f3dd205c330"/>
        <function-ref name="getType" scoped="" ref="0x7f3dd205c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x7f3dd202a080" loc="37:TestNetworkLplC.nc">
      <component-ref qname="TestNetworkLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x7f3dd202a080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x7f3dd202a3d0"/>
        <function-ref name="logEventMsg" scoped="" ref="0x7f3dd202a558"/>
        <function-ref name="logEventSimple" scoped="" ref="0x7f3dd202a6e0"/>
        <function-ref name="logEventRoute" scoped="" ref="0x7f3dd202a868"/>
        <function-ref name="logEventDbg" scoped="" ref="0x7f3dd202a9f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f3dd20fc850" loc="18:TestNetworkLplC.nc">
      <component-ref qname="TestNetworkLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f3dd20fc850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f3dd20fcba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f3dd20fdbd8" loc="20:TestNetworkLplC.nc">
      <component-ref qname="TestNetworkLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x7f3dd20fdbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f3dd20fb020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f3dd20fb1a8"/>
        <function-ref name="start" scoped="" ref="0x7f3dd20fb330"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd20fb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTSend" ref="0x7f3dd2052230" loc="30:TestNetworkLplC.nc">
      <component-ref qname="TestNetworkLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UARTSend" scoped="" ref="0x7f3dd2052230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd2052680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd2052808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd2052990"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd2052b18"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd2052ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f3dd2036df8" loc="35:TestNetworkLplC.nc">
      <component-ref qname="TestNetworkLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f3dd2036df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
              <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f3dd2040728"/>
        <function-ref name="enqueue" scoped="" ref="0x7f3dd2034448"/>
        <function-ref name="element" scoped="" ref="0x7f3dd2034a78"/>
        <function-ref name="maxSize" scoped="" ref="0x7f3dd20402d8"/>
        <function-ref name="dequeue" scoped="" ref="0x7f3dd2040d88"/>
        <function-ref name="empty" scoped="" ref="0x7f3dd20419e0"/>
        <function-ref name="size" scoped="" ref="0x7f3dd2041e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pool" ref="0x7f3dd2032020" loc="36:TestNetworkLplC.nc">
      <component-ref qname="TestNetworkLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7f3dd2032020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
            <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dd202b020"/>
        <function-ref name="maxSize" scoped="" ref="0x7f3dd202d470"/>
        <function-ref name="empty" scoped="" ref="0x7f3dd2032b68"/>
        <function-ref name="put" scoped="" ref="0x7f3dd202d8c0"/>
        <function-ref name="size" scoped="" ref="0x7f3dd202d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7f3dd20fd020" loc="19:TestNetworkLplC.nc">
      <component-ref qname="TestNetworkLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7f3dd20fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f3dd20fd370"/>
        <function-ref name="stopDone" scoped="" ref="0x7f3dd20fd4f8"/>
        <function-ref name="start" scoped="" ref="0x7f3dd20fd680"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd20fd808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationControl" ref="0x7f3dd20f7a48" loc="22:TestNetworkLplC.nc">
      <component-ref qname="TestNetworkLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationControl" scoped="" ref="0x7f3dd20f7a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3dd20f7d98"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd20f6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f3dd20809b8" loc="24:TestNetworkLplC.nc">
      <component-ref qname="TestNetworkLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3dd20809b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd2080d08"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd20ef020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd20ef1a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd20ef330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd20ef4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpInfo" ref="0x7f3dd20426a0" loc="32:TestNetworkLplC.nc">
      <component-ref qname="TestNetworkLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x7f3dd20426a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x7f3dd20429f0"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f3dd2042b78"/>
        <function-ref name="numNeighbors" scoped="" ref="0x7f3dd2042d00"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x7f3dd2053020"/>
        <function-ref name="getEtx" scoped="" ref="0x7f3dd20531a8"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x7f3dd2053330"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x7f3dd20534b8"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x7f3dd2053640"/>
        <function-ref name="getParent" scoped="" ref="0x7f3dd20537c8"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x7f3dd2053950"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x7f3dd2053ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationPeriod" ref="0x7f3dd20f08a8" loc="23:TestNetworkLplC.nc">
      <component-ref qname="TestNetworkLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationPeriod" scoped="" ref="0x7f3dd20f08a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x7f3dd20f4de8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd20f4490"/>
        <function-ref name="set" scoped="" ref="0x7f3dd20f4918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadSensor" ref="0x7f3dd2072810" loc="26:TestNetworkLplC.nc">
      <component-ref qname="TestNetworkLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadSensor" scoped="" ref="0x7f3dd2072810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3dd2075390"/>
        <function-ref name="readDone" scoped="" ref="0x7f3dd20757e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f3dd203c198" loc="34:TestNetworkLplC.nc">
      <component-ref qname="TestNetworkLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f3dd203c198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f3dd203c4e8"/>
        <function-ref name="rand32" scoped="" ref="0x7f3dd203c670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x7f3dd20f7170" loc="21:TestNetworkLplC.nc">
      <component-ref qname="TestNetworkLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingControl" scoped="" ref="0x7f3dd20f7170"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3dd20f74c0"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd20f7648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f3dd205b4b0" loc="29:TestNetworkLplC.nc">
      <component-ref qname="TestNetworkLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f3dd205b4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd205b800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpCongestion" ref="0x7f3dd203f340" loc="33:TestNetworkLplC.nc">
      <component-ref qname="TestNetworkLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x7f3dd203f340"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x7f3dd203f690"/>
        <function-ref name="setClientCongested" scoped="" ref="0x7f3dd203f818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7f3dd200f020" loc="39:TestNetworkLplC.nc">
      <component-ref qname="TestNetworkLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f3dd200f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd200f370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd200f4f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd200f680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd200f808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd200f990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LowPowerListening" ref="0x7f3dd2001ab8" loc="40:TestNetworkLplC.nc">
      <component-ref qname="TestNetworkLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f3dd2001ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f3dd2001e08"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f3dd200e020"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f3dd200e1a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f3dd200e330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f3dd20ee020" loc="25:TestNetworkLplC.nc">
      <component-ref qname="TestNetworkLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f3dd20ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f3dd20ee370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f3dd20ee4f8"/>
        <function-ref name="led1On" scoped="" ref="0x7f3dd20ee680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f3dd20ee808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f3dd20ee990"/>
        <function-ref name="get" scoped="" ref="0x7f3dd20eeb18"/>
        <function-ref name="led1Off" scoped="" ref="0x7f3dd20eeca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f3dd2081330"/>
        <function-ref name="set" scoped="" ref="0x7f3dd20eee28"/>
        <function-ref name="led0On" scoped="" ref="0x7f3dd2081020"/>
        <function-ref name="led2On" scoped="" ref="0x7f3dd20811a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f3dd20118a0" loc="38:TestNetworkLplC.nc">
      <component-ref qname="TestNetworkLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3dd20118a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dd2011bf0"/>
        <function-ref name="source" scoped="" ref="0x7f3dd2011d78"/>
        <function-ref name="address" scoped="" ref="0x7f3dd2029020"/>
        <function-ref name="destination" scoped="" ref="0x7f3dd20291a8"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dd2029330"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dd20294b8"/>
        <function-ref name="type" scoped="" ref="0x7f3dd2029640"/>
        <function-ref name="setType" scoped="" ref="0x7f3dd20297c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dd2029950"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dd2029ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3dd2029c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f3dd20674f8" loc="27:TestNetworkLplC.nc">
      <component-ref qname="TestNetworkLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f3dd20674f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3dd2065768"/>
        <function-ref name="fired" scoped="" ref="0x7f3dd2071e18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f3dd2070b78"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f3dd2070728"/>
        <function-ref name="getdt" scoped="" ref="0x7f3dd2064088"/>
        <function-ref name="gett0" scoped="" ref="0x7f3dd2065bb8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3dd20702d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f3dd2071088"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f3dd2065198"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f3dd2071528"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd20719c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartEchoTask" ref="0x7f3dd200ee48" loc="43:TestNetworkLplC.nc">
      <component-ref qname="TestNetworkLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="uartEchoTask" scoped="" ref="0x7f3dd200ee48"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3dd20071c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f3dd2007348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f3dd1fbfd68" loc="58:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f3dd1fbfd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd1fbe0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f3dd1fc2968" loc="57:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f3dd1fc2968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f3dd1fc2cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f3dd1fb89a0" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f3dd1fb89a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd1fb8cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3dd1fbebe0" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3dd1fbebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd1fb9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f3dd1fb3b98" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f3dd1fb3b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f3dd1fb8020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f3dd1fb81a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f3dd1fb8330"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f3dd1fb84b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f3dd1fb8640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f3dd1fb0b90" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7f3dd1fb0b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd1faf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3dd1fb04f0" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3dd1fb04f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd1fb0840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7f3dd1faf398" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7f3dd1faf398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd1faf6e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f3dd1faa108" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f3dd1faa108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd1faa458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f3dd1fb2a08" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f3dd1fb2a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd1fb2d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f3dd1fa67f8" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f3dd1fa67f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd1fa6b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7f3dd1fa05f8" loc="44:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7f3dd1fa05f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1fa0948"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1fa0ad0"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1fa0c58"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1fa0de0"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1fa6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1fa61a8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1fa6330"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1fa64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f3dd1fa7428" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f3dd1fa7428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd1fa7778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f3dd1f64c78" loc="98:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f3dd1f64c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f635e8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f63770"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f638f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f63a80"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f63c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f63d90"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f62020"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f621a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f3dd1f7e7e0" loc="72:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f3dd1f7e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f7eb30"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f7ecb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f7ee40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f7d020"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f7d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f7d330"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f7d4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f7d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f3dd1f737e0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f3dd1f737e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f73b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f73cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f73e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f71020"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f711a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f71330"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f714b8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f71640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f3dd1f694d0" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f3dd1f694d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f69820"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f699a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f69b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f69cb8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f69e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f68020"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f681a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f68330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7f3dd1f5eaf0" loc="103:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7f3dd1f5eaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f5ee40"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f5d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f5d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f5d330"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f5d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f5d640"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f5d7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f5d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f3dd1f944d0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f3dd1f944d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f94820"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f949a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f94b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f94cb8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f94e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f93020"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f931a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f93330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f3dd1f6b1a0" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f3dd1f6b1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f6b4f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f6b678"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f6b800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f6b988"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f6bb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f6bc98"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f6be20"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f6a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f3dd1f927e0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f3dd1f927e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f92b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f92cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f92e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f91020"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f911a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f91330"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f914b8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f91640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f3dd1f86968" loc="64:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f3dd1f86968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f86cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f86e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f85020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f851a8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f85330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f854b8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f85640"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f857c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f3dd1f7bc78" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f3dd1f7bc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f7a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f7a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f7a330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f7a4b8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f7a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f7a7c8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f7a950"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f7aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f3dd1f6fc78" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f3dd1f6fc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f6e020"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f6e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f6e330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f6e4b8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f6e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f6e7c8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f6e950"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f6ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f3dd1f9ac78" loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f3dd1f9ac78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f99020"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f991a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f99330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f994b8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f99640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f997c8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f99950"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f99ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f3dd1f8fc78" loc="56:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f3dd1f8fc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f8e020"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f8e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f8e330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f8e4b8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f8e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f8e7c8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f8e950"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f8ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f3dd1f83e00" loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f3dd1f83e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f821a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f82330"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f824b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f82640"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f827c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f82950"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f82ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f82c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f3dd1f771a0" loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f3dd1f771a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f774f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f77678"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f77800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f77988"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f77b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f77c98"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f77e20"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f76020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f3dd1f66968" loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f3dd1f66968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f66cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f66e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f65020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f651a8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f65330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f654b8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f65640"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f657c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f3dd1f607e0" loc="101:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f3dd1f607e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f60b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f60cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f60e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f5f020"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f5f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f5f330"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f5f4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f5f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f3dd1f754d0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f3dd1f754d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f75820"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f759a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f75b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f75cb8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f75e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f74020"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f741a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f74330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f3dd1f961a0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f3dd1f961a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f964f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f96678"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f96800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f96988"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f96b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f96c98"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f96e20"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f95020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f3dd1f8a348" loc="59:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f3dd1f8a348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f8a698"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f8a820"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f8a9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f8ab30"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f8acb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f8ae40"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f89020"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f891a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f3dd1f624d0" loc="99:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f3dd1f624d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f62820"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f629a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f62b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f62cb8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f62e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f61020"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f611a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f61330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f3dd1f88658" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f3dd1f88658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f889a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f88b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f88cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f88e40"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f87020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f871a8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f87330"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f874b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f3dd1f7d968" loc="73:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f3dd1f7d968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f7dcb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f7de40"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f7c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f7c1a8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f7c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f7c4b8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f7c640"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f7c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f3dd1f71968" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f3dd1f71968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f71cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f71e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f70020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f701a8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f70330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f704b8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f70640"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f707c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f3dd1f68658" loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f3dd1f68658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f689a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f68b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f68cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f68e40"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f67020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f671a8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f67330"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f674b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f3dd1f93658" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f3dd1f93658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f939a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f93b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f93cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f93e40"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f92020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f921a8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f92330"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f924b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f3dd1f91968" loc="54:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f3dd1f91968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f91cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f91e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f90020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f901a8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f90330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f904b8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f90640"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f907c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f3dd1f85af0" loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f3dd1f85af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f85e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f84020"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f841a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f84330"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f844b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f84640"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f847c8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f84950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f3dd1f7ae00" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f3dd1f7ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f791a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f79330"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f794b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f79640"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f797c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f79950"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f79ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f79c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f3dd1f6ee00" loc="87:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f3dd1f6ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f6d1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f6d330"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f6d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f6d640"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f6d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f6d950"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f6dad8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f6dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f3dd1f99e00" loc="46:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f3dd1f99e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f981a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f98330"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f984b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f98640"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f987c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f98950"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f98ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f98c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f3dd1f8ee00" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f3dd1f8ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f8c2e8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f8c470"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f8c5f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f8c780"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f8c908"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f8ca90"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f8cc18"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f8cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f3dd1f81020" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f3dd1f81020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f81370"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f814f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f81680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f81808"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f81990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f81b18"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f81ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f81e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f3dd1f65af0" loc="96:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f3dd1f65af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f65e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f64020"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f641a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f64330"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f644b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f64640"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f647c8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f64950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f3dd1f7f348" loc="71:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f3dd1f7f348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f7f898"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f7fa20"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f7fba8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f7fd30"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f7e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f7e1a8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f7e330"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f7e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f3dd1f74658" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f3dd1f74658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f749a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f74b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f74cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f74e40"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f73020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f731a8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f73330"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f734b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f3dd1f6a348" loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f3dd1f6a348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f6a698"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f6a820"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f6a9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f6ab30"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f6acb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f6ae40"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f69020"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f691a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f3dd1f5f968" loc="102:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f3dd1f5f968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f5fcb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f5fe40"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f5e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f5e1a8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f5e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f5e4b8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f5e640"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f5e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f3dd1f95348" loc="49:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f3dd1f95348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f95698"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f95820"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f959a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f95b30"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f95cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f95e40"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f94020"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f941a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f3dd1f894d0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f3dd1f894d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f89820"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f899a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f89b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f89cb8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f89e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f88020"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f881a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f88330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f3dd1f6c020" loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f3dd1f6c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f6c370"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f6c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f6c680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f6c808"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f6c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f6cb18"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f6cca0"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f6ce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f3dd1f877e0" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f3dd1f877e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f87b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f87cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f87e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f86020"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f861a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f86330"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f864b8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f86640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f3dd1f7caf0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f3dd1f7caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f7ce40"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f7b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f7b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f7b330"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f7b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f7b640"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f7b7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f7b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f3dd1f70af0" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f3dd1f70af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f70e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f6f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f6f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f6f330"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f6f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f6f640"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f6f7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f6f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f3dd1f677e0" loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f3dd1f677e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f67b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f67cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f67e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f66020"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f661a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f66330"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f664b8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f66640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f3dd1fa9a70" loc="44:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f3dd1fa9a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1fa9dc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f9a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f9a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f9a330"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f9a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f9a640"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f9a7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f9a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f3dd1f90af0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f3dd1f90af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f90e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f8f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f8f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f8f330"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f8f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f8f640"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f8f7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f8f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f3dd1f84c78" loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f3dd1f84c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f83020"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f831a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f83330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f834b8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f83640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f837c8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f83950"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f83ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f3dd1f78020" loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f3dd1f78020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f78370"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f784f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f78680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f78808"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f78990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f78b18"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f78ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f78e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f3dd1f61658" loc="100:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f3dd1f61658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f619a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f61b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f61cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f61e40"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f60020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f601a8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f60330"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f604b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f3dd1f76348" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f3dd1f76348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f76698"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f76820"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f769a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f76b30"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f76cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f76e40"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f75020"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f751a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f3dd1f801a0" loc="69:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f3dd1f801a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f804f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f80678"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f80800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f80988"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f80b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f80c98"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f80e20"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f7f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f3dd1f97020" loc="47:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f3dd1f97020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f97370"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f974f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f97680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f97808"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f97990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f97b18"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f97ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f97e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f3dd1f8b100" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f3dd1f8b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f8b450"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f8b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f8b760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f8b8e8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f8ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f8bbf8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f8bd80"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f8a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f3dd1f14120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f3dd1f14120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f14470"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f145f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f14780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f14908"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f14a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f14c18"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f14da0"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f13020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f3dd1f115b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f3dd1f115b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f11908"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f11a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f11c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f11da0"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f0f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f0f1a8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f0f330"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f0f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f3dd1f17dc0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f3dd1f17dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f16170"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f162f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f16480"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f16608"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f16790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f16918"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f16aa0"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f16c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f3dd1f132a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f3dd1f132a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f135f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f13780"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f13908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f13a90"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f13c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f13da0"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f12020"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f121a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f3dd1f0f740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f3dd1f0f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f0fa90"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f0fc18"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f0fda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f0e020"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f0e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f0e330"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f0e4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f0e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f3dd1f15020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f3dd1f15020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f15370"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f154f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f15680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f15808"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f15990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f15b18"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f15ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f15e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f3dd1f12430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f3dd1f12430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f12780"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f12908"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f12a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f12c18"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f12da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f11020"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f111a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f11330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f3dd1f0e8c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f3dd1f0e8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f0ec18"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f0eda0"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f0d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f0d1a8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f0d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f0d4b8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f0d640"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f0d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd054e020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd054e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd054e370"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd054e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd054e680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd054e808"/>
        <function-ref name="get" scoped="" ref="0x7f3dd054e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd054eb18"/>
        <function-ref name="set" scoped="" ref="0x7f3dd054eca0"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd054ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd054b020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd054b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd054b370"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd054b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd054b680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd054b808"/>
        <function-ref name="get" scoped="" ref="0x7f3dd054b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd054bb18"/>
        <function-ref name="set" scoped="" ref="0x7f3dd054bca0"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd054be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd0548020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd0548020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd0548370"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd05484f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd0548680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd0548808"/>
        <function-ref name="get" scoped="" ref="0x7f3dd0548990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd0548b18"/>
        <function-ref name="set" scoped="" ref="0x7f3dd0548ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd0548e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd0545020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd0545020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd0545370"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd05454f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd0545680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd0545808"/>
        <function-ref name="get" scoped="" ref="0x7f3dd0545990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd0545b18"/>
        <function-ref name="set" scoped="" ref="0x7f3dd0545ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd0545e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd0542020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd0542020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd0542370"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd05424f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd0542680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd0542808"/>
        <function-ref name="get" scoped="" ref="0x7f3dd0542990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd0542b18"/>
        <function-ref name="set" scoped="" ref="0x7f3dd0542ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd0542e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd053f020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd053f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd053f370"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd053f4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd053f680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd053f808"/>
        <function-ref name="get" scoped="" ref="0x7f3dd053f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd053fb18"/>
        <function-ref name="set" scoped="" ref="0x7f3dd053fca0"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd053fe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd053c020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd053c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd053c370"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd053c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd053c680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd053c808"/>
        <function-ref name="get" scoped="" ref="0x7f3dd053c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd053cb18"/>
        <function-ref name="set" scoped="" ref="0x7f3dd053cca0"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd053ce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd0538020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd0538020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd0538370"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd05384f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd0538680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd0538808"/>
        <function-ref name="get" scoped="" ref="0x7f3dd0538990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd0538b18"/>
        <function-ref name="set" scoped="" ref="0x7f3dd0538ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd0538e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f3dd1f06bd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f3dd1f06bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f04020"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f041a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f04330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f044b8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f04640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f047c8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f04950"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f04ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f3dd1f01020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f3dd1f01020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f01370"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f014f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f01680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f01808"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f01990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f01b18"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f01ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f01e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f3dd1f08930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f3dd1f08930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f08c80"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f08e08"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f07020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f071a8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f07330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f074b8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f07640"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f077c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f3dd1f04d60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f3dd1f04d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f030d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f03260"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f033e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f03570"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f036f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f03880"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f03a08"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f03b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f3dd1f00120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f3dd1f00120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f00470"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f005f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f00780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f00908"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f00a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f00c18"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f00da0"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1eff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f3dd1f07a50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f3dd1f07a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f07da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f06020"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f061a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f06330"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f064b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f06640"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f067c8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f06950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f3dd1f03e18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f3dd1f03e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1f021a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1f02330"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1f024b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1f02640"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1f027c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1f02950"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1f02ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1f02c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f3dd1eff2a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f3dd1eff2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1eff5f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1eff780"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1eff908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1effa90"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1effc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1effda0"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1efe020"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1efe1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd04e7180" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd04e7180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd04e74d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd04e7658"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd04e77e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd04e7968"/>
        <function-ref name="get" scoped="" ref="0x7f3dd04e7af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd04e7c78"/>
        <function-ref name="set" scoped="" ref="0x7f3dd04e7e00"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd04e6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd04e4100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd04e4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd04e4450"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd04e45d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd04e4760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd04e48e8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd04e4a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd04e4bf8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd04e4d80"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd04e3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd04e1100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd04e1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd04e1450"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd04e15d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd04e1760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd04e18e8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd04e1a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd04e1bf8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd04e1d80"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd04e0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd04de100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd04de100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd04de450"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd04de5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd04de760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd04de8e8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd04dea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd04debf8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd04ded80"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd04dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd04db100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd04db100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd04db450"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd04db5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd04db760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd04db8e8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd04dba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd04dbbf8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd04dbd80"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd04da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd04d8100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd04d8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd04d8450"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd04d85d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd04d8760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd04d88e8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd04d8a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd04d8bf8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd04d8d80"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd04d7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd04d5100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd04d5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd04d5450"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd04d55d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd04d5760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd04d58e8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd04d5a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd04d5bf8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd04d5d80"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd04d4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd04d2100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd04d2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd04d2450"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd04d25d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd04d2760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd04d28e8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd04d2a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd04d2bf8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd04d2d80"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd04d0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f3dd1ef6740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f3dd1ef6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1ef6a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1ef6c18"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1ef6da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1ef5020"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1ef51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1ef5330"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1ef54b8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1ef5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f3dd1ef3bd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f3dd1ef3bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1ef2020"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1ef21a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1ef2330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1ef24b8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1ef2640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1ef27c8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1ef2950"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1ef2ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f3dd1ef8500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f3dd1ef8500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1ef8850"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1ef89d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1ef8b60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1ef8ce8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1ef8e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1ef7020"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1ef71a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1ef7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f3dd1ef58c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f3dd1ef58c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1ef5c18"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1ef5da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1ef4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1ef41a8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1ef4330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1ef44b8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1ef4640"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1ef47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f3dd1ef2d60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f3dd1ef2d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1ef10d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1ef1260"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1ef13e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1ef1570"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1ef16f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1ef1880"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1ef1a08"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1ef1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f3dd1ef75b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f3dd1ef75b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1ef7908"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1ef7a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1ef7c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1ef7da0"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1ef6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1ef61a8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1ef6330"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1ef64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f3dd1ef4a50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f3dd1ef4a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1ef4da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1ef3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1ef31a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1ef3330"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1ef34b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1ef3640"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1ef37c8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1ef3950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f3dd1ef1e18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f3dd1ef1e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1ef01a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1ef0330"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1ef04b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1ef0640"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1ef07c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1ef0950"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1ef0ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1ef0c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd0480180" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd0480180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd04804d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd0480658"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd04807e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd0480968"/>
        <function-ref name="get" scoped="" ref="0x7f3dd0480af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd0480c78"/>
        <function-ref name="set" scoped="" ref="0x7f3dd0480e00"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd047f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd047d100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd047d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd047d450"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd047d5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd047d760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd047d8e8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd047da70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd047dbf8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd047dd80"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd047c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd047a100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd047a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd047a450"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd047a5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd047a760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd047a8e8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd047aa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd047abf8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd047ad80"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd0479020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd0477100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd0477100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd0477450"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd04775d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd0477760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd04778e8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd0477a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd0477bf8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd0477d80"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd0476020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd0474100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd0474100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd0474450"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd04745d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd0474760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd04748e8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd0474a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd0474bf8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd0474d80"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd0473020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd0471100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd0471100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd0471450"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd04715d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd0471760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd04718e8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd0471a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd0471bf8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd0471d80"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd0470020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd046e100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd046e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd046e450"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd046e5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd046e760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd046e8e8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd046ea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd046ebf8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd046ed80"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd046d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd046b100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd046b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd046b450"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd046b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd046b760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd046b8e8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd046ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd046bbf8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd046bd80"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd0469020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f3dd1ee7120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f3dd1ee7120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1ee7470"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1ee75f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1ee7780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1ee7908"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1ee7a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1ee7c18"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1ee7da0"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1ee6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f3dd1ee45b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f3dd1ee45b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1ee4908"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1ee4a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1ee4c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1ee4da0"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1ee3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1ee31a8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1ee3330"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1ee34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f3dd1eeae40" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f3dd1eeae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1ee91c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1ee9348"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1ee94d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1ee9658"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1ee97e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1ee9968"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1ee9af0"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1ee9c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f3dd1ee62a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f3dd1ee62a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1ee65f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1ee6780"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1ee6908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1ee6a90"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1ee6c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1ee6da0"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1ee5020"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1ee51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f3dd1ee3740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f3dd1ee3740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1ee3a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1ee3c18"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1ee3da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1ee2020"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1ee21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1ee2330"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1ee24b8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1ee2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f3dd1ee8020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f3dd1ee8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1ee8370"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1ee84f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1ee8680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1ee8808"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1ee8990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1ee8b18"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1ee8ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1ee8e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f3dd1ee5430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f3dd1ee5430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1ee5780"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1ee5908"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1ee5a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1ee5c18"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1ee5da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1ee4020"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1ee41a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1ee4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f3dd1ee28c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f3dd1ee28c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1ee2c18"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1ee2da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1ee0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1ee01a8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1ee0330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1ee04b8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1ee0640"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1ee07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd0417180" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd0417180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd04174d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd0417658"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd04177e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd0417968"/>
        <function-ref name="get" scoped="" ref="0x7f3dd0417af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd0417c78"/>
        <function-ref name="set" scoped="" ref="0x7f3dd0417e00"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd0416020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd0414100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd0414100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd0414450"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd04145d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd0414760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd04148e8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd0414a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd0414bf8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd0414d80"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd0413020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd0411100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd0411100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd0411450"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd04115d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd0411760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd04118e8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd0411a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd0411bf8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd0411d80"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd0410020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd040e100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd040e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd040e450"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd040e5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd040e760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd040e8e8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd040ea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd040ebf8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd040ed80"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd040d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd040b100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd040b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd040b450"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd040b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd040b760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd040b8e8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd040ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd040bbf8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd040bd80"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd040a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd0408100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd0408100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd0408450"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd04085d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd0408760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd04088e8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd0408a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd0408bf8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd0408d80"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd0407020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd0405100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd0405100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd0405450"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd04055d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd0405760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd04058e8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd0405a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd0405bf8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd0405d80"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd0404020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd0402100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd0402100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd0402450"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd04025d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd0402760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd04028e8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd0402a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd0402bf8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd0402d80"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd0401020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f3dd1ed9bd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f3dd1ed9bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1ed8020"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1ed81a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1ed8330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1ed84b8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1ed8640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1ed87c8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1ed8950"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1ed8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f3dd1ed4020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f3dd1ed4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1ed4370"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1ed44f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1ed4680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1ed4808"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1ed4990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1ed4b18"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1ed4ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1ed4e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f3dd1edb930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f3dd1edb930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1edbc80"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1edbe08"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1eda020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1eda1a8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1eda330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1eda4b8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1eda640"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1eda7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f3dd1ed8d60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f3dd1ed8d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1ed70d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1ed7260"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1ed73e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1ed7570"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1ed76f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1ed7880"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1ed7a08"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1ed7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f3dd1ed3120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f3dd1ed3120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1ed3470"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1ed35f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1ed3780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1ed3908"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1ed3a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1ed3c18"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1ed3da0"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1ed2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f3dd1edaa50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f3dd1edaa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1edada0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1ed9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1ed91a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1ed9330"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1ed94b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1ed9640"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1ed97c8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1ed9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f3dd1ed7e18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f3dd1ed7e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1ed51a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1ed5330"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1ed54b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1ed5640"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1ed57c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1ed5950"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1ed5ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1ed5c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f3dd1ed22a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f3dd1ed22a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1ed25f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1ed2780"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1ed2908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1ed2a90"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1ed2c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1ed2da0"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1ed1020"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1ed11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd03b0180" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd03b0180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd03b04d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd03b0658"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd03b07e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd03b0968"/>
        <function-ref name="get" scoped="" ref="0x7f3dd03b0af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd03b0c78"/>
        <function-ref name="set" scoped="" ref="0x7f3dd03b0e00"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd03af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd03ad100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd03ad100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd03ad450"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd03ad5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd03ad760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd03ad8e8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd03ada70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd03adbf8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd03add80"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd03ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd03aa100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd03aa100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd03aa450"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd03aa5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd03aa760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd03aa8e8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd03aaa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd03aabf8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd03aad80"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd03a9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd03a7100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd03a7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd03a7450"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd03a75d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd03a7760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd03a78e8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd03a7a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd03a7bf8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd03a7d80"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd03a6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd03a4100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd03a4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd03a4450"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd03a45d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd03a4760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd03a48e8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd03a4a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd03a4bf8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd03a4d80"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd03a3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd03a1100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd03a1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd03a1450"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd03a15d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd03a1760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd03a18e8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd03a1a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd03a1bf8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd03a1d80"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd03a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd039e100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd039e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd039e450"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd039e5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd039e760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd039e8e8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd039ea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd039ebf8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd039ed80"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd039d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd039b100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd039b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd039b450"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd039b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd039b760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd039b8e8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd039ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd039bbf8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd039bd80"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd039a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f3dd1ec9740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f3dd1ec9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1ec9a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1ec9c18"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1ec9da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1ec8020"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1ec81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1ec8330"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1ec84b8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1ec8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f3dd1ec6bd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f3dd1ec6bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1ec5020"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1ec51a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1ec5330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1ec54b8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1ec5640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1ec57c8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1ec5950"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1ec5ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f3dd1ecc500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f3dd1ecc500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1ecc850"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1ecc9d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1eccb60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1eccce8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1ecce70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1ecb020"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1ecb1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1ecb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f3dd1ec88c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f3dd1ec88c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1ec8c18"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1ec8da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1ec7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1ec71a8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1ec7330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1ec74b8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1ec7640"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1ec77c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f3dd1ec5d60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f3dd1ec5d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1ec40d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1ec4260"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1ec43e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1ec4570"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1ec46f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1ec4880"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1ec4a08"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1ec4b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f3dd1ecb5b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f3dd1ecb5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1ecb908"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1ecba90"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1ecbc18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1ecbda0"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1ec9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1ec91a8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1ec9330"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1ec94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f3dd1ec7a50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f3dd1ec7a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1ec7da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1ec6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1ec61a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1ec6330"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1ec64b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1ec6640"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1ec67c8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1ec6950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f3dd1ec4e18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f3dd1ec4e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1ec31a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1ec3330"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1ec34b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1ec3640"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1ec37c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1ec3950"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1ec3ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1ec3c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd0349180" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd0349180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd03494d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd0349658"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd03497e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd0349968"/>
        <function-ref name="get" scoped="" ref="0x7f3dd0349af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd0349c78"/>
        <function-ref name="set" scoped="" ref="0x7f3dd0349e00"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd0348020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd0346100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd0346100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd0346450"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd03465d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd0346760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd03468e8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd0346a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd0346bf8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd0346d80"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd0345020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd0343100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd0343100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd0343450"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd03435d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd0343760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd03438e8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd0343a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd0343bf8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd0343d80"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd0342020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd0340100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd0340100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd0340450"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd03405d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd0340760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd03408e8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd0340a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd0340bf8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd0340d80"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd033f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd033d100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd033d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd033d450"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd033d5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd033d760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd033d8e8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd033da70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd033dbf8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd033dd80"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd033c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd033a100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd033a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd033a450"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd033a5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd033a760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd033a8e8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd033aa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd033abf8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd033ad80"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd0339020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd0337100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd0337100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd0337450"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd03375d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd0337760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd03378e8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd0337a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd0337bf8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd0337d80"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd0336020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd0334100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd0334100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd0334450"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd03345d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd0334760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd03348e8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd0334a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd0334bf8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd0334d80"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd0333020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd1ebc3e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd1ebc3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1ebc730"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1ebc8b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1ebca40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1ebcbc8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1ebcd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1ea6020"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1ea61a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1ea6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd1ea2c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd1ea2c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1ea1020"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1ea11a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1ea1330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1ea14b8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1ea1640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1ea17c8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1ea1950"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1ea1ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd1e9c3e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd1e9c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1e9c730"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1e9c8b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1e9ca40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1e9cbc8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1e9cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1e9b020"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1e9b1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1e9b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd1e98c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd1e98c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1e97020"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1e971a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1e97330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1e974b8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1e97640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1e977c8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1e97950"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1e97ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd1e923e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd1e923e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1e92730"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1e928b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1e92a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1e92bc8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1e92d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1e91020"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1e911a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1e91330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd1e8dc38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd1e8dc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1e8c020"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1e8c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1e8c330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1e8c4b8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1e8c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1e8c7c8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1e8c950"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1e8cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd1e88480" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd1e88480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1e887d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1e88958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1e88ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1e88c68"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1e88df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1e87020"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1e871a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1e87330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd1e83c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd1e83c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1e82020"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1e821a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1e82330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1e824b8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1e82640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1e827c8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1e82950"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1e82ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd1e7e520" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd1e7e520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1e7e870"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1e7e9f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1e7eb80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1e7ed08"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1e7c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1e7c1a8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1e7c330"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1e7c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd1e79cd8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd1e79cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1e780a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1e78228"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1e783b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1e78538"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1e786c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1e78848"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1e789d0"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1e78b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd1e733e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd1e733e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1e73730"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1e738b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1e73a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1e73bc8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1e73d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1e72020"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1e721a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1e72330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd1e6fc38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd1e6fc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1e6d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1e6d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1e6d330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1e6d4b8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1e6d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1e6d7c8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1e6d950"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1e6dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd1e693e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd1e693e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1e69730"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1e698b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1e69a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1e69bc8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1e69d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1e68020"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1e681a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1e68330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3dd1e64c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3dd1e64c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1e63020"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1e631a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1e63330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1e634b8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1e63640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1e637c8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1e63950"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1e63ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3dd1e2a4b0" loc="61:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3dd1e2a4b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f3dd22356f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f3dd22356f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd1e2a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f3dd1e2aae0" loc="62:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f3dd1e2aae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f3dd1e2ae30"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f3dd1e29020"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f3dd1e291a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f3dd1e29330"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f3dd1e294b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f3dd1e0b418" loc="60:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f3dd1e0b418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd1e0b768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f3dd1fbac38" loc="57:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f3dd1fbac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f3dd1e0c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f3dd1e0cce0" loc="59:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f3dd1e0cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd1e0b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f3dd1e0c308" loc="58:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f3dd1e0c308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd1e0c658"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f3dd1e0c7e0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f3dd1e0c968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f3dd223a1c8" loc="48:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f3dd223a1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3dd223a518"/>
        <function-ref name="runTask" scoped="" ref="0x7f3dd223a6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f3dd22175c8" loc="47:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f3dd22175c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd2217918"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f3dd2217aa0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f3dd2217c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f3dd2163c58" loc="56:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f3dd2163c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3dd2162020"/>
        <function-ref name="runTask" scoped="" ref="0x7f3dd21621a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f3dd215f168" loc="57:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f3dd215f168"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f3dd215f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f3dd2164d88" loc="55:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f3dd2164d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd2163170"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f3dd21632f8"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f3dd2163480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f3dd2142988" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f3dd2142988"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f3dd2142cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f3dd2216e28" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f3dd2216e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f3dd21461a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f3dd21433c8" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f3dd21433c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f3dd2143718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f3dd1dfd190" loc="46:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f3dd1dfd190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f3dd1dfd4e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f3dd1dfd668"/>
        <function-ref name="led1On" scoped="" ref="0x7f3dd1dfd7f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f3dd1dfd978"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f3dd1dfdb00"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1dfdc88"/>
        <function-ref name="led1Off" scoped="" ref="0x7f3dd1dfde10"/>
        <function-ref name="led2Off" scoped="" ref="0x7f3dd1dfc4b8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1dfc020"/>
        <function-ref name="led0On" scoped="" ref="0x7f3dd1dfc1a8"/>
        <function-ref name="led2On" scoped="" ref="0x7f3dd1dfc330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f3dd1df7020" loc="50:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f3dd1df7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1df7370"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1df74f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1df7680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1df7808"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1df7990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1df7b18"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1df7ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1df7e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3dd1df9368" loc="46:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3dd1df9368"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd1df96b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f3dd1df6190" loc="51:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f3dd1df6190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1df64e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1df6668"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1df67f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1df6978"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1df6b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1df6c88"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1df6e10"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1df5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f3dd1df9930" loc="47:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f3dd1df9930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f3dd1df9c80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f3dd1df9e08"/>
        <function-ref name="led1On" scoped="" ref="0x7f3dd1df8020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f3dd1df81a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f3dd1df8330"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1df84b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f3dd1df8640"/>
        <function-ref name="led2Off" scoped="" ref="0x7f3dd1df8c60"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1df87c8"/>
        <function-ref name="led0On" scoped="" ref="0x7f3dd1df8950"/>
        <function-ref name="led2On" scoped="" ref="0x7f3dd1df8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f3dd1df5338" loc="52:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f3dd1df5338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1df5688"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1df5810"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1df5998"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1df5b20"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1df5ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1df5e30"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1df4020"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1df41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f3dd1dd9090" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f3dd1dd9090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1dd93e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1dd9568"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1dd96f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1dd9878"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1dd9a00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1dd9b88"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1dd9d10"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1dd8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f3dd1dd8378" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f3dd1dd8378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1dd86c8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1dd8850"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1dd89d8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1dd8b60"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1dd8ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1dd8e70"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1dd7020"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1dd71a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f3dd1dd65e8" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3dd1dd65e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd1dd6938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f3dd1dd7500" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f3dd1dd7500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1dd7850"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1dd79d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1dd7b60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1dd7ce8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1dd7e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1dd6020"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1dd61a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1dd6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f3dd1dd1728" loc="41:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f3dd1dd1728"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f3dd1dd1a78"/>
        <function-ref name="stopDone" scoped="" ref="0x7f3dd1dd1c00"/>
        <function-ref name="start" scoped="" ref="0x7f3dd1dd1d88"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd1dcd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f3dd1dc5ad8" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f3dd1dc5ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f3dd1dc5e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f3dd1dc9100" loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3dd1dc9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd1dc9450"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd1dc95d8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd1dc9760"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd1dc98e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd1dc9a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f3dd1dcd798" loc="43:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3dd1dcd798"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd1dcdae8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd1dcdc70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd1dcddf8"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd1dcc020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd1dcc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f3dd1dcb498" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f3dd1dcb498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd1dcb7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f3dd1dc46a8" loc="52:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f3dd1dc46a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f3dd1dc49f8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f3dd1dc4b80"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f3dd1dc4d08"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f3dd1dc3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f3dd1dcc928" loc="44:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f3dd1dcc928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd1dccc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f3dd1dbfcb0" loc="51:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3dd1dbfcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f3dd1dc40a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f3dd1dc4228"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f3dd1dc43b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f3dd1db6828" loc="53:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f3dd1db6828"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f3dd1db6b78"/>
        <function-ref name="setRetries" scoped="" ref="0x7f3dd1db6d00"/>
        <function-ref name="getRetries" scoped="" ref="0x7f3dd1dbd020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f3dd1dbd1a8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f3dd1dbd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f3dd1dc9d10" loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3dd1dc9d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dd1dc80a0"/>
        <function-ref name="source" scoped="" ref="0x7f3dd1dc8228"/>
        <function-ref name="address" scoped="" ref="0x7f3dd1dc83b0"/>
        <function-ref name="destination" scoped="" ref="0x7f3dd1dc8538"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dd1dc86c0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dd1dc8848"/>
        <function-ref name="type" scoped="" ref="0x7f3dd1dc89d0"/>
        <function-ref name="setType" scoped="" ref="0x7f3dd1dc8b58"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dd1dc8ce0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dd1dc8e68"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3dd1dc6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f3dd1db2550" loc="54:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f3dd1db2550"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f3dd1db28a0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f3dd1db2a28"/>
        <function-ref name="getChannel" scoped="" ref="0x7f3dd1db2bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x7f3dd1db5260" loc="56:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7f3dd1db5260"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f3dd21a9788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f3dd1db1700"/>
        <function-ref name="clear" scoped="" ref="0x7f3dd1db1de0"/>
        <function-ref name="isValid" scoped="" ref="0x7f3dd1db1020"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1dab4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f3dd1da8130" loc="57:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f3dd1da8130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f3dd1da7700"/>
        <function-ref name="clear" scoped="" ref="0x7f3dd1da7de0"/>
        <function-ref name="isValid" scoped="" ref="0x7f3dd1da7020"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1da64f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f3dd1da46d8" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f3dd1da46d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f3dd1da4a28"/>
        <function-ref name="stopDone" scoped="" ref="0x7f3dd1da4bb0"/>
        <function-ref name="start" scoped="" ref="0x7f3dd1da4d38"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd1da1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f3dd1d8dd28" loc="66:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f3dd1d8dd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd1d8a388"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1d8be00"/>
        <function-ref name="isSet" scoped="" ref="0x7f3dd1d8b8f0"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1d8a898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f3dd1d80478" loc="71:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f3dd1d80478"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f3dd1d7e900"/>
        <function-ref name="clear" scoped="" ref="0x7f3dd1d7d020"/>
        <function-ref name="isValid" scoped="" ref="0x7f3dd1d7e220"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1d7d700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f3dd1d9e020" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f3dd1d9e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f3dd1d9e370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f3dd1d9de38" loc="56:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3dd1d9de38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd1d9b1c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd1d9b348"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd1d9b4d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd1d9b658"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd1d9b7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f3dd1da1798" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3dd1da1798"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd1da1ae8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd1da1c70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd1da1df8"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd1da0020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd1da01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f3dd1d9f498" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f3dd1d9f498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd1d9f7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f3dd1d95870" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f3dd1d95870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd1d8d020"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1d8e9a0"/>
        <function-ref name="isSet" scoped="" ref="0x7f3dd1d8e490"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1d8d530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f3dd1d99af8" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f3dd1d99af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f3dd1d99e48"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f3dd1d98020"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f3dd1d981a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f3dd1d98330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f3dd1da0928" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f3dd1da0928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd1da0c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f3dd1d865d0" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f3dd1d865d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f3dd20b2140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f3dd1d82a88"/>
        <function-ref name="clear" scoped="" ref="0x7f3dd1d81190"/>
        <function-ref name="isValid" scoped="" ref="0x7f3dd1d823a8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1d81870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f3dd1d871d8" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f3dd1d871d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f3dd20b2140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dd1d87d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f3dd1d90390" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f3dd1d90390"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd1d96a40"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1d96530"/>
        <function-ref name="isSet" scoped="" ref="0x7f3dd1d96020"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1d95020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f3dd1d991a0" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3dd1d991a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f3dd1d994f0"/>
        <function-ref name="noAck" scoped="" ref="0x7f3dd1d99678"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f3dd1d99800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f3dd1d9ebe0" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f3dd1d9ebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd1d9d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f3dd1d985e0" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f3dd1d985e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f3dd1d98930"/>
        <function-ref name="setRetries" scoped="" ref="0x7f3dd1d98ab8"/>
        <function-ref name="getRetries" scoped="" ref="0x7f3dd1d98c40"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f3dd1d98dc8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f3dd1d97020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f3dd1d9ba80" loc="57:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3dd1d9ba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dd1d9bdd0"/>
        <function-ref name="source" scoped="" ref="0x7f3dd1d9a020"/>
        <function-ref name="address" scoped="" ref="0x7f3dd1d9a1a8"/>
        <function-ref name="destination" scoped="" ref="0x7f3dd1d9a330"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dd1d9a4b8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dd1d9a640"/>
        <function-ref name="type" scoped="" ref="0x7f3dd1d9a7c8"/>
        <function-ref name="setType" scoped="" ref="0x7f3dd1d9a950"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dd1d9aad8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dd1d9ac60"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3dd1d9ade8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f3dd1d972e8" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f3dd1d972e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f3dd1d97738"/>
        <function-ref name="setChannel" scoped="" ref="0x7f3dd1d978c0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f3dd1d97a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f3dd1d84570" loc="67:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f3dd1d84570"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f3dd1d848c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f3dd1d9d860" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f3dd1d9d860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd1d9dbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f3dd1d7c810" loc="41:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f3dd1d7c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f3dd1d7cb60"/>
        <function-ref name="stopDone" scoped="" ref="0x7f3dd1d7cce8"/>
        <function-ref name="start" scoped="" ref="0x7f3dd1d7ce70"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd1d79020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f3dd1d50600" loc="80:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f3dd1d50600"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd1d4fbf0"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1d4f6e0"/>
        <function-ref name="isSet" scoped="" ref="0x7f3dd1d4f1d0"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1d4e130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x7f3dd1d6f218" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x7f3dd1d6f218"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f3dd1d6f568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x7f3dd1d68208" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x7f3dd1d68208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3dd1d68658"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3dd1d687e0"/>
        <function-ref name="request" scoped="" ref="0x7f3dd1d68968"/>
        <function-ref name="granted" scoped="" ref="0x7f3dd1d68af0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3dd1d68c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f3dd1d75020" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f3dd1d75020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f3dd1d75370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f3dd1d79798" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3dd1d79798"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd1d79ae8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd1d79c70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd1d79df8"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd1d78020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd1d781a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f3dd1d76498" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f3dd1d76498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd1d767e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f3dd1d62020" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f3dd1d62020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f3dd1d62370"/>
        <function-ref name="address" scoped="" ref="0x7f3dd1d624f8"/>
        <function-ref name="destination" scoped="" ref="0x7f3dd1d62680"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dd1d62808"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dd1d62990"/>
        <function-ref name="pan" scoped="" ref="0x7f3dd1d62b18"/>
        <function-ref name="setPan" scoped="" ref="0x7f3dd1d62ca0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dd1d62e28"/>
        <function-ref name="localPan" scoped="" ref="0x7f3dd1d61020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x7f3dd1d613d0" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7f3dd1d613d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd1d61720"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd1d618a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd1d61a30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd1d61bb8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd1d61d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f3dd1d532d0" loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f3dd1d532d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd1d52898"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1d52388"/>
        <function-ref name="isSet" scoped="" ref="0x7f3dd1d53e50"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1d52da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f3dd1d59a18" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f3dd1d59a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f3dd1d59d68"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f3dd1d58020"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f3dd1d581a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f3dd1d58330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x7f3dd1d72550" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f3dd1d72550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd1d728a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd1d72a28"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd1d72bb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd1d72d38"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd1d71020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f3dd1d78928" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f3dd1d78928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd1d78c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f3dd1d4b3f8" loc="84:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f3dd1d4b3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f3dd20b2140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f3dd1d4aa88"/>
        <function-ref name="clear" scoped="" ref="0x7f3dd1d48190"/>
        <function-ref name="isValid" scoped="" ref="0x7f3dd1d4a3a8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1d48870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f3dd1d4c020" loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f3dd1d4c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f3dd20b2140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dd1d4cba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f3dd1d57e40" loc="78:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f3dd1d57e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd1d55530"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1d55020"/>
        <function-ref name="isSet" scoped="" ref="0x7f3dd1d56a18"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1d55a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f3dd1d590c0" loc="68:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3dd1d590c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f3dd1d59410"/>
        <function-ref name="noAck" scoped="" ref="0x7f3dd1d59598"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f3dd1d59720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f3dd1d6ad80" loc="58:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f3dd1d6ad80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd1d70170"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd1d702f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd1d70480"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd1d70608"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd1d70790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f3dd1d75be0" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f3dd1d75be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd1d74020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f3dd1d585e0" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f3dd1d585e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f3dd1d58930"/>
        <function-ref name="setRetries" scoped="" ref="0x7f3dd1d58ab8"/>
        <function-ref name="getRetries" scoped="" ref="0x7f3dd1d58c40"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f3dd1d58dc8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f3dd1d57020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f3dd1d572e8" loc="76:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f3dd1d572e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f3dd1d57638"/>
        <function-ref name="setChannel" scoped="" ref="0x7f3dd1d577c0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f3dd1d57948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f3dd1d74e50" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3dd1d74e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dd1d731e8"/>
        <function-ref name="source" scoped="" ref="0x7f3dd1d73370"/>
        <function-ref name="address" scoped="" ref="0x7f3dd1d734f8"/>
        <function-ref name="destination" scoped="" ref="0x7f3dd1d73680"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dd1d73808"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dd1d73990"/>
        <function-ref name="type" scoped="" ref="0x7f3dd1d73b18"/>
        <function-ref name="setType" scoped="" ref="0x7f3dd1d73ca0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dd1d73e28"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dd1d72020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3dd1d721a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f3dd1d47478" loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f3dd1d47478"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f3dd1d46900"/>
        <function-ref name="clear" scoped="" ref="0x7f3dd1d44020"/>
        <function-ref name="isValid" scoped="" ref="0x7f3dd1d46220"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1d44700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f3dd1d70af0" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f3dd1d70af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd1d70e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f3dd1d4e778" loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f3dd1d4e778"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f3dd1d4eac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f3dd1d74860" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f3dd1d74860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd1d74bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x7f3dd1d15300" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x7f3dd1d15300"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f3dd1d15650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x7f3dd1d29c00" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x7f3dd1d29c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x7f3dd1d31020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x7f3dd1d18760" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7f3dd1d18760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dd1d18ab0"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f3dd1d18c38"/>
        <function-ref name="source" scoped="" ref="0x7f3dd1d18dc0"/>
        <function-ref name="destination" scoped="" ref="0x7f3dd1d28020"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dd1d281a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dd1d28330"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dd1d284b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x7f3dd1d1f570" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x7f3dd1d1f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x7f3dd1d1f8c0"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x7f3dd1d1fa48"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x7f3dd1d1fbd0"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x7f3dd1d1fd58"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x7f3dd1d2b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f3dd1cf3bd8" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f3dd1cf3bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f3dd1cf7020"/>
        <function-ref name="wait" scoped="" ref="0x7f3dd1cf71a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd1cf7330"/>
        <function-ref name="isFree" scoped="" ref="0x7f3dd1cf74b8"/>
        <function-ref name="getNow" scoped="" ref="0x7f3dd1cf7640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x7f3dd1cede08" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x7f3dd1cede08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd1cf62e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd1cf6470"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd1cf65f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd1cf6780"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3dd1cf6908"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3dd1cf6a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f3dd1cf2080" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f3dd1cf2080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f3dd20b2140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f3dd1ceb4f8"/>
        <function-ref name="clear" scoped="" ref="0x7f3dd1cebbd8"/>
        <function-ref name="isValid" scoped="" ref="0x7f3dd1cf2dd0"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1cea300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x7f3dd1d3be48" loc="43:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x7f3dd1d3be48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd1d401c0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3dd1d40348"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3dd1d404d0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f3dd1d40658"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f3dd1d407e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x7f3dd1d2a6c0" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x7f3dd1d2a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x7f3dd1d2aa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x7f3dd1d33af0" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7f3dd1d33af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7f3dd1d33e40"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7f3dd1d3f020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f3dd1d3f1a8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7f3dd1d3f330"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7f3dd1d3f4b8"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7f3dd1d3f640"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f3dd1d3f7c8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f3dd1d3f950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7f3dd1cfad58" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f3dd1cfad58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f3dd1d160d8"/>
        <function-ref name="getDSN" scoped="" ref="0x7f3dd1d16260"/>
        <function-ref name="setFCF" scoped="" ref="0x7f3dd1d163e8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f3dd1d16570"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f3dd1d166f8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f3dd1d16880"/>
        <function-ref name="setDSN" scoped="" ref="0x7f3dd1d16a08"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f3dd1d16b90"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f3dd1d16d18"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f3dd1d12020"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f3dd1d121a8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f3dd1d12330"/>
        <function-ref name="localAddr" scoped="" ref="0x7f3dd1d124b8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f3dd1d12740"/>
        <function-ref name="localPan" scoped="" ref="0x7f3dd1d128c8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f3dd1d12a50"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f3dd1d12bd8"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f3dd1d12d60"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f3dd1cf9020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dd1cf91a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f3dd1cf9330"/>
        <function-ref name="getFCF" scoped="" ref="0x7f3dd1cf94b8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f3dd1cf9640"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f3dd1cf97c8"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f3dd1cf9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x7f3dd1d2db40" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7f3dd1d2db40"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f3dd1d3a020"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f3dd1d3a1a8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f3dd1d3a330"/>
        <function-ref name="getSender" scoped="" ref="0x7f3dd1d3a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListeningConfig" ref="0x7f3dd1d13cc0" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListeningConfig" scoped="" ref="0x7f3dd1d13cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListeningConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getListenLength" scoped="" ref="0x7f3dd1d1e0a0"/>
        <function-ref name="ackRequested" scoped="" ref="0x7f3dd1d1e228"/>
        <function-ref name="needsAutoAckRequest" scoped="" ref="0x7f3dd1d1e3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x7f3dd1d240d0" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7f3dd1d240d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f3dd1d24420"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f3dd1d245a8"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f3dd1d24730"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f3dd1d248b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7f3dd1c8ec50" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f3dd1c8ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f3dd1c51020"/>
        <function-ref name="wait" scoped="" ref="0x7f3dd1c511a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd1c51330"/>
        <function-ref name="isFree" scoped="" ref="0x7f3dd1c514b8"/>
        <function-ref name="getNow" scoped="" ref="0x7f3dd1c51640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f3dd1c51c68" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f3dd1c51c68"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f3dd22356f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f3dd22356f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f3dd20b2140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f3dd20b2540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3dd1c4e410"/>
        <function-ref name="fired" scoped="" ref="0x7f3dd1c4f4a8"/>
        <function-ref name="startAt" scoped="" ref="0x7f3dd1c4fdb8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3dd1c4f930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f3dd1c4e898"/>
        <function-ref name="start" scoped="" ref="0x7f3dd1c509f0"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd1c4f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7f3dd0246910" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f3dd0246910"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f3dd0246c80"/>
        <function-ref name="wait" scoped="" ref="0x7f3dd0246e08"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd0245020"/>
        <function-ref name="isFree" scoped="" ref="0x7f3dd02451a8"/>
        <function-ref name="getNow" scoped="" ref="0x7f3dd0245330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f3dd02457e8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f3dd02457e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f3dd20b2140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f3dd20b2540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3dd023f020"/>
        <function-ref name="fired" scoped="" ref="0x7f3dd0240020"/>
        <function-ref name="startAt" scoped="" ref="0x7f3dd0240930"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3dd02404a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f3dd023f4a8"/>
        <function-ref name="start" scoped="" ref="0x7f3dd0241578"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd0241a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f3dd023f880" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f3dd023f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f3dd023fbd0"/>
        <function-ref name="suspend" scoped="" ref="0x7f3dd023fd58"/>
        <function-ref name="resume" scoped="" ref="0x7f3dd023d020"/>
        <function-ref name="run" scoped="" ref="0x7f3dd023d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x7f3dd1c5e5b8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f3dd1c5e5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f3dd1c5e908"/>
        <function-ref name="suspend" scoped="" ref="0x7f3dd1c5ea90"/>
        <function-ref name="resume" scoped="" ref="0x7f3dd1c5ec18"/>
        <function-ref name="run" scoped="" ref="0x7f3dd1c5eda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f3dd1ba0430" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f3dd1ba0430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd1ba0780"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd1ba0908"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd1ba0a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f3dd1ba0d18" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f3dd1ba0d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd1b9e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f3dd1ba21a0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f3dd1ba21a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f3dd1ba2510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f3dd1ba5700" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3dd1ba5700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd1ba5a50"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd1ba5bd8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd1ba5d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd1ba4020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd1ba41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f3dd1ba4510" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3dd1ba4510"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd1ba4880"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd1ba4a08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd1ba4b90"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd1ba4d18"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd1ba3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f3dd1ba3aa0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f3dd1ba3aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd1ba3e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f3dd1ba1678" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f3dd1ba1678"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd1ba19c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd1ba1b50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd1ba1cd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd1ba1e60"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3dd1ba0020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3dd1ba01a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f3dd1b9e328" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f3dd1b9e328"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dd1b9e678"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f3dd1b9e800"/>
        <function-ref name="source" scoped="" ref="0x7f3dd1b9e988"/>
        <function-ref name="destination" scoped="" ref="0x7f3dd1b9eb10"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dd1b9ec98"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dd1b9ee20"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dd1b9d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f3dd1ba3388" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f3dd1ba3388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd1ba36f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f3dd1ba28b8" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f3dd1ba28b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd1ba2c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f3dd1ba61f0" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3dd1ba61f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dd1ba6540"/>
        <function-ref name="source" scoped="" ref="0x7f3dd1ba66c8"/>
        <function-ref name="address" scoped="" ref="0x7f3dd1ba6850"/>
        <function-ref name="destination" scoped="" ref="0x7f3dd1ba69d8"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dd1ba6b60"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dd1ba6ce8"/>
        <function-ref name="type" scoped="" ref="0x7f3dd1ba6e70"/>
        <function-ref name="setType" scoped="" ref="0x7f3dd1ba5020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dd1ba51a8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dd1ba5330"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3dd1ba54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f3dd1ba1020" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f3dd1ba1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd1ba1390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f3dd0220b90" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f3dd0220b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd021f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f3dd02202a8" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f3dd02202a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd02205f8"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd0220780"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd0220908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f3dd0222020" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f3dd0222020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f3dd0222390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f3dd0225578" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3dd0225578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd02258c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd0225a50"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd0225bd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd0225d60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd0224020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f3dd0224388" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3dd0224388"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd02246f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd0224880"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd0224a08"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd0224b90"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd0224d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f3dd02237e0" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f3dd02237e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd0223b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f3dd02281c8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f3dd02281c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd0228518"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd02286a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd0228828"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd02289b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3dd0228b38"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3dd0228cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f3dd021f2a8" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f3dd021f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dd021f6f8"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f3dd021f880"/>
        <function-ref name="source" scoped="" ref="0x7f3dd021fa08"/>
        <function-ref name="destination" scoped="" ref="0x7f3dd021fb90"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dd021fd18"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dd021d020"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dd021d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f3dd021d3f0" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f3dd021d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f3dd021d740"/>
        <function-ref name="changed" scoped="" ref="0x7f3dd021d8c8"/>
        <function-ref name="amGroup" scoped="" ref="0x7f3dd021da50"/>
        <function-ref name="setAddress" scoped="" ref="0x7f3dd021dbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f3dd02214d0" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f3dd02214d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd0221820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd02219a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd0221b30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd0221cb8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3dd0221e40"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3dd0220020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f3dd02230c8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f3dd02230c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd0223438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f3dd0222738" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f3dd0222738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd0222aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f3dd0227020" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3dd0227020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dd0227370"/>
        <function-ref name="source" scoped="" ref="0x7f3dd02274f8"/>
        <function-ref name="address" scoped="" ref="0x7f3dd0227680"/>
        <function-ref name="destination" scoped="" ref="0x7f3dd0227808"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dd0227990"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dd0227b18"/>
        <function-ref name="type" scoped="" ref="0x7f3dd0227ca0"/>
        <function-ref name="setType" scoped="" ref="0x7f3dd0227e28"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dd0225020"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dd02251a8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3dd0225330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f3dd0222e50" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f3dd0222e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd02211e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f3dd1bbec60" loc="54:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f3dd1bbec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f3dd1bbb020"/>
        <function-ref name="changed" scoped="" ref="0x7f3dd1bbb1a8"/>
        <function-ref name="amGroup" scoped="" ref="0x7f3dd1bbb330"/>
        <function-ref name="setAddress" scoped="" ref="0x7f3dd1bbb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f3dd1b97a48" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f3dd1b97a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd1b97d98"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd1b88020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd1b881a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f3dd1b883f0" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f3dd1b883f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3dd1b88740"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3dd1b888c8"/>
        <function-ref name="request" scoped="" ref="0x7f3dd1b88a50"/>
        <function-ref name="granted" scoped="" ref="0x7f3dd1b88bd8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3dd1b88d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f3dd1b97100" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f3dd1b97100"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd1b97450"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd1b975d8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd1b97760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f3dd1b26020" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f3dd1b26020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f3dd1b26390"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f3dd1b26518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f3dd1b25020" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3dd1b25020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f3dd1b25390"/>
        <function-ref name="configure" scoped="" ref="0x7f3dd1b25518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3dd1b27200" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f3dd1b27200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3dd1b27570"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3dd1b276f8"/>
        <function-ref name="request" scoped="" ref="0x7f3dd1b27880"/>
        <function-ref name="granted" scoped="" ref="0x7f3dd1b27a08"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3dd1b27b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f3dd1b26760" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3dd1b26760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f3dd1b26ab0"/>
        <function-ref name="userId" scoped="" ref="0x7f3dd1b26c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3dd01cdc38" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3dd01cdc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd01cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f3dd01cc2a8" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f3dd01cc2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f3dd01cc5f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f3dd01cc780"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f3dd01cc908"/>
        <function-ref name="dequeue" scoped="" ref="0x7f3dd01cca90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f3dd01cadf8" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f3dd01cadf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f3dd01c91a8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f3dd01c9330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f3dd01c9e18" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3dd01c9e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f3dd01c81c0"/>
        <function-ref name="configure" scoped="" ref="0x7f3dd01c8348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f3dd01c85d0" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f3dd01c85d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f3dd01c8920"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f3dd01c8aa8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f3dd01c8c30"/>
        <function-ref name="dequeue" scoped="" ref="0x7f3dd01c8db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3dd01ca100" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f3dd01ca100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3dd01ca470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3dd01ca5f8"/>
        <function-ref name="request" scoped="" ref="0x7f3dd01ca780"/>
        <function-ref name="granted" scoped="" ref="0x7f3dd01ca908"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3dd01caa90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f3dd01c9578" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3dd01c9578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f3dd01c98c8"/>
        <function-ref name="userId" scoped="" ref="0x7f3dd01c9a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f3dd01c7100" loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f3dd01c7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3dd01c7450"/>
        <function-ref name="runTask" scoped="" ref="0x7f3dd01c75d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f3dd1aefba0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f3dd1aefba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd1aee020"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd1aee1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd1aee330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f3dd1aee5b8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f3dd1aee5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd1aee908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f3dd1af3840" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f3dd1af3840"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f3dd1af3b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f3dd1b22980" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3dd1b22980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd1b22cd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd1b22e58"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd1af5020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd1af51a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd1af5330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7f3dd1af0d98" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f3dd1af0d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd1aef170"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd1aef2f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd1aef480"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd1aef608"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3dd1aef790"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3dd1aef918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7f3dd1af3e38" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f3dd1af3e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f3dd1af21c0"/>
        <function-ref name="getDSN" scoped="" ref="0x7f3dd1af2348"/>
        <function-ref name="setFCF" scoped="" ref="0x7f3dd1af24d0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f3dd1af2658"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f3dd1af27e0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f3dd1af2968"/>
        <function-ref name="setDSN" scoped="" ref="0x7f3dd1af2af0"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f3dd1af2c78"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f3dd1af2e00"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f3dd1af1020"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f3dd1af11a8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f3dd1af1330"/>
        <function-ref name="localAddr" scoped="" ref="0x7f3dd1af14b8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f3dd1af1740"/>
        <function-ref name="localPan" scoped="" ref="0x7f3dd1af18c8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f3dd1af1a50"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f3dd1af1bd8"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f3dd1af1d60"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f3dd1af0020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dd1af01a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f3dd1af0330"/>
        <function-ref name="getFCF" scoped="" ref="0x7f3dd1af04b8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f3dd1af0640"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f3dd1af07c8"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f3dd1af0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f3dd1af5578" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f3dd1af5578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd1af58c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd1af5a50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd1af5bd8"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd1af5d60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd1af3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f3dd1af32a8" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f3dd1af32a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd1af35f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f3dd1ab4e00" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f3dd1ab4e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd1ab31a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd1ab3330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd1ab34b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f3dd1ab3740" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f3dd1ab3740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd1ab3a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f3dd1ab6120" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f3dd1ab6120"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd1ab6470"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd1ab65f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd1ab6780"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd1ab6908"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3dd1ab6a90"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3dd1ab6c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x7f3dd1ab5908" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x7f3dd1ab5908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd1ab5c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f3dd1ab3d18" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f3dd1ab3d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd1ab10a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd1ab1228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd1ab13b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd1ab1538"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3dd1ab16c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3dd1ab1848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x7f3dd1ab5020" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x7f3dd1ab5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd1ab5370"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd1ab54f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd1ab5680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f3dd1ae7230" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f3dd1ae7230"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd1ae7580"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd1ae7708"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd1ae7890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f3dd1ae7b18" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f3dd1ae7b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd1ae7e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x7f3dd1ab4020" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x7f3dd1ab4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd1ab4370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd1ab44f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd1ab4680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd1ab4808"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3dd1ab4990"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3dd1ab4b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f3dd1a22900" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f3dd1a22900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f3dd1a22c50"/>
        <function-ref name="address" scoped="" ref="0x7f3dd1a22dd8"/>
        <function-ref name="destination" scoped="" ref="0x7f3dd1a21020"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dd1a211a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dd1a21330"/>
        <function-ref name="pan" scoped="" ref="0x7f3dd1a214b8"/>
        <function-ref name="setPan" scoped="" ref="0x7f3dd1a21640"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dd1a217c8"/>
        <function-ref name="localPan" scoped="" ref="0x7f3dd1a21950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f3dd1a21b98" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f3dd1a21b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd1a20020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd1a201a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd1a20330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd1a204b8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3dd1a20640"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3dd1a207c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7f3dd1a25980" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f3dd1a25980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f3dd1a25cd0"/>
        <function-ref name="getDSN" scoped="" ref="0x7f3dd1a25e58"/>
        <function-ref name="setFCF" scoped="" ref="0x7f3dd1a24020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f3dd1a241a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f3dd1a24330"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f3dd1a244b8"/>
        <function-ref name="setDSN" scoped="" ref="0x7f3dd1a24640"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f3dd1a247c8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f3dd1a24950"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f3dd1a24ad8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f3dd1a24c60"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f3dd1a24de8"/>
        <function-ref name="localAddr" scoped="" ref="0x7f3dd1a23020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f3dd1a232a8"/>
        <function-ref name="localPan" scoped="" ref="0x7f3dd1a23430"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f3dd1a235b8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f3dd1a23740"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f3dd1a238c8"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f3dd1a23a50"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dd1a23bd8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f3dd1a23d60"/>
        <function-ref name="getFCF" scoped="" ref="0x7f3dd1a22020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f3dd1a221a8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f3dd1a22330"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f3dd1a224b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f3dd1a20ab0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f3dd1a20ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd1a20e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd1a1f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd1a1f1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd1a1f330"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3dd1a1f4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3dd1a1f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f3dd0161778" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f3dd0161778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f3dd0161ac8"/>
        <function-ref name="address" scoped="" ref="0x7f3dd0161c50"/>
        <function-ref name="destination" scoped="" ref="0x7f3dd0161dd8"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dd0160020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dd01601a8"/>
        <function-ref name="pan" scoped="" ref="0x7f3dd0160330"/>
        <function-ref name="setPan" scoped="" ref="0x7f3dd01604b8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dd0160640"/>
        <function-ref name="localPan" scoped="" ref="0x7f3dd01607c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f3dd0160a10" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f3dd0160a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd0160d60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd015f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd015f1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd015f330"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3dd015f4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3dd015f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7f3dd01647f8" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f3dd01647f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f3dd0164b48"/>
        <function-ref name="getDSN" scoped="" ref="0x7f3dd0164cd0"/>
        <function-ref name="setFCF" scoped="" ref="0x7f3dd0164e58"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f3dd0163020"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f3dd01631a8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f3dd0163330"/>
        <function-ref name="setDSN" scoped="" ref="0x7f3dd01634b8"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f3dd0163640"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f3dd01637c8"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f3dd0163950"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f3dd0163ad8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f3dd0163c60"/>
        <function-ref name="localAddr" scoped="" ref="0x7f3dd0163de8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f3dd0162120"/>
        <function-ref name="localPan" scoped="" ref="0x7f3dd01622a8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f3dd0162430"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f3dd01625b8"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f3dd0162740"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f3dd01628c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dd0162a50"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f3dd0162bd8"/>
        <function-ref name="getFCF" scoped="" ref="0x7f3dd0162d60"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f3dd0161020"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f3dd01611a8"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f3dd0161330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f3dd015f8e8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f3dd015f8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f3dd015fc38"/>
        <function-ref name="changed" scoped="" ref="0x7f3dd015fdc0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f3dd015e020"/>
        <function-ref name="setAddress" scoped="" ref="0x7f3dd015e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f3dd015e430" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f3dd015e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd015e780"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd015e908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd015ea90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd015ec18"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3dd015eda0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3dd015c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f3dd19b7510" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f3dd19b7510"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd19b7860"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd19b79e8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd19b7b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f3dd19b7df8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f3dd19b7df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd19b6170"/>
        <function-ref name="header" scoped="" ref="0x7f3dd19b62f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f3dd19b8470" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3dd19b8470"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd19b87c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd19b8948"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd19b8ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f3dd19b6580" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f3dd19b6580"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f3dd19b68d0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f3dd19b6a58"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f3dd19b6be0"/>
        <function-ref name="getSender" scoped="" ref="0x7f3dd19b6d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f3dd19b8d18" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f3dd19b8d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd19b70a0"/>
        <function-ref name="header" scoped="" ref="0x7f3dd19b7228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f3dd0111458" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f3dd0111458"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd01117a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd0111930"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd0111ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f3dd0111d40" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f3dd0111d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd010f0d8"/>
        <function-ref name="header" scoped="" ref="0x7f3dd010f260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x7f3dd010ebd8" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f3dd010ebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd010d020"/>
        <function-ref name="clearAll" scoped="" ref="0x7f3dd010d1a8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd010d330"/>
        <function-ref name="set" scoped="" ref="0x7f3dd010d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f3dd0115da0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3dd0115da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd0112170"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd01122f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd0112480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x7f3dd010e020" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f3dd010e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f3dd010e370"/>
        <function-ref name="insertNode" scoped="" ref="0x7f3dd010e4f8"/>
        <function-ref name="getNode" scoped="" ref="0x7f3dd010e680"/>
        <function-ref name="evicted" scoped="" ref="0x7f3dd010e808"/>
        <function-ref name="getIndex" scoped="" ref="0x7f3dd010e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f3dd01126c8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f3dd01126c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd0112a18"/>
        <function-ref name="header" scoped="" ref="0x7f3dd0112ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3dd0112de8" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3dd0112de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd0111170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x7f3dd010f4a8" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7f3dd010f4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f3dd010f7f8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f3dd010f980"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f3dd010fb08"/>
        <function-ref name="getSender" scoped="" ref="0x7f3dd010fc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7f3dd19ecd58" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f3dd19ecd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f3dd19e90d8"/>
        <function-ref name="insertNode" scoped="" ref="0x7f3dd19e9260"/>
        <function-ref name="getNode" scoped="" ref="0x7f3dd19e93e8"/>
        <function-ref name="evicted" scoped="" ref="0x7f3dd19e9570"/>
        <function-ref name="getIndex" scoped="" ref="0x7f3dd19e96f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7f3dd19e4b18" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f3dd19e4b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd19e4e68"/>
        <function-ref name="clearAll" scoped="" ref="0x7f3dd19e3020"/>
        <function-ref name="get" scoped="" ref="0x7f3dd19e31a8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd19e3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7f3dd19e6850" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f3dd19e6850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f3dd19e6ba0"/>
        <function-ref name="insertNode" scoped="" ref="0x7f3dd19e6d28"/>
        <function-ref name="getNode" scoped="" ref="0x7f3dd19e4020"/>
        <function-ref name="evicted" scoped="" ref="0x7f3dd19e41a8"/>
        <function-ref name="getIndex" scoped="" ref="0x7f3dd19e4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3dd19e6238" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3dd19e6238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd19e6588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7f3dd010b140" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f3dd010b140"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd010b490"/>
        <function-ref name="clearAll" scoped="" ref="0x7f3dd010b618"/>
        <function-ref name="get" scoped="" ref="0x7f3dd010b7a0"/>
        <function-ref name="set" scoped="" ref="0x7f3dd010b928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f3dd179e7a0" loc="85:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f3dd179e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd179eaf0"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd179ec78"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd179ee00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f3dd179d0c0" loc="86:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f3dd179d0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd179d410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f3dd17a2dc8" loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3dd17a2dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd17a0170"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd17a02f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd17a0480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f3dd179f888" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f3dd179f888"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd179fbd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd179fd60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd179e020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd179e1a8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3dd179e330"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3dd179e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f3dd179d698" loc="87:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f3dd179d698"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd179d9e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd179db70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd179dcf8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd179de80"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3dd179c030"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3dd179c1b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f3dd17a0708" loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f3dd17a0708"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd17a0a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f3dd179c400" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3dd179c400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f3dd179c750"/>
        <function-ref name="noAck" scoped="" ref="0x7f3dd179c8d8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f3dd179ca60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f3dd17a0ca0" loc="79:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f3dd17a0ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f3dd179f020"/>
        <function-ref name="setRetries" scoped="" ref="0x7f3dd179f1a8"/>
        <function-ref name="getRetries" scoped="" ref="0x7f3dd179f330"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f3dd179f4b8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f3dd179f640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f3dd00ee490" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f3dd00ee490"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd00ee7e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd00ee968"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd00eeaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x7f3dd00e65f8" loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="send" scoped="" ref="0x7f3dd00e65f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3dd00e6948"/>
        <function-ref name="runTask" scoped="" ref="0x7f3dd00e6ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x7f3dd00ec778" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelayTimer" scoped="" ref="0x7f3dd00ec778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3dd00e9a18"/>
        <function-ref name="fired" scoped="" ref="0x7f3dd00ea158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f3dd00eae48"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f3dd00ea9f8"/>
        <function-ref name="getdt" scoped="" ref="0x7f3dd00e82e8"/>
        <function-ref name="gett0" scoped="" ref="0x7f3dd00e9e68"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3dd00ea5a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f3dd00eb370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f3dd00e9448"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f3dd00eb810"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd00ebcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f3dd00f0020" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3dd00f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd00f0370"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd00f04f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd00f0680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f3dd00ef578" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f3dd00ef578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd00ef8c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd00efa50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd00efbd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd00efd60"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3dd00ee020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3dd00ee1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f3dd00e8700" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f3dd00e8700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd00e8a50"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd00e8bd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd00e8d60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd00e6020"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3dd00e61a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3dd00e6330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f3dd00eed38" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3dd00eed38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f3dd00ec0d8"/>
        <function-ref name="noAck" scoped="" ref="0x7f3dd00ec260"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f3dd00ec3e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f3dd00f08c8" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f3dd00f08c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f3dd00f0c18"/>
        <function-ref name="setRetries" scoped="" ref="0x7f3dd00f0da0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f3dd00ef020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f3dd00ef1a8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f3dd00ef330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f3dd00e4d88" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.DelayTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f3dd00e4d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3dd00df088"/>
        <function-ref name="fired" scoped="" ref="0x7f3dd00e26c8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f3dd00e1470"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f3dd00e1020"/>
        <function-ref name="getdt" scoped="" ref="0x7f3dd00df928"/>
        <function-ref name="gett0" scoped="" ref="0x7f3dd00df4d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3dd00e2b18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f3dd00e3908"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f3dd00e1a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f3dd00e3da8"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd00e2278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f3dd19554e8" loc="49:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f3dd19554e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3dd1951768"/>
        <function-ref name="fired" scoped="" ref="0x7f3dd1954e18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f3dd1953b78"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f3dd1953728"/>
        <function-ref name="getdt" scoped="" ref="0x7f3dd1950088"/>
        <function-ref name="gett0" scoped="" ref="0x7f3dd1951bb8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3dd19532d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f3dd1954088"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f3dd1951198"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f3dd1954528"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd19549c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f3dd194cb68" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f3dd194cb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3dd1949d98"/>
        <function-ref name="fired" scoped="" ref="0x7f3dd194a4d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f3dd19491f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f3dd194ad78"/>
        <function-ref name="getdt" scoped="" ref="0x7f3dd1947688"/>
        <function-ref name="gett0" scoped="" ref="0x7f3dd1947238"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3dd194a928"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f3dd194b6f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f3dd19497c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f3dd194bb90"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd194a088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f3dd1947c48" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f3dd1947c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dd1946820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3dd1950e38" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3dd1950e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd194c1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7f3dd1938e40" loc="29:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7f3dd1938e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dd193cbe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3dd1937548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3dd19370c0"/>
        <function-ref name="overflow" scoped="" ref="0x7f3dd19379d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3dd1941310" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3dd1941310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd1941660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7f3dd1941c88" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7f3dd1941c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3dd193e410"/>
        <function-ref name="fired" scoped="" ref="0x7f3dd193f4a8"/>
        <function-ref name="startAt" scoped="" ref="0x7f3dd193fdb8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3dd193f930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f3dd193e898"/>
        <function-ref name="start" scoped="" ref="0x7f3dd1940a28"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd193f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f3dd18428f0" loc="61:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f3dd18428f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3dd183f020"/>
        <function-ref name="fired" scoped="" ref="0x7f3dd1840020"/>
        <function-ref name="startAt" scoped="" ref="0x7f3dd1840930"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3dd18404a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f3dd183f4a8"/>
        <function-ref name="start" scoped="" ref="0x7f3dd1841698"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd1841b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3dd1842148" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3dd1842148"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f3dd2235388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f3dd2235388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd1842498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f3dd183fa90" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f3dd183fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dd183d828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3dd183c190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3dd183dcb0"/>
        <function-ref name="overflow" scoped="" ref="0x7f3dd183c618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7f3dd00a1e70" loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f3dd00a1e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f3dd00a01e8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f3dd00a0370"/>
        <function-ref name="getControlA" scoped="" ref="0x7f3dd00a04f8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f3dd00a0680"/>
        <function-ref name="setControlB" scoped="" ref="0x7f3dd00a0808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f3dd00a0990"/>
        <function-ref name="getControlB" scoped="" ref="0x7f3dd00a0b18"/>
        <function-ref name="setControlA" scoped="" ref="0x7f3dd00a0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f3dd00acbe0" loc="61:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f3dd00acbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3dd00a9270"/>
        <function-ref name="fired" scoped="" ref="0x7f3dd00aa310"/>
        <function-ref name="startAt" scoped="" ref="0x7f3dd00aac20"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3dd00aa798"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f3dd00a96f8"/>
        <function-ref name="start" scoped="" ref="0x7f3dd00ab970"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd00abe48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3dd00ac438" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3dd00ac438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd00ac788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f3dd00a9ce0" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f3dd00a9ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dd00a7ac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3dd00a64a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3dd00a6020"/>
        <function-ref name="overflow" scoped="" ref="0x7f3dd00a6930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7f3dd009b200" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f3dd009b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f3dd009b550"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f3dd009b6d8"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f3dd009b860"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f3dd009b9e8"/>
        <function-ref name="countBusy" scoped="" ref="0x7f3dd009bb70"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f3dd009bcf8"/>
        <function-ref name="getAssr" scoped="" ref="0x7f3dd009be80"/>
        <function-ref name="setAssr" scoped="" ref="0x7f3dd009a030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7f3dd009f060" loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f3dd009f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f3dd009c930"/>
        <function-ref name="fired" scoped="" ref="0x7f3dd009e598"/>
        <function-ref name="get" scoped="" ref="0x7f3dd009fbe0"/>
        <function-ref name="reset" scoped="" ref="0x7f3dd009ea20"/>
        <function-ref name="isOn" scoped="" ref="0x7f3dd009cdb8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd009e0c0"/>
        <function-ref name="start" scoped="" ref="0x7f3dd009c020"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd009c4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f3dd00a5020" loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f3dd00a5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f3dd00a10f8"/>
        <function-ref name="test" scoped="" ref="0x7f3dd00a37a8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd00a5ba0"/>
        <function-ref name="setScale" scoped="" ref="0x7f3dd00a1580"/>
        <function-ref name="getScale" scoped="" ref="0x7f3dd00a1a58"/>
        <function-ref name="reset" scoped="" ref="0x7f3dd00a49e8"/>
        <function-ref name="overflow" scoped="" ref="0x7f3dd00a4560"/>
        <function-ref name="isOn" scoped="" ref="0x7f3dd00a3c30"/>
        <function-ref name="set" scoped="" ref="0x7f3dd00a4088"/>
        <function-ref name="start" scoped="" ref="0x7f3dd00a4e70"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd00a3320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f3dd18b2a98" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f3dd18b2a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f3dd18b2de8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f3dd18b1020"/>
        <function-ref name="getControlA" scoped="" ref="0x7f3dd18b11a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f3dd18b1330"/>
        <function-ref name="setControlB" scoped="" ref="0x7f3dd18b14b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f3dd18b1640"/>
        <function-ref name="getControlB" scoped="" ref="0x7f3dd18b17c8"/>
        <function-ref name="setControlA" scoped="" ref="0x7f3dd18b1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f3dd18ac228" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f3dd18ac228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f3dd18ac578"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f3dd18ac700"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f3dd18ac888"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f3dd18aca10"/>
        <function-ref name="countBusy" scoped="" ref="0x7f3dd18acb98"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f3dd18acd20"/>
        <function-ref name="getAssr" scoped="" ref="0x7f3dd18ab020"/>
        <function-ref name="setAssr" scoped="" ref="0x7f3dd18ab1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f3dd18b1e18" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f3dd18b1e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f3dd18ad798"/>
        <function-ref name="fired" scoped="" ref="0x7f3dd18ae4f8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd18afa18"/>
        <function-ref name="reset" scoped="" ref="0x7f3dd18ae980"/>
        <function-ref name="isOn" scoped="" ref="0x7f3dd18adc20"/>
        <function-ref name="set" scoped="" ref="0x7f3dd18ae020"/>
        <function-ref name="start" scoped="" ref="0x7f3dd18aee08"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd18ad310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f3dd18b9a08" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f3dd18b9a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f3dd18b3b80"/>
        <function-ref name="test" scoped="" ref="0x7f3dd18b3270"/>
        <function-ref name="get" scoped="" ref="0x7f3dd18b65b0"/>
        <function-ref name="setScale" scoped="" ref="0x7f3dd18b2088"/>
        <function-ref name="getScale" scoped="" ref="0x7f3dd18b2560"/>
        <function-ref name="reset" scoped="" ref="0x7f3dd18b44a8"/>
        <function-ref name="overflow" scoped="" ref="0x7f3dd18b4020"/>
        <function-ref name="isOn" scoped="" ref="0x7f3dd18b36f8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd18b6a38"/>
        <function-ref name="start" scoped="" ref="0x7f3dd18b4930"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd18b4db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f3dd18a15c0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f3dd18a15c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f3dd18a1910"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f3dd18a1a98"/>
        <function-ref name="getControlA" scoped="" ref="0x7f3dd18a1c20"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f3dd18a1da8"/>
        <function-ref name="setControlB" scoped="" ref="0x7f3dd18a0020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f3dd18a01a8"/>
        <function-ref name="getControlB" scoped="" ref="0x7f3dd18a0330"/>
        <function-ref name="setControlA" scoped="" ref="0x7f3dd18a04b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f3dd189db78" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f3dd189db78"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f3dd189b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f3dd189b3d0" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f3dd189b3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f3dd189b720"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f3dd189b8a8"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f3dd189ba30"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f3dd189bbb8"/>
        <function-ref name="countBusy" scoped="" ref="0x7f3dd189bd40"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f3dd189a020"/>
        <function-ref name="getAssr" scoped="" ref="0x7f3dd189a1a8"/>
        <function-ref name="setAssr" scoped="" ref="0x7f3dd189a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f3dd18a0980" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f3dd18a0980"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f3dd189d270"/>
        <function-ref name="fired" scoped="" ref="0x7f3dd189e020"/>
        <function-ref name="get" scoped="" ref="0x7f3dd189f560"/>
        <function-ref name="reset" scoped="" ref="0x7f3dd189e4a8"/>
        <function-ref name="isOn" scoped="" ref="0x7f3dd189d6f8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd189f9e8"/>
        <function-ref name="start" scoped="" ref="0x7f3dd189e930"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd189edb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f3dd18a75d0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f3dd18a75d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f3dd18a36f8"/>
        <function-ref name="test" scoped="" ref="0x7f3dd18a4db8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd18a5190"/>
        <function-ref name="setScale" scoped="" ref="0x7f3dd18a3b80"/>
        <function-ref name="getScale" scoped="" ref="0x7f3dd18a1088"/>
        <function-ref name="reset" scoped="" ref="0x7f3dd18a4020"/>
        <function-ref name="overflow" scoped="" ref="0x7f3dd18a5af0"/>
        <function-ref name="isOn" scoped="" ref="0x7f3dd18a3270"/>
        <function-ref name="set" scoped="" ref="0x7f3dd18a5618"/>
        <function-ref name="start" scoped="" ref="0x7f3dd18a44a8"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd18a4930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f3dd180ccf0" loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7f3dd180ccf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3dd180b0a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f3dd180b228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f3dd1810c70" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f3dd1810c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3dd180c410"/>
        <function-ref name="fired" scoped="" ref="0x7f3dd180e4a8"/>
        <function-ref name="startAt" scoped="" ref="0x7f3dd180edb8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3dd180e930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f3dd180c898"/>
        <function-ref name="start" scoped="" ref="0x7f3dd180f9f0"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd180e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f3dd1815ab0" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f3dd1815ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3dd1811d60"/>
        <function-ref name="fired" scoped="" ref="0x7f3dd1813470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f3dd18111c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f3dd1813d10"/>
        <function-ref name="getdt" scoped="" ref="0x7f3dd1810648"/>
        <function-ref name="gett0" scoped="" ref="0x7f3dd18101f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3dd18138c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f3dd1814620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f3dd1811790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f3dd1814ac0"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd1813020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f3dd17be930" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7f3dd17be930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3dd17bec80"/>
        <function-ref name="runTask" scoped="" ref="0x7f3dd17bee08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f3dd17c3858" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7f3dd17c3858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3dd17bfbc0"/>
        <function-ref name="fired" scoped="" ref="0x7f3dd17c11c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f3dd17bf020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f3dd17c1a60"/>
        <function-ref name="getdt" scoped="" ref="0x7f3dd17be4d8"/>
        <function-ref name="gett0" scoped="" ref="0x7f3dd17be088"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3dd17c1610"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f3dd17c23d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f3dd17bf5f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f3dd17c2878"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd17c2d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f3dd17c95e0" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f3dd17c95e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3dd17c5988"/>
        <function-ref name="fired" scoped="" ref="0x7f3dd17c7020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f3dd17c7d70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f3dd17c7900"/>
        <function-ref name="getdt" scoped="" ref="0x7f3dd17c32d8"/>
        <function-ref name="gett0" scoped="" ref="0x7f3dd17c5df8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3dd17c7490"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f3dd17c8198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f3dd17c5398"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f3dd17c8658"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd17c8b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f3dd17ba128" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f3dd17ba128"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dd17baca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f3dd17b1330" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f3dd17b1330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dd17b00c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3dd17b09d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3dd17b0548"/>
        <function-ref name="overflow" scoped="" ref="0x7f3dd17b0e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f3dd16de548" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f3dd16de548"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f3dd16de898"/>
        <function-ref name="stopDone" scoped="" ref="0x7f3dd16dea20"/>
        <function-ref name="start" scoped="" ref="0x7f3dd16deba8"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd16ded30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f3dd16d9430" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f3dd16d9430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd16d9780"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd16d9908"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd16d9a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f3dd16d9d18" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f3dd16d9d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd16d80a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f3dd16dd020" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3dd16dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd16dd370"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd16dd4f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd16dd680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f3dd16db020" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f3dd16db020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd16db370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd16db4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd16db680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd16db808"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3dd16db990"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3dd16dbb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f3dd16dbd60" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f3dd16dbd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f3dd16da0d8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f3dd16da260"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f3dd16da3e8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f3dd16da570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f3dd16da858" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f3dd16da858"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f3dd16daba8"/>
        <function-ref name="stopDone" scoped="" ref="0x7f3dd16dad30"/>
        <function-ref name="start" scoped="" ref="0x7f3dd16d9020"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd16d91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f3dd16dd908" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f3dd16dd908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd16ddc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f3dd16d8328" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f3dd16d8328"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd16d8678"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd16d8800"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd16d8988"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd16d8b10"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3dd16d8c98"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3dd16d8e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f3dd16d7120" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f3dd16d7120"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListeningConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getListenLength" scoped="" ref="0x7f3dd16d7470"/>
        <function-ref name="ackRequested" scoped="" ref="0x7f3dd16d75f8"/>
        <function-ref name="needsAutoAckRequest" scoped="" ref="0x7f3dd16d7780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f3dd16d79c8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3dd16d79c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f3dd16d7d18"/>
        <function-ref name="noAck" scoped="" ref="0x7f3dd16d6020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f3dd16d61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f3dd003bad8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f3dd003bad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f3dd003be28"/>
        <function-ref name="stopDone" scoped="" ref="0x7f3dd003a020"/>
        <function-ref name="start" scoped="" ref="0x7f3dd003a1a8"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd003a330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f3dd0036a90" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f3dd0036a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd0036de0"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd0035020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd00351a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f3dd0035430" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f3dd0035430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd0035780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x7f3dd002eb20" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x7f3dd002eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x7f3dd002d020"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x7f3dd002d1a8"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x7f3dd002d330"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x7f3dd002d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f3dd003a5b8" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3dd003a5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd003a908"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd003aa90"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd003ac18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f3dd00395b8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f3dd00395b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd0039908"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd0039a90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd0039c18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd0039da0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3dd0037020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3dd00371a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f3dd00373f0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f3dd00373f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f3dd0037740"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f3dd00378c8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f3dd0037a50"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f3dd0037bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f3dd00332a8" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f3dd00332a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListeningConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getListenLength" scoped="" ref="0x7f3dd00335f8"/>
        <function-ref name="ackRequested" scoped="" ref="0x7f3dd0033780"/>
        <function-ref name="needsAutoAckRequest" scoped="" ref="0x7f3dd0033908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f3dd0035a08" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f3dd0035a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd0035d58"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd0034020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd00341a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd0034330"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3dd00344b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3dd0034640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f3dd0036020" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f3dd0036020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f3dd0036370"/>
        <function-ref name="stopDone" scoped="" ref="0x7f3dd00364f8"/>
        <function-ref name="start" scoped="" ref="0x7f3dd0036680"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd0036808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="transition" ref="0x7f3dd002cda0" loc="111:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="transition" scoped="" ref="0x7f3dd002cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3dd002b170"/>
        <function-ref name="runTask" scoped="" ref="0x7f3dd002b2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f3dd0039020" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f3dd0039020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd0039370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f3dd002d700" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f3dd002d700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f3dd002da50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f3dd002dbd8"/>
        <function-ref name="led1On" scoped="" ref="0x7f3dd002dd60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f3dd002c020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f3dd002c1a8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd002c330"/>
        <function-ref name="led1Off" scoped="" ref="0x7f3dd002c4b8"/>
        <function-ref name="led0On" scoped="" ref="0x7f3dd002cad8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd002c7c8"/>
        <function-ref name="led2On" scoped="" ref="0x7f3dd002c640"/>
        <function-ref name="led2Off" scoped="" ref="0x7f3dd002c950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f3dd0034888" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3dd0034888"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f3dd0034bd8"/>
        <function-ref name="noAck" scoped="" ref="0x7f3dd0034d60"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f3dd0033020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f3dd0033c58" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f3dd0033c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3dd002fe78"/>
        <function-ref name="fired" scoped="" ref="0x7f3dd00315a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f3dd002f2d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f3dd0031e48"/>
        <function-ref name="getdt" scoped="" ref="0x7f3dd002e748"/>
        <function-ref name="gett0" scoped="" ref="0x7f3dd002e2f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3dd00319f8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f3dd00327e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f3dd002f8a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f3dd0032c88"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd0031158"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f3dd00285e8" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f3dd00285e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3dd00248f0"/>
        <function-ref name="fired" scoped="" ref="0x7f3dd0025020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f3dd0025d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f3dd00258c0"/>
        <function-ref name="getdt" scoped="" ref="0x7f3dd00231c0"/>
        <function-ref name="gett0" scoped="" ref="0x7f3dd0024d40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3dd0025470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f3dd0026158"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f3dd0024320"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f3dd00265f8"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd0026a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SystemLowPowerListening" ref="0x7f3dd1703798" loc="3:/opt/tinyos-2.1.2/tos/system/SystemLowPowerListeningC.nc">
      <component-ref qname="SystemLowPowerListeningC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x7f3dd1703798"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x7f3dd1703ae8"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x7f3dd1703c70"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x7f3dd1703df8"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x7f3dd1700020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SystemLowPowerListening" ref="0x7f3dd1700c10" loc="5:/opt/tinyos-2.1.2/tos/system/SystemLowPowerListeningP.nc">
      <component-ref qname="SystemLowPowerListeningP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x7f3dd1700c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x7f3dd16fd020"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x7f3dd16fd1a8"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x7f3dd16fd330"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x7f3dd16fd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3dd16f2020" loc="46:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3dd16f2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd16f2370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f3dd16f2628" loc="47:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f3dd16f2628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f3dd16f2978"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f3dd16f2b00"/>
        <function-ref name="led1On" scoped="" ref="0x7f3dd16f2c88"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f3dd16f2e10"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f3dd16f1020"/>
        <function-ref name="get" scoped="" ref="0x7f3dd16f11a8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f3dd16f1330"/>
        <function-ref name="led2Off" scoped="" ref="0x7f3dd16f1950"/>
        <function-ref name="set" scoped="" ref="0x7f3dd16f14b8"/>
        <function-ref name="led0On" scoped="" ref="0x7f3dd16f1640"/>
        <function-ref name="led2On" scoped="" ref="0x7f3dd16f17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f3dd166b708" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f3dd166b708"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f3dd166ba58"/>
        <function-ref name="stopDone" scoped="" ref="0x7f3dd166bbe0"/>
        <function-ref name="start" scoped="" ref="0x7f3dd166bd68"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd166a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7f3dd1669b70" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f3dd1669b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f3dd1668020"/>
        <function-ref name="turnOn" scoped="" ref="0x7f3dd16681a8"/>
        <function-ref name="setChannel" scoped="" ref="0x7f3dd1668330"/>
        <function-ref name="done" scoped="" ref="0x7f3dd16684b8"/>
        <function-ref name="standby" scoped="" ref="0x7f3dd1668640"/>
        <function-ref name="getChannel" scoped="" ref="0x7f3dd16687c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f3dd166a2a8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3dd166a2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd166a5f8"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd166a780"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd166a908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7f3dd16673f0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f3dd16673f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd1667740"/>
        <function-ref name="header" scoped="" ref="0x7f3dd16678c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f3dd166ab90" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f3dd166ab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd1669020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7f3dd1668a10" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f3dd1668a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd1668d60"/>
        <function-ref name="ready" scoped="" ref="0x7f3dd1667020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd16671a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f3dd1669268" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f3dd1669268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f3dd16695b8"/>
        <function-ref name="setChannel" scoped="" ref="0x7f3dd1669740"/>
        <function-ref name="getChannel" scoped="" ref="0x7f3dd16698c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f3dcffd1020" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f3dcffd1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f3dcffd1370"/>
        <function-ref name="stopDone" scoped="" ref="0x7f3dcffd14f8"/>
        <function-ref name="start" scoped="" ref="0x7f3dcffd1680"/>
        <function-ref name="stop" scoped="" ref="0x7f3dcffd1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7f3dcffd1a90" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f3dcffd1a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dcffd1de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7f3dcffcf928" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f3dcffcf928"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f3dcffcfc78"/>
        <function-ref name="turnOn" scoped="" ref="0x7f3dcffcfe00"/>
        <function-ref name="setChannel" scoped="" ref="0x7f3dcffce020"/>
        <function-ref name="done" scoped="" ref="0x7f3dcffce1a8"/>
        <function-ref name="standby" scoped="" ref="0x7f3dcffce330"/>
        <function-ref name="getChannel" scoped="" ref="0x7f3dcffce4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f3dcffd00a0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3dcffd00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dcffd03f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dcffd0578"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dcffd0700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7f3dcffcba88" loc="189:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x7f3dcffcba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3dcffcbdd8"/>
        <function-ref name="runTask" scoped="" ref="0x7f3dcffca020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7f3dcffccb10" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f3dcffccb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dcffcce60"/>
        <function-ref name="header" scoped="" ref="0x7f3dcffcb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x7f3dcffca2e8" loc="144:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x7f3dcffca2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3dcffca638"/>
        <function-ref name="runTask" scoped="" ref="0x7f3dcffca7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f3dcffd0988" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f3dcffd0988"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dcffd0cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x7f3dcffcb2e8" loc="322:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x7f3dcffcb2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3dcffcb638"/>
        <function-ref name="runTask" scoped="" ref="0x7f3dcffcb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7f3dcffcc268" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f3dcffcc268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dcffcc5b8"/>
        <function-ref name="ready" scoped="" ref="0x7f3dcffcc740"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dcffcc8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f3dcffcf020" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f3dcffcf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f3dcffcf370"/>
        <function-ref name="setChannel" scoped="" ref="0x7f3dcffcf4f8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f3dcffcf680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f3dcffce700" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f3dcffce700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f3dcffcea50"/>
        <function-ref name="suspend" scoped="" ref="0x7f3dcffcebd8"/>
        <function-ref name="resume" scoped="" ref="0x7f3dcffced60"/>
        <function-ref name="run" scoped="" ref="0x7f3dcffcc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f3dd16140c0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f3dd16140c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd1614410"/>
        <function-ref name="ready" scoped="" ref="0x7f3dd1614598"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd1614720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f3dd16149a8" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f3dd16149a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd1614cf8"/>
        <function-ref name="header" scoped="" ref="0x7f3dd1614e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f3dd16130f0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f3dd16130f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f3dd1613440"/>
        <function-ref name="wait" scoped="" ref="0x7f3dd16135c8"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd1613750"/>
        <function-ref name="isFree" scoped="" ref="0x7f3dd16138d8"/>
        <function-ref name="getNow" scoped="" ref="0x7f3dd1613a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f3dd1613ce8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f3dd1613ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f3dd16120a0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f3dd1612228"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f3dd16123b0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f3dd1612538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f3dd16158c8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f3dd16158c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd1615c18"/>
        <function-ref name="header" scoped="" ref="0x7f3dd1615da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f3dd1615020" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f3dd1615020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd1615370"/>
        <function-ref name="ready" scoped="" ref="0x7f3dd16154f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd1615680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f3dcff120c0" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f3dcff120c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dcff12410"/>
        <function-ref name="ready" scoped="" ref="0x7f3dcff12598"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dcff12720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f3dcff129a8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f3dcff129a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dcff12cf8"/>
        <function-ref name="header" scoped="" ref="0x7f3dcff12e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f3dcff110f0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f3dcff110f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f3dcff11440"/>
        <function-ref name="wait" scoped="" ref="0x7f3dcff115c8"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dcff11750"/>
        <function-ref name="isFree" scoped="" ref="0x7f3dcff118d8"/>
        <function-ref name="getNow" scoped="" ref="0x7f3dcff11a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f3dcff11ca8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f3dcff11ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f3dcff0f020"/>
        <function-ref name="rand32" scoped="" ref="0x7f3dcff0f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f3dcff0f430" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f3dcff0f430"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f3dcff0f780"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f3dcff0f908"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f3dcff0fa90"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f3dcff0fc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f3dcff138c8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f3dcff138c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dcff13c18"/>
        <function-ref name="header" scoped="" ref="0x7f3dcff13da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f3dcff13020" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f3dcff13020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dcff13370"/>
        <function-ref name="ready" scoped="" ref="0x7f3dcff134f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dcff13680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x7f3dcff0e020" loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x7f3dcff0e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3dcff0e370"/>
        <function-ref name="runTask" scoped="" ref="0x7f3dcff0e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f3dd162a690" loc="46:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f3dd162a690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f3dd162a9e0"/>
        <function-ref name="rand32" scoped="" ref="0x7f3dd162ab68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f3dd1628668" loc="45:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f3dd1628668"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd162a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3dd162f930" loc="44:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3dd162f930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd162fc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f3dd16234c8" loc="48:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f3dd16234c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f3dd1623818"/>
        <function-ref name="rand32" scoped="" ref="0x7f3dd16239a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f3dd16243b0" loc="47:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f3dd16243b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd1623020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3dd1629b30" loc="46:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3dd1629b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd1629e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f3dd15e4d38" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f3dd15e4d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd15e30d8"/>
        <function-ref name="ready" scoped="" ref="0x7f3dd15e3260"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd15e33e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f3dd15e3670" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f3dd15e3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd15e39c0"/>
        <function-ref name="header" scoped="" ref="0x7f3dd15e3b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f3dd15e3d90" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f3dd15e3d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f3dd15e2170"/>
        <function-ref name="wait" scoped="" ref="0x7f3dd15e22f8"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd15e2480"/>
        <function-ref name="isFree" scoped="" ref="0x7f3dd15e2608"/>
        <function-ref name="getNow" scoped="" ref="0x7f3dd15e2790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x7f3dd15e0bd8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x7f3dd15e0bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd15df020"/>
        <function-ref name="get" scoped="" ref="0x7f3dd15df1a8"/>
        <function-ref name="setValue" scoped="" ref="0x7f3dd15df330"/>
        <function-ref name="set" scoped="" ref="0x7f3dd15df4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f3dd15e2a18" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f3dd15e2a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7f3dd15e2d68"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7f3dd15e0020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f3dd15e01a8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7f3dd15e0330"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7f3dd15e04b8"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7f3dd15e0640"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f3dd15e07c8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f3dd15e0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f3dd160db50" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f3dd160db50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd15e4020"/>
        <function-ref name="header" scoped="" ref="0x7f3dd15e41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f3dd160d2a8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f3dd160d2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd160d5f8"/>
        <function-ref name="ready" scoped="" ref="0x7f3dd160d780"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd160d908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f3dd15e43f0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3dd15e43f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f3dd15e4740"/>
        <function-ref name="noAck" scoped="" ref="0x7f3dd15e48c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f3dd15e4a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f3dd15c8978" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f3dd15c8978"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f3dd15c8cc8"/>
        <function-ref name="stopDone" scoped="" ref="0x7f3dd15c8e50"/>
        <function-ref name="start" scoped="" ref="0x7f3dd15c7020"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd15c71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f3dd15c3020" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f3dd15c3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f3dd15c3370"/>
        <function-ref name="request" scoped="" ref="0x7f3dd15c34f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f3dd15bf5b8" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f3dd15bf5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd15bf908"/>
        <function-ref name="ready" scoped="" ref="0x7f3dd15bfa90"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd15bfc18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f3dd15be020" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f3dd15be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd15be370"/>
        <function-ref name="header" scoped="" ref="0x7f3dd15be4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f3dd15c6268" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f3dd15c6268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f3dd15c65b8"/>
        <function-ref name="turnOn" scoped="" ref="0x7f3dd15c6740"/>
        <function-ref name="setChannel" scoped="" ref="0x7f3dd15c68c8"/>
        <function-ref name="done" scoped="" ref="0x7f3dd15c6a50"/>
        <function-ref name="standby" scoped="" ref="0x7f3dd15c6bd8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f3dd15c6d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f3dd15c3740" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f3dd15c3740"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd15c3a90"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd15c3c18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd15c3da0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd15c2020"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3dd15c21a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3dd15c2330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7f3dd15c0638" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7f3dd15c0638"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f3dd15c0a88"/>
        <function-ref name="turnOn" scoped="" ref="0x7f3dd15c0c10"/>
        <function-ref name="setChannel" scoped="" ref="0x7f3dd15c0d98"/>
        <function-ref name="done" scoped="" ref="0x7f3dd15bf020"/>
        <function-ref name="standby" scoped="" ref="0x7f3dd15bf1a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f3dd15bf330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7f3dd15c25b8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f3dd15c25b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f3dd15c2908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f3dd15c58c8" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f3dd15c58c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd15c5c18"/>
        <function-ref name="header" scoped="" ref="0x7f3dd15c5da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7f3dd15c0060" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7f3dd15c0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd15c03b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f3dd15c2bf0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f3dd15c2bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f3dd15c1020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f3dd15c11a8"/>
        <function-ref name="start" scoped="" ref="0x7f3dd15c1330"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd15c14b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f3dd15bd020" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f3dd15bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd15bd370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd15bd4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd15bd680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd15bd808"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3dd15bd990"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3dd15bdb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f3dd15c7c98" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f3dd15c7c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd15c6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f3dd15bdda0" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f3dd15bdda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f3dd15bb170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7f3dd15c1740" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7f3dd15c1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd15c1a90"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd15c1c18"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd15c1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f3dd15c5020" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f3dd15c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd15c5370"/>
        <function-ref name="ready" scoped="" ref="0x7f3dd15c54f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd15c5680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7f3dd15be780" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7f3dd15be780"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f3dd15bead0"/>
        <function-ref name="request" scoped="" ref="0x7f3dd15bec58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f3dd15c73f0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f3dd15c73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd15c7740"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd15c78c8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd15c7a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7f3dd155b8c8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7f3dd155b8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd155bc18"/>
        <function-ref name="get" scoped="" ref="0x7f3dd155bda0"/>
        <function-ref name="setValue" scoped="" ref="0x7f3dd155a020"/>
        <function-ref name="set" scoped="" ref="0x7f3dd155a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f3dd155e9f8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f3dd155e9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd155ed48"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd155d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd155d1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd155d330"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3dd155d4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3dd155d640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f3dd155c9f0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f3dd155c9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd155cd40"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd155b020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd155b1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd155b330"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3dd155b4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3dd155b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f3dd1561020" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f3dd1561020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f3dd20b2140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f3dd1560478"/>
        <function-ref name="clear" scoped="" ref="0x7f3dd1560b58"/>
        <function-ref name="isValid" scoped="" ref="0x7f3dd1561d70"/>
        <function-ref name="set" scoped="" ref="0x7f3dd155e278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7f3dd155da30" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f3dd155da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f3dd20b2140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dd155c5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f3dd1565270" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f3dd1565270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f3dd1564700"/>
        <function-ref name="clear" scoped="" ref="0x7f3dd1564de0"/>
        <function-ref name="isValid" scoped="" ref="0x7f3dd1564020"/>
        <function-ref name="set" scoped="" ref="0x7f3dd15624f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7f3dcfeaf060" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7f3dcfeaf060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dcfeaf3b0"/>
        <function-ref name="get" scoped="" ref="0x7f3dcfeaf538"/>
        <function-ref name="setValue" scoped="" ref="0x7f3dcfeaf6c0"/>
        <function-ref name="set" scoped="" ref="0x7f3dcfeaf848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f3dcfeb0220" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f3dcfeb0220"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dcfeb0570"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dcfeb06f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfeb0880"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dcfeb0a08"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3dcfeb0b90"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3dcfeb0d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f3dcfeacc88" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f3dcfeacc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dcfeab020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dcfeab1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfeab330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dcfeab4b8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3dcfeab640"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3dcfeab7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f3dcfeb37d8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f3dcfeb37d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f3dd20b2140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f3dcfeb2c58"/>
        <function-ref name="clear" scoped="" ref="0x7f3dcfeb1380"/>
        <function-ref name="isValid" scoped="" ref="0x7f3dcfeb2578"/>
        <function-ref name="set" scoped="" ref="0x7f3dcfeb1a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7f3dcfeafbd8" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f3dcfeafbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f3dd20b2140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dcfead7a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f3dcfeadcc0" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f3dcfeadcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dcfeac870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f3dcfeb7a68" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f3dcfeb7a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f3dcfeb5020"/>
        <function-ref name="clear" scoped="" ref="0x7f3dcfeb5700"/>
        <function-ref name="isValid" scoped="" ref="0x7f3dcfeb6828"/>
        <function-ref name="set" scoped="" ref="0x7f3dcfeb5de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f3dd156bdc0" loc="20:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f3dd156bdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dd1568968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f3dd15360e0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f3dd15360e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd1536430"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd15365b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd1536740"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd15368c8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3dd1536a50"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3dd1536bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f3dd1535020" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f3dd1535020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd1535370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd15354f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd1535680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd1535808"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3dd1535990"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3dd1535b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x7f3dd1554660" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x7f3dd1554660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd15549d0"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1554b58"/>
        <function-ref name="setValue" scoped="" ref="0x7f3dd1554ce0"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1554e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f3dd1533b78" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f3dd1533b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f3dd1532020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f3dd15321a8"/>
        <function-ref name="start" scoped="" ref="0x7f3dd1532330"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd15324b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f3dd152f3f0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f3dd152f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f3dd152f740"/>
        <function-ref name="request" scoped="" ref="0x7f3dd152f8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f3dd152a8c8" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f3dd152a8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd152ac18"/>
        <function-ref name="ready" scoped="" ref="0x7f3dd152ada0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd1529020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f3dd15292a8" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f3dd15292a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd15295f8"/>
        <function-ref name="header" scoped="" ref="0x7f3dd1529780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f3dd15315b8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f3dd15315b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f3dd1531908"/>
        <function-ref name="turnOn" scoped="" ref="0x7f3dd1531a90"/>
        <function-ref name="setChannel" scoped="" ref="0x7f3dd1531c18"/>
        <function-ref name="done" scoped="" ref="0x7f3dd1531da0"/>
        <function-ref name="standby" scoped="" ref="0x7f3dd1530020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f3dd15301a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f3dd152fb10" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f3dd152fb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd152fe60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd152d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd152d1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd152d330"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3dd152d4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3dd152d640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7f3dd152ba08" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7f3dd152ba08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f3dd152be58"/>
        <function-ref name="turnOn" scoped="" ref="0x7f3dd152a020"/>
        <function-ref name="setChannel" scoped="" ref="0x7f3dd152a1a8"/>
        <function-ref name="done" scoped="" ref="0x7f3dd152a330"/>
        <function-ref name="standby" scoped="" ref="0x7f3dd152a4b8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f3dd152a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7f3dd152d8c8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f3dd152d8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f3dd152dc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f3dd1530c98" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f3dd1530c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd152f020"/>
        <function-ref name="header" scoped="" ref="0x7f3dd152f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7f3dd152b430" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7f3dd152b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd152b780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f3dd152c020" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f3dd152c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f3dd152c370"/>
        <function-ref name="stopDone" scoped="" ref="0x7f3dd152c4f8"/>
        <function-ref name="start" scoped="" ref="0x7f3dd152c680"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd152c808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f3dd15282a8" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f3dd15282a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd15285f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd1528780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd1528908"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd1528a90"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3dd1528c18"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3dd1528da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f3dd1531020" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f3dd1531020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd1531370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f3dd1527060" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f3dd1527060"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f3dd15273b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7f3dd152ca90" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7f3dd152ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd152cde0"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd152b020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd152b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f3dd15303f0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f3dd15303f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd1530740"/>
        <function-ref name="ready" scoped="" ref="0x7f3dd15308c8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd1530a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7f3dd1529a08" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7f3dd1529a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f3dd1529d58"/>
        <function-ref name="request" scoped="" ref="0x7f3dd1528020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f3dd1532700" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f3dd1532700"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd1532a50"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd1532bd8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd1532d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f3dd151e448" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f3dd151e448"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f3dd151e798"/>
        <function-ref name="request" scoped="" ref="0x7f3dd151e920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f3dd15190c8" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f3dd15190c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd15186a0"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1518190"/>
        <function-ref name="isSet" scoped="" ref="0x7f3dd1519c48"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1518bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7f3dd1504020" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7f3dd1504020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd1504370"/>
        <function-ref name="get" scoped="" ref="0x7f3dd15044f8"/>
        <function-ref name="setValue" scoped="" ref="0x7f3dd1504680"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1504808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f3dd1509730" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f3dd1509730"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f3dd20b2140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f3dd1508c58"/>
        <function-ref name="clear" scoped="" ref="0x7f3dd1507380"/>
        <function-ref name="isValid" scoped="" ref="0x7f3dd1508578"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1507a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f3dd15223e0" loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f3dd15223e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f3dd1522730"/>
        <function-ref name="turnOn" scoped="" ref="0x7f3dd15228b8"/>
        <function-ref name="setChannel" scoped="" ref="0x7f3dd1522a40"/>
        <function-ref name="done" scoped="" ref="0x7f3dd1522bc8"/>
        <function-ref name="standby" scoped="" ref="0x7f3dd1522d50"/>
        <function-ref name="getChannel" scoped="" ref="0x7f3dd151f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f3dd1503768" loc="66:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f3dd1503768"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f3dd1503ab8"/>
        <function-ref name="wait" scoped="" ref="0x7f3dd1503c40"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd1503dc8"/>
        <function-ref name="isFree" scoped="" ref="0x7f3dd1502020"/>
        <function-ref name="getNow" scoped="" ref="0x7f3dd15021a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f3dd151dcd0" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f3dd151dcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd151b388"/>
        <function-ref name="get" scoped="" ref="0x7f3dd151ce00"/>
        <function-ref name="isSet" scoped="" ref="0x7f3dd151c8f0"/>
        <function-ref name="set" scoped="" ref="0x7f3dd151b898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f3dd151ebd8" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f3dd151ebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd151d020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd151d1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd151d330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd151d4b8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3dd151d640"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3dd151d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f3dd150a5c8" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f3dd150a5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd150aa18"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3dd150aba0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3dd150ad28"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f3dd1509020"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f3dd15091a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f3dd151fbf0" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f3dd151fbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd151e020"/>
        <function-ref name="header" scoped="" ref="0x7f3dd151e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f3dd150e4b8" loc="55:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f3dd150e4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f3dd20b2140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f3dd20b2540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3dd150cb18"/>
        <function-ref name="fired" scoped="" ref="0x7f3dd150db90"/>
        <function-ref name="startAt" scoped="" ref="0x7f3dd150c510"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3dd150c088"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f3dd150a020"/>
        <function-ref name="start" scoped="" ref="0x7f3dd150d230"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd150d708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f3dd1516458" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f3dd1516458"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd1515a40"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1515530"/>
        <function-ref name="isSet" scoped="" ref="0x7f3dd1515020"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1514020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f3dd1510220" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f3dd1510220"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f3dd20b2140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dd1510da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f3dd151f2c8" loc="43:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f3dd151f2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd151f618"/>
        <function-ref name="ready" scoped="" ref="0x7f3dd151f7a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd151f928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f3dd1514860" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f3dd1514860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd1512e30"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1512920"/>
        <function-ref name="isSet" scoped="" ref="0x7f3dd1512410"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1511388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7f3dd1504b78" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f3dd1504b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd1503020"/>
        <function-ref name="get" scoped="" ref="0x7f3dd15031a8"/>
        <function-ref name="setValue" scoped="" ref="0x7f3dd1503330"/>
        <function-ref name="set" scoped="" ref="0x7f3dd15034b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7f3dd1505378" loc="63:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f3dd1505378"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd15056c8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1505850"/>
        <function-ref name="setValue" scoped="" ref="0x7f3dd15059d8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1505b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f3dd15119d0" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f3dd15119d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f3dd1511d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f3dd14f92c0" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f3dd14f92c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f3dd14f9610"/>
        <function-ref name="request" scoped="" ref="0x7f3dd14f9798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f3dd14dac60" loc="74:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f3dd14dac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f3dd21a9788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f3dd14e09f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f3dd14f4020" loc="56:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f3dd14f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd14f3608"/>
        <function-ref name="get" scoped="" ref="0x7f3dd14f30f8"/>
        <function-ref name="isSet" scoped="" ref="0x7f3dd14f4ba0"/>
        <function-ref name="set" scoped="" ref="0x7f3dd14f3b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7f3dd14d7988" loc="80:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7f3dd14d7988"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd14d7cd8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd14d7e60"/>
        <function-ref name="setValue" scoped="" ref="0x7f3dd14d6020"/>
        <function-ref name="set" scoped="" ref="0x7f3dd14d61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7f3dd14fcbf0" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f3dd14fcbf0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f3dd22356f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f3dd22356f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd14fb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f3dd14d52b0" loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f3dd14d52b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f3dd20b2140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f3dd14d4910"/>
        <function-ref name="clear" scoped="" ref="0x7f3dd14d2020"/>
        <function-ref name="isValid" scoped="" ref="0x7f3dd14d4230"/>
        <function-ref name="set" scoped="" ref="0x7f3dd14d2700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f3dd14e7e70" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f3dd14e7e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd14e61e8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd14e6370"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd14e64f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd14e6680"/>
        <function-ref name="get" scoped="" ref="0x7f3dd14e6808"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd14e6990"/>
        <function-ref name="set" scoped="" ref="0x7f3dd14e6b18"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd14e6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f3dd14d1ab8" loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f3dd14d1ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f3dd14d1e08"/>
        <function-ref name="wait" scoped="" ref="0x7f3dd14d0020"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd14d01a8"/>
        <function-ref name="isFree" scoped="" ref="0x7f3dd14d0330"/>
        <function-ref name="getNow" scoped="" ref="0x7f3dd14d04b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f3dd14fb2d0" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f3dd14fb2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f3dd14fb620"/>
        <function-ref name="turnOn" scoped="" ref="0x7f3dd14fb7a8"/>
        <function-ref name="setChannel" scoped="" ref="0x7f3dd14fb930"/>
        <function-ref name="done" scoped="" ref="0x7f3dd14fbab8"/>
        <function-ref name="standby" scoped="" ref="0x7f3dd14fbc40"/>
        <function-ref name="getChannel" scoped="" ref="0x7f3dd14fbdc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x7f3dd14d9020" loc="75:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f3dd14d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f3dd20b2140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dd14d9ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f3dd14f8b48" loc="55:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f3dd14f8b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd14f6190"/>
        <function-ref name="get" scoped="" ref="0x7f3dd14f7c38"/>
        <function-ref name="isSet" scoped="" ref="0x7f3dd14f7728"/>
        <function-ref name="set" scoped="" ref="0x7f3dd14f66a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f3dd14f9a50" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f3dd14f9a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd14f9da0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd14f8020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd14f81a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd14f8330"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3dd14f84b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3dd14f8640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x7f3dd14e3d00" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7f3dd14e3d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd14e70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd14e7228"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd14e73b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd14e7538"/>
        <function-ref name="get" scoped="" ref="0x7f3dd14e76c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd14e7848"/>
        <function-ref name="set" scoped="" ref="0x7f3dd14e79d0"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd14e7b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f3dd14d8100" loc="77:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f3dd14d8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd14d8450"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3dd14d85d8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3dd14d8760"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f3dd14d88e8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f3dd14d8a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f3dd14fa9e8" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f3dd14fa9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd14fad38"/>
        <function-ref name="header" scoped="" ref="0x7f3dd14f9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x7f3dd1445d98" loc="847:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x7f3dd1445d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3dd1444170"/>
        <function-ref name="runTask" scoped="" ref="0x7f3dd14442f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f3dd14f13b0" loc="57:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f3dd14f13b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd14f0a40"/>
        <function-ref name="get" scoped="" ref="0x7f3dd14f0530"/>
        <function-ref name="isSet" scoped="" ref="0x7f3dd14f0020"/>
        <function-ref name="set" scoped="" ref="0x7f3dd14ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f3dd14fc138" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f3dd14fc138"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f3dd22356f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f3dd22356f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd14fc488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f3dd14e94f8" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f3dd14e94f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3dd14e9848"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3dd14e99d0"/>
        <function-ref name="request" scoped="" ref="0x7f3dd14e9b58"/>
        <function-ref name="granted" scoped="" ref="0x7f3dd14e9ce0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3dd14e9e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x7f3dd14ea130" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7f3dd14ea130"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd14ea580"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd14ea708"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd14ea890"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd14eaa18"/>
        <function-ref name="get" scoped="" ref="0x7f3dd14eaba0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd14ead28"/>
        <function-ref name="set" scoped="" ref="0x7f3dd14e9020"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd14e91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f3dd14ef860" loc="58:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f3dd14ef860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd14ede30"/>
        <function-ref name="get" scoped="" ref="0x7f3dd14ed920"/>
        <function-ref name="isSet" scoped="" ref="0x7f3dd14ed410"/>
        <function-ref name="set" scoped="" ref="0x7f3dd14ec388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f3dd14fa0c0" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f3dd14fa0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd14fa410"/>
        <function-ref name="ready" scoped="" ref="0x7f3dd14fa598"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd14fa720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x7f3dd14dd5e8" loc="72:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f3dd14dd5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f3dd14dd938"/>
        <function-ref name="disable" scoped="" ref="0x7f3dd14ddac0"/>
        <function-ref name="captured" scoped="" ref="0x7f3dd14ddc48"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f3dd14dddd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x7f3dd14e31f0" loc="67:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f3dd14e31f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f3dd14e3540"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f3dd14e36c8"/>
        <function-ref name="splitRead" scoped="" ref="0x7f3dd14e3850"/>
        <function-ref name="write" scoped="" ref="0x7f3dd14e39d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7f3dd14d6518" loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f3dd14d6518"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd14d6868"/>
        <function-ref name="get" scoped="" ref="0x7f3dd14d69f0"/>
        <function-ref name="setValue" scoped="" ref="0x7f3dd14d6b78"/>
        <function-ref name="set" scoped="" ref="0x7f3dd14d6d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7f3dd14d8e10" loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f3dd14d8e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd14d71a8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd14d7330"/>
        <function-ref name="setValue" scoped="" ref="0x7f3dd14d74b8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd14d7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f3dd14ec9d0" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f3dd14ec9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f3dd14ecd20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f3dd14d1020" loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f3dd14d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f3dd14d1370"/>
        <function-ref name="suspend" scoped="" ref="0x7f3dd14d14f8"/>
        <function-ref name="resume" scoped="" ref="0x7f3dd14d1680"/>
        <function-ref name="run" scoped="" ref="0x7f3dd14d1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f3dd1401338" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f3dd1401338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1401688"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1401810"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1401998"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1401b20"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1401ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1401e30"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1400020"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd14001a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x7f3dd1402140" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7f3dd1402140"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1402490"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1402618"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd14027a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1402928"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1402ab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1402c38"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1402dc0"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1401020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f3dd13ff2e0" loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f3dd13ff2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f3dd20b2140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3dd13fd928"/>
        <function-ref name="fired" scoped="" ref="0x7f3dd13fe9e8"/>
        <function-ref name="startAt" scoped="" ref="0x7f3dd13fd320"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3dd13fee70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f3dd13fddb0"/>
        <function-ref name="start" scoped="" ref="0x7f3dd13fe088"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd13fe560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x7f3dd1404990" loc="42:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f3dd1404990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3dd1404ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3dd1404e68"/>
        <function-ref name="request" scoped="" ref="0x7f3dd1403020"/>
        <function-ref name="granted" scoped="" ref="0x7f3dd14031a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3dd1403330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x7f3dd1407710" loc="41:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7f3dd1407710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1407a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1407be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1407d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1404020"/>
        <function-ref name="get" scoped="" ref="0x7f3dd14041a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1404330"/>
        <function-ref name="set" scoped="" ref="0x7f3dd14044b8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1404640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7f3dd14004c0" loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f3dd14004c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f3dd1400810"/>
        <function-ref name="disable" scoped="" ref="0x7f3dd1400998"/>
        <function-ref name="captured" scoped="" ref="0x7f3dd1400b20"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f3dd1400ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f3dd14035e8" loc="43:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f3dd14035e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f3dd1403938"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f3dd1403ac0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f3dd1403c48"/>
        <function-ref name="write" scoped="" ref="0x7f3dd1403dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f3dd13fb438" loc="50:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f3dd13fb438"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f3dd20b2140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dd13fa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x7f3dd13ecc18" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x7f3dd13ecc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd13ea020"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd13ea1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd13ea330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd13ea4b8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd13ea640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd13ea7c8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd13ea950"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd13eaad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x7f3dd13ed540" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f3dd13ed540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f3dd13ec6f8"/>
        <function-ref name="test" scoped="" ref="0x7f3dd13f4db8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd13f50f8"/>
        <function-ref name="captured" scoped="" ref="0x7f3dd13f5a58"/>
        <function-ref name="reset" scoped="" ref="0x7f3dd13f4020"/>
        <function-ref name="isOn" scoped="" ref="0x7f3dd13ec270"/>
        <function-ref name="set" scoped="" ref="0x7f3dd13f5580"/>
        <function-ref name="start" scoped="" ref="0x7f3dd13f44a8"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd13f4930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x7f3dd13eae08" loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x7f3dd13eae08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd13e91a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd13e9330"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd13e94b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd13e9640"/>
        <function-ref name="get" scoped="" ref="0x7f3dd13e97c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd13e9950"/>
        <function-ref name="set" scoped="" ref="0x7f3dd13e9ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd13e9c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f3dd13f7870" loc="40:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f3dd13f7870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd13f7bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7f3dd13facd8" loc="39:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f3dd13facd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f3dd13f70a0"/>
        <function-ref name="disable" scoped="" ref="0x7f3dd13f7228"/>
        <function-ref name="captured" scoped="" ref="0x7f3dd13f73b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f3dd13f7538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f3dd13cf1d8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f3dd13cf1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd13cf528"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd13cf6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f3dd13d8388" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f3dd13d8388"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f3dd13d86d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3dd13f8cd0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3dd13f8cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd13db0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f3dd13d89d0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f3dd13d89d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f3dd13d8d20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f3dd13da020"/>
        <function-ref name="splitRead" scoped="" ref="0x7f3dd13da1a8"/>
        <function-ref name="write" scoped="" ref="0x7f3dd13da330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3dd13cfe80" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f3dd13cfe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3dd13d91f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3dd13d9380"/>
        <function-ref name="request" scoped="" ref="0x7f3dd13d9508"/>
        <function-ref name="granted" scoped="" ref="0x7f3dd13d9690"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3dd13d9818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7f3dd138db58" loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7f3dd138db58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3dd138c020"/>
        <function-ref name="runTask" scoped="" ref="0x7f3dd138c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f3dd13cc120" loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f3dd13cc120"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd13cc470"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd13cc5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7f3dd13ae3c8" loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7f3dd13ae3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3dd13ae718"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3dd13ae8a0"/>
        <function-ref name="request" scoped="" ref="0x7f3dd13aea28"/>
        <function-ref name="granted" scoped="" ref="0x7f3dd13aebb0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3dd13aed38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f3dd13cd020" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f3dd13cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f3dd13cd370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3dd13d7a18" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3dd13d7a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd13d7d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7f3dd13af150" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7f3dd13af150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f3dd13af4a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f3dd13c8950"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f3dd13af7b0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f3dd13c8ad8"/>
        <function-ref name="initMaster" scoped="" ref="0x7f3dd13afac0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f3dd13afc48"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f3dd13afdd0"/>
        <function-ref name="read" scoped="" ref="0x7f3dd13c9020"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f3dd13c91a8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f3dd13c9330"/>
        <function-ref name="setClock" scoped="" ref="0x7f3dd13c94b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f3dd13c9640"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f3dd13c97c8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f3dd13c9a50"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f3dd13c9bd8"/>
        <function-ref name="write" scoped="" ref="0x7f3dd13c9d60"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f3dd13c8020"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f3dd13c81a8"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f3dd13c8330"/>
        <function-ref name="getClock" scoped="" ref="0x7f3dd13c84b8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f3dd13c8640"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f3dd13af628"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f3dd13af938"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f3dd13c87c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f3dd13cd628" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f3dd13cd628"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f3dd13cd978"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f3dd13cdb00"/>
        <function-ref name="splitRead" scoped="" ref="0x7f3dd13cdc88"/>
        <function-ref name="write" scoped="" ref="0x7f3dd13cde10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3dd13ccd88" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f3dd13ccd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3dd13cb170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3dd13cb2f8"/>
        <function-ref name="request" scoped="" ref="0x7f3dd13cb480"/>
        <function-ref name="granted" scoped="" ref="0x7f3dd13cb608"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3dd13cb790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f3dd13ad020" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3dd13ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f3dd13ad370"/>
        <function-ref name="userId" scoped="" ref="0x7f3dd13ad4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f3dd13ad7c8" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f3dd13ad7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f3dd13adb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7f3dd1362020" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7f3dd1362020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f3dd1362370"/>
        <function-ref name="sleep" scoped="" ref="0x7f3dd13607c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f3dd1362680"/>
        <function-ref name="dataReady" scoped="" ref="0x7f3dd1360950"/>
        <function-ref name="initMaster" scoped="" ref="0x7f3dd1362990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f3dd1362b18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f3dd1362ca0"/>
        <function-ref name="read" scoped="" ref="0x7f3dd1362e28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f3dd1361020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f3dd13611a8"/>
        <function-ref name="setClock" scoped="" ref="0x7f3dd1361330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f3dd13614b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f3dd1361640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f3dd13618c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f3dd1361a50"/>
        <function-ref name="write" scoped="" ref="0x7f3dd1361bd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f3dd1361d60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f3dd1360020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f3dd13601a8"/>
        <function-ref name="getClock" scoped="" ref="0x7f3dd1360330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f3dd13604b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f3dd13624f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f3dd1362808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f3dd1360640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7f3dd1353190" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7f3dd1353190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd13534e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd1353668"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd13537f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1353978"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1353b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1353c88"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1353e10"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1352020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7f3dd1359de0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7f3dd1359de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1358170"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd13582f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1358480"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1358608"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1358790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1358918"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1358aa0"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1358c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7f3dd1356c70" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7f3dd1356c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1359020"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd13591a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1359330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd13594b8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1359640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd13597c8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1359950"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1359ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f3dd1356438" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f3dd1356438"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3dd1356788"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd1356910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7f3dd1352350" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7f3dd1352350"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f3dd13526a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7f3dd135fdc0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7f3dd135fdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f3dd135c170"/>
        <function-ref name="sleep" scoped="" ref="0x7f3dd135a640"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f3dd135c480"/>
        <function-ref name="dataReady" scoped="" ref="0x7f3dd135a7c8"/>
        <function-ref name="initMaster" scoped="" ref="0x7f3dd135c790"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f3dd135c918"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f3dd135caa0"/>
        <function-ref name="read" scoped="" ref="0x7f3dd135cc28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f3dd135cdb0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f3dd135b020"/>
        <function-ref name="setClock" scoped="" ref="0x7f3dd135b1a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f3dd135b330"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f3dd135b4b8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f3dd135b740"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f3dd135b8c8"/>
        <function-ref name="write" scoped="" ref="0x7f3dd135ba50"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f3dd135bbd8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f3dd135bd60"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f3dd135a020"/>
        <function-ref name="getClock" scoped="" ref="0x7f3dd135a1a8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f3dd135a330"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f3dd135c2f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f3dd135c608"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f3dd135a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7f3dd1354020" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7f3dd1354020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3dd1354370"/>
        <function-ref name="isInput" scoped="" ref="0x7f3dd13544f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dd1354680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3dd1354808"/>
        <function-ref name="get" scoped="" ref="0x7f3dd1354990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3dd1354b18"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1354ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f3dd1354e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f3dd130a510" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f3dd130a510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f3dd130a880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f3dd130aa08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f3dd1309550" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3dd1309550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f3dd13098c0"/>
        <function-ref name="configure" scoped="" ref="0x7f3dd1309a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3dd130c748" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f3dd130c748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3dd130cab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3dd130cc40"/>
        <function-ref name="request" scoped="" ref="0x7f3dd130cdc8"/>
        <function-ref name="granted" scoped="" ref="0x7f3dd130a020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3dd130a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f3dd130ac50" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3dd130ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f3dd1309020"/>
        <function-ref name="userId" scoped="" ref="0x7f3dd13091a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3dcfe637b0" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3dcfe637b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dcfe63b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f3dcfe63d88" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f3dcfe63d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f3dcfe62170"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f3dcfe622f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f3dcfe62480"/>
        <function-ref name="dequeue" scoped="" ref="0x7f3dcfe62608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f3dcfe609a8" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f3dcfe609a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f3dcfe60d18"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f3dcfe5f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f3dcfe5fb08" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3dcfe5fb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f3dcfe5fe78"/>
        <function-ref name="configure" scoped="" ref="0x7f3dcfe5e030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f3dcfe5e2b8" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f3dcfe5e2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f3dcfe5e608"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f3dcfe5e790"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f3dcfe5e918"/>
        <function-ref name="dequeue" scoped="" ref="0x7f3dcfe5eaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3dcfe61b80" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f3dcfe61b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3dcfe60020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3dcfe601a8"/>
        <function-ref name="request" scoped="" ref="0x7f3dcfe60330"/>
        <function-ref name="granted" scoped="" ref="0x7f3dcfe604b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3dcfe60640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f3dcfe5f268" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3dcfe5f268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f3dcfe5f5b8"/>
        <function-ref name="userId" scoped="" ref="0x7f3dcfe5f740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f3dcfe5ed68" loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f3dcfe5ed68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3dcfe5d0f0"/>
        <function-ref name="runTask" scoped="" ref="0x7f3dcfe5d278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f3dd12f15e8" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f3dd12f15e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f3dd12f1938"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f3dd12f1ac0"/>
        <function-ref name="getControlA" scoped="" ref="0x7f3dd12f1c48"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f3dd12f1dd0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f3dd12f9020"/>
        <function-ref name="setControlB" scoped="" ref="0x7f3dd12f91a8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f3dd12f9330"/>
        <function-ref name="getControlB" scoped="" ref="0x7f3dd12f94b8"/>
        <function-ref name="setControlC" scoped="" ref="0x7f3dd12f9640"/>
        <function-ref name="setControlA" scoped="" ref="0x7f3dd12f97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f3dd12f9ca0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f3dd12f9ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f3dd12eee20"/>
        <function-ref name="test" scoped="" ref="0x7f3dd12ee510"/>
        <function-ref name="get" scoped="" ref="0x7f3dd12f8858"/>
        <function-ref name="captured" scoped="" ref="0x7f3dd12ef238"/>
        <function-ref name="reset" scoped="" ref="0x7f3dd12ef710"/>
        <function-ref name="isOn" scoped="" ref="0x7f3dd12ee998"/>
        <function-ref name="set" scoped="" ref="0x7f3dd12f8ce0"/>
        <function-ref name="start" scoped="" ref="0x7f3dd12efb98"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd12ee088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f3dd12eca20" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f3dd12eca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f3dd12e9270"/>
        <function-ref name="fired" scoped="" ref="0x7f3dd12ea020"/>
        <function-ref name="get" scoped="" ref="0x7f3dd12eb5d8"/>
        <function-ref name="reset" scoped="" ref="0x7f3dd12ea4a8"/>
        <function-ref name="isOn" scoped="" ref="0x7f3dd12e96f8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd12eba60"/>
        <function-ref name="start" scoped="" ref="0x7f3dd12ea930"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd12eadb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f3dd13016e0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f3dd13016e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f3dd12fb930"/>
        <function-ref name="test" scoped="" ref="0x7f3dd12fb020"/>
        <function-ref name="get" scoped="" ref="0x7f3dd12fe3a8"/>
        <function-ref name="setScale" scoped="" ref="0x7f3dd12fbdb8"/>
        <function-ref name="getScale" scoped="" ref="0x7f3dd12fa2f0"/>
        <function-ref name="reset" scoped="" ref="0x7f3dd12fd1f8"/>
        <function-ref name="overflow" scoped="" ref="0x7f3dd12fed08"/>
        <function-ref name="isOn" scoped="" ref="0x7f3dd12fb4a8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd12fe830"/>
        <function-ref name="start" scoped="" ref="0x7f3dd12fd680"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd12fdb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f3dd12e0c90" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f3dd12e0c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f3dd12df020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f3dd12df1a8"/>
        <function-ref name="getControlA" scoped="" ref="0x7f3dd12df330"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f3dd12df4b8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f3dd12df640"/>
        <function-ref name="setControlB" scoped="" ref="0x7f3dd12df7c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f3dd12df950"/>
        <function-ref name="getControlB" scoped="" ref="0x7f3dd12dfad8"/>
        <function-ref name="setControlC" scoped="" ref="0x7f3dd12dfc60"/>
        <function-ref name="setControlA" scoped="" ref="0x7f3dd12dfde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7f3dd12dac48" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7f3dd12dac48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f3dd12d64a8"/>
        <function-ref name="fired" scoped="" ref="0x7f3dd12d71d0"/>
        <function-ref name="get" scoped="" ref="0x7f3dd12d9820"/>
        <function-ref name="reset" scoped="" ref="0x7f3dd12d7658"/>
        <function-ref name="isOn" scoped="" ref="0x7f3dd12d6930"/>
        <function-ref name="set" scoped="" ref="0x7f3dd12d9ca8"/>
        <function-ref name="start" scoped="" ref="0x7f3dd12d7ae0"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd12d6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f3dd12de350" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f3dd12de350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f3dd12da580"/>
        <function-ref name="test" scoped="" ref="0x7f3dd12dbc20"/>
        <function-ref name="get" scoped="" ref="0x7f3dd12dd020"/>
        <function-ref name="captured" scoped="" ref="0x7f3dd12dd980"/>
        <function-ref name="reset" scoped="" ref="0x7f3dd12dde58"/>
        <function-ref name="isOn" scoped="" ref="0x7f3dd12da0f8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd12dd4a8"/>
        <function-ref name="start" scoped="" ref="0x7f3dd12db310"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd12db798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7f3dd12d5020" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7f3dd12d5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f3dd12d27a8"/>
        <function-ref name="fired" scoped="" ref="0x7f3dd12d4560"/>
        <function-ref name="get" scoped="" ref="0x7f3dd12d5ba0"/>
        <function-ref name="reset" scoped="" ref="0x7f3dd12d49e8"/>
        <function-ref name="isOn" scoped="" ref="0x7f3dd12d2c30"/>
        <function-ref name="set" scoped="" ref="0x7f3dd12d4088"/>
        <function-ref name="start" scoped="" ref="0x7f3dd12d4e70"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd12d2320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7f3dd12d1360" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7f3dd12d1360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f3dd12cec20"/>
        <function-ref name="fired" scoped="" ref="0x7f3dd12d0980"/>
        <function-ref name="get" scoped="" ref="0x7f3dd12d0020"/>
        <function-ref name="reset" scoped="" ref="0x7f3dd12d0e08"/>
        <function-ref name="isOn" scoped="" ref="0x7f3dd12cd0f8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd12d04a8"/>
        <function-ref name="start" scoped="" ref="0x7f3dd12ce310"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd12ce798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f3dd12e7be0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f3dd12e7be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f3dd12e1db8"/>
        <function-ref name="test" scoped="" ref="0x7f3dd12e14a8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd12e47a0"/>
        <function-ref name="setScale" scoped="" ref="0x7f3dd12e0270"/>
        <function-ref name="getScale" scoped="" ref="0x7f3dd12e0748"/>
        <function-ref name="reset" scoped="" ref="0x7f3dd12e35b8"/>
        <function-ref name="overflow" scoped="" ref="0x7f3dd12e3130"/>
        <function-ref name="isOn" scoped="" ref="0x7f3dd12e1930"/>
        <function-ref name="set" scoped="" ref="0x7f3dd12e4c28"/>
        <function-ref name="start" scoped="" ref="0x7f3dd12e3a40"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd12e1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f3dd120ab68" loc="30:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f3dd120ab68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TOne" ref="0x7f3dd21699f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3dd1206238"/>
        <function-ref name="fired" scoped="" ref="0x7f3dd12072b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f3dd1207bc0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3dd1207738"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f3dd12066c0"/>
        <function-ref name="start" scoped="" ref="0x7f3dd12088f8"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd1208dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3dd1250dc0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3dd1250dc0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f3dd2235388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f3dd2235388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd124f170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f3dd124f540" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f3dd124f540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f3dd12406f8"/>
        <function-ref name="test" scoped="" ref="0x7f3dd1241db8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd12430f8"/>
        <function-ref name="setScale" scoped="" ref="0x7f3dd1240b80"/>
        <function-ref name="getScale" scoped="" ref="0x7f3dd123f088"/>
        <function-ref name="reset" scoped="" ref="0x7f3dd1241020"/>
        <function-ref name="overflow" scoped="" ref="0x7f3dd1243a58"/>
        <function-ref name="isOn" scoped="" ref="0x7f3dd1240270"/>
        <function-ref name="set" scoped="" ref="0x7f3dd1243580"/>
        <function-ref name="start" scoped="" ref="0x7f3dd12414a8"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd1241930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f3dcfe34bc8" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f3dcfe34bc8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7f3dd2235020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7f3dd2235020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TOne" ref="0x7f3dd21699f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3dcfe31270"/>
        <function-ref name="fired" scoped="" ref="0x7f3dcfe32310"/>
        <function-ref name="startAt" scoped="" ref="0x7f3dcfe32c20"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3dcfe32798"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f3dcfe316f8"/>
        <function-ref name="start" scoped="" ref="0x7f3dcfe33948"/>
        <function-ref name="stop" scoped="" ref="0x7f3dcfe33e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7f3dcfe2cc68" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f3dcfe2cc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f3dcfe284a8"/>
        <function-ref name="fired" scoped="" ref="0x7f3dcfe291d0"/>
        <function-ref name="get" scoped="" ref="0x7f3dcfe2a820"/>
        <function-ref name="reset" scoped="" ref="0x7f3dcfe29658"/>
        <function-ref name="isOn" scoped="" ref="0x7f3dcfe28930"/>
        <function-ref name="set" scoped="" ref="0x7f3dcfe2aca8"/>
        <function-ref name="start" scoped="" ref="0x7f3dcfe29ae0"/>
        <function-ref name="stop" scoped="" ref="0x7f3dcfe28020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7f3dcfe31c18" loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f3dcfe31c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f3dcfe2ddb8"/>
        <function-ref name="test" scoped="" ref="0x7f3dcfe2d4a8"/>
        <function-ref name="get" scoped="" ref="0x7f3dcfe30820"/>
        <function-ref name="setScale" scoped="" ref="0x7f3dcfe2c270"/>
        <function-ref name="getScale" scoped="" ref="0x7f3dcfe2c748"/>
        <function-ref name="reset" scoped="" ref="0x7f3dcfe2e658"/>
        <function-ref name="overflow" scoped="" ref="0x7f3dcfe2e1d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f3dcfe2d930"/>
        <function-ref name="set" scoped="" ref="0x7f3dcfe30ca8"/>
        <function-ref name="start" scoped="" ref="0x7f3dcfe2eae0"/>
        <function-ref name="stop" scoped="" ref="0x7f3dcfe2d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f3dd1202400" loc="39:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f3dd1202400"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f3dd21a9788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dd1201020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f3dd11fd108" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f3dd11fd108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TOne" ref="0x7f3dd21699f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dd11fde58"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3dd11fc798"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3dd11fc310"/>
        <function-ref name="overflow" scoped="" ref="0x7f3dd11fcc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f3dd11fae08" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f3dd11fae08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TOne" ref="0x7f3dd21699f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dd11f9be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3dd11e7548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3dd11e70c0"/>
        <function-ref name="overflow" scoped="" ref="0x7f3dd11e79d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f3dd11e5020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f3dd11e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f3dd11e20f8"/>
        <function-ref name="test" scoped="" ref="0x7f3dd11e37a8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd11e5ba0"/>
        <function-ref name="setScale" scoped="" ref="0x7f3dd11e2580"/>
        <function-ref name="getScale" scoped="" ref="0x7f3dd11e2a58"/>
        <function-ref name="reset" scoped="" ref="0x7f3dd11e49e8"/>
        <function-ref name="overflow" scoped="" ref="0x7f3dd11e4560"/>
        <function-ref name="isOn" scoped="" ref="0x7f3dd11e3c30"/>
        <function-ref name="set" scoped="" ref="0x7f3dd11e4088"/>
        <function-ref name="start" scoped="" ref="0x7f3dd11e4e70"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd11e3320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f3dd11c0450" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7f3dd11c0450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f3dd21a9788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dd11bf1d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3dd11bfae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3dd11bf658"/>
        <function-ref name="overflow" scoped="" ref="0x7f3dd11be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f3dd11dc270" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f3dd11dc270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f3dd21a9788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dd11c2020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3dd11c2930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3dd11c24a8"/>
        <function-ref name="overflow" scoped="" ref="0x7f3dd11c2db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f3dd11bcc38" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f3dd11bcc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f3dd21a9788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dd11bb820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f3dd11bbe48" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f3dd11bbe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f3dd21a9788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dd11babe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3dd11b9548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3dd11b90c0"/>
        <function-ref name="overflow" scoped="" ref="0x7f3dd11b99d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f3dd11b03c0" loc="36:/opt/tinyos-2.1.2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f3dd11b03c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f3dd21a9788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f3dd11af150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f3dd1157a00" loc="47:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationC.nc">
      <component-ref qname="DisseminationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f3dd1157a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3dd1157d50"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd1156020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x7f3dd11466c0" loc="52:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x7f3dd11466c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f3dd1146a10"/>
        <function-ref name="incrementCounter" scoped="" ref="0x7f3dd1146b98"/>
        <function-ref name="reset" scoped="" ref="0x7f3dd1146d20"/>
        <function-ref name="start" scoped="" ref="0x7f3dd1150020"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd11501a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x7f3dd114b998" loc="51:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x7f3dd114b998"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x7f3dd114be70"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd11514b8"/>
        <function-ref name="newData" scoped="" ref="0x7f3dd1151020"/>
        <function-ref name="start" scoped="" ref="0x7f3dd11511a8"/>
        <function-ref name="requestSeqno" scoped="" ref="0x7f3dd1151330"/>
        <function-ref name="requestData" scoped="" ref="0x7f3dd114bce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f3dd1156d18" loc="48:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f3dd1156d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3dd11520a0"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd1152228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x7f3dd1150a58" loc="53:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x7f3dd1150a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3dd1150da8"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd114a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeReceive" ref="0x7f3dd113d990" loc="57:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeReceive" scoped="" ref="0x7f3dd113d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd113dce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeAMSend" ref="0x7f3dd113ec48" loc="56:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeAMSend" scoped="" ref="0x7f3dd113ec48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd113d020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd113d1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd113d330"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd113d4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd113d640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f3dd113f928" loc="53:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3dd113f928"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd113fc78"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd113fe00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd113e020"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd113e1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd113e330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x7f3dd1142e10" loc="50:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x7f3dd1142e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f3dd11401a8"/>
        <function-ref name="incrementCounter" scoped="" ref="0x7f3dd1140330"/>
        <function-ref name="reset" scoped="" ref="0x7f3dd11404b8"/>
        <function-ref name="start" scoped="" ref="0x7f3dd1140640"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd11407c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x7f3dd1143a90" loc="49:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x7f3dd1143a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x7f3dd1142020"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd1142640"/>
        <function-ref name="newData" scoped="" ref="0x7f3dd11421a8"/>
        <function-ref name="start" scoped="" ref="0x7f3dd1142330"/>
        <function-ref name="requestSeqno" scoped="" ref="0x7f3dd11424b8"/>
        <function-ref name="requestData" scoped="" ref="0x7f3dd1143de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f3dd113e5c0" loc="54:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f3dd113e5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd113e910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f3dd113c020" loc="59:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f3dd113c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f3dd113c370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f3dd113c4f8"/>
        <function-ref name="led1On" scoped="" ref="0x7f3dd113c680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f3dd113c808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f3dd113c990"/>
        <function-ref name="get" scoped="" ref="0x7f3dd113cb18"/>
        <function-ref name="led1Off" scoped="" ref="0x7f3dd113cca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f3dd113b330"/>
        <function-ref name="set" scoped="" ref="0x7f3dd113ce28"/>
        <function-ref name="led0On" scoped="" ref="0x7f3dd113b020"/>
        <function-ref name="led2On" scoped="" ref="0x7f3dd113b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f3dd114ace0" loc="46:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f3dd114ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3dd11430a0"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd1143228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x7f3dd113f1c8" loc="51:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x7f3dd113f1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3dd113f518"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd113f6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f3dd10f1da8" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3dd10f1da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd104c170"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd104c2f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd104c480"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd104c608"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd104c790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f3dd104c9d8" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3dd104c9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd104cd28"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd104b020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd104b1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd104b330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd104b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f3dd104b700" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3dd104b700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dd104ba50"/>
        <function-ref name="source" scoped="" ref="0x7f3dd104bbd8"/>
        <function-ref name="address" scoped="" ref="0x7f3dd104bd60"/>
        <function-ref name="destination" scoped="" ref="0x7f3dd104a020"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dd104a1a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dd104a330"/>
        <function-ref name="type" scoped="" ref="0x7f3dd104a4b8"/>
        <function-ref name="setType" scoped="" ref="0x7f3dd104a640"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dd104a7c8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dd104a950"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3dd104aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f3dd104ad60" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f3dd104ad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f3dd10490d8"/>
        <function-ref name="noAck" scoped="" ref="0x7f3dd1049260"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f3dd10493e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f3dcfdf8020" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3dcfdf8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dcfdf8370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dcfdf84f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfdf8680"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dcfdf8808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dcfdf8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f3dcfdf8bd8" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3dcfdf8bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dcfdf6020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dcfdf61a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dcfdf6330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfdf64b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dcfdf6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f3dcfdf6888" loc="8:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3dcfdf6888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dcfdf6bd8"/>
        <function-ref name="source" scoped="" ref="0x7f3dcfdf6d60"/>
        <function-ref name="address" scoped="" ref="0x7f3dcfdf5020"/>
        <function-ref name="destination" scoped="" ref="0x7f3dcfdf51a8"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dcfdf5330"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dcfdf54b8"/>
        <function-ref name="type" scoped="" ref="0x7f3dcfdf5640"/>
        <function-ref name="setType" scoped="" ref="0x7f3dcfdf57c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dcfdf5950"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dcfdf5ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3dcfdf5c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f3dcfdf4020" loc="9:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f3dcfdf4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f3dcfdf4370"/>
        <function-ref name="noAck" scoped="" ref="0x7f3dcfdf44f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f3dcfdf4680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f3dcfdeb978" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3dcfdeb978"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dcfdebcc8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dcfdebe50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfdea020"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dcfdea1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dcfdea330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f3dcfdea578" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3dcfdea578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dcfdea8c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dcfdeaa50"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dcfdeabd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfdead60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dcfde9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f3dcfde9268" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3dcfde9268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dcfde95b8"/>
        <function-ref name="source" scoped="" ref="0x7f3dcfde9740"/>
        <function-ref name="address" scoped="" ref="0x7f3dcfde98c8"/>
        <function-ref name="destination" scoped="" ref="0x7f3dcfde9a50"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dcfde9bd8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dcfde9d60"/>
        <function-ref name="type" scoped="" ref="0x7f3dcfde8020"/>
        <function-ref name="setType" scoped="" ref="0x7f3dcfde81a8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dcfde8330"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dcfde84b8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3dcfde8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f3dcfde88c8" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f3dcfde88c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f3dcfde8c18"/>
        <function-ref name="noAck" scoped="" ref="0x7f3dcfde8da0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f3dcfde7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f3dcfdd7548" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3dcfdd7548"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dcfdd7898"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dcfdd7a20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfdd7ba8"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dcfdd7d30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dcfdd6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f3dcfdd62c8" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3dcfdd62c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dcfdd6618"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dcfdd67a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfdd6928"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dcfdd6ab0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dcfdd6c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f3dcfdd6e80" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3dcfdd6e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dcfdd51f8"/>
        <function-ref name="source" scoped="" ref="0x7f3dcfdd5380"/>
        <function-ref name="address" scoped="" ref="0x7f3dcfdd5508"/>
        <function-ref name="destination" scoped="" ref="0x7f3dcfdd5690"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dcfdd5818"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dcfdd59a0"/>
        <function-ref name="type" scoped="" ref="0x7f3dcfdd5b28"/>
        <function-ref name="setType" scoped="" ref="0x7f3dcfdd5cb0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dcfdd5e38"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dcfdd4020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3dcfdd41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f3dd10c64f8" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3dd10c64f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd10c6848"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd10c69d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd10c6b58"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd10c6ce0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd10c6e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f3dd107e6f8" loc="48:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3dd107e6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd107ea68"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd107ebf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd107ed78"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd107d020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd107d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f3dd107f920" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3dd107f920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd107fc90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd107fe18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd107e020"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd107e1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd107e330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f3dd107ca10" loc="50:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3dd107ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd107cd60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd107b020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd107b1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd107b330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd107b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f3dd107b780" loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x7f3dd107b780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3dd107bad0"/>
        <function-ref name="runTask" scoped="" ref="0x7f3dd107bc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f3dd107a020" loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x7f3dd107a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3dd107a370"/>
        <function-ref name="runTask" scoped="" ref="0x7f3dd107a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f3dd107d3f0" loc="49:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3dd107d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dd107d740"/>
        <function-ref name="source" scoped="" ref="0x7f3dd107d8c8"/>
        <function-ref name="address" scoped="" ref="0x7f3dd107da50"/>
        <function-ref name="destination" scoped="" ref="0x7f3dd107dbd8"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dd107dd60"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dd107c020"/>
        <function-ref name="type" scoped="" ref="0x7f3dd107c1a8"/>
        <function-ref name="setType" scoped="" ref="0x7f3dd107c330"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dd107c4b8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dd107c640"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3dd107c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x7f3dcfde57a0" loc="5:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMSend" scoped="" ref="0x7f3dcfde57a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dcfde5af0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dcfde5c78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfde5e00"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dcfde4020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dcfde41a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x7f3dcfde4e60" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x7f3dcfde4e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x7f3dcfde21e8"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x7f3dcfde2370"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x7f3dcfde24f8"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x7f3dcfde2680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f3dcfde6a60" loc="3:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3dcfde6a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dcfde6db0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dcfde5020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfde51a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dcfde5330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dcfde54b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lpl" ref="0x7f3dcfde4430" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Lpl" scoped="" ref="0x7f3dcfde4430"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f3dcfde4780"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f3dcfde4908"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f3dcfde4a90"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f3dcfde4c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f3dd1045c70" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3dd1045c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd103f020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd103f1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd103f330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd103f4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd103f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f3dd10456d8" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f3dd10456d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd1045a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f3dd103f888" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3dd103f888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dd103fbd8"/>
        <function-ref name="source" scoped="" ref="0x7f3dd103fd60"/>
        <function-ref name="address" scoped="" ref="0x7f3dd103e020"/>
        <function-ref name="destination" scoped="" ref="0x7f3dd103e1a8"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dd103e330"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dd103e4b8"/>
        <function-ref name="type" scoped="" ref="0x7f3dd103e640"/>
        <function-ref name="setType" scoped="" ref="0x7f3dd103e7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dd103e950"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dd103ead8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3dd103ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f3dd103b1c8" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3dd103b1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd103b518"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd103b6a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd103b828"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd103b9b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd103bb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f3dd103bd80" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3dd103bd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd103a170"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd103a2f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd103a480"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd103a608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd103a790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f3dd103a9d8" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3dd103a9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dd103ad28"/>
        <function-ref name="source" scoped="" ref="0x7f3dd1039020"/>
        <function-ref name="address" scoped="" ref="0x7f3dd10391a8"/>
        <function-ref name="destination" scoped="" ref="0x7f3dd1039330"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dd10394b8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dd1039640"/>
        <function-ref name="type" scoped="" ref="0x7f3dd10397c8"/>
        <function-ref name="setType" scoped="" ref="0x7f3dd1039950"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dd1039ad8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dd1039c60"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3dd1039de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f3dd10380a0" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f3dd10380a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f3dd10383f0"/>
        <function-ref name="noAck" scoped="" ref="0x7f3dd1038578"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f3dd1038700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f3dcfd7c618" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3dcfd7c618"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dcfd7c968"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dcfd7caf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfd7cc78"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dcfd7ce00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dcfd7a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f3dcfd7a268" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3dcfd7a268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dcfd7a5b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dcfd7a740"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dcfd7a8c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfd7aa50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dcfd7abd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f3dcfd7ae20" loc="8:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3dcfd7ae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dcfd791a8"/>
        <function-ref name="source" scoped="" ref="0x7f3dcfd79330"/>
        <function-ref name="address" scoped="" ref="0x7f3dcfd794b8"/>
        <function-ref name="destination" scoped="" ref="0x7f3dcfd79640"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dcfd797c8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dcfd79950"/>
        <function-ref name="type" scoped="" ref="0x7f3dcfd79ad8"/>
        <function-ref name="setType" scoped="" ref="0x7f3dcfd79c60"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dcfd79de8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dcfd78020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3dcfd781a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f3dcfd78430" loc="9:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f3dcfd78430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f3dcfd78780"/>
        <function-ref name="noAck" scoped="" ref="0x7f3dcfd78908"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f3dcfd78a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f3dcfd6e020" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3dcfd6e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dcfd6e370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dcfd6e4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfd6e680"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dcfd6e808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dcfd6e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f3dcfd6ebd8" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3dcfd6ebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dcfd6d020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dcfd6d1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dcfd6d330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfd6d4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dcfd6d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f3dcfd6d888" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3dcfd6d888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dcfd6dbd8"/>
        <function-ref name="source" scoped="" ref="0x7f3dcfd6dd60"/>
        <function-ref name="address" scoped="" ref="0x7f3dcfd6c020"/>
        <function-ref name="destination" scoped="" ref="0x7f3dcfd6c1a8"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dcfd6c330"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dcfd6c4b8"/>
        <function-ref name="type" scoped="" ref="0x7f3dcfd6c640"/>
        <function-ref name="setType" scoped="" ref="0x7f3dcfd6c7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dcfd6c950"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dcfd6cad8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3dcfd6cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f3dcfd6b020" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f3dcfd6b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f3dcfd6b370"/>
        <function-ref name="noAck" scoped="" ref="0x7f3dcfd6b4f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f3dcfd6b680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f3dcfd5baa0" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3dcfd5baa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dcfd5bdf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dcfd5a020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfd5a1a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dcfd5a330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dcfd5a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f3dcfd5a760" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3dcfd5a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dcfd5aab0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dcfd5ac38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfd5adc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dcfd59020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dcfd591a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f3dcfd593f0" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3dcfd593f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dcfd59740"/>
        <function-ref name="source" scoped="" ref="0x7f3dcfd598c8"/>
        <function-ref name="address" scoped="" ref="0x7f3dcfd59a50"/>
        <function-ref name="destination" scoped="" ref="0x7f3dcfd59bd8"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dcfd59d60"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dcfd58020"/>
        <function-ref name="type" scoped="" ref="0x7f3dcfd581a8"/>
        <function-ref name="setType" scoped="" ref="0x7f3dcfd58330"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dcfd584b8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dcfd58640"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3dcfd587c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x7f3dcfd69d78" loc="5:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMSend" scoped="" ref="0x7f3dcfd69d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dcfd680f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dcfd68278"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfd68400"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dcfd68588"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dcfd68710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x7f3dcfd673f0" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x7f3dcfd673f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x7f3dcfd67740"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x7f3dcfd678c8"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x7f3dcfd67a50"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x7f3dcfd67bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f3dcfd69120" loc="3:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3dcfd69120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dcfd69470"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dcfd695f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfd69780"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dcfd69908"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dcfd69a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lpl" ref="0x7f3dcfd68998" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Lpl" scoped="" ref="0x7f3dcfd68998"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f3dcfd68ce8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f3dcfd68e70"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f3dcfd67020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f3dcfd671a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f3dd1035440" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3dd1035440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd1035790"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd1035918"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd1035aa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd1035c28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd1035db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f3dd1036e78" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f3dd1036e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd10351f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f3dd1034020" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3dd1034020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dd1034370"/>
        <function-ref name="source" scoped="" ref="0x7f3dd10344f8"/>
        <function-ref name="address" scoped="" ref="0x7f3dd1034680"/>
        <function-ref name="destination" scoped="" ref="0x7f3dd1034808"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dd1034990"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dd1034b18"/>
        <function-ref name="type" scoped="" ref="0x7f3dd1034ca0"/>
        <function-ref name="setType" scoped="" ref="0x7f3dd1034e28"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dd1033020"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dd10331a8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3dd1033330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x7f3dd0f57290" loc="51:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="TestNetworkLplAppC.Object32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x7f3dd0f57290"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x7f3dd0f57dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x7f3dd0f59808" loc="50:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="TestNetworkLplAppC.Object32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x7f3dd0f59808"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x7f3dd0f58d20"/>
        <function-ref name="get" scoped="" ref="0x7f3dd0f583c8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd0f58850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="changedTask" ref="0x7f3dcfd32100" loc="62:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="TestNetworkLplAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="changedTask" scoped="" ref="0x7f3dcfd32100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3dcfd32450"/>
        <function-ref name="runTask" scoped="" ref="0x7f3dcfd325d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationCache" ref="0x7f3dcfd35c70" loc="50:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="TestNetworkLplAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x7f3dcfd35c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-functions>
        <function-ref name="requestData" scoped="" ref="0x7f3dcfd341a8"/>
        <function-ref name="storeData" scoped="" ref="0x7f3dcfd347c8"/>
        <function-ref name="newData" scoped="" ref="0x7f3dcfd34330"/>
        <function-ref name="start" scoped="" ref="0x7f3dcfd344b8"/>
        <function-ref name="requestSeqno" scoped="" ref="0x7f3dcfd34640"/>
        <function-ref name="stop" scoped="" ref="0x7f3dcfd34020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x7f3dcfd37a78" loc="49:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="TestNetworkLplAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x7f3dcfd37a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x7f3dcfd35620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f3dcfd34a50" loc="52:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="TestNetworkLplAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f3dcfd34a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f3dcfd34da0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f3dcfd33020"/>
        <function-ref name="led1On" scoped="" ref="0x7f3dcfd331a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f3dcfd33330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f3dcfd334b8"/>
        <function-ref name="get" scoped="" ref="0x7f3dcfd33640"/>
        <function-ref name="led1Off" scoped="" ref="0x7f3dcfd337c8"/>
        <function-ref name="led0On" scoped="" ref="0x7f3dcfd33de8"/>
        <function-ref name="set" scoped="" ref="0x7f3dcfd33ad8"/>
        <function-ref name="led2On" scoped="" ref="0x7f3dcfd33950"/>
        <function-ref name="led2Off" scoped="" ref="0x7f3dcfd33c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x7f3dcfd38020" loc="48:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="TestNetworkLplAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x7f3dcfd38020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x7f3dcfd37558"/>
        <function-ref name="get" scoped="" ref="0x7f3dcfd38ba0"/>
        <function-ref name="set" scoped="" ref="0x7f3dcfd37088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f3dcfd396b8" loc="46:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="TestNetworkLplAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f3dcfd396b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3dcfd39a08"/>
        <function-ref name="stop" scoped="" ref="0x7f3dcfd39b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x7f3dd0ff3498" loc="45:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationTimerP.nc">
      <component-ref qname="DisseminationTimerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x7f3dd0ff3498"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f3dd0ff37e8"/>
        <function-ref name="incrementCounter" scoped="" ref="0x7f3dd0ff3970"/>
        <function-ref name="reset" scoped="" ref="0x7f3dd0ff3af8"/>
        <function-ref name="start" scoped="" ref="0x7f3dd0ff3c80"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd0ff3e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x7f3dd0f5d478" loc="55:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x7f3dd0f5d478"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f3dd0f5d7e8"/>
        <function-ref name="incrementCounter" scoped="" ref="0x7f3dd0f5d970"/>
        <function-ref name="reset" scoped="" ref="0x7f3dd0f5daf8"/>
        <function-ref name="start" scoped="" ref="0x7f3dd0f5dc80"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd0f5de08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pending" ref="0x7f3dcfd12d78" loc="62:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pending" scoped="" ref="0x7f3dcfd12d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7f3dcfd110f0"/>
        <function-ref name="clear" scoped="" ref="0x7f3dcfd11278"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dcfd11400"/>
        <function-ref name="get" scoped="" ref="0x7f3dcfd11588"/>
        <function-ref name="assign" scoped="" ref="0x7f3dcfd11710"/>
        <function-ref name="setAll" scoped="" ref="0x7f3dcfd11898"/>
        <function-ref name="set" scoped="" ref="0x7f3dcfd11a20"/>
        <function-ref name="size" scoped="" ref="0x7f3dcfd11ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Changed" ref="0x7f3dcfd11e30" loc="63:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Changed" scoped="" ref="0x7f3dcfd11e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7f3dcfd101a8"/>
        <function-ref name="clear" scoped="" ref="0x7f3dcfd10330"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dcfd104b8"/>
        <function-ref name="get" scoped="" ref="0x7f3dcfd10640"/>
        <function-ref name="assign" scoped="" ref="0x7f3dcfd107c8"/>
        <function-ref name="setAll" scoped="" ref="0x7f3dcfd10950"/>
        <function-ref name="set" scoped="" ref="0x7f3dcfd10ad8"/>
        <function-ref name="size" scoped="" ref="0x7f3dcfd10c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f3dcfd0f020" loc="64:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f3dcfd0f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f3dcfd0f370"/>
        <function-ref name="rand32" scoped="" ref="0x7f3dcfd0f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x7f3dcfd170c8" loc="58:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x7f3dcfd170c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f3dcfd17438"/>
        <function-ref name="incrementCounter" scoped="" ref="0x7f3dcfd175c0"/>
        <function-ref name="reset" scoped="" ref="0x7f3dcfd17748"/>
        <function-ref name="start" scoped="" ref="0x7f3dcfd178d0"/>
        <function-ref name="stop" scoped="" ref="0x7f3dcfd17a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3dcfd189b0" loc="57:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3dcfd189b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dcfd18d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="timerTask" ref="0x7f3dcfd0dda0" loc="154:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="timerTask" scoped="" ref="0x7f3dcfd0dda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3dcfd0c170"/>
        <function-ref name="runTask" scoped="" ref="0x7f3dcfd0c2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f3dcfd0f740" loc="65:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f3dcfd0f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f3dcfd0fa90"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f3dcfd0fc18"/>
        <function-ref name="led1On" scoped="" ref="0x7f3dcfd0fda0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f3dcfd0d020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f3dcfd0d1a8"/>
        <function-ref name="get" scoped="" ref="0x7f3dcfd0d330"/>
        <function-ref name="led1Off" scoped="" ref="0x7f3dcfd0d4b8"/>
        <function-ref name="led0On" scoped="" ref="0x7f3dcfd0dad8"/>
        <function-ref name="set" scoped="" ref="0x7f3dcfd0d7c8"/>
        <function-ref name="led2On" scoped="" ref="0x7f3dcfd0d640"/>
        <function-ref name="led2Off" scoped="" ref="0x7f3dcfd0d950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f3dcfd17e08" loc="61:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f3dcfd17e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3dcfd120c0"/>
        <function-ref name="fired" scoped="" ref="0x7f3dcfd15798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f3dcfd134d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f3dcfd13088"/>
        <function-ref name="getdt" scoped="" ref="0x7f3dcfd12960"/>
        <function-ref name="gett0" scoped="" ref="0x7f3dcfd12510"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3dcfd15be8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f3dcfd169e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f3dcfd13aa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f3dcfd16e80"/>
        <function-ref name="stop" scoped="" ref="0x7f3dcfd15348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f3dcfd0acd8" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f3dcfd0acd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3dcfd05088"/>
        <function-ref name="fired" scoped="" ref="0x7f3dcfd08688"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f3dcfd07470"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f3dcfd07020"/>
        <function-ref name="getdt" scoped="" ref="0x7f3dcfd05928"/>
        <function-ref name="gett0" scoped="" ref="0x7f3dcfd054d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3dcfd08ad8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f3dcfd098b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f3dcfd07a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f3dcfd09d58"/>
        <function-ref name="stop" scoped="" ref="0x7f3dcfd08238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3dcfd031f8" loc="46:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3dcfd031f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dcfd03548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x7f3dcfd037d0" loc="47:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7f3dcfd037d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7f3dcfd03b20"/>
        <function-ref name="clear" scoped="" ref="0x7f3dcfd03ca8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dcfd03e30"/>
        <function-ref name="get" scoped="" ref="0x7f3dcfd02020"/>
        <function-ref name="assign" scoped="" ref="0x7f3dcfd021a8"/>
        <function-ref name="setAll" scoped="" ref="0x7f3dcfd02330"/>
        <function-ref name="set" scoped="" ref="0x7f3dcfd024b8"/>
        <function-ref name="size" scoped="" ref="0x7f3dcfd02640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3dcfd01d20" loc="46:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3dcfd01d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dcfd000a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x7f3dcfd00328" loc="47:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7f3dcfd00328"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7f3dcfd00678"/>
        <function-ref name="clear" scoped="" ref="0x7f3dcfd00800"/>
        <function-ref name="toggle" scoped="" ref="0x7f3dcfd00988"/>
        <function-ref name="get" scoped="" ref="0x7f3dcfd00b10"/>
        <function-ref name="assign" scoped="" ref="0x7f3dcfd00c98"/>
        <function-ref name="setAll" scoped="" ref="0x7f3dcfd00e20"/>
        <function-ref name="set" scoped="" ref="0x7f3dcfcff020"/>
        <function-ref name="size" scoped="" ref="0x7f3dcfcff1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7f3dd0f36d90" loc="59:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x7f3dd0f36d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f3dd0f35170"/>
        <function-ref name="setRoot" scoped="" ref="0x7f3dd0f352f8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f3dd0f35480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x7f3dd0f4b020" loc="54:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x7f3dd0f4b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f3dd0f4b370"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f3dd0f4b4f8"/>
        <function-ref name="setType" scoped="" ref="0x7f3dd0f4b680"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f3dd0f4b808"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f3dd0f4b990"/>
        <function-ref name="getType" scoped="" ref="0x7f3dd0f4bb18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x7f3dd0f34080" loc="64:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x7f3dd0f34080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x7f3dd0f344d0"/>
        <function-ref name="logEventMsg" scoped="" ref="0x7f3dd0f34658"/>
        <function-ref name="logEventSimple" scoped="" ref="0x7f3dd0f347e0"/>
        <function-ref name="logEventRoute" scoped="" ref="0x7f3dd0f34968"/>
        <function-ref name="logEventDbg" scoped="" ref="0x7f3dd0f34af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x7f3dd0f48b48" loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x7f3dd0f48b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f3dd2118278"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7f3dd0f4c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f3dd0f4c2a8" loc="53:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3dd0f4c2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd0f4c5f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd0f4c780"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd0f4c908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd0f4ca90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd0f4cc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f3dd0f4fd08" loc="50:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f3dd0f4fd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f3dd2118278"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd0f4e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f3dd0f50020" loc="48:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3dd0f50020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd0f50370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd0f504f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd0f50680"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd0f50808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd0f50990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x7f3dd0f46020" loc="57:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x7f3dd0f46020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x7f3dd0f46370"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f3dd0f464f8"/>
        <function-ref name="numNeighbors" scoped="" ref="0x7f3dd0f46680"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x7f3dd0f46808"/>
        <function-ref name="getEtx" scoped="" ref="0x7f3dd0f46990"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x7f3dd0f46b18"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x7f3dd0f46ca0"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x7f3dd0f46e28"/>
        <function-ref name="getParent" scoped="" ref="0x7f3dd0f36020"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x7f3dd0f361a8"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x7f3dd0f36330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f3dd0f4f1c8" loc="49:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f3dd0f4f1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f3dd2118278"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd0f4f518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x7f3dd0f36600" loc="58:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x7f3dd0f36600"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x7f3dd0f36950"/>
        <function-ref name="setClientCongested" scoped="" ref="0x7f3dd0f36ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x7f3dd0f37350" loc="55:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x7f3dd0f37350"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f3dd0f376a0"/>
        <function-ref name="option" scoped="" ref="0x7f3dd0f37828"/>
        <function-ref name="setEtx" scoped="" ref="0x7f3dd0f379b0"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f3dd0f37b38"/>
        <function-ref name="clearOption" scoped="" ref="0x7f3dd0f37cc0"/>
        <function-ref name="getEtx" scoped="" ref="0x7f3dd0f37e48"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f3dd0f47020"/>
        <function-ref name="setType" scoped="" ref="0x7f3dd0f471a8"/>
        <function-ref name="setOption" scoped="" ref="0x7f3dd0f47330"/>
        <function-ref name="matchPacket" scoped="" ref="0x7f3dd0f474b8"/>
        <function-ref name="getThl" scoped="" ref="0x7f3dd0f47640"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f3dd0f477c8"/>
        <function-ref name="matchInstance" scoped="" ref="0x7f3dd0f47950"/>
        <function-ref name="getType" scoped="" ref="0x7f3dd0f47bd8"/>
        <function-ref name="setThl" scoped="" ref="0x7f3dd0f47d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f3dd0f51390" loc="47:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f3dd0f51390"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3dd0f516e0"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd0f51868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x7f3dd0f32a28" loc="63:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x7f3dd0f32a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x7f3dd0f32d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7f3dd0f23020" loc="92:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x7f3dd0f23020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f3dd0f23370"/>
        <function-ref name="setRoot" scoped="" ref="0x7f3dd0f234f8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f3dd0f23680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x7f3dd0f29020" loc="86:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x7f3dd0f29020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f3dd0f29370"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f3dd0f294f8"/>
        <function-ref name="setType" scoped="" ref="0x7f3dd0f29680"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f3dd0f29808"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f3dd0f29990"/>
        <function-ref name="getType" scoped="" ref="0x7f3dd0f29b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x7f3dd0f1d568" loc="90:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x7f3dd0f1d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x7f3dd0f1d8b8"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x7f3dd0f1da40"/>
        <function-ref name="txNoAck" scoped="" ref="0x7f3dd0f1dbc8"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x7f3dd0f1dd50"/>
        <function-ref name="evicted" scoped="" ref="0x7f3dd0f24020"/>
        <function-ref name="clearDLQ" scoped="" ref="0x7f3dd0f241a8"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x7f3dd0f24330"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x7f3dd0f244b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x7f3dd0f1c750" loc="97:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x7f3dd0f1c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x7f3dd0f1caa0"/>
        <function-ref name="logEventMsg" scoped="" ref="0x7f3dd0f1cc28"/>
        <function-ref name="logEventSimple" scoped="" ref="0x7f3dd0f1cdb0"/>
        <function-ref name="logEventRoute" scoped="" ref="0x7f3dd0f1b020"/>
        <function-ref name="logEventDbg" scoped="" ref="0x7f3dd0f1b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x7f3dd0f2cd00" loc="83:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x7f3dd0f2cd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f3dd2118278"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7f3dd0f2b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f3dd0f2b328" loc="85:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3dd0f2b328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd0f2b678"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd0f2b800"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd0f2b988"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd0f2bb10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd0f2bc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f3dd0f2c1c8" loc="82:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f3dd0f2c1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f3dd2118278"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd0f2c518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f3dd0f2e3f0" loc="80:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3dd0f2e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd0f2e740"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd0f2e8c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd0f2ea50"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd0f2ebd8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd0f2ed60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x7f3dd0f27b58" loc="89:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x7f3dd0f27b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x7f3dd0f26020"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f3dd0f261a8"/>
        <function-ref name="numNeighbors" scoped="" ref="0x7f3dd0f26330"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x7f3dd0f264b8"/>
        <function-ref name="getEtx" scoped="" ref="0x7f3dd0f26640"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x7f3dd0f267c8"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x7f3dd0f26950"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x7f3dd0f26ad8"/>
        <function-ref name="getParent" scoped="" ref="0x7f3dd0f26c60"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x7f3dd0f26de8"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x7f3dd0f25020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f3dd0f2d560" loc="81:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f3dd0f2d560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f3dd2118278"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd0f2d8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x7f3dd0f24788" loc="91:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x7f3dd0f24788"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x7f3dd0f24ad8"/>
        <function-ref name="setClientCongested" scoped="" ref="0x7f3dd0f24c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x7f3dd0f29dc0" loc="87:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x7f3dd0f29dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f3dd0f28170"/>
        <function-ref name="option" scoped="" ref="0x7f3dd0f282f8"/>
        <function-ref name="setEtx" scoped="" ref="0x7f3dd0f28480"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f3dd0f28608"/>
        <function-ref name="clearOption" scoped="" ref="0x7f3dd0f28790"/>
        <function-ref name="getEtx" scoped="" ref="0x7f3dd0f28918"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f3dd0f28aa0"/>
        <function-ref name="setType" scoped="" ref="0x7f3dd0f28c28"/>
        <function-ref name="setOption" scoped="" ref="0x7f3dd0f28db0"/>
        <function-ref name="matchPacket" scoped="" ref="0x7f3dd0f27020"/>
        <function-ref name="getThl" scoped="" ref="0x7f3dd0f271a8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f3dd0f27330"/>
        <function-ref name="matchInstance" scoped="" ref="0x7f3dd0f274b8"/>
        <function-ref name="getType" scoped="" ref="0x7f3dd0f27740"/>
        <function-ref name="setThl" scoped="" ref="0x7f3dd0f278c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f3dd0f33720" loc="79:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f3dd0f33720"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3dd0f33a70"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd0f33bf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x7f3dd0f1c020" loc="96:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x7f3dd0f1c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x7f3dd0f1c470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f3dd0ddfd78" loc="142:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f3dd0ddfd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd0ddd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x7f3dd0ddb020" loc="145:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x7f3dd0ddb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f3dd0ddb370"/>
        <function-ref name="setRoot" scoped="" ref="0x7f3dd0ddb4f8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f3dd0ddb680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f3dd0df5020" loc="126:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f3dd0df5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd0df5370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd0df54f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd0df5680"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd0df5808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd0df5990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x7f3dd0dd7740" loc="156:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x7f3dd0dd7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x7f3dd0dd7a90"/>
        <function-ref name="logEventMsg" scoped="" ref="0x7f3dd0dd7c18"/>
        <function-ref name="logEventSimple" scoped="" ref="0x7f3dd0dd7da0"/>
        <function-ref name="logEventRoute" scoped="" ref="0x7f3dd0dd5020"/>
        <function-ref name="logEventDbg" scoped="" ref="0x7f3dd0dd51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x7f3dd0df9c38" loc="116:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x7f3dd0df9c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f3dd0df8020"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f3dd0df81a8"/>
        <function-ref name="setType" scoped="" ref="0x7f3dd0df8330"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f3dd0df84b8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f3dd0df8640"/>
        <function-ref name="getType" scoped="" ref="0x7f3dd0df87c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x7f3dd0def6c0" loc="129:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x7f3dd0def6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x7f3dd0defa10"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x7f3dd0defb98"/>
        <function-ref name="txNoAck" scoped="" ref="0x7f3dd0defd20"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x7f3dd0ded020"/>
        <function-ref name="evicted" scoped="" ref="0x7f3dd0ded1a8"/>
        <function-ref name="clearDLQ" scoped="" ref="0x7f3dd0ded330"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x7f3dd0ded4b8"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x7f3dd0ded640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SentCache" ref="0x7f3dd0de0448" loc="140:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SentCache" scoped="" ref="0x7f3dd0de0448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
              <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x7f3dd0ddf020"/>
        <function-ref name="flush" scoped="" ref="0x7f3dd0ddf960"/>
        <function-ref name="lookup" scoped="" ref="0x7f3dd0ddf4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x7f3dd0dfaaa0" loc="114:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x7f3dd0dfaaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f3dd2118278"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7f3dd0dfae10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f3dd0df9080" loc="115:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3dd0df9080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd0df93d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd0df9558"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd0df96e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd0df9868"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd0df99f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f3dd0dfa3c8" loc="113:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f3dd0dfa3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f3dd2118278"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd0dfa738"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f3dd0dd7020" loc="149:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f3dd0dd7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f3dd0dd7370"/>
        <function-ref name="rand32" scoped="" ref="0x7f3dd0dd74f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f3dd0dfcdf8" loc="111:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3dd0dfcdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd0dfb1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd0dfb330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd0dfb4b8"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd0dfb640"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd0dfb7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RetxmitTimer" ref="0x7f3dd0df36c0" loc="128:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RetxmitTimer" scoped="" ref="0x7f3dd0df36c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3dd0df0a18"/>
        <function-ref name="fired" scoped="" ref="0x7f3dd0df1158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f3dd0df1e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f3dd0df19f8"/>
        <function-ref name="getdt" scoped="" ref="0x7f3dd0def2e8"/>
        <function-ref name="gett0" scoped="" ref="0x7f3dd0df0e68"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3dd0df15a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f3dd0df2370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f3dd0df0448"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f3dd0df2810"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd0df2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7f3dd0dd5430" loc="162:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7f3dd0dd5430"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f3dd0dd5780"/>
        <function-ref name="stopDone" scoped="" ref="0x7f3dd0dd5908"/>
        <function-ref name="start" scoped="" ref="0x7f3dd0dd5a90"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd0dd5c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7f3dd0dd4020" loc="234:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x7f3dd0dd4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3dd0dd4370"/>
        <function-ref name="runTask" scoped="" ref="0x7f3dd0dd44f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x7f3dd0deb1a0" loc="137:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0x7f3dd0deb1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7f3dd0f11710"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f3dd0f11bc8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f3dd0deaa60"/>
        <function-ref name="enqueue" scoped="" ref="0x7f3dd0de8758"/>
        <function-ref name="element" scoped="" ref="0x7f3dd0de8d88"/>
        <function-ref name="maxSize" scoped="" ref="0x7f3dd0dea610"/>
        <function-ref name="dequeue" scoped="" ref="0x7f3dd0de80f8"/>
        <function-ref name="empty" scoped="" ref="0x7f3dd0debce8"/>
        <function-ref name="size" scoped="" ref="0x7f3dd0dea1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpInfo" ref="0x7f3dd0ddd910" loc="144:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x7f3dd0ddd910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x7f3dd0dddc60"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f3dd0dddde8"/>
        <function-ref name="numNeighbors" scoped="" ref="0x7f3dd0ddc020"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x7f3dd0ddc1a8"/>
        <function-ref name="getEtx" scoped="" ref="0x7f3dd0ddc330"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x7f3dd0ddc4b8"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x7f3dd0ddc640"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x7f3dd0ddc7c8"/>
        <function-ref name="getParent" scoped="" ref="0x7f3dd0ddc950"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x7f3dd0ddcad8"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x7f3dd0ddcc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f3dd0dec430" loc="131:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f3dd0dec430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd0dec780"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd0dec908"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd0deca90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd0decc18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd0decda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3dd0dfc020" loc="109:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3dd0dfc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd0dfc370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f3dd0dfbb30" loc="112:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f3dd0dfbb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f3dd2118278"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd0dfa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x7f3dd0df6800" loc="118:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x7f3dd0df6800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x7f3dd0df6b50"/>
        <function-ref name="setClientCongested" scoped="" ref="0x7f3dd0df6cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnicastNameFreeRouting" ref="0x7f3dd0ded888" loc="130:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x7f3dd0ded888"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x7f3dd0dedbd8"/>
        <function-ref name="routeFound" scoped="" ref="0x7f3dd0dedd60"/>
        <function-ref name="nextHop" scoped="" ref="0x7f3dd0dec020"/>
        <function-ref name="noRoute" scoped="" ref="0x7f3dd0dec1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f3dd0dd9888" loc="148:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f3dd0dd9888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f3dd0dd9bd8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f3dd0dd9d60"/>
        <function-ref name="led1On" scoped="" ref="0x7f3dd0dd8020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f3dd0dd81a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f3dd0dd8330"/>
        <function-ref name="get" scoped="" ref="0x7f3dd0dd84b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f3dd0dd8640"/>
        <function-ref name="led2On" scoped="" ref="0x7f3dd0dd8c60"/>
        <function-ref name="set" scoped="" ref="0x7f3dd0dd8950"/>
        <function-ref name="led2Off" scoped="" ref="0x7f3dd0dd87c8"/>
        <function-ref name="led0On" scoped="" ref="0x7f3dd0dd8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f3dd0df5bd8" loc="127:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3dd0df5bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f3dd0df3020"/>
        <function-ref name="noAck" scoped="" ref="0x7f3dd0df31a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f3dd0df3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x7f3dd0df8a10" loc="117:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x7f3dd0df8a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f3dd0df8d60"/>
        <function-ref name="option" scoped="" ref="0x7f3dd0df7020"/>
        <function-ref name="setEtx" scoped="" ref="0x7f3dd0df71a8"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f3dd0df7330"/>
        <function-ref name="clearOption" scoped="" ref="0x7f3dd0df74b8"/>
        <function-ref name="getEtx" scoped="" ref="0x7f3dd0df7640"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f3dd0df77c8"/>
        <function-ref name="setType" scoped="" ref="0x7f3dd0df7950"/>
        <function-ref name="setOption" scoped="" ref="0x7f3dd0df7ad8"/>
        <function-ref name="matchPacket" scoped="" ref="0x7f3dd0df7c60"/>
        <function-ref name="getThl" scoped="" ref="0x7f3dd0df7de8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f3dd0df6020"/>
        <function-ref name="matchInstance" scoped="" ref="0x7f3dd0df61a8"/>
        <function-ref name="getType" scoped="" ref="0x7f3dd0df6430"/>
        <function-ref name="setThl" scoped="" ref="0x7f3dd0df65b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="QEntryPool" ref="0x7f3dd0de7558" loc="138:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QEntryPool" scoped="" ref="0x7f3dd0de7558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7f3dd0f11710"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f3dd0f11bc8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dd0de44c0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f3dd0de5998"/>
        <function-ref name="empty" scoped="" ref="0x7f3dd0de50f8"/>
        <function-ref name="put" scoped="" ref="0x7f3dd0de5de8"/>
        <function-ref name="size" scoped="" ref="0x7f3dd0de5548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f3dd0dda268" loc="147:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3dd0dda268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dd0dda5b8"/>
        <function-ref name="source" scoped="" ref="0x7f3dd0dda740"/>
        <function-ref name="address" scoped="" ref="0x7f3dd0dda8c8"/>
        <function-ref name="destination" scoped="" ref="0x7f3dd0ddaa50"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dd0ddabd8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dd0ddad60"/>
        <function-ref name="type" scoped="" ref="0x7f3dd0dd9020"/>
        <function-ref name="setType" scoped="" ref="0x7f3dd0dd91a8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dd0dd9330"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dd0dd94b8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3dd0dd9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f3dd0dfc5b8" loc="110:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f3dd0dfc5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3dd0dfc908"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd0dfca90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x7f3dd0ddd378" loc="143:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSnoop" scoped="" ref="0x7f3dd0ddd378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd0ddd6c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MessagePool" ref="0x7f3dd0de4ca0" loc="139:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MessagePool" scoped="" ref="0x7f3dd0de4ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
            <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dd0de1bf0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f3dd0de10f8"/>
        <function-ref name="empty" scoped="" ref="0x7f3dd0de3820"/>
        <function-ref name="put" scoped="" ref="0x7f3dd0de1548"/>
        <function-ref name="size" scoped="" ref="0x7f3dd0de3c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x7f3dd0ddb9e8" loc="146:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x7f3dd0ddb9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x7f3dd0dda020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f3dd0dca020" loc="42:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <component-ref qname="CtpP.MessagePoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7f3dd0dca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
            <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dd0da5020"/>
        <function-ref name="maxSize" scoped="" ref="0x7f3dd0da6470"/>
        <function-ref name="empty" scoped="" ref="0x7f3dd0dcab68"/>
        <function-ref name="put" scoped="" ref="0x7f3dd0da68c0"/>
        <function-ref name="size" scoped="" ref="0x7f3dd0da6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f3dcfbdf7e0" loc="56:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7f3dcfbdf7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
            <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dcfbdc730"/>
        <function-ref name="maxSize" scoped="" ref="0x7f3dcfbddc10"/>
        <function-ref name="empty" scoped="" ref="0x7f3dcfbdd370"/>
        <function-ref name="put" scoped="" ref="0x7f3dcfbdc088"/>
        <function-ref name="size" scoped="" ref="0x7f3dcfbdd7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3dcfbdf140" loc="55:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3dcfbdf140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dcfbdf490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f3dd0da2228" loc="42:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <component-ref qname="CtpP.QEntryPoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7f3dd0da2228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7f3dd0f11710"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f3dd0f11bc8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dd0da01b8"/>
        <function-ref name="maxSize" scoped="" ref="0x7f3dd0da1648"/>
        <function-ref name="empty" scoped="" ref="0x7f3dd0da2d70"/>
        <function-ref name="put" scoped="" ref="0x7f3dd0da1a98"/>
        <function-ref name="size" scoped="" ref="0x7f3dd0da11f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f3dcfbccc98" loc="56:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7f3dcfbccc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7f3dd0f11710"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f3dd0f11bc8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dcfbcabf0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f3dcfbca0f8"/>
        <function-ref name="empty" scoped="" ref="0x7f3dcfbcb820"/>
        <function-ref name="put" scoped="" ref="0x7f3dcfbca548"/>
        <function-ref name="size" scoped="" ref="0x7f3dcfbcbc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3dcfbcc5f8" loc="55:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3dcfbcc5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dcfbcc948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f3dd0d9c6e0" loc="43:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
      <component-ref qname="CtpP.SendQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f3dd0d9c6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7f3dd0f11710"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f3dd0f11bc8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f3dd0d82088"/>
        <function-ref name="enqueue" scoped="" ref="0x7f3dd0d82d48"/>
        <function-ref name="element" scoped="" ref="0x7f3dd0d803a8"/>
        <function-ref name="maxSize" scoped="" ref="0x7f3dd0d83c10"/>
        <function-ref name="dequeue" scoped="" ref="0x7f3dd0d826e8"/>
        <function-ref name="empty" scoped="" ref="0x7f3dd0d83370"/>
        <function-ref name="size" scoped="" ref="0x7f3dd0d837c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x7f3dd0d7de10" loc="39:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <component-ref qname="CtpP.SentCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x7f3dd0d7de10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
              <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x7f3dd0d509e0"/>
        <function-ref name="flush" scoped="" ref="0x7f3dd0d4e348"/>
        <function-ref name="lookup" scoped="" ref="0x7f3dd0d50e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x7f3dcfbb0880" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x7f3dcfbb0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
              <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x7f3dcfbaf458"/>
        <function-ref name="flush" scoped="" ref="0x7f3dcfbafd98"/>
        <function-ref name="lookup" scoped="" ref="0x7f3dcfbaf8f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3dcfbb01a8" loc="45:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3dcfbb01a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dcfbb04f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpPacket" ref="0x7f3dcfbad220" loc="49:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x7f3dcfbad220"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f3dcfbad570"/>
        <function-ref name="option" scoped="" ref="0x7f3dcfbad6f8"/>
        <function-ref name="setEtx" scoped="" ref="0x7f3dcfbad880"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f3dcfbada08"/>
        <function-ref name="clearOption" scoped="" ref="0x7f3dcfbadb90"/>
        <function-ref name="getEtx" scoped="" ref="0x7f3dcfbadd18"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f3dcfbac020"/>
        <function-ref name="setType" scoped="" ref="0x7f3dcfbac1a8"/>
        <function-ref name="setOption" scoped="" ref="0x7f3dcfbac330"/>
        <function-ref name="matchPacket" scoped="" ref="0x7f3dcfbac4b8"/>
        <function-ref name="getThl" scoped="" ref="0x7f3dcfbac640"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f3dcfbac7c8"/>
        <function-ref name="matchInstance" scoped="" ref="0x7f3dcfbac950"/>
        <function-ref name="getType" scoped="" ref="0x7f3dcfbacbd8"/>
        <function-ref name="setThl" scoped="" ref="0x7f3dcfbacd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f3dd0d4dcf8" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RoutingBeaconTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f3dd0d4dcf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3dd0d48088"/>
        <function-ref name="fired" scoped="" ref="0x7f3dd0d4b688"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f3dd0d49470"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f3dd0d49020"/>
        <function-ref name="getdt" scoped="" ref="0x7f3dd0d48928"/>
        <function-ref name="gett0" scoped="" ref="0x7f3dd0d484d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3dd0d4bad8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f3dd0d4c8b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f3dd0d49a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f3dd0d4cd58"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd0d4b238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f3dd0d46350" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RouteUpdateTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f3dd0d46350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3dd0d426c8"/>
        <function-ref name="fired" scoped="" ref="0x7f3dd0d45db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f3dd0d43ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f3dd0d43688"/>
        <function-ref name="getdt" scoped="" ref="0x7f3dd0d41020"/>
        <function-ref name="gett0" scoped="" ref="0x7f3dd0d42b18"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3dd0d43238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f3dd0d45020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f3dd0d420f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f3dd0d454c0"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd0d45960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f3dd0d2d668" loc="57:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f3dd0d2d668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd0d2d9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x7f3dd0d36be0" loc="47:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x7f3dd0d36be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x7f3dd0d34020"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x7f3dd0d341a8"/>
        <function-ref name="txNoAck" scoped="" ref="0x7f3dd0d34330"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x7f3dd0d344b8"/>
        <function-ref name="evicted" scoped="" ref="0x7f3dd0d34640"/>
        <function-ref name="clearDLQ" scoped="" ref="0x7f3dd0d347c8"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x7f3dd0d34950"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x7f3dd0d34ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f3dd0d33360" loc="49:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3dd0d33360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd0d336b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd0d33838"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd0d339c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd0d33b48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd0d33cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f3dd0d31678" loc="54:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3dd0d31678"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd0d319c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd0d31b50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd0d31cd8"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd0d31e60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd0d30020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f3dd0d37978" loc="45:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3dd0d37978"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd0d37cc8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd0d37e50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd0d36020"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd0d361a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd0d36330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f3dd0d2c328" loc="59:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f3dd0d2c328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f3dd0d2c778"/>
        <function-ref name="rand32" scoped="" ref="0x7f3dd0d2c900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f3dd0d2e968" loc="56:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f3dd0d2e968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd0d2ecb8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd0d2ee40"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd0d2d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd0d2d1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd0d2d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3dd0d34d50" loc="48:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3dd0d34d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd0d330d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x7f3dd0d30370" loc="55:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMPacket" scoped="" ref="0x7f3dd0d30370"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dd0d306c0"/>
        <function-ref name="source" scoped="" ref="0x7f3dd0d30848"/>
        <function-ref name="address" scoped="" ref="0x7f3dd0d309d0"/>
        <function-ref name="destination" scoped="" ref="0x7f3dd0d30b58"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dd0d30ce0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dd0d30e68"/>
        <function-ref name="type" scoped="" ref="0x7f3dd0d2e020"/>
        <function-ref name="setType" scoped="" ref="0x7f3dd0d2e1a8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dd0d2e330"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dd0d2e4b8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3dd0d2e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f3dd0d365c0" loc="46:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f3dd0d365c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd0d36910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareBit" ref="0x7f3dd0d31020" loc="50:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0x7f3dd0d31020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x7f3dd0d31370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f3dd0d371a8" loc="44:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f3dd0d371a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3dd0d374f8"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd0d37680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkPacketMetadata" ref="0x7f3dd0d2dcb8" loc="58:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f3dd0d2dcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f3dd0d2c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f3dd0c7ad10" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3dd0c7ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd0c790a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd0c79228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd0c793b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd0c79538"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd0c796c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f3dd0c79908" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3dd0c79908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd0c79c58"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd0c79de0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd0c78020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd0c781a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd0c78330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f3dd0c78578" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3dd0c78578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dd0c788c8"/>
        <function-ref name="source" scoped="" ref="0x7f3dd0c78a50"/>
        <function-ref name="address" scoped="" ref="0x7f3dd0c78bd8"/>
        <function-ref name="destination" scoped="" ref="0x7f3dd0c78d60"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dd0c77020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dd0c771a8"/>
        <function-ref name="type" scoped="" ref="0x7f3dd0c77330"/>
        <function-ref name="setType" scoped="" ref="0x7f3dd0c774b8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dd0c77640"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dd0c777c8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3dd0c77950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f3dd0c77bd8" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f3dd0c77bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f3dd0c76020"/>
        <function-ref name="noAck" scoped="" ref="0x7f3dd0c761a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f3dd0c76330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f3dcfb85cc8" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3dcfb85cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dcfb840a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dcfb84228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfb843b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dcfb84538"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dcfb846c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f3dcfb84908" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3dcfb84908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dcfb84c58"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dcfb84de0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dcfb83020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfb831a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dcfb83330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f3dcfb83578" loc="8:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3dcfb83578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dcfb838c8"/>
        <function-ref name="source" scoped="" ref="0x7f3dcfb83a50"/>
        <function-ref name="address" scoped="" ref="0x7f3dcfb83bd8"/>
        <function-ref name="destination" scoped="" ref="0x7f3dcfb83d60"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dcfb82020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dcfb821a8"/>
        <function-ref name="type" scoped="" ref="0x7f3dcfb82330"/>
        <function-ref name="setType" scoped="" ref="0x7f3dcfb824b8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dcfb82640"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dcfb827c8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3dcfb82950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f3dcfb82bd8" loc="9:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f3dcfb82bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f3dcfb81020"/>
        <function-ref name="noAck" scoped="" ref="0x7f3dcfb811a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f3dcfb81330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f3dcfb7adb8" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3dcfb7adb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dcfb78170"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dcfb782f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfb78480"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dcfb78608"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dcfb78790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f3dcfb789d8" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3dcfb789d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dcfb78d28"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dcfb77020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dcfb771a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfb77330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dcfb774b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f3dcfb77700" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3dcfb77700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dcfb77a50"/>
        <function-ref name="source" scoped="" ref="0x7f3dcfb77bd8"/>
        <function-ref name="address" scoped="" ref="0x7f3dcfb77d60"/>
        <function-ref name="destination" scoped="" ref="0x7f3dcfb76020"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dcfb761a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dcfb76330"/>
        <function-ref name="type" scoped="" ref="0x7f3dcfb764b8"/>
        <function-ref name="setType" scoped="" ref="0x7f3dcfb76640"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dcfb767c8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dcfb76950"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3dcfb76ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f3dcfb76d60" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f3dcfb76d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f3dcfb750d8"/>
        <function-ref name="noAck" scoped="" ref="0x7f3dcfb75260"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f3dcfb753e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f3dcfb65a80" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3dcfb65a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dcfb65dd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dcfb64020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfb641a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dcfb64330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dcfb644b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f3dcfb64760" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3dcfb64760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dcfb64ab0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dcfb64c38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfb64dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dcfb63020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dcfb631a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f3dcfb633f0" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3dcfb633f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dcfb63740"/>
        <function-ref name="source" scoped="" ref="0x7f3dcfb638c8"/>
        <function-ref name="address" scoped="" ref="0x7f3dcfb63a50"/>
        <function-ref name="destination" scoped="" ref="0x7f3dcfb63bd8"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dcfb63d60"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dcfb62020"/>
        <function-ref name="type" scoped="" ref="0x7f3dcfb621a8"/>
        <function-ref name="setType" scoped="" ref="0x7f3dcfb62330"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dcfb624b8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dcfb62640"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3dcfb627c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x7f3dcfb72af0" loc="5:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMSend" scoped="" ref="0x7f3dcfb72af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dcfb72e40"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dcfb71020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfb711a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dcfb71330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dcfb714b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x7f3dcfb70268" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x7f3dcfb70268"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x7f3dcfb705b8"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x7f3dcfb70740"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x7f3dcfb708c8"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x7f3dcfb70a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f3dcfb74e58" loc="3:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3dcfb74e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dcfb721e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dcfb72370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfb724f8"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dcfb72680"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dcfb72808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lpl" ref="0x7f3dcfb71740" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Lpl" scoped="" ref="0x7f3dcfb71740"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f3dcfb71a90"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f3dcfb71c18"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f3dcfb71da0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f3dcfb70020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f3dd0c74928" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3dd0c74928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd0c74c78"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd0c74e00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd0c73020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd0c731a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd0c73330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f3dd0c74390" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f3dd0c74390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd0c746e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f3dd0c73578" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3dd0c73578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dd0c738c8"/>
        <function-ref name="source" scoped="" ref="0x7f3dd0c73a50"/>
        <function-ref name="address" scoped="" ref="0x7f3dd0c73bd8"/>
        <function-ref name="destination" scoped="" ref="0x7f3dd0c73d60"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dd0c71020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dd0c711a8"/>
        <function-ref name="type" scoped="" ref="0x7f3dd0c71330"/>
        <function-ref name="setType" scoped="" ref="0x7f3dd0c714b8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dd0c71640"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dd0c717c8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3dd0c71950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f3dd0c69760" loc="47:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3dd0c69760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd0c69ab0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd0c69c38"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd0c69dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd0c68020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd0c681a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f3dd0c691c8" loc="46:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f3dd0c691c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd0c69518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f3dd0c683f0" loc="48:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3dd0c683f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dd0c68740"/>
        <function-ref name="source" scoped="" ref="0x7f3dd0c688c8"/>
        <function-ref name="address" scoped="" ref="0x7f3dd0c68a50"/>
        <function-ref name="destination" scoped="" ref="0x7f3dd0c68bd8"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dd0c68d60"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dd0c67020"/>
        <function-ref name="type" scoped="" ref="0x7f3dd0c671a8"/>
        <function-ref name="setType" scoped="" ref="0x7f3dd0c67330"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dd0c674b8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dd0c67640"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3dd0c677c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7f3dd0b70e08" loc="110:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x7f3dd0b70e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f3dd0b6f1a8"/>
        <function-ref name="setRoot" scoped="" ref="0x7f3dd0b6f330"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f3dd0b6f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateRouteTask" ref="0x7f3dd0b5ae18" loc="271:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateRouteTask" scoped="" ref="0x7f3dd0b5ae18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3dd0b591a8"/>
        <function-ref name="runTask" scoped="" ref="0x7f3dd0b59330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x7f3dd0b5ccb8" loc="125:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x7f3dd0b5ccb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x7f3dd0b5b0a0"/>
        <function-ref name="logEventMsg" scoped="" ref="0x7f3dd0b5b228"/>
        <function-ref name="logEventSimple" scoped="" ref="0x7f3dd0b5b3b0"/>
        <function-ref name="logEventRoute" scoped="" ref="0x7f3dd0b5b538"/>
        <function-ref name="logEventDbg" scoped="" ref="0x7f3dd0b5b6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x7f3dd0b6be60" loc="119:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x7f3dd0b6be60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x7f3dd0b6a1e8"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x7f3dd0b6a370"/>
        <function-ref name="txNoAck" scoped="" ref="0x7f3dd0b6a4f8"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x7f3dd0b6a680"/>
        <function-ref name="evicted" scoped="" ref="0x7f3dd0b6a808"/>
        <function-ref name="clearDLQ" scoped="" ref="0x7f3dd0b6a990"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x7f3dd0b6ab18"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x7f3dd0b6aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpRoutingPacket" ref="0x7f3dd0b6d470" loc="113:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpRoutingPacket" scoped="" ref="0x7f3dd0b6d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpRoutingPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clearOptions" scoped="" ref="0x7f3dd0b6d7c0"/>
        <function-ref name="setEtx" scoped="" ref="0x7f3dd0b6d948"/>
        <function-ref name="clearOption" scoped="" ref="0x7f3dd0b6dad0"/>
        <function-ref name="getEtx" scoped="" ref="0x7f3dd0b6dc58"/>
        <function-ref name="setOption" scoped="" ref="0x7f3dd0b6dde0"/>
        <function-ref name="setParent" scoped="" ref="0x7f3dd0b6c020"/>
        <function-ref name="getParent" scoped="" ref="0x7f3dd0b6c1a8"/>
        <function-ref name="getOption" scoped="" ref="0x7f3dd0b6c330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7f3dd0b685b8" loc="121:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7f3dd0b685b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f3dd0b68908"/>
        <function-ref name="stopDone" scoped="" ref="0x7f3dd0b68a90"/>
        <function-ref name="start" scoped="" ref="0x7f3dd0b68c18"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd0b68da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f3dd0b5c598" loc="124:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f3dd0b5c598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f3dd0b5c8e8"/>
        <function-ref name="rand32" scoped="" ref="0x7f3dd0b5ca70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x7f3dd0b6f700" loc="111:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x7f3dd0b6f700"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x7f3dd0b6fa50"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f3dd0b6fbd8"/>
        <function-ref name="numNeighbors" scoped="" ref="0x7f3dd0b6fd60"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x7f3dd0b6e020"/>
        <function-ref name="getEtx" scoped="" ref="0x7f3dd0b6e1a8"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x7f3dd0b6e330"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x7f3dd0b6e4b8"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x7f3dd0b6e640"/>
        <function-ref name="getParent" scoped="" ref="0x7f3dd0b6e7c8"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x7f3dd0b6e950"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x7f3dd0b6ead8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendBeaconTask" ref="0x7f3dd0b5a678" loc="390:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendBeaconTask" scoped="" ref="0x7f3dd0b5a678"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3dd0b5a9c8"/>
        <function-ref name="runTask" scoped="" ref="0x7f3dd0b5ab50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3dd0b6c578" loc="114:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3dd0b6c578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd0b6c8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSend" ref="0x7f3dd0b6cbb0" loc="117:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSend" scoped="" ref="0x7f3dd0b6cbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd0b6b020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd0b6b1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd0b6b330"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd0b6b4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd0b6b640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconTimer" ref="0x7f3dd0b66168" loc="122:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconTimer" scoped="" ref="0x7f3dd0b66168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3dd0b635f0"/>
        <function-ref name="fired" scoped="" ref="0x7f3dd0b65a88"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f3dd0b648c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f3dd0b64470"/>
        <function-ref name="getdt" scoped="" ref="0x7f3dd0b62020"/>
        <function-ref name="gett0" scoped="" ref="0x7f3dd0b63a40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3dd0b64020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f3dd0b66cb0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f3dd0b63020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f3dd0b65198"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd0b65638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteTimer" ref="0x7f3dd0b62540" loc="123:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteTimer" scoped="" ref="0x7f3dd0b62540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3dd0b5e8f0"/>
        <function-ref name="fired" scoped="" ref="0x7f3dd0b5f020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f3dd0b5fd10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f3dd0b5f8c0"/>
        <function-ref name="getdt" scoped="" ref="0x7f3dd0b5c1c0"/>
        <function-ref name="gett0" scoped="" ref="0x7f3dd0b5ed40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3dd0b5f470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f3dd0b601e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f3dd0b5e320"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f3dd0b60688"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd0b60b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpCongestion" ref="0x7f3dd0b5b908" loc="126:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x7f3dd0b5b908"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x7f3dd0b5bc58"/>
        <function-ref name="setClientCongested" scoped="" ref="0x7f3dd0b5bde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareBit" ref="0x7f3dd0b5a060" loc="128:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0x7f3dd0b5a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x7f3dd0b5a3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconReceive" ref="0x7f3dd0b6b8c8" loc="118:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconReceive" scoped="" ref="0x7f3dd0b6b8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd0b6bc18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f3dd0b69020" loc="120:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3dd0b69020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dd0b69370"/>
        <function-ref name="source" scoped="" ref="0x7f3dd0b694f8"/>
        <function-ref name="address" scoped="" ref="0x7f3dd0b69680"/>
        <function-ref name="destination" scoped="" ref="0x7f3dd0b69808"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dd0b69990"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dd0b69b18"/>
        <function-ref name="type" scoped="" ref="0x7f3dd0b69ca0"/>
        <function-ref name="setType" scoped="" ref="0x7f3dd0b69e28"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dd0b68020"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dd0b681a8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3dd0b68330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f3dd0b6ed20" loc="112:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f3dd0b6ed20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3dd0b6d0a0"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd0b6d228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Routing" ref="0x7f3dd0b703d8" loc="109:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Routing" scoped="" ref="0x7f3dd0b703d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x7f3dd0b70728"/>
        <function-ref name="routeFound" scoped="" ref="0x7f3dd0b708b0"/>
        <function-ref name="nextHop" scoped="" ref="0x7f3dd0b70a38"/>
        <function-ref name="noRoute" scoped="" ref="0x7f3dd0b70bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f3dd0b51350" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RetxmitTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f3dd0b51350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3dd0b4d6c8"/>
        <function-ref name="fired" scoped="" ref="0x7f3dd0b50db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f3dd0b4ead8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f3dd0b4e688"/>
        <function-ref name="getdt" scoped="" ref="0x7f3dd0b4c020"/>
        <function-ref name="gett0" scoped="" ref="0x7f3dd0b4db18"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3dd0b4e238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f3dd0b50020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f3dd0b4d0f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f3dd0b504c0"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd0b50960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f3dd0b471a8" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3dd0b471a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd0b474f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd0b47680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd0b47808"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd0b47990"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd0b47b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f3dd0b47d60" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3dd0b47d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd0b460d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd0b46260"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd0b463e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd0b46570"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd0b466f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f3dd0b46940" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3dd0b46940"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dd0b46c90"/>
        <function-ref name="source" scoped="" ref="0x7f3dd0b46e18"/>
        <function-ref name="address" scoped="" ref="0x7f3dd0b44020"/>
        <function-ref name="destination" scoped="" ref="0x7f3dd0b441a8"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dd0b44330"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dd0b444b8"/>
        <function-ref name="type" scoped="" ref="0x7f3dd0b44640"/>
        <function-ref name="setType" scoped="" ref="0x7f3dd0b447c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dd0b44950"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dd0b44ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3dd0b44c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f3dd0b43020" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f3dd0b43020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f3dd0b43370"/>
        <function-ref name="noAck" scoped="" ref="0x7f3dd0b434f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f3dd0b43680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f3dcfac55e0" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3dcfac55e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dcfac5930"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dcfac5ab8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfac5c40"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dcfac5dc8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dcfac4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f3dcfac4268" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3dcfac4268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dcfac45b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dcfac4740"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dcfac48c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfac4a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dcfac4bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f3dcfac4e20" loc="8:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3dcfac4e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dcfac31a8"/>
        <function-ref name="source" scoped="" ref="0x7f3dcfac3330"/>
        <function-ref name="address" scoped="" ref="0x7f3dcfac34b8"/>
        <function-ref name="destination" scoped="" ref="0x7f3dcfac3640"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dcfac37c8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dcfac3950"/>
        <function-ref name="type" scoped="" ref="0x7f3dcfac3ad8"/>
        <function-ref name="setType" scoped="" ref="0x7f3dcfac3c60"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dcfac3de8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dcfac2020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3dcfac21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f3dcfac2430" loc="9:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f3dcfac2430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f3dcfac2780"/>
        <function-ref name="noAck" scoped="" ref="0x7f3dcfac2908"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f3dcfac2a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f3dcfab97b0" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3dcfab97b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dcfab9b00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dcfab9c88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfab9e10"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dcfab8020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dcfab81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f3dcfab83f0" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3dcfab83f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dcfab8740"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dcfab88c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dcfab8a50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfab8bd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dcfab8d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f3dcfab7020" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3dcfab7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dcfab7370"/>
        <function-ref name="source" scoped="" ref="0x7f3dcfab74f8"/>
        <function-ref name="address" scoped="" ref="0x7f3dcfab7680"/>
        <function-ref name="destination" scoped="" ref="0x7f3dcfab7808"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dcfab7990"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dcfab7b18"/>
        <function-ref name="type" scoped="" ref="0x7f3dcfab7ca0"/>
        <function-ref name="setType" scoped="" ref="0x7f3dcfab7e28"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dcfab6020"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dcfab61a8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3dcfab6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f3dcfab65b8" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f3dcfab65b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f3dcfab6908"/>
        <function-ref name="noAck" scoped="" ref="0x7f3dcfab6a90"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f3dcfab6c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f3dcfaa5418" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3dcfaa5418"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dcfaa5768"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dcfaa58f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfaa5a78"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dcfaa5c00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dcfaa5d88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f3dcfaa4060" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3dcfaa4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dcfaa43b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dcfaa4538"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfaa46c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dcfaa4848"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dcfaa49d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f3dcfaa4c18" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3dcfaa4c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dcfaa3020"/>
        <function-ref name="source" scoped="" ref="0x7f3dcfaa31a8"/>
        <function-ref name="address" scoped="" ref="0x7f3dcfaa3330"/>
        <function-ref name="destination" scoped="" ref="0x7f3dcfaa34b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dcfaa3640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dcfaa37c8"/>
        <function-ref name="type" scoped="" ref="0x7f3dcfaa3950"/>
        <function-ref name="setType" scoped="" ref="0x7f3dcfaa3ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dcfaa3c60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dcfaa3de8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3dcfaa2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x7f3dcfab3618" loc="5:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMSend" scoped="" ref="0x7f3dcfab3618"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dcfab3968"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dcfab3af0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfab3c78"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dcfab3e00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dcfab2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x7f3dcfab2cd8" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x7f3dcfab2cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x7f3dcfab00a0"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x7f3dcfab0228"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x7f3dcfab03b0"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x7f3dcfab0538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f3dcfab48e0" loc="3:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3dcfab48e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dcfab4c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dcfab4db8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfab3020"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dcfab31a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dcfab3330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lpl" ref="0x7f3dcfab22a8" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Lpl" scoped="" ref="0x7f3dcfab22a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f3dcfab25f8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f3dcfab2780"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f3dcfab2908"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f3dcfab2a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f3dd0b41ca8" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3dd0b41ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd0b40020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd0b401a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd0b40330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd0b404b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd0b40640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f3dd0b41710" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f3dd0b41710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd0b41a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f3dd0b40888" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3dd0b40888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dd0b40bd8"/>
        <function-ref name="source" scoped="" ref="0x7f3dd0b40d60"/>
        <function-ref name="address" scoped="" ref="0x7f3dd0b3f020"/>
        <function-ref name="destination" scoped="" ref="0x7f3dd0b3f1a8"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dd0b3f330"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dd0b3f4b8"/>
        <function-ref name="type" scoped="" ref="0x7f3dd0b3f640"/>
        <function-ref name="setType" scoped="" ref="0x7f3dd0b3f7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dd0b3f950"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dd0b3fad8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3dd0b3fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f3dd0b1ad60" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
      <component-ref qname="TestNetworkLplAppC.CollectionSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3dd0b1ad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd0b070d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd0b07260"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd0b073e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd0b07570"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd0b076f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f3dd0b1a1a8" loc="45:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
      <component-ref qname="TestNetworkLplAppC.CollectionSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3dd0b1a1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd0b1a4f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd0b1a680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd0b1a808"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd0b1a990"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd0b1ab18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f3dcfa82888" loc="38:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
      <component-ref qname="TestNetworkLplAppC.CollectionSenderC.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3dcfa82888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dcfa82bd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dcfa82d60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dcfa81020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfa811a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dcfa81330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f3dcfa83c90" loc="37:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
      <component-ref qname="TestNetworkLplAppC.CollectionSenderC.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3dcfa83c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dcfa82020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dcfa821a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfa82330"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dcfa824b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dcfa82640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionId" ref="0x7f3dcfa7c5c8" loc="46:/opt/tinyos-2.1.2/tos/lib/net/CollectionIdP.nc">
      <component-ref qname="TestNetworkLplAppC.CollectionSenderC.CollectionSenderP.CollectionIdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x7f3dcfa7c5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x7f3dcfa7c918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f3dd0b06da0" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="TestNetworkLplAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f3dd0b06da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3dd21ab378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3dd0b01088"/>
        <function-ref name="fired" scoped="" ref="0x7f3dd0b04708"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f3dd0b03470"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f3dd0b03020"/>
        <function-ref name="getdt" scoped="" ref="0x7f3dd0b01928"/>
        <function-ref name="gett0" scoped="" ref="0x7f3dd0b014d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3dd0b04b58"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f3dd0b05930"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f3dd0b03a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f3dd0b05dd0"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd0b042b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f3dd0affaf0" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc">
      <component-ref qname="TestNetworkLplAppC.DemoSensorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f3dd0affaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3dd0afe670"/>
        <function-ref name="readDone" scoped="" ref="0x7f3dd0afeac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f3dcfa74020" loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <component-ref qname="TestNetworkLplAppC.DemoSensorC.DemoChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f3dcfa74020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3dcfa74b68"/>
        <function-ref name="readDone" scoped="" ref="0x7f3dcfa73020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f3dcfa70b48" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestNetworkLplAppC.DemoSensorC.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3dcfa70b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f3dcfa6f020"/>
        <function-ref name="configure" scoped="" ref="0x7f3dcfa6f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f3dcfa72cb8" loc="22:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestNetworkLplAppC.DemoSensorC.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f3dcfa72cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3dcfa71838"/>
        <function-ref name="readDone" scoped="" ref="0x7f3dcfa71c88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f3dcfa702a0" loc="24:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestNetworkLplAppC.DemoSensorC.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f3dcfa702a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f3dcfa705f0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f3dcfa70778"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f3dcfa70900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f3dd0aebcc0" loc="19:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f3dd0aebcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3dd0ae8838"/>
        <function-ref name="readDone" scoped="" ref="0x7f3dd0ae8c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f3dd0ae3a00" loc="20:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7f3dd0ae3a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3dd0ae65b0"/>
        <function-ref name="readDone" scoped="" ref="0x7f3dd0ae6a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f3dd0ae2670" loc="23:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f3dd0ae2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f3dd0ae29c0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f3dd0ae2b48"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f3dd0ae2cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f3dd0ae14c0" loc="24:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f3dd0ae14c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3dd0ae1810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3dd0ae1998"/>
        <function-ref name="request" scoped="" ref="0x7f3dd0ae1b20"/>
        <function-ref name="granted" scoped="" ref="0x7f3dd0ae1ca8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3dd0ae1e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f3dd0adb890" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3dd0adb890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f3dd0adbbe0"/>
        <function-ref name="configure" scoped="" ref="0x7f3dd0adbd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7f3dd0ad19b0" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f3dd0ad19b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f3dd0ad1d00"/>
        <function-ref name="dataReady" scoped="" ref="0x7f3dd0adb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7f3dd0ad60d0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f3dd0ad60d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f3dd0ad6420"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd0ad65a8"/>
        <function-ref name="dataReady" scoped="" ref="0x7f3dd0ad6730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3dd0add020" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f3dd0add020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3dd0add370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3dd0add4f8"/>
        <function-ref name="request" scoped="" ref="0x7f3dd0add680"/>
        <function-ref name="granted" scoped="" ref="0x7f3dd0add808"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3dd0add990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3dd0adadd0" loc="54:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3dd0adadd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd0ace170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7f3dd0acd628" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f3dd0acd628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f3dd0acd978"/>
        <function-ref name="dataReady" scoped="" ref="0x7f3dd0acdb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7f3dd0acec08" loc="56:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f3dd0acec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f3dd0acd020"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd0acd1a8"/>
        <function-ref name="dataReady" scoped="" ref="0x7f3dd0acd330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x7f3dd0abd0d0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f3dd0abd0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f3dd0abd420"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f3dd0abd5a8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f3dd0abd730"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f3dd0abd8b8"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f3dd0abda40"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f3dd0abdbc8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f3dd0abdd50"/>
        <function-ref name="isComplete" scoped="" ref="0x7f3dd0aca020"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd0aca1a8"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f3dd0aca330"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f3dd0aca4b8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f3dd0aca640"/>
        <function-ref name="startConversion" scoped="" ref="0x7f3dd0aca7c8"/>
        <function-ref name="isStarted" scoped="" ref="0x7f3dd0acaa50"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f3dd0acabd8"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f3dd0acad60"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f3dd0ac9020"/>
        <function-ref name="getValue" scoped="" ref="0x7f3dd0ac91a8"/>
        <function-ref name="dataReady" scoped="" ref="0x7f3dd0ac9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f3dd0ace450" loc="55:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f3dd0ace450"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3dd0ace7a0"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd0ace928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7f3dd0ac9610" loc="61:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f3dd0ac9610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f3dd0ac9960"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f3dd0ac9ae8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f3dd0ac9c70"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f3dd0ac9df8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f3dd0abc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7f3dd0a8c020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f3dd0a8c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f3dd0a8c370"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f3dd0a8c4f8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f3dd0a8c680"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f3dd0a8c808"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f3dd0a8c990"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f3dd0a8cb18"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f3dd0a8cca0"/>
        <function-ref name="isComplete" scoped="" ref="0x7f3dd0a8ce28"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd0a8b020"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f3dd0a8b1a8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f3dd0a8b330"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f3dd0a8b4b8"/>
        <function-ref name="startConversion" scoped="" ref="0x7f3dd0a8b640"/>
        <function-ref name="isStarted" scoped="" ref="0x7f3dd0a8b8c8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f3dd0a8ba50"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f3dd0a8bbd8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f3dd0a8bd60"/>
        <function-ref name="getValue" scoped="" ref="0x7f3dd0a8a020"/>
        <function-ref name="dataReady" scoped="" ref="0x7f3dd0a8a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7f3dd0a87248" loc="48:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f3dd0a87248"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f3dd0a87598"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f3dd0a87720"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f3dd0a878a8"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f3dd0a87a30"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f3dd0a87bb8"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f3dd0a87d40"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f3dd0a86020"/>
        <function-ref name="isComplete" scoped="" ref="0x7f3dd0a861a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd0a86330"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f3dd0a864b8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f3dd0a86640"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f3dd0a867c8"/>
        <function-ref name="startConversion" scoped="" ref="0x7f3dd0a86950"/>
        <function-ref name="isStarted" scoped="" ref="0x7f3dd0a86bd8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f3dd0a86d60"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f3dd0a85020"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f3dd0a851a8"/>
        <function-ref name="getValue" scoped="" ref="0x7f3dd0a85330"/>
        <function-ref name="dataReady" scoped="" ref="0x7f3dd0a854b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f3dd0a857c8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f3dd0a857c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f3dd0a85b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f3dd09e0698" loc="92:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f3dd09e0698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f3dd09e0a08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f3dd09e0b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f3dd09dd3c8" loc="96:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3dd09dd3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f3dd09dd738"/>
        <function-ref name="configure" scoped="" ref="0x7f3dd09dd8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f3dd09e0dd8" loc="93:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f3dd09e0dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3dd09de170"/>
        <function-ref name="requested" scoped="" ref="0x7f3dd09de2f8"/>
        <function-ref name="granted" scoped="" ref="0x7f3dd09de480"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3dd09de608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f3dd09de790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3dd09e1840" loc="91:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f3dd09e1840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3dd09e1bb0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3dd09e1d38"/>
        <function-ref name="request" scoped="" ref="0x7f3dd09e0020"/>
        <function-ref name="granted" scoped="" ref="0x7f3dd09e01a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3dd09e0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f3dd09de9d8" loc="94:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3dd09de9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f3dd09ded28"/>
        <function-ref name="userId" scoped="" ref="0x7f3dd09dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3dcfa5f140" loc="44:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3dcfa5f140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dcfa5f490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f3dcfa5f718" loc="45:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f3dcfa5f718"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f3dcfa5fa68"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f3dcfa5fbf0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f3dcfa5fd78"/>
        <function-ref name="dequeue" scoped="" ref="0x7f3dcfa5e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f3dcfa5c698" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f3dcfa5c698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f3dcfa5ca08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f3dcfa5cb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f3dcfa593e8" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3dcfa593e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f3dcfa59758"/>
        <function-ref name="configure" scoped="" ref="0x7f3dcfa598e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f3dcfa59b68" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f3dcfa59b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f3dcfa58020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f3dcfa581a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f3dcfa58330"/>
        <function-ref name="dequeue" scoped="" ref="0x7f3dcfa584b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f3dcfa5cdd8" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f3dcfa5cdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3dcfa5a170"/>
        <function-ref name="requested" scoped="" ref="0x7f3dcfa5a2f8"/>
        <function-ref name="granted" scoped="" ref="0x7f3dcfa5a480"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3dcfa5a608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f3dcfa5a790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f3dcfa58700" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f3dcfa58700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f3dcfa58a50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f3dcfa58bd8"/>
        <function-ref name="led1On" scoped="" ref="0x7f3dcfa58d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f3dcfa57020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f3dcfa571a8"/>
        <function-ref name="get" scoped="" ref="0x7f3dcfa57330"/>
        <function-ref name="led1Off" scoped="" ref="0x7f3dcfa574b8"/>
        <function-ref name="led0On" scoped="" ref="0x7f3dcfa57ad8"/>
        <function-ref name="set" scoped="" ref="0x7f3dcfa577c8"/>
        <function-ref name="led2On" scoped="" ref="0x7f3dcfa57640"/>
        <function-ref name="led2Off" scoped="" ref="0x7f3dcfa57950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3dcfa5d830" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f3dcfa5d830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3dcfa5dba0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3dcfa5dd28"/>
        <function-ref name="request" scoped="" ref="0x7f3dcfa5c020"/>
        <function-ref name="granted" scoped="" ref="0x7f3dcfa5c1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3dcfa5c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f3dcfa5a9d8" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3dcfa5a9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f3dcfa5ad28"/>
        <function-ref name="userId" scoped="" ref="0x7f3dcfa59020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f3dcfa57da0" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f3dcfa57da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3dcfa56170"/>
        <function-ref name="runTask" scoped="" ref="0x7f3dcfa562f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f3dd09da780" loc="72:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f3dd09da780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f3dd09daad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f3dd09dad18" loc="73:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f3dd09dad18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3dd09c50a0"/>
        <function-ref name="requested" scoped="" ref="0x7f3dd09c5228"/>
        <function-ref name="granted" scoped="" ref="0x7f3dd09c53b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3dd09c5538"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f3dd09c56c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f3dd09da060" loc="70:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f3dd09da060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3dd09da3b0"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd09da538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f3dd09c5908" loc="74:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3dd09c5908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f3dd09c5c58"/>
        <function-ref name="userId" scoped="" ref="0x7f3dd09c5de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f3dcfa25590" loc="62:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f3dcfa25590"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f3dcfa258e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f3dcfa25b28" loc="63:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f3dcfa25b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3dcfa25e78"/>
        <function-ref name="requested" scoped="" ref="0x7f3dcfa24030"/>
        <function-ref name="granted" scoped="" ref="0x7f3dcfa241b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3dcfa24340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f3dcfa244c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f3dcfa27e38" loc="60:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f3dcfa27e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3dcfa251c0"/>
        <function-ref name="stop" scoped="" ref="0x7f3dcfa25348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f3dcfa24710" loc="64:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3dcfa24710"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f3dcfa24a60"/>
        <function-ref name="userId" scoped="" ref="0x7f3dcfa24be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f3dd09b6578" loc="54:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f3dd09b6578"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f3dd21a9788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f3dd09b53a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f3dd09bc6a0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f3dd09bc6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3dd09bb370"/>
        <function-ref name="readDone" scoped="" ref="0x7f3dd09bb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f3dd09b9428" loc="49:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7f3dd09b9428"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3dd09b8020"/>
        <function-ref name="readDone" scoped="" ref="0x7f3dd09b84a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f3dd09b79a0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f3dd09b79a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f3dd09b7cf0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f3dd09b7e78"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f3dd09b6030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x7f3dd09b8b18" loc="52:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f3dd09b8b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f3dd09b8e68"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd09b7020"/>
        <function-ref name="dataReady" scoped="" ref="0x7f3dd09b71a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x7f3dd09a5bf8" loc="104:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x7f3dd09a5bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3dd09a4020"/>
        <function-ref name="runTask" scoped="" ref="0x7f3dd09a41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f3dd0990020" loc="24:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f3dd0990020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3dd0990b88"/>
        <function-ref name="readDone" scoped="" ref="0x7f3dd0979020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f3dd0979860" loc="26:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7f3dd0979860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3dd0977458"/>
        <function-ref name="readDone" scoped="" ref="0x7f3dd09778c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f3dd0976020" loc="27:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f3dd0976020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3dd0976390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3dd0976518"/>
        <function-ref name="request" scoped="" ref="0x7f3dd09766a0"/>
        <function-ref name="granted" scoped="" ref="0x7f3dd0976828"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3dd09769b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7f3dd096b438" loc="40:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f3dd096b438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f3dd096b788"/>
        <function-ref name="getChannel" scoped="" ref="0x7f3dd096b910"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f3dd096ba98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f3dd05a9398" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="TestNetworkLplAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3dd05a9398"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd05a96e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd05a9870"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd05a99f8"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd05a9b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd05a9d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f3dd05a8020" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="TestNetworkLplAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3dd05a8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd05a8370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd05a84f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd05a8680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd05a8808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd05a8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f3dd05a8bd8" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="TestNetworkLplAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3dd05a8bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dd05a7020"/>
        <function-ref name="source" scoped="" ref="0x7f3dd05a71a8"/>
        <function-ref name="address" scoped="" ref="0x7f3dd05a7330"/>
        <function-ref name="destination" scoped="" ref="0x7f3dd05a74b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dd05a7640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dd05a77c8"/>
        <function-ref name="type" scoped="" ref="0x7f3dd05a7950"/>
        <function-ref name="setType" scoped="" ref="0x7f3dd05a7ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dd05a7c60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dd05a7de8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3dd05a6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f3dd05a62a8" loc="52:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="TestNetworkLplAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f3dd05a62a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f3dd05a65f8"/>
        <function-ref name="noAck" scoped="" ref="0x7f3dd05a6780"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f3dd05a6908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f3dcfa11790" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestNetworkLplAppC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3dcfa11790"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dcfa11ae0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dcfa11c68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfa11df0"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dcfa10020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dcfa101a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f3dcfa10450" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestNetworkLplAppC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3dcfa10450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dcfa107a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dcfa10928"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dcfa10ab0"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dcfa10c38"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dcfa10dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f3dcfa0f060" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestNetworkLplAppC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3dcfa0f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dcfa0f3b0"/>
        <function-ref name="source" scoped="" ref="0x7f3dcfa0f538"/>
        <function-ref name="address" scoped="" ref="0x7f3dcfa0f6c0"/>
        <function-ref name="destination" scoped="" ref="0x7f3dcfa0f848"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dcfa0f9d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dcfa0fb58"/>
        <function-ref name="type" scoped="" ref="0x7f3dcfa0fce0"/>
        <function-ref name="setType" scoped="" ref="0x7f3dcfa0fe68"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dcfa0e020"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dcfa0e1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3dcfa0e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f3dd09547f8" loc="44:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3dd09547f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd0954b48"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd0954cd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd0954e58"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd0953020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd09531a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f3dd094f020" loc="48:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3dd094f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd094f390"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd094f518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd094f6a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd094f828"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd094f9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f3dd09501e0" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3dd09501e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd0950550"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd09506d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd0950860"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd09509e8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd0950b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f3dd094d268" loc="50:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3dd094d268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd094d5b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd094d740"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd094d8c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd094da50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd094dbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f3dd094c020" loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x7f3dd094c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3dd094c370"/>
        <function-ref name="runTask" scoped="" ref="0x7f3dd094c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f3dd094c7c0" loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x7f3dd094c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3dd094cb10"/>
        <function-ref name="runTask" scoped="" ref="0x7f3dd094cc98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f3dd094fbf8" loc="49:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3dd094fbf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dd094e020"/>
        <function-ref name="source" scoped="" ref="0x7f3dd094e1a8"/>
        <function-ref name="address" scoped="" ref="0x7f3dd094e330"/>
        <function-ref name="destination" scoped="" ref="0x7f3dd094e4b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dd094e640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dd094e7c8"/>
        <function-ref name="type" scoped="" ref="0x7f3dd094e950"/>
        <function-ref name="setType" scoped="" ref="0x7f3dd094ead8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dd094ec60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dd094ede8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3dd094d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f3dd094aaa0" loc="46:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f3dd094aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f3dd094adf0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f3dd0947020"/>
        <function-ref name="start" scoped="" ref="0x7f3dd09471a8"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd0947330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f3dd0947aa8" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3dd0947aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd0947df8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd0946020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd09461a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd0946330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd09464b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f3dd09442a8" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3dd09442a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd09445f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd0944780"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd0944908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd0944a90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd0944c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f3dd0946c38" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f3dd0946c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd0944020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f3dd0941020" loc="53:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f3dd0941020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f3dd0941370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f3dd09414f8"/>
        <function-ref name="led1On" scoped="" ref="0x7f3dd0941680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f3dd0941808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f3dd0941990"/>
        <function-ref name="get" scoped="" ref="0x7f3dd0941b18"/>
        <function-ref name="led1Off" scoped="" ref="0x7f3dd0941ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f3dd0940330"/>
        <function-ref name="set" scoped="" ref="0x7f3dd0941e28"/>
        <function-ref name="led0On" scoped="" ref="0x7f3dd0940020"/>
        <function-ref name="led2On" scoped="" ref="0x7f3dd09401a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f3dd0942658" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3dd0942658"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f3dd09429a8"/>
        <function-ref name="noAck" scoped="" ref="0x7f3dd0942b30"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f3dd0942cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f3dd0943020" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3dd0943020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dd0943370"/>
        <function-ref name="source" scoped="" ref="0x7f3dd09434f8"/>
        <function-ref name="address" scoped="" ref="0x7f3dd0943680"/>
        <function-ref name="destination" scoped="" ref="0x7f3dd0943808"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dd0943990"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dd0943b18"/>
        <function-ref name="type" scoped="" ref="0x7f3dd0943ca0"/>
        <function-ref name="setType" scoped="" ref="0x7f3dd0943e28"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dd0942020"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dd09421a8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3dd0942330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f3dd08e9308" loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f3dd08e9308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd08e9658"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd08e97e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd08e9968"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd08e9af0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd08e9c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f3dd08e8020" loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f3dd08e8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd08e8370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f3dd093e460" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3dd093e460"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd093e7d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd093e958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd093eae0"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd093ec68"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd093edf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f3dd08ebd20" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3dd08ebd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3dd08ea0a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3dd08ea228"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd08ea3b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd08ea538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3dd08ea6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f3dd08ec180" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f3dd08ec180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd08ec4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f3dd08ea908" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3dd08ea908"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f3dd08eac58"/>
        <function-ref name="noAck" scoped="" ref="0x7f3dd08eade0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f3dd08e9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f3dd08ec738" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3dd08ec738"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3dd08eca88"/>
        <function-ref name="source" scoped="" ref="0x7f3dd08ecc10"/>
        <function-ref name="address" scoped="" ref="0x7f3dd08ecd98"/>
        <function-ref name="destination" scoped="" ref="0x7f3dd08eb020"/>
        <function-ref name="setSource" scoped="" ref="0x7f3dd08eb1a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3dd08eb330"/>
        <function-ref name="type" scoped="" ref="0x7f3dd08eb4b8"/>
        <function-ref name="setType" scoped="" ref="0x7f3dd08eb640"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3dd08eb7c8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3dd08eb950"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3dd08ebad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f3dd08e4728" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f3dd08e4728"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f3dd08e4a78"/>
        <function-ref name="stopDone" scoped="" ref="0x7f3dd08e4c00"/>
        <function-ref name="start" scoped="" ref="0x7f3dd08e4d88"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd08e3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f3dd08e1208" loc="52:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3dd08e1208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f3dd209c1a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd08e1558"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd08e16e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd08e1868"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd08e19f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd08e1b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3dd08e4110" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3dd08e4110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd08e4460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f3dd08e3760" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f3dd08e3760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f3dd209c1a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd08e3ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f3dd08df8f8" loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f3dd08df8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f3dd08dfc48"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f3dd08dfdd0"/>
        <function-ref name="led1On" scoped="" ref="0x7f3dd08de020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f3dd08de1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f3dd08de330"/>
        <function-ref name="get" scoped="" ref="0x7f3dd08de4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f3dd08de640"/>
        <function-ref name="led2Off" scoped="" ref="0x7f3dd08dec60"/>
        <function-ref name="set" scoped="" ref="0x7f3dd08de7c8"/>
        <function-ref name="led0On" scoped="" ref="0x7f3dd08de950"/>
        <function-ref name="led2On" scoped="" ref="0x7f3dd08dead8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7f3dd08df020" loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f3dd08df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f3dd209c1a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f3dd08df370"/>
        <function-ref name="offset" scoped="" ref="0x7f3dd08df4f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f3dd08df680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f3dd08bcda8" loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f3dd08bcda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f3dd08bb170"/>
        <function-ref name="stopDone" scoped="" ref="0x7f3dd08bb2f8"/>
        <function-ref name="start" scoped="" ref="0x7f3dd08bb480"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd08bb608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7f3dd0859830" loc="332:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x7f3dd0859830"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3dd0859b80"/>
        <function-ref name="runTask" scoped="" ref="0x7f3dd0859d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f3dd08ab398" loc="74:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x7f3dd08ab398"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3dd08ab6e8"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd08ab870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7f3dd0890d70" loc="191:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x7f3dd0890d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3dd088e0f0"/>
        <function-ref name="runTask" scoped="" ref="0x7f3dd088e278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3dd08bc790" loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3dd08bc790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd08bcae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7f3dd08a8e40" loc="75:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x7f3dd08a8e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7f3dd08aa1c0"/>
        <function-ref name="flush" scoped="" ref="0x7f3dd08aa348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7f3dd085c020" loc="322:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x7f3dd085c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3dd085c370"/>
        <function-ref name="runTask" scoped="" ref="0x7f3dd085c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7f3dd08acb38" loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f3dd08acb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f3dd08b5020"/>
        <function-ref name="resetSend" scoped="" ref="0x7f3dd08b51a8"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f3dd08b5330"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f3dd08b54b8"/>
        <function-ref name="putData" scoped="" ref="0x7f3dd08b5640"/>
        <function-ref name="putDone" scoped="" ref="0x7f3dd08b57c8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f3dd08b5950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f3dd08b5bc8" loc="73:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f3dd08b5bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f3dd08b1020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f3dd08b11a8"/>
        <function-ref name="led1On" scoped="" ref="0x7f3dd08b1330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f3dd08b14b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f3dd08b1640"/>
        <function-ref name="get" scoped="" ref="0x7f3dd08b17c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f3dd08b1950"/>
        <function-ref name="led2Off" scoped="" ref="0x7f3dd08ab020"/>
        <function-ref name="set" scoped="" ref="0x7f3dd08b1ad8"/>
        <function-ref name="led0On" scoped="" ref="0x7f3dd08b1c60"/>
        <function-ref name="led2On" scoped="" ref="0x7f3dd08b1de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7f3dd0856918" loc="341:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f3dd0856918"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3dd0856c68"/>
        <function-ref name="runTask" scoped="" ref="0x7f3dd0856df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7f3dd08b6950" loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x7f3dd08b6950"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f3dd08b6ca0"/>
        <function-ref name="nextByte" scoped="" ref="0x7f3dd08b6e28"/>
        <function-ref name="startSend" scoped="" ref="0x7f3dd08ba020"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f3dd08ba1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7f3dd08b2b48" loc="68:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f3dd08b2b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f3dd08b9020"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f3dd08b91a8"/>
        <function-ref name="endPacket" scoped="" ref="0x7f3dd08b9330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7f3dd0792100" loc="275:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x7f3dd0792100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3dd0792450"/>
        <function-ref name="runTask" scoped="" ref="0x7f3dd07925d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f3dd0796020" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3dd0796020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f3dd209c1a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd0796390"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3dd0796518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3dd07966a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f3dd0796828"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd07969b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7f3dd07928a0" loc="158:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x7f3dd07928a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3dd0792bf0"/>
        <function-ref name="runTask" scoped="" ref="0x7f3dd0792d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f3dd0797868" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f3dd0797868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f3dd209c1a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3dd0797bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7f3dd0796db8" loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x7f3dd0796db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f3dd209c1a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f3dd0795170"/>
        <function-ref name="offset" scoped="" ref="0x7f3dd07952f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f3dd0795480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f3dd0794a50" loc="57:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f3dd0794a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f3dd0794da0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f3dd0793020"/>
        <function-ref name="led1On" scoped="" ref="0x7f3dd07931a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f3dd0793330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f3dd07934b8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd0793640"/>
        <function-ref name="led1Off" scoped="" ref="0x7f3dd07937c8"/>
        <function-ref name="led2On" scoped="" ref="0x7f3dd0793de8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd0793ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f3dd0793950"/>
        <function-ref name="led0On" scoped="" ref="0x7f3dd0793c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7f3dd0794020" loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x7f3dd0794020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f3dd0794370"/>
        <function-ref name="nextByte" scoped="" ref="0x7f3dd07944f8"/>
        <function-ref name="startSend" scoped="" ref="0x7f3dd0794680"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f3dd0794808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7f3dd07956c8" loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f3dd07956c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f3dd0795a18"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f3dd0795ba0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f3dd0795d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f3dd077e448" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f3dd077e448"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd077e798"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f3dd077e920"/>
        <function-ref name="receive" scoped="" ref="0x7f3dd077eaa8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f3dd077ec30"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f3dd077edb8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f3dd078b020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd078b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7f3dd078fb30" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f3dd078fb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f3dd078fe80"/>
        <function-ref name="resetSend" scoped="" ref="0x7f3dd078c030"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f3dd078c1b8"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f3dd078c340"/>
        <function-ref name="putData" scoped="" ref="0x7f3dd078c4c8"/>
        <function-ref name="putDone" scoped="" ref="0x7f3dd078c650"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f3dd078c7d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f3dd078b420" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f3dd078b420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f3dd078b770"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f3dd078b8f8"/>
        <function-ref name="led1On" scoped="" ref="0x7f3dd078ba80"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f3dd078bc08"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f3dd078bd90"/>
        <function-ref name="get" scoped="" ref="0x7f3dd0789020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f3dd07891a8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f3dd07897c8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd0789330"/>
        <function-ref name="led0On" scoped="" ref="0x7f3dd07894b8"/>
        <function-ref name="led2On" scoped="" ref="0x7f3dd0789640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f3dd075f290" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f3dd075f290"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd075f5e0"/>
        <function-ref name="receive" scoped="" ref="0x7f3dd075f768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f3dd07650c0" loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f3dd07650c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd0765410"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f3dd0765598"/>
        <function-ref name="receive" scoped="" ref="0x7f3dd0765720"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f3dd07658a8"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f3dd0765a30"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f3dd0765bb8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd0765d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f3dd078e8b0" loc="40:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f3dd078e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3dd078ec00"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd078ed88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f3dd0763af0" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f3dd0763af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd0763e40"/>
        <function-ref name="receive" scoped="" ref="0x7f3dd075d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f3dd075d310" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f3dd075d310"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd075d660"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f3dd075d7e8"/>
        <function-ref name="receive" scoped="" ref="0x7f3dd075d970"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f3dd075daf8"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f3dd075dc80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f3dd075de08"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd075c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f3dd075c598" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f3dd075c598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f3dd21a9788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dd075b3a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3dd075bcb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3dd075b830"/>
        <function-ref name="overflow" scoped="" ref="0x7f3dd075a190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f3dd0763338" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f3dd0763338"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3dd0763688"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd0763810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f3dd0758e58" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f3dd0758e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd07161e8"/>
        <function-ref name="receive" scoped="" ref="0x7f3dd0716370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x7f3dd07155f8" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x7f3dd07155f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3dd0715948"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd0715ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3dd0758120" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3dd0758120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd0758470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f3dd07165f8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f3dd07165f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3dd0716948"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f3dd0716ad0"/>
        <function-ref name="receive" scoped="" ref="0x7f3dd0716c58"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f3dd0716de0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f3dd0715020"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f3dd07151a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3dd0715330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f3dd0713c60" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f3dd0713c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f3dd21a9788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dd07129f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3dd0711330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3dd0712e78"/>
        <function-ref name="overflow" scoped="" ref="0x7f3dd07117b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x7f3dd07145c0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x7f3dd07145c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f3dd0714910"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f3dd0714a98"/>
        <function-ref name="rxDone" scoped="" ref="0x7f3dd0714c20"/>
        <function-ref name="txDone" scoped="" ref="0x7f3dd0714da8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f3dd0713020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f3dd07131a8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f3dd0713330"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f3dd07134b8"/>
        <function-ref name="tx" scoped="" ref="0x7f3dd0713640"/>
        <function-ref name="rx" scoped="" ref="0x7f3dd07137c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f3dd07586f8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f3dd07586f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3dd0758a48"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd0758bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x7f3dd0715d98" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x7f3dd0715d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3dd0714170"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd07142f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7f3dd06f4860" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7f3dd06f4860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f3dd06f4bb0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f3dd06f4d38"/>
        <function-ref name="rxDone" scoped="" ref="0x7f3dd06f3020"/>
        <function-ref name="txDone" scoped="" ref="0x7f3dd06f31a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f3dd06f3330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f3dd06f34b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f3dd06f3640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f3dd06f37c8"/>
        <function-ref name="tx" scoped="" ref="0x7f3dd06f3950"/>
        <function-ref name="rx" scoped="" ref="0x7f3dd06f3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7f3dd06f1020" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7f3dd06f1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f3dd06f1370"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f3dd06f14f8"/>
        <function-ref name="rxDone" scoped="" ref="0x7f3dd06f1680"/>
        <function-ref name="txDone" scoped="" ref="0x7f3dd06f1808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f3dd06f1990"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f3dd06f1b18"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f3dd06f1ca0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f3dd06f1e28"/>
        <function-ref name="tx" scoped="" ref="0x7f3dd06f0020"/>
        <function-ref name="rx" scoped="" ref="0x7f3dd06f01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7f3dd06f4020" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7f3dd06f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3dd06f4370"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd06f44f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7f3dd06f3e58" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7f3dd06f3e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3dd06f21e8"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd06f2370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7f3dd06f26f0" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7f3dd06f26f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3dd06f2a40"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd06f2bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7f3dd06f5700" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7f3dd06f5700"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3dd06f5a50"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd06f5bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x7f3dd06ed020" loc="114:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x7f3dd06ed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd06ed370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7f3dd06ec8a0" loc="117:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7f3dd06ec8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f3dd06ecbf0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f3dd06ecd78"/>
        <function-ref name="rxDone" scoped="" ref="0x7f3dd06eb020"/>
        <function-ref name="txDone" scoped="" ref="0x7f3dd06eb1a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f3dd06eb330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f3dd06eb4b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f3dd06eb640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f3dd06eb7c8"/>
        <function-ref name="tx" scoped="" ref="0x7f3dd06eb950"/>
        <function-ref name="rx" scoped="" ref="0x7f3dd06ebad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x7f3dd06ebe30" loc="119:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x7f3dd06ebe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd06ea1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7f3dd06e96d8" loc="122:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7f3dd06e96d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f3dd06e9a28"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f3dd06e9bb0"/>
        <function-ref name="rxDone" scoped="" ref="0x7f3dd06e9d38"/>
        <function-ref name="txDone" scoped="" ref="0x7f3dd06e8020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f3dd06e81a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f3dd06e8330"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f3dd06e84b8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f3dd06e8640"/>
        <function-ref name="tx" scoped="" ref="0x7f3dd06e87c8"/>
        <function-ref name="rx" scoped="" ref="0x7f3dd06e8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7f3dd06ec020" loc="116:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7f3dd06ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3dd06ec370"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd06ec4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7f3dd06ea568" loc="120:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7f3dd06ea568"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3dd06ea8b8"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd06eaa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7f3dd06eae00" loc="121:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7f3dd06eae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3dd06e91a8"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd06e9330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7f3dd06e8c70" loc="124:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f3dd06e8c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f3dd06e7020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f3dd06e71a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f3dd06e7330"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f3dd06e74b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f3dd06e7640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f3dd06e7950" loc="125:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f3dd06e7950"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f3dd06e7ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7f3dd06ed730" loc="115:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7f3dd06ed730"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3dd06eda80"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd06edc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f3dd0689188" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f3dd0689188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f3dd21a9788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dd0688020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3dd0688930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3dd06884a8"/>
        <function-ref name="overflow" scoped="" ref="0x7f3dd0688db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f3dd0683020" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f3dd0683020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TThree" ref="0x7f3dd2169d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dd0683d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3dd06826b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3dd0682230"/>
        <function-ref name="overflow" scoped="" ref="0x7f3dd0682b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f3dd067ac90" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f3dd067ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f3dd0678020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f3dd06781a8"/>
        <function-ref name="getControlA" scoped="" ref="0x7f3dd0678330"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f3dd06784b8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f3dd0678640"/>
        <function-ref name="setControlB" scoped="" ref="0x7f3dd06787c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f3dd0678950"/>
        <function-ref name="getControlB" scoped="" ref="0x7f3dd0678ad8"/>
        <function-ref name="setControlC" scoped="" ref="0x7f3dd0678c60"/>
        <function-ref name="setControlA" scoped="" ref="0x7f3dd0678de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f3dd0677350" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f3dd0677350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f3dd0673580"/>
        <function-ref name="test" scoped="" ref="0x7f3dd0675c20"/>
        <function-ref name="get" scoped="" ref="0x7f3dd0676020"/>
        <function-ref name="captured" scoped="" ref="0x7f3dd0676980"/>
        <function-ref name="reset" scoped="" ref="0x7f3dd0676e58"/>
        <function-ref name="isOn" scoped="" ref="0x7f3dd06730f8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd06764a8"/>
        <function-ref name="start" scoped="" ref="0x7f3dd0675310"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd0675798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f3dd06721c8" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f3dd06721c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f3dd0670930"/>
        <function-ref name="fired" scoped="" ref="0x7f3dd06716d0"/>
        <function-ref name="get" scoped="" ref="0x7f3dd0672d48"/>
        <function-ref name="reset" scoped="" ref="0x7f3dd0671b58"/>
        <function-ref name="isOn" scoped="" ref="0x7f3dd0670db8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd06711f8"/>
        <function-ref name="start" scoped="" ref="0x7f3dd0670020"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd06704a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f3dd0680c30" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f3dd0680c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f3dd067bdb8"/>
        <function-ref name="test" scoped="" ref="0x7f3dd067b4a8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd067d820"/>
        <function-ref name="setScale" scoped="" ref="0x7f3dd067a270"/>
        <function-ref name="getScale" scoped="" ref="0x7f3dd067a748"/>
        <function-ref name="reset" scoped="" ref="0x7f3dd067c658"/>
        <function-ref name="overflow" scoped="" ref="0x7f3dd067c1d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f3dd067b930"/>
        <function-ref name="set" scoped="" ref="0x7f3dd067dca8"/>
        <function-ref name="start" scoped="" ref="0x7f3dd067cae0"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd067b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f3dd06663d0" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f3dd06663d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f3dd0666720"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f3dd06668a8"/>
        <function-ref name="getControlA" scoped="" ref="0x7f3dd0666a30"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f3dd0666bb8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f3dd0666d40"/>
        <function-ref name="setControlB" scoped="" ref="0x7f3dd0665020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f3dd06651a8"/>
        <function-ref name="getControlB" scoped="" ref="0x7f3dd0665330"/>
        <function-ref name="setControlC" scoped="" ref="0x7f3dd06654b8"/>
        <function-ref name="setControlA" scoped="" ref="0x7f3dd0665640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7f3dd06604e0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7f3dd06604e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f3dd065dc30"/>
        <function-ref name="fired" scoped="" ref="0x7f3dd065f9e8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd065f088"/>
        <function-ref name="reset" scoped="" ref="0x7f3dd065fe70"/>
        <function-ref name="isOn" scoped="" ref="0x7f3dd065c0f8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd065f510"/>
        <function-ref name="start" scoped="" ref="0x7f3dd065d320"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd065d7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f3dd0665b18" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f3dd0665b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f3dd0661db8"/>
        <function-ref name="test" scoped="" ref="0x7f3dd06614a8"/>
        <function-ref name="get" scoped="" ref="0x7f3dd0664728"/>
        <function-ref name="captured" scoped="" ref="0x7f3dd06620c0"/>
        <function-ref name="reset" scoped="" ref="0x7f3dd0662598"/>
        <function-ref name="isOn" scoped="" ref="0x7f3dd0661930"/>
        <function-ref name="set" scoped="" ref="0x7f3dd0664bb0"/>
        <function-ref name="start" scoped="" ref="0x7f3dd0662a20"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd0661020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7f3dd065c770" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7f3dd065c770"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f3dd0658020"/>
        <function-ref name="fired" scoped="" ref="0x7f3dd065bd08"/>
        <function-ref name="get" scoped="" ref="0x7f3dd065b3a8"/>
        <function-ref name="reset" scoped="" ref="0x7f3dd06591f8"/>
        <function-ref name="isOn" scoped="" ref="0x7f3dd06584a8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd065b830"/>
        <function-ref name="start" scoped="" ref="0x7f3dd0659680"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd0659b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7f3dd0658b20" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7f3dd0658b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f3dd0654310"/>
        <function-ref name="fired" scoped="" ref="0x7f3dd06550c0"/>
        <function-ref name="get" scoped="" ref="0x7f3dd0657728"/>
        <function-ref name="reset" scoped="" ref="0x7f3dd0655548"/>
        <function-ref name="isOn" scoped="" ref="0x7f3dd0654798"/>
        <function-ref name="set" scoped="" ref="0x7f3dd0657bb0"/>
        <function-ref name="start" scoped="" ref="0x7f3dd06559d0"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd0655e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f3dd066b298" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f3dd066b298"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f3dd06674a8"/>
        <function-ref name="test" scoped="" ref="0x7f3dd0668a40"/>
        <function-ref name="get" scoped="" ref="0x7f3dd066be18"/>
        <function-ref name="setScale" scoped="" ref="0x7f3dd0667930"/>
        <function-ref name="getScale" scoped="" ref="0x7f3dd0667e08"/>
        <function-ref name="reset" scoped="" ref="0x7f3dd066ac70"/>
        <function-ref name="overflow" scoped="" ref="0x7f3dd066a7e8"/>
        <function-ref name="isOn" scoped="" ref="0x7f3dd0667020"/>
        <function-ref name="set" scoped="" ref="0x7f3dd066a310"/>
        <function-ref name="start" scoped="" ref="0x7f3dd0668130"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd06685b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3dd05de020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3dd05de020"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f3dd2235388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f3dd2235388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dd05de370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f3dd05de740" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f3dd05de740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f3dd05da930"/>
        <function-ref name="test" scoped="" ref="0x7f3dd05da020"/>
        <function-ref name="get" scoped="" ref="0x7f3dd05dd3a8"/>
        <function-ref name="setScale" scoped="" ref="0x7f3dd05dadb8"/>
        <function-ref name="getScale" scoped="" ref="0x7f3dd05d92f0"/>
        <function-ref name="reset" scoped="" ref="0x7f3dd05db1f8"/>
        <function-ref name="overflow" scoped="" ref="0x7f3dd05ddd08"/>
        <function-ref name="isOn" scoped="" ref="0x7f3dd05da4a8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd05dd830"/>
        <function-ref name="start" scoped="" ref="0x7f3dd05db680"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd05dbb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f3dd05d6020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f3dd05d6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TThree" ref="0x7f3dd2169d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dd05d6d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3dd05d56b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3dd05d5230"/>
        <function-ref name="overflow" scoped="" ref="0x7f3dd05d5b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f3dd05d40e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f3dd05d40e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f3dd05d0270"/>
        <function-ref name="test" scoped="" ref="0x7f3dd05d1930"/>
        <function-ref name="get" scoped="" ref="0x7f3dd05d4c60"/>
        <function-ref name="setScale" scoped="" ref="0x7f3dd05d06f8"/>
        <function-ref name="getScale" scoped="" ref="0x7f3dd05d0bd0"/>
        <function-ref name="reset" scoped="" ref="0x7f3dd05d2a90"/>
        <function-ref name="overflow" scoped="" ref="0x7f3dd05d2608"/>
        <function-ref name="isOn" scoped="" ref="0x7f3dd05d1db8"/>
        <function-ref name="set" scoped="" ref="0x7f3dd05d2130"/>
        <function-ref name="start" scoped="" ref="0x7f3dd05d1020"/>
        <function-ref name="stop" scoped="" ref="0x7f3dd05d14a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f3dd05c9e20" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7f3dd05c9e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TThree" ref="0x7f3dd2169d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dd05c8be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3dd05c7548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3dd05c70c0"/>
        <function-ref name="overflow" scoped="" ref="0x7f3dd05c79d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f3dd05ccc50" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f3dd05ccc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3dd21a9430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f3dd21a9788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dd05cb9f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3dd05c9330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3dd05cbe78"/>
        <function-ref name="overflow" scoped="" ref="0x7f3dd05c97b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7f3dd05bf6e0" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x7f3dd05bf6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f3dd05bfa30"/>
        <function-ref name="offset" scoped="" ref="0x7f3dd05bfbb8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f3dd05bfd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f3dd05a3478" loc="43:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
      <component-ref qname="TestNetworkLplAppC.QueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f3dd05a3478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
              <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f3dd05a1d10"/>
        <function-ref name="enqueue" scoped="" ref="0x7f3dd05a0a30"/>
        <function-ref name="element" scoped="" ref="0x7f3dd059f088"/>
        <function-ref name="maxSize" scoped="" ref="0x7f3dd05a18c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f3dd05a03d0"/>
        <function-ref name="empty" scoped="" ref="0x7f3dd05a1020"/>
        <function-ref name="size" scoped="" ref="0x7f3dd05a1470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f3dd059c058" loc="42:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <component-ref qname="TestNetworkLplAppC.PoolC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7f3dd059c058"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
            <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dd059a020"/>
        <function-ref name="maxSize" scoped="" ref="0x7f3dd059b470"/>
        <function-ref name="empty" scoped="" ref="0x7f3dd059cba0"/>
        <function-ref name="put" scoped="" ref="0x7f3dd059b8c0"/>
        <function-ref name="size" scoped="" ref="0x7f3dd059b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f3dcf91b168" loc="56:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="TestNetworkLplAppC.PoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7f3dcf91b168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
            <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3dcf9180f8"/>
        <function-ref name="maxSize" scoped="" ref="0x7f3dcf91a5a8"/>
        <function-ref name="empty" scoped="" ref="0x7f3dcf91bcb0"/>
        <function-ref name="put" scoped="" ref="0x7f3dcf91a9f8"/>
        <function-ref name="size" scoped="" ref="0x7f3dcf91a158"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3dcf91ca70" loc="55:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="TestNetworkLplAppC.PoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3dcf91ca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3dcf91cdc0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="RootControl" loc="40:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x7f3dd2061be0" loc="43:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x7f3dd2064e38" loc="41:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x7f3dd2061558" loc="42:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionPacket" loc="42:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x7f3dd204c6a8" loc="50:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd204c100" loc="50:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x7f3dd204c428" loc="50:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x7f3dd2050900" loc="44:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd2050348" loc="44:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f3dd2050680" loc="44:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f3dd204d020" loc="47:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x7f3dd2118278"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd204f950" loc="47:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x7f3dd204fca8" loc="47:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x7f3dd2118278"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x7f3dd205fc48" loc="43:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd205f9d8" loc="43:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x7f3dd204d9c0" loc="49:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd204d750" loc="49:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x7f3dd204f2d0" loc="46:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x7f3dd2118278"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd204f060" loc="46:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionDebug" loc="59:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
        <short> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure.</short>
        <long> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure. An implementer can choose to send the event&#10;  information to different destinations. Primary examples can include:&#10;  &#60;ul>&#10;    &#60;li> logging to the UART, in case of a testbed of network-connected&#10;         nodes;&#10;    &#60;li> logging to flash, if the logs are to be retrieved later&#10;    &#60;li> logging to the standard output, in the case of TOSSIM.&#10;  &#60;/ul>&#10;  &#10;  The interface does not specify in what format the log is to be produced,&#10;  or if other information, like timestamps, should be added, and this is&#10;  up to the implementer.&#10; &#10;  Some commands are generic, like Event, EventSimple, and EventDbg, while others&#10;  are for more specific events related to collection, like EventRoute and EventMsg.&#10;&#10; @author Rodrigo Fonseca&#10; @author Kyle Jamieson&#10; @date   $Date: 2010-06-29 22:07:47 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="logEvent" ref="0x7f3dd20286c0" loc="61:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f3dd2028450" loc="61:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventMsg" ref="0x7f3dd2024a28" loc="73:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f3dd2025da8" loc="73:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f3dd2024108" loc="73:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </variable>
          <variable name="origin" ref="0x7f3dd2024450" loc="73:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </variable>
          <variable name="node" ref="0x7f3dd2024788" loc="73:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventSimple" ref="0x7f3dd2026388" loc="64:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f3dd2028db0" loc="64:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
          <variable name="arg" ref="0x7f3dd2026108" loc="64:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventRoute" ref="0x7f3dd2023da8" loc="79:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f3dd2023138" loc="79:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
          <variable name="parent" ref="0x7f3dd2023480" loc="79:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </variable>
          <variable name="hopcount" ref="0x7f3dd20237c8" loc="79:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
          <variable name="metric" ref="0x7f3dd2023b08" loc="79:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventDbg" ref="0x7f3dd20256d8" loc="67:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f3dd2026a58" loc="67:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
          <variable name="arg1" ref="0x7f3dd2026d88" loc="67:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </variable>
          <variable name="arg2" ref="0x7f3dd2025108" loc="67:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </variable>
          <variable name="arg3" ref="0x7f3dd2025438" loc="67:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f3dd20fc490" loc="60:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f3dd20fa698" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f3dd20fa428" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f3dd20f8a88" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f3dd20f8818" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f3dd20fea68" loc="104:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f3dd20fae80" loc="130:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f3dd205ad40" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f3dd205a440" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f3dd205a7a0" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f3dd205aab0" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f3dd20542d8" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd2055be8" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f3dd2054020" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f3dd20553e0" loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f3dd2058108" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd2059e50" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f3dd20575c8" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd2057020" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f3dd2057348" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f3dd203cdf0" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f3dd203cdf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7f3dd203ac28" loc="73:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f3dd203cdf0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7f3dd2039550" loc="90:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f3dd203cdf0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f3dd20392e0" loc="90:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f3dd203cdf0"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7f3dd2b1b488"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0x7f3dd2b1b488"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7f3dd2036418" loc="101:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f3dd203cdf0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f3dd20361a8" loc="101:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f3dd203a520" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f3dd2038780" loc="81:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f3dd203cdf0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f3dd203b648" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f3dd203bd68" loc="58:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f3dd2033768" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f3dd2033768"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f3dd202c6d8" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f3dd2033768"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f3dd202e070" loc="80:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f3dd2030020" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x7f3dd202ea38" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f3dd2033768"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f3dd202e7c8" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f3dd2033768"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f3dd2030808" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f3dd20f5450" loc="95:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f3dd20f5bf0" loc="105:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
      <function command="" provided="0" name="send" ref="0x7f3dd2088658" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd20880c8" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f3dd20883d8" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f3dd2083a68" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd20834a0" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f3dd20837b0" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f3dd2085c70" loc="112:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f3dd20868c8" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd2086658" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f3dd2084cf8" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd2084750" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f3dd2084a78" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpInfo" loc="44:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
      <function command="" provided="0" name="getNeighborLinkQuality" ref="0x7f3dd2043108" loc="96:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f3dd2045e60" loc="96:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="recomputeRoutes" ref="0x7f3dd2047810" loc="83:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
          <short> &#10; Tell the routing engine it might want to recompute its routes.</short>
          <long> &#10; Tell the routing engine it might want to recompute its routes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="numNeighbors" ref="0x7f3dd2045750" loc="95:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerRouteUpdate" ref="0x7f3dd20486d8" loc="71:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.</short>
          <long>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x7f3dd204ad80" loc="64:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the ETX for the current path to the root through the current&#10; parent.</short>
          <long>&#10; Get the ETX for the current path to the root through the current&#10; parent. Sets etx argument to ETX*10.  The pointer is allocated by&#10; the caller.  If the parent is invalid, return FAIL (no info).&#10; The caller MUST NOT use the value in parent if the return is not&#10; SUCCESS. Calling getEtx at the root will set the etx argument to&#10; 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="etx" ref="0x7f3dd204ab10" loc="64:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerImmediateRouteUpdate" ref="0x7f3dd2047020" loc="78:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.</short>
          <long>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setNeighborCongested" ref="0x7f3dd20465d8" loc="88:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Informs the routing engine that a neighbor is congested&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f3dd2046020" loc="88:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </variable>
          <variable name="congested" ref="0x7f3dd2046358" loc="88:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborAddr" ref="0x7f3dd2042408" loc="98:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f3dd2042198" loc="98:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x7f3dd204a338" loc="53:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the parent of the node in the tree.</short>
          <long>&#10; Get the parent of the node in the tree.  The pointer is allocated&#10; by the caller.  If the parent is invalid, return FAIL.  The&#10; caller MUST NOT use the value in parent if the return is not&#10; SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="parent" ref="0x7f3dd204a0c8" loc="53:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborRouteQuality" ref="0x7f3dd2043a90" loc="97:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f3dd2043820" loc="97:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isNeighborCongested" ref="0x7f3dd2045020" loc="93:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10;  Returns the currently known state about a neighbor's congestion state&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f3dd2046d18" loc="93:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationValue" loc="44:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <short>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.</short>
        <long>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10;&#10; @date   Jan 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f3dd20f6870" loc="44:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <interfacedef-ref qname="DisseminationValue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f3dd20f6870"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="changed" ref="0x7f3dd20f0328" loc="69:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Signalled whenever variable may have changed.</short>
          <long>&#10; Signalled whenever variable may have changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f3dd20f2110" loc="55:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Obtain a pointer to the variable.</short>
          <long>&#10; Obtain a pointer to the variable. The provider of this&#10; interface only will change the memory the pointer references&#10; in tasks. Therefore the memory region does not change during&#10; the execution of any other task. A user of this interface&#10; must not in any circumstance write to this memory location.&#10;&#10; @return A const pointer to the variable.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f3dd20f6870"/></type-var>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f3dd20f2b08" loc="64:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Set the variable to a new value.</short>
          <long>&#10; Set the variable to a new value. The provider of this interface&#10; will copy the value from the pointer. NOTE: This command does&#10; not cause the new value to begin disseminating. It is intended to&#10; be used for setting default values.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f3dd20f6870"/></type-var>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x7f3dd20f2898" loc="64:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f3dd20f6870"/></type-var>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f3dd2081bf8" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f3dd2081bf8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f3dd2073490" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f3dd20722a0" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f3dd2081bf8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f3dd2073ba0" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f3dd2072020" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f3dd2081bf8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f3dd203ee08" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f3dd203e670" loc="46:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f3dd205ea98" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
              <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd205e198" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f3dd205e4c0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f3dd205e7d0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpCongestion" loc="1:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpCongestion.nc">
      <function command="" provided="0" name="isCongested" ref="0x7f3dd204b6e0" loc="7:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClientCongested" ref="0x7f3dd203f0a8" loc="14:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="congested" ref="0x7f3dd204bdc8" loc="14:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpCongestion.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f3dd2021af8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd2021888" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f3dd200cb18" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd200c8a8" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f3dd2009e78" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd20098b0" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f3dd2009bc0" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f3dd2009020" loc="106:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f3dd200a020" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd200b950" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f3dd200bc60" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f3dd20030b8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd2004aa8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f3dd2004e10" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f3dd2001290" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd2001020" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f3dd2004328" loc="57:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f3dd2005970" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f3dd2005700" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f3dd207c428" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f3dd207cb60" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f3dd207b328" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f3dd20791d8" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f3dd2078810" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f3dd2077020" loc="117:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f3dd207ba40" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f3dd2077b20" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f3dd20778b0" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f3dd207dcd8" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f3dd2079948" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f3dd20780d8" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f3dd20143b0" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f3dd21283d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f3dd2014140" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f3dd201d290" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f3dd201d020" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f3dd201f7e8" loc="68:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f3dd201e290" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f3dd201e020" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f3dd201aa28" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f3dd201a470" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f3dd201a7a8" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f3dd201c5d8" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f3dd201c020" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f3dd201c358" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f3dd2016020" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f3dd2017cf8" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f3dd20152a0" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f3dd2016ce8" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f3dd2015020" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f3dd2128020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f3dd2018bf8" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f3dd2018988" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f3dd20127b8" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f3dd21283d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f3dd2012208" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f3dd2012538" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f3dd21283d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f3dd2011560" loc="195:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f3dd21283d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f3dd2074518" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f3dd2074518"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f3dd2068020" loc="136:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f3dd206d8f8" loc="83:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f3dd206b5b8" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f3dd206b020" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f3dd206b338" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f3dd206c870" loc="98:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f3dd2067020" loc="151:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f3dd2068740" loc="144:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f3dd206c0d8" loc="92:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f3dd206e020" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f3dd2074d78" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f3dd206a5b8" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f3dd206a020" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f3dd206a338" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f3dd206ea60" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f3dd206e7f0" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f3dd206d258" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f3dd220f070" loc="67:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f3dd220f860" loc="75:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f3dd1fbf8c0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7f3dd1fb3810" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7f3dd1fb35a0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7f3dd1fb6020" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7f3dd1fb6a18" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f3dd1fb67a8" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7f3dd1fb54d0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f3dd1fb5260" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7f3dd1fb5d18" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f3dd1fa3dc0" loc="44:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f3dd1fa24c8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f3dd1fa3070" loc="42:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f3dd1fa0290" loc="47:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f3dd1fa3710" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f3dd1fa2b80" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f3dd1fa4328" loc="40:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f3dd1fa4998" loc="41:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f3dd221a378" loc="57:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f3dd2217258" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f3dd221aa90" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f3dd2162e28" loc="76:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f3dd21424f8" loc="62:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f3dd21d4940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f3dd2143020" loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f3dd1dc7cc0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f3dd1dc76e0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f3dd1dc7a40" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f3dd1dc20a8" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1dc6dd0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f3dd1dc1290" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1dc1020" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f3dd1dbf338" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1dbf0c8" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f3dd1db8020" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1db9d60" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f3dd1dbb2a0" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1dc3b60" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f3dd1dbb020" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f3dd1db90a8" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1dbadd0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f3dd1dba608" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1dba020" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f3dd1dba388" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f3dd1db6020" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1db8ca8" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x7f3dd1db4a48" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f3dd1db4290" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f3dd1db4020" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f3dd1db2258" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f3dd1dbc308" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f3dd1dbc308"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f3dd1dbc538" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f3dd1dbc538"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f3dd1daf290" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f3dd1dbc538"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1daf020" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f3dd1dad370" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1dad100" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f3dd1db00a8" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1dbcde8" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f3dd1dac5e0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f3dd1dbc538"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1dac020" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f3dd1dac360" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f3dd1dbc538"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x7f3dd1d94180" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f3dd1d94180"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x7f3dd1d92108" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d93e50" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f3dd1d936c8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f3dd1d94180"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d93458" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f3dd1d94c90" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d94a20" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f3dd1d92dc0" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f3dd1d94180"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d927f8" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f3dd1d92b40" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f3dd1d94180"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f3dd1d85340" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f3dd1d85340"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f3dd1d85bd0" loc="61:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f3dd1d88bd8" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d88968" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f3dd1d65b88" loc="120:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f3dd1d66c50" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f3dd1d66360" loc="88:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f3dd1d65428" loc="102:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f3dd1d64848" loc="128:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x7f3dd1d60c10" loc="41:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f3dd20b08b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d609a0" loc="41:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f3dd1d63868" loc="37:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f3dd20b08b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f3dd1d60290" loc="39:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f3dd20b08b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d60020" loc="39:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f3dd1d5d610" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f3dd20b08b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d5d020" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f3dd1d5d390" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f3dd20b08b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f3dd1d5f938" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f3dd20b08b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d5f348" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f3dd1d5f6b8" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f3dd20b08b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x7f3dd1d5c980" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f3dd20b04c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d5c710" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x7f3dd1d5b600" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7f3dd20b04c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d5b020" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f3dd1d5b380" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7f3dd20b04c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f3dd1d5c020" loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d5dcc0" loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7f3dd1d5bd08" loc="53:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f3dd20b04c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f3dd1d6d5c0" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f3dd20b08b8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f3dd1d71c80" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f3dd20b08b8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f3dd1d6d020" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f3dd1d6d330" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f3dd1d6a988" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d6a3c0" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f3dd1d6a6d0" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f3dd1d6bb70" loc="110:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f3dd1d6c338" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d6c0c8" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f3dd1d6b2a0" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d6cc68" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f3dd1d6b020" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x7f3dd1d15020" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x7f3dd1d29938" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d296c8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x7f3dd1d1ad10" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f3dd21283d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d1aaa0" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x7f3dd1d18370" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d18100" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f3dd1d1c6b0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d1c440" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f3dd1d1d020" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d2bc70" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f3dd1d1a388" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d1cd88" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f3dd1d1a108" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f3dd1d1dce0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d1d728" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f3dd1d1da60" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f3dd1d199b0" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f3dd21283d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d19400" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f3dd1d19730" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f3dd21283d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x7f3dd1d23598" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x7f3dd1d22020" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x7f3dd1d1f290" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d1f020" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x7f3dd1d22aa8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d22838" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x7f3dd1d215b8" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d21348" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x7f3dd1cf3110" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x7f3dd1cf5290" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7f3dd20b2540"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x7f3dd1cf5020" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7f3dd20b2540"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f3dd1cf59c8" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x7f3dd1cf8748" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x7f3dd1cf38c0" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f3dd20b2540"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x7f3dd1ceda10" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1ced7a0" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f3dd1cf0020" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1cf1d48" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f3dd1cee578" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f3dd1cf0d88" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1cf07d8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f3dd1cf0b08" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7f3dd1cf14e8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1cf1278" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7f3dd1ced020" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1ceed20" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f3dd1d3ec90" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7f3dd1d3e4e8" loc="40:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d3e278" loc="40:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7f3dd1d3d780" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d3d510" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x7f3dd1d3b020" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x7f3dd1d3bb28" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d3b8b8" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x7f3dd1d2a338" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d2a0c8" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x7f3dd1d337a8" loc="86:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x7f3dd1d33040" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f3dd1d34a30" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f3dd1d34d90" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7f3dd1d38cd0" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d38a60" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x7f3dd1d367b8" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d36548" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x7f3dd1d35640" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f3dd1d35060" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f3dd1d353c0" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x7f3dd1d39468" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7f3dd1d382a0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d39c70" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f3dd1d38020" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7f3dd1d34290" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d34020" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x7f3dd1d03c88" loc="131:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d03a18" loc="131:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x7f3dd1d054e8" loc="120:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d05278" loc="120:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x7f3dd1d0f348" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d11d30" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x7f3dd1d0f0c8" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x7f3dd1d0d2d0" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d0d060" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x7f3dd1cfe828" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1cfe278" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f3dd1cfe5a8" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x7f3dd1d0e830" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d0e5c0" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x7f3dd1d032a0" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d05ce0" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x7f3dd1d03020" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x7f3dd1d0bb68" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f3dd1d0b588" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f3dd1d0b8e8" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x7f3dd1cffb18" loc="151:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1cff8a8" loc="151:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x7f3dd1d0fd88" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d0fb18" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x7f3dd1d094e8" loc="99:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d09278" loc="99:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x7f3dd1d0a9f0" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f3dd1d0a410" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f3dd1d0a770" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x7f3dd1cfbd88" loc="178:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f3dd20b08b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7f3dd1cfd290" loc="162:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1cfd020" loc="162:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7f3dd1cfb5f8" loc="173:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f3dd20b04c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x7f3dd1cff118" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d01b10" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f3dd1d01e40" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x7f3dd1d0dd58" loc="81:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d0dae8" loc="81:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x7f3dd1d06aa8" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d06508" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x7f3dd1d06828" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x7f3dd1d029a0" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d02400" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x7f3dd1d02720" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f3dd1cfa790" loc="185:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1cfa520" loc="185:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7f3dd1d072a0" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d09c88" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f3dd1d07020" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x7f3dd1d115b8" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d11348" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7f3dd1cfdd78" loc="168:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1cfdb08" loc="168:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x7f3dd1d013d0" loc="141:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d01160" loc="141:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x7f3dd1d07d28" loc="110:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d07ab8" loc="110:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x7f3dd1d2d020" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d2ea20" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x7f3dd1d2ed50" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x7f3dd1d2d7a8" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x7f3dd1d2f830" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d2f5c0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x7f3dd1d2e290" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d2e020" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListeningConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningConfig.nc">
      <function command="" provided="0" name="getListenLength" ref="0x7f3dd1d13920" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningConfig.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningConfig.nc">
          <short>&#10; Returns the number of milliseconds the mote should turn on&#10; its radio to check for incoming messages.</short>
          <long>&#10; Returns the number of milliseconds the mote should turn on&#10; its radio to check for incoming messages. This check is &#10; performed at every localWakeInterval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListeningConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="ackRequested" ref="0x7f3dd1d13108" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningConfig.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningConfig.nc">
          <short>&#10; Returns TRUE if an acknowledgement has been requested for &#10; this message via the PacketAcknowledgements interface.</short>
          <long>&#10; Returns TRUE if an acknowledgement has been requested for &#10; this message via the PacketAcknowledgements interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListeningConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d14e18" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="needsAutoAckRequest" ref="0x7f3dd1d145b8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningConfig.nc">
          <short>&#10; Returns TRUE if an acknowledgement should be requested&#10; for the message automatically by the LPL code (this should &#10; normally happen for all non-broadcast messages).</short>
          <long>&#10; Returns TRUE if an acknowledgement should be requested&#10; for the message automatically by the LPL code (this should &#10; normally happen for all non-broadcast messages).&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListeningConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d14348" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x7f3dd1d27ad8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d27868" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x7f3dd1d27020" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d31cf8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x7f3dd1d25328" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x7f3dd1d25d78" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1d25b08" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f3dd1c8bca8" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f3dd1c8bca8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f3dd1c88020" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f3dd1c88020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f3dd1c84958" loc="109:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f3dd1c88020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f3dd1c87a78" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f3dd1c84020" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f3dd1c88020"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f3dd1c88020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f3dd1c86a08" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f3dd1c88020"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f3dd1c86d28" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f3dd1c88020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f3dd1c86258" loc="88:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f3dd1c83110" loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f3dd1c88020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f3dd1c88ae0" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f3dd1c88020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f3dd1c88870" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f3dd1c88020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f3dd1c87328" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x7f3dd1c76b28" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x7f3dd1c74428" loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x7f3dd1c74d40" loc="79:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x7f3dd1c76438" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x7f3dd1c41d90" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1c41b20" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f3dd1c3c7a8" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1c3c538" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f3dd1c3dcd0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1c3d728" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f3dd1c3da50" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7f3dd1c392c8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
              <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1c39020" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f3dd1c26070" loc="50:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f3dd1c25020" loc="60:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f3dd1c267d0" loc="55:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f3dd21283d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f3dd1c27868" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f3dd21283d0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f3dd1c272b0" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f3dd21283d0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f3dd1c275e8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f3dd1b81c90" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f3dd1b7d580" loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f3dd1b79bf0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f3dd1b79440" loc="59:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f3dd1b7b360" loc="90:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f3dd1b7bb50" loc="98:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f3dd1b70ac8" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f3dd1b78c40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f3dd1b70858" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f3dd1b78c40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f3dd1b74ae8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f3dd1b715e8" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f3dd1b78c40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f3dd1b71378" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f3dd1b78c40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f3dd1b70020" loc="70:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f3dd1b78c40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7f3dd1a17e70" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
              <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1a17bc8" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x7f3dd1a17290" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1a17020" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f3dd1a03020" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f3dd1a05ce0" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x7f3dd1a03790" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f3dd1a0ecf8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f3dd1a0ea88" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f3dd1a05640" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f3dd1a053d0" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x7f3dd1a0a020" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f3dd1a0cd80" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x7f3dd1a094e0" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f3dd1a09270" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x7f3dd1a0aab0" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f3dd1a0a840" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x7f3dd1a08020" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f3dd1a09ce8" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x7f3dd1a0c5b0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f3dd1a0c340" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f3dd193a530" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f3dd193a530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f3dd193a760" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f3dd193a760"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f3dd1939020" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f3dd193a760"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f3dd1938070" loc="76:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f3dd1939838" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f3dd1938760" loc="82:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f3dd190dd28" loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f3dd190ec20" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f3dd1913a48" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f3dd190d5c8" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f3dd190d358" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f3dd190e4c0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f3dd190e250" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f3dd190b6e0" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f3dd190b470" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f3dd190f1d8" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f3dd190fb00" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f3dd190f890" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x7f3dd18fb328" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x7f3dd18fe3a0" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x7f3dd18feab8" loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x7f3dd18fd328" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7f3dd18fbad8" loc="98:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x7f3dd18fdaf8" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7f3dd18ff1d8" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f3dd2190978"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f3dd2190d80"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7f3dd18ffb90" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f3dd2190978"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f3dd2190d80"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f3dd18ff920" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f3dd2190978"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f3dd2190d80"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f3dd19091c8" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f3dd19091c8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7f3dd19057f0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f3dd1908b60" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f3dd1909a80" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f3dd19091c8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f3dd1907290" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f3dd1904020" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f3dd1908420" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f3dd19091c8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f3dd19081b0" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f3dd19091c8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f3dd1907988" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f3dd19050d8" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f3dd191d418" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f3dd191d418"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7f3dd1918900" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f3dd191aa40" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f3dd191dcb8" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f3dd191d418"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7f3dd1917290" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f3dd1917020" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7f3dd1917a10" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f3dd191b4c0" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f3dd191cd50" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f3dd19181d8" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f3dd191c630" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f3dd191d418"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f3dd191c3c0" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f3dd191d418"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f3dd191bbb8" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f3dd191a328" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SystemLowPowerListening" loc="1:/opt/tinyos-2.1.2/tos/interfaces/SystemLowPowerListening.nc">
      <function command="" provided="0" name="setDefaultRemoteWakeupInterval" ref="0x7f3dd177c290" loc="3:/opt/tinyos-2.1.2/tos/interfaces/SystemLowPowerListening.nc">
        <interfacedef-ref qname="SystemLowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f3dd177c020" loc="3:/opt/tinyos-2.1.2/tos/interfaces/SystemLowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDefaultRemoteWakeupInterval" ref="0x7f3dd177a3e0" loc="6:/opt/tinyos-2.1.2/tos/interfaces/SystemLowPowerListening.nc">
        <interfacedef-ref qname="SystemLowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDelayAfterReceive" ref="0x7f3dd177ab20" loc="7:/opt/tinyos-2.1.2/tos/interfaces/SystemLowPowerListening.nc">
        <interfacedef-ref qname="SystemLowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDelayAfterReceive" ref="0x7f3dd177cc10" loc="4:/opt/tinyos-2.1.2/tos/interfaces/SystemLowPowerListening.nc">
        <interfacedef-ref qname="SystemLowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f3dd177c9a0" loc="4:/opt/tinyos-2.1.2/tos/interfaces/SystemLowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x7f3dd16cb3e0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x7f3dd16c9420" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f3dd16c9e28" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f3dd16c9bb8" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x7f3dd16c85d8" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x7f3dd16cbc10" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f3dd16c8e08" loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x7f3dd16cda88" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd16cd818" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x7f3dd16c4e00" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f3dd16c45f8" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f3dd16c4388" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f3dd162b508" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f3dd162b508"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f3dd1628020" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f3dd162b508"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f3dd162bd40" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f3dd162b508"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x7f3dd1603e50" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1603be0" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f3dd1607dc0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1607b50" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x7f3dd1604ad0" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1604540" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f3dd1604850" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f3dd16034e8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd1603278" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x7f3dd15d25b8" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f3dd15d2348" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f3dd15d5b70" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f3dd14e1908" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f3dd14e1908"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f3dd14e1b38" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f3dd14e1b38"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f3dd14da630" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f3dd14e1b38"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f3dd14da3c0" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f3dd14e1b38"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f3dd14de1d8" loc="54:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f3dd14dd290" loc="66:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f3dd14deb00" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f3dd14de890" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f3dd14e29a0" loc="53:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f3dd14e5020" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f3dd14e8ce0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f3dd14e4338" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f3dd14e40c8" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f3dd14e5820" loc="68:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f3dd14e4d40" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f3dd14e4ad0" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f3dd13f64d0" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f3dd13f64d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7f3dd13ed020" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7f3dd13efc98" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f3dd13f0e18" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f3dd13f6d88" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f3dd13f64d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f3dd13f1108" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f3dd13f64d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f3dd13f3e28" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f3dd13f64d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f3dd13f1848" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f3dd13ef5c0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f3dd13f36f0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f3dd13f64d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f3dd13f3480" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f3dd13f64d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f3dd13f0020" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f3dd13f0708" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f3dd13d6b88" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f3dd13d6278" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f3dd13d65d8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f3dd13d68f8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f3dd13d1020" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f3dd13d42b0" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f3dd13d4610" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f3dd13d4930" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f3dd13d4c78" loc="83:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f3dd13d8020" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f3dd13dbc18" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7f3dd13bf328" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7f3dd13b6c40" loc="126:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7f3dd13ba7a8" loc="117:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7f3dd13b4610" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7f3dd13b43a0" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7f3dd13c0ba8" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7f3dd13b7338" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7f3dd13b70c8" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f3dd13bb020" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7f3dd13bcc88" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f3dd13bd1d8" loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7f3dd13b1de0" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f3dd13b1b70" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f3dd13bb758" loc="114:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7f3dd13b3690" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7f3dd13b3420" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f3dd13b2538" loc="136:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7f3dd13b6518" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7f3dd13b62a8" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7f3dd13b14a0" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7f3dd13b8290" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7f3dd13b8020" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f3dd13bdb30" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f3dd13bd8c0" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f3dd13ba0a8" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7f3dd13bbdf8" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7f3dd13b7b48" loc="123:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7f3dd13b4d18" loc="129:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7f3dd13b3d80" loc="132:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f3dd13b2c80" loc="138:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7f3dd13b89a8" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f3dd13bfa40" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f3dd13bc4e0" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f3dd13bc270" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f3dd1357748" loc="95:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f3dd1356020" loc="105:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x7f3dd12f61d8" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f3dd12f3578" loc="87:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f3dd12f7328" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f3dd12f2780" loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f3dd12f2020" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f3dd12f3c78" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f3dd12f44c0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f3dd12f4250" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f3dd12f1290" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f3dd12f1020" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f3dd12f7a58" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x7f3dd12f4de8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f3dd12f4b78" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f3dd12f6b00" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f3dd12f6890" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrickleTimer" loc="57:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
      <function event="" provided="0" name="fired" ref="0x7f3dd1148e78" loc="90:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
        <documentation loc="87:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
          <short>&#10; The trickle timer has fired.</short>
          <long>&#10; The trickle timer has fired. Signaled if C &#38;gt; K.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="incrementCounter" ref="0x7f3dd11487a0" loc="85:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Increment the counter C.</short>
          <long>&#10; Increment the counter C. When an interval ends, C is set to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f3dd1148020" loc="80:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Reset the timer period to L.</short>
          <long>&#10; Reset the timer period to L. If called while the timer is running,&#10; then a new interval (of length L) begins immediately.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f3dd1149030" loc="68:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Start the trickle timer.</short>
          <long>&#10; Start the trickle timer. At boot, the timer period is its maximum&#10; value (H). If a protocol requires starting at the minimum value&#10; (e.g., fast start), then it should call &#60;tt>reset&#60;/tt> before&#10; &#60;tt>start&#60;/tt>.&#10;&#10; @return error_t SUCCESS if the timer was started, EBUSY if it is already&#10; running, and FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f3dd11497f8" loc="74:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Stop the trickle timer.</short>
          <long>&#10; Stop the trickle timer. This call sets the timer period to H and&#10; C to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationCache" loc="44:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <short>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.</short>
        <long>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-04 04:31:08 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestData" ref="0x7f3dd114e020" loc="47:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="size" ref="0x7f3dd114fd50" loc="47:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="storeData" ref="0x7f3dd114d408" loc="48:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f3dd114eae0" loc="48:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x7f3dd114ee00" loc="48:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
          <variable name="seqno" ref="0x7f3dd114d178" loc="48:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="newData" ref="0x7f3dd114b1d8" loc="50:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="start" ref="0x7f3dd114f020" loc="45:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestSeqno" ref="0x7f3dd114daf8" loc="49:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f3dd2b15608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="stop" ref="0x7f3dd114f6b0" loc="46:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationUpdate" loc="48:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
        <short>&#10; Update a network shared (disseminated) value.</short>
        <long>&#10; Update a network shared (disseminated) value. Updates are assured&#10; to be eventually consistent across a connected network. If multiple&#10; nodes update a value simultaneously, then nodes within the network&#10; will see a series of one or more updates, the last update will&#10; be the same for all nodes. Components that need to use the&#10; variable should use the DisseminationValue interface.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10; @date   January 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f3dd1029b28" loc="48:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
          <interfacedef-ref qname="DisseminationUpdate"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f3dd1029b28"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="change" ref="0x7f3dd10268e0" loc="60:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
          <short>&#10; Update the variable to a new value.</short>
          <long>&#10; Update the variable to a new value. This changes the local copy&#10; and begins to disseminate the new value throughout the network.&#10; As other nodes may have also changed the variable, it is possible&#10; that an update may not 'stick,' but will instead be overwritten by&#10; a separate update.&#10;&#10; @param newVal A pointer to the new value. The memory pointed to&#10; by newVal is copied out, so newVal can be reclaimed when&#10; &#60;tt>change&#60;/tt> returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f3dd1029b28"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f3dd1026670" loc="60:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f3dd1029b28"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitVector" loc="40:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <short>&#10; Interface to a bit vector.</short>
        <long>&#10; Interface to a bit vector.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearAll" ref="0x7f3dd0fdf4a8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Clear all bits in the vector.</short>
          <long>&#10; Clear all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f3dd0fdc990" loc="69:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to clear.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7f3dd0fdc720" loc="69:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f3dd0fdb338" loc="75:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Toggle a bit in the vector.</short>
          <long>&#10; Toggle a bit in the vector.&#10; @param bitnum Bit to toggle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7f3dd0fdb0c8" loc="75:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f3dd0fdd518" loc="57:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Read a bit from the vector.</short>
          <long>&#10; Read a bit from the vector.&#10; @param bitnum Bit to read.&#10; @return Bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7f3dd0fdd2a8" loc="57:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="assign" ref="0x7f3dd0fd7020" loc="82:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Write a bit in the vector.</short>
          <long>&#10; Write a bit in the vector.&#10; @param bitnum Bit to clear.&#10; @param value New bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7f3dd0fdba48" loc="82:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x7f3dd0fdbd58" loc="82:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAll" ref="0x7f3dd0fdfba0" loc="50:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Set all bits in the vector.</short>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f3dd0fdc020" loc="63:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to set.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7f3dd0fddc18" loc="63:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f3dd0fd7790" loc="88:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Return bit vector length.</short>
          <long>&#10; Return bit vector length.&#10; @return Bit vector length.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Intercept" loc="15:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0x7f3dd0f4a5c0" loc="31:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
        <documentation loc="16:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination.</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param 'message_t* ONE msg' The complete message received.&#10;&#10; @param 'void* COUNT(len) payload' The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd0f4ec70" loc="31:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f3dd0f4a020" loc="31:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f3dd0f4a330" loc="31:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpPacket" loc="44:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <short>&#10;  ADT for CTP data frames.</short>
        <long>&#10;  ADT for CTP data frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007-11-28 04:42:52 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSequenceNumber" ref="0x7f3dd0f3b020" loc="64:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd0f3c978" loc="64:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x7f3dd0f3cca0" loc="64:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="option" ref="0x7f3dd0f43730" loc="52:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f3dd2116738"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd0f43160" loc="52:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x7f3dd0f434b0" loc="52:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f3dd2116738"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x7f3dd0f3f2a0" loc="58:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd0f40ca8" loc="58:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x7f3dd0f3f020" loc="58:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x7f3dd0f3e880" loc="61:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd0f3e2c8" loc="61:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f3dd0f3e600" loc="61:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x7f3dd0f44a60" loc="49:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f3dd2116738"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd0f44470" loc="49:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x7f3dd0f447e0" loc="49:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f3dd2116738"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x7f3dd0f40630" loc="57:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd0f403c0" loc="57:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x7f3dd0f3fc08" loc="60:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd0f3f998" loc="60:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f3dd0f3a5a8" loc="67:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd0f3a020" loc="67:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x7f3dd0f3a328" loc="67:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x7f3dd0f49d48" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f3dd2116738"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd0f49758" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x7f3dd0f49ac8" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f3dd2116738"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchPacket" ref="0x7f3dd0f370b8" loc="70:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x7f3dd0f38a90" loc="70:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x7f3dd0f38de8" loc="70:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getThl" ref="0x7f3dd0f420a8" loc="54:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd0f43df0" loc="54:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x7f3dd0f3c290" loc="63:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd0f3c020" loc="63:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchInstance" ref="0x7f3dd0f383c0" loc="69:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x7f3dd0f3ad90" loc="69:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x7f3dd0f38140" loc="69:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x7f3dd0f3b958" loc="66:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd0f3b6e8" loc="66:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setThl" ref="0x7f3dd0f42cb0" loc="55:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd0f42720" loc="55:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="thl" ref="0x7f3dd0f42a30" loc="55:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionId" loc="45:/opt/tinyos-2.1.2/tos/lib/net/CollectionId.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/CollectionId.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="fetch" ref="0x7f3dd0f32258" loc="46:/opt/tinyos-2.1.2/tos/lib/net/CollectionId.nc">
        <interfacedef-ref qname="CollectionId"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x7f3dd2118278"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkEstimator" loc="46:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <short> Provides an additive quality measure for a neighbor.</short>
        <long> Provides an additive quality measure for a neighbor. The&#10; provided quality increases when the true link quality increases.&#10;  @author Rodrigo Fonseca&#10;  @author Omprakash Gnawali&#10;  @date   $Date: 2010-06-29 22:07:47 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="txAck" ref="0x7f3dd0f206a8" loc="62:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f3dd0f20438" loc="62:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pinNeighbor" ref="0x7f3dd0f21378" loc="55:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f3dd0f21108" loc="55:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="txNoAck" ref="0x7f3dd0f1e030" loc="66:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f3dd0f20d90" loc="66:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNeighbor" ref="0x7f3dd0f229c0" loc="52:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f3dd0f22750" loc="52:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x7f3dd0f1d2d0" loc="72:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f3dd0f1d060" loc="72:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearDLQ" ref="0x7f3dd0f1e998" loc="69:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f3dd0f1e728" loc="69:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="unpinNeighbor" ref="0x7f3dd0f21d10" loc="58:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f3dd0f21aa0" loc="58:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLinkQuality" ref="0x7f3dd0f22020" loc="49:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f3dd0f25d40" loc="49:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Cache" loc="44:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
        <short>&#10; A data item cache.</short>
        <long>&#10; A data item cache. The cache does not own the items it caches:&#10; there is no allocation/deallocation policy, or notification of&#10; eviction. Correspondingly, using references (pointers) as data&#10; items can be difficult.&#10; &#10; @author Rodrigo Fonseca&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f3dd0eef6e8" loc="44:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
          <interfacedef-ref qname="Cache"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f3dd0eef6e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="insert" ref="0x7f3dd0eec290" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
          <short>&#10; Inserts an item in the cache, evicting if necessary.</short>
          <long>&#10; Inserts an item in the cache, evicting if necessary.&#10; An atomic lookup after insert should return true.&#10;&#10; @param item - the data item to insert.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f3dd0eef6e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7f3dd0eec020" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f3dd0eef6e8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f3dd0eeb378" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
          <short>&#10; Flush the cache of all entries.</short>
          <long>&#10; Flush the cache of all entries.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="lookup" ref="0x7f3dd0eecc20" loc="59:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
          <short>&#10; Return whether the data item is in the cache.</short>
          <long>&#10; Return whether the data item is in the cache.&#10;&#10; @param item - the data item to query&#10; @return Whether the item is in the cache.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f3dd0eef6e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7f3dd0eec9b0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f3dd0eef6e8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UnicastNameFreeRouting" loc="41:/opt/tinyos-2.1.2/tos/lib/net/UnicastNameFreeRouting.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/UnicastNameFreeRouting.nc">
        <short>&#10;  Provides a single next hop on a name-free protocol.</short>
        <long>&#10;  Provides a single next hop on a name-free protocol.&#10;&#10;  @author Philip Levis&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="hasRoute" ref="0x7f3dd0efc360" loc="49:/opt/tinyos-2.1.2/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="routeFound" ref="0x7f3dd0efc9e0" loc="51:/opt/tinyos-2.1.2/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="nextHop" ref="0x7f3dd0effb68" loc="48:/opt/tinyos-2.1.2/tos/lib/net/UnicastNameFreeRouting.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/lib/net/UnicastNameFreeRouting.nc">
          <short>&#10; Get the address of the best next hop set to the destination.</short>
          <long>&#10; Get the address of the best next hop set to the destination.&#10; If there is not best next hop, the address is the local address.&#10; @return : The next best hop, or the local address if there is no route.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="noRoute" ref="0x7f3dd0efa070" loc="52:/opt/tinyos-2.1.2/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CompareBit" loc="47:/opt/tinyos-2.1.2/tos/lib/net/ctp/CompareBit.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/ctp/CompareBit.nc">
        <short> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table.</short>
        <long> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table. The return value is the &#34;pin bit&#34; - if true&#10; insert into the neighbor table. In the reference implementation&#10; the router will return true if the path through the source&#10; will be better than a path through at least one current neighbor.&#10;@ author Omprakash Gnawali&#10;@ Created: September 16, 2006&#10;@date   $Date: 2010-06-29 22:07:49 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="shouldInsert" ref="0x7f3dd0d2fbf0" loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CompareBit.nc">
        <interfacedef-ref qname="CompareBit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd0d32e70" loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f3dd0d2f650" loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f3dd0d2f960" loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CompareBit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpRoutingPacket" loc="43:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <short>&#10;  ADT for CTP routing frames.</short>
        <long>&#10;  ADT for CTP routing frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2009-09-21 02:19:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearOptions" ref="0x7f3dd0c50a10" loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd0c507a0" loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x7f3dd0c4b2a0" loc="57:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd0c4ccd0" loc="57:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x7f3dd0c4b020" loc="57:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x7f3dd0c51d60" loc="48:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f3dd2116738"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd0c51790" loc="48:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x7f3dd0c51ae0" loc="48:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f3dd2116738"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x7f3dd0c4c338" loc="56:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd0c4c0c8" loc="56:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x7f3dd0c53d50" loc="47:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f3dd2116738"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd0c53780" loc="47:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x7f3dd0c53ad0" loc="47:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f3dd2116738"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setParent" ref="0x7f3dd0c4d680" loc="54:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd0c4d0c8" loc="54:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f3dd0c4d400" loc="54:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x7f3dd0c4f6d0" loc="53:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f3dd2128788"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd0c4f460" loc="53:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOption" ref="0x7f3dd0c54d50" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f3dd2116738"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd0c54780" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x7f3dd0c54ad0" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f3dd2116738"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x7f3dd0aec178" loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f3dd0aef928" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x7f3dd0aec958" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f3dd0ae7980" loc="52:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f3dd0ae7980"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f3dd0ae4258" loc="58:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f3dd0ae3020" loc="66:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f3dd0ae7980"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f3dd0ae49a0" loc="66:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f3dd0ae4ca0" loc="66:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f3dd0ae7980"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f3dd0ad4768" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f3dd0ad5a60" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7f3dd0ad5db8" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7f3dd0ad4178" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7f3dd0ad44c8" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f3dd0ad13f0" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f3dd0ad2368" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7f3dd0ad2688" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7f3dd0ad29c0" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x7f3dd0ad2d70" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x7f3dd0ad1140" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f3dd0ad8440" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f3dd0ad9738" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7f3dd0ad9a90" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7f3dd0ad9df8" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7f3dd0ad81a0" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f3dd0ad7c80" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f3dd0ad7408" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f3dd0ad8e48" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7f3dd0ad7188" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x7f3dd0ac2868" loc="114:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x7f3dd0acb9e8" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f3dd21b63a0"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x7f3dd21b6858"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x7f3dd0abfa88" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="135:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f3dd0abf818" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f3dd0ac10d8" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="118:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x7f3dd0ac6548" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x7f3dd0ac83e8" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f3dd21b63a0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7f3dd21b6858"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x7f3dd0ac8178" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f3dd21b63a0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7f3dd21b6858"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x7f3dd0ac43a0" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x7f3dd0abf020" loc="133:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f3dd0abe258" loc="150:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="142:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x7f3dd0ac6c38" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x7f3dd0ac3258" loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x7f3dd0ac4ae8" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7f3dd0ac3980" loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x7f3dd0ac1838" loc="127:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x7f3dd0ac7608" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f3dd21b0ce0"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f3dd21af438"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x7f3dd0ac7398" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f3dd21b0ce0"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f3dd21af438"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x7f3dd0ac2178" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="107:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x7f3dd0ac8bc0" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f3dd21b0ce0"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f3dd21af438"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f3dd0ac7da8" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f3dd0abed68" loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="152:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f3dd0abeaf8" loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f3dd0a49598" loc="56:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f3dd0a48608" loc="73:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f3dd0a4cd30" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f3dd0a49d98" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f3dd0a47020" loc="81:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f3dd09d8c18" loc="62:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7f3dd08dc640" loc="31:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd08dc060" loc="31:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7f3dd08dc3c0" loc="31:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7f3dd08e0948" loc="15:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7f3dd08dd760" loc="23:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3dd08dd198" loc="23:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3dd208b3a0"/>
                <typename><typedef-ref name="message_t" ref="0x7f3dd208a8e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7f3dd08dd4e0" loc="23:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7f3dd08a8b60" loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f3dd08a8450" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7f3dd08b01d8" loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7f3dd08af528" loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7f3dd08ac020" loc="94:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f3dd08add60" loc="94:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7f3dd08afd40" loc="79:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7f3dd08b0cc8" loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f3dd08b0a58" loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7f3dd08ac818" loc="100:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7f3dd08ad5b8" loc="85:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7f3dd08b7110" loc="71:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7f3dd08b79c8" loc="81:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7f3dd08b87b8" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7f3dd08b8548" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7f3dd08b64e8" loc="91:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f3dd08b6278" loc="91:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7f3dd08b3020" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7f3dd08b3bc8" loc="69:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f3dd08b3958" loc="69:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7f3dd08b2640" loc="80:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f3dd08b23d0" loc="80:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f3dd07889b8" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f3dd0788418" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f3dd0788738" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f3dd07834a8" loc="79:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f3dd0783238" loc="79:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f3dd07822a0" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f3dd0783c20" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f3dd0782020" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f3dd07851d8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f3dd0781a38" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f3dd0781160" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f3dd0781480" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f3dd07817a8" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f3dd0785a50" loc="72:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f3dd07872b0" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f3dd0786880" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f3dd0786ba0" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f3dd2b16b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f3dd0787020" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f3dd0764bb0" loc="46:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f3dd0764940" loc="46:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f3dd07619b0" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f3dd07613f8" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f3dd0761730" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f3dd074e578" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f3dd074f738" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x7f3dd074bc08" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f3dd074b998" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f3dd074dc08" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f3dd07527f8" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f3dd074f020" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f3dd074fe58" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3dd2213ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x7f3dd074ec58" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3dd22389b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f3dd074d578" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f3dd074d308" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f3dd074b328" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f3dd2b16160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
