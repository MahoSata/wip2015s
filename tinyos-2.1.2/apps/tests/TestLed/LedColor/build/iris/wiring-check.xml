<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="50:TestAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f9e6aeedc40"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f9e6aec2b08"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f9e6aec2b08"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f9e6aebec38"/></to>
    </wire>
    <wire loc="51:TestAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9e6aee17e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9e6ad00a60"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9e6ad00a60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f9e6acf76a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:TestAppC.nc">
      <from><interface-ref name="Green" scoped="" ref="0x7f9e6aed9d48"/></from>
      <to><interface-ref name="Green" scoped="" ref="0x7f9e6ab3abb8"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/system/LedC.nc">
      <from><interface-ref name="Green" scoped="" ref="0x7f9e6ab3abb8"/></from>
      <to><interface-ref name="Led" scoped="" ref="0x7f9e6ab337a0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:TestAppC.nc">
      <from><interface-ref name="Red" scoped="" ref="0x7f9e6aedd838"/></from>
      <to><interface-ref name="Red" scoped="" ref="0x7f9e6ab39780"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/system/LedC.nc">
      <from><interface-ref name="Red" scoped="" ref="0x7f9e6ab39780"/></from>
      <to><interface-ref name="Led" scoped="" ref="0x7f9e6ab337a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:TestAppC.nc">
      <from><interface-ref name="Yellow" scoped="" ref="0x7f9e6aedc490"/></from>
      <to><interface-ref name="Yellow" scoped="" ref="0x7f9e6ab38308"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/system/LedC.nc">
      <from><interface-ref name="Yellow" scoped="" ref="0x7f9e6ab38308"/></from>
      <to><interface-ref name="Led" scoped="" ref="0x7f9e6ab337a0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:TestAppC.nc">
      <from><interface-ref name="MultiLed" scoped="" ref="0x7f9e6aed7080"/></from>
      <to><interface-ref name="MultiLed" scoped="" ref="0x7f9e6ab38d90"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/system/LedC.nc">
      <from><interface-ref name="MultiLed" scoped="" ref="0x7f9e6ab38d90"/></from>
      <to><interface-ref name="MultiLed" scoped="" ref="0x7f9e6ab364f0"/></to>
    </wire>
    <wire loc="88:TestP.nc">
      <from><interface-ref name="showColor_task" scoped="" ref="0x7f9e6aed08e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9e6b04e1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9e6aec0020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9e6a8cca38"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9e6aec0020"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x7f9e6aa437e0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9e6aec0020"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x7f9e6aa3e688"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9e6aec0020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9e6aaab610"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9e6aec0020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9e6aad1c28"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9e6aec0020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9e6acef0c0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f9e6ad0e308"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f9e6b02b5c8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f9e6b02b5c8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f9e6af78d88"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f9e6ad0ece0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9e6aec0e60"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9e6aec0e60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9e6aeb8c80"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9e6ad0d418"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f9e6aec0020"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f9e6aeb9a20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9e6a924940"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f9e6aeb5ce0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f9e6ad2cae0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7f9e6aeb1a38"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9e6ad2c4b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f9e6aeb1370"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9e6aafe460"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f9e6aeb1370"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f9e6aeac140"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f9e6aeac140"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f9e6aeabae8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f9e6aeac7d0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f9e6aeb9a20"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7f9e6aea2cd0"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7f9e6ae98af0"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f9e6ae98af0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9e6ae14740"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f9e6aea6020"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f9e6aeac7d0"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f9e6ae657e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6ad80520"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f9e6ae7f348"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9e6adea020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9e6adea020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a75c710"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f9e6ae74348"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9e6addad60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9e6addad60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a6ef710"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f9e6ae6a020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9e6adca8c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9e6adca8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a688710"/></to>
    </wire>
    <wire loc="196:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7f9e6ae5f4d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6ad66c38"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f9e6ae96e00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9e6ae11a50"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9e6ae11a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a881a10"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f9e6ae6dc78"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9e6adcd5b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9e6adcd5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a68e710"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f9e6ae931a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9e6ae0abd0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9e6ae0abd0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a82d970"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f9e6ae87348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9e6adf8740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9e6adf8740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a7c0710"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f9e6ae7c7e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9e6ade7430"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9e6ade7430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a753710"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f9e6ae707e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9e6add5120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9e6add5120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a6e6710"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f9e6ae9b658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9e6ae172a8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9e6ae172a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a891a10"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f9e6ae90658"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9e6ae05020"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9e6ae05020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a824970"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f9e6ae847e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9e6adf5bd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9e6adf5bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a7b7710"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f9e6ae79c78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9e6ade48c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9e6ade48c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a74a710"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f9e6ae674d0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9e6adc7d60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9e6adc7d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a67f710"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f9e6ae611a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6ad71c38"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f9e6ae76020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9e6addca50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9e6addca50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a6f5710"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9e6ae14740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a888a10"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f9e6ae8cc78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9e6ae02430"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9e6ae02430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a81b970"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f9e6ae64e00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6ad7bcd8"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f9e6ae89020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9e6adfa500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9e6adfa500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a7c66a8"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f9e6ae7e4d0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9e6ade9120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9e6ade9120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a759710"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f9e6ae734d0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9e6add9e18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9e6add9e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a6ec710"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f9e6ae691a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9e6adc9a50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9e6adc9a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a685710"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f9e6ae94020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9e6ae10bd8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9e6ae10bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a87ea10"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f9e6ae92348"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9e6ae09d60"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9e6ae09d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a82a970"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f9e6ae864d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9e6adf78c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9e6adf78c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a7bd710"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f9e6ae7b968"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9e6ade65b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9e6ade65b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a750710"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f9e6ae6f968"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9e6add42a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9e6add42a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a6e3710"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f9e6ae9a7e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9e6ae16430"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9e6ae16430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a88ea10"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f9e6ae8f7e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9e6ae04120"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9e6ae04120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a821970"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f9e6ae83968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9e6adf4d60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9e6adf4d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a7b4710"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f9e6ae66658"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9e6adc6e18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9e6adc6e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a67c710"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f9e6ae81c78"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9e6adece40"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9e6adece40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a75f6a8"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f9e6ae751a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9e6addbbd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9e6addbbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a6f2710"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f9e6ae6ce00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9e6adcc740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9e6adcc740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a68b710"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f9e6ae60348"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6ad6b3e0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f9e6ae97c78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9e6ae138c8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9e6ae138c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a885a10"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f9e6ae8be00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9e6ae015b8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9e6ae015b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a817970"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f9e6ae6eaf0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9e6adce500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9e6adce500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a6916a8"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f9e6ae881a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9e6adf95b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9e6adf95b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a7c3710"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f9e6ae7d658"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9e6ade82a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9e6ade82a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a756710"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f9e6ae71658"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9e6add7020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9e6add7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a6e9710"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f9e6ae68348"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9e6adc8bd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9e6adc8bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a682710"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f9e6ae9c3d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9e6ae181e8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9e6ae181e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a899a10"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f9e6ae914d0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9e6ae08e18"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9e6ae08e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a827970"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f9e6ae85658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9e6adf6a50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9e6adf6a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a7ba710"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f9e6ae7aaf0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9e6ade5740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9e6ade5740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a74d710"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f9e6ae62020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6ad753e0"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f9e6ae78e00"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9e6addd930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9e6addd930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a6f86a8"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f9e6ae82af0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9e6adf3e18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9e6adf3e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a7b0710"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f9e6ae99968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9e6ae155b8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9e6ae155b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a88ba10"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f9e6ae8eaf0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9e6ae032a8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9e6ae032a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e6a81e970"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f9e6b04e1c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9e6af77c58"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f9e6af73168"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f9e6b02ae28"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f9e6af56988"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f9e6ac36578"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f9e6acf76a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f9e6acefdb8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f9e6acefdb8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9e6ab635e0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9e6acef0c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9e6ace48e8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f9e6ace5298"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f9e6ab54128"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9e6ace48e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9e6abdc020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f9e6ab5d858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9e6abafab0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f9e6abaac70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7f9e6ace01c8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7f9e6ace01c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f9e6abdc7c8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f9e6ab4b330"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7f9e6acd63b8"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7f9e6acd63b8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f9e6abd8a90"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f9e6abd8a90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f9e6a5ab128"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9e6abdc020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9e6a5b0668"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f9e6abdc7c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f9e6a5b0e10"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9e6a5a9228"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9e6ac50288"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9e6ac50288"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9e6ac43e00"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f9e6a5a40c0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f9e6ac4a3c0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f9e6ac4a3c0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f9e6ac3b020"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f9e6a5a33b0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f9e6ac497f8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f9e6ac497f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f9e6ac3a340"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f9e6a59f510"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f9e6ac469e8"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f9e6ac469e8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f9e6ac36c78"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f9e6aba6cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9e6b04e1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f9e6ab58930"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9e6b04e1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/system/LedC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f9e6ab3ea20"/></from>
      <to><interface-ref name="Led" scoped="" ref="0x7f9e6ab337a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/PlatformLedC.nc">
      <from><interface-ref name="MultiLed" scoped="" ref="0x7f9e6ab364f0"/></from>
      <to><interface-ref name="MultiLed" scoped="" ref="0x7f9e6aaf7238"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/system/LedC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f9e6ab3b608"/></from>
      <to><interface-ref name="Led" scoped="" ref="0x7f9e6ab337a0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/system/LedC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f9e6ab3a0f0"/></from>
      <to><interface-ref name="Led" scoped="" ref="0x7f9e6ab337a0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/PlatformLedC.nc">
      <from><interface-ref name="Led" scoped="" ref="0x7f9e6ab337a0"/></from>
      <to><interface-ref name="Led" scoped="" ref="0x7f9e6aaf64f8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/PlatformLedC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f9e6aaf5020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f9e6ab23760"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f9e6ab23760"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f9e6ab20020"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9e6aafe460"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9e6ab2d9b8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f9e6ab1f6c8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f9e6ab01060"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f9e6ab01060"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7f9e6ae9a7e0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f9e6ab1e958"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f9e6ab001f0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f9e6ab001f0"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7f9e6ae9b658"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f9e6ab1dae0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f9e6aaff378"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f9e6aaff378"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7f9e6ae9c3d0"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f9e6aad30f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f9e6aad14d8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartControl" scoped="" ref="0x7f9e6aad21d8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f9e6aad6db0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f9e6aad6db0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f9e6aab30c0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f9e6aaceb60"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f9e6aabf020"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f9e6aabf020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f9e6aab3878"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f9e6a8d2020"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f9e6aaca358"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f9e6aab3878"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f9e6aa6b430"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f9e6aac0080"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f9e6aab2080"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f9e6aab2080"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f9e6aa6bb90"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f9e6aab30c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f9e6aaabbe8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f9e6aab12b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f9e6a9dfa88"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f9e6a9dfa88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f9e6a8f4270"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f9e6aa662d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f9e6aab12b0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x7f9e6aa6ac18"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7f9e6aa49060"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x7f9e6aa49060"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7f9e6aa40020"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x7f9e6aa68470"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7f9e6aa498b8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x7f9e6aa498b8"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7f9e6aa408b8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x7f9e6aa68c10"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7f9e6aa48158"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x7f9e6aa48158"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7f9e6aa3f158"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x7f9e6aa46860"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x7f9e6aa3c020"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x7f9e6aa476b0"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x7f9e6aa3ed98"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x7f9e6aa46020"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x7f9e6aa3d6b8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f9e6aa3b4c8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f9e6aeb5ce0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f9e6aa3a1a8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f9e6af573c8"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f9e6a8d8450"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f9e6a9d97f8"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f9e6a9d97f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f9e6a927b90"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9e6a8fec58"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9e6a9d2570"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9e6a9d2570"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9e6a9b3be0"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f9e6a9c31f0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f9e6a9acc90"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f9e6a9bcb68"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f9e6a9aa350"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f9e6a9b99c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7f9e6a9a6c48"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f9e6a9b99c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7f9e6a9a1020"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f9e6a9b99c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7f9e6a99d360"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9e6a917098"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9e6a9d2570"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f9e6a8cb080"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f9e6a8d2020"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="TestP" loc="46:TestP.nc">
      <documentation loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/PlatformLed.h">
        <short> Map to the LED index for the blue LED *</short>
      </documentation>
      <module/>
    </component>
    <component qname="MainC" loc="56:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.1.2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestAppC.TimerC" loc="44(TestAppC.TimerC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e6afbf020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e6afbf378"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f9e6acce3e8"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e6afbf020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e6afbf378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e6afbf020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e6afbf378"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e6afbf020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e6afbf378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LedC" loc="41:/opt/tinyos-2.1.2/tos/system/LedC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/LedC.nc">
        <short>&#10; Provide access to the Led components available on this platform.</short>
        <long>&#10; Provide access to the Led components available on this platform.&#10; LEDs are made available positionally (e.g., Led0) and by color&#10; (e.g., Green).&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedC" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/PlatformLedC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/iris/PlatformLedC.nc">
        <short> Defines the Led and MultiLed interfaces in terms of the underlying&#10; LedsC component.</short>
        <long> Defines the Led and MultiLed interfaces in terms of the underlying&#10; LedsC component.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.1.2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedP" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/PlatformLedP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/iris/PlatformLedP.nc">
        <short> Defines the Led and MultiLed interfaces in terms of the underlying&#10; LedsC component.</short>
        <long> Defines the Led and MultiLed interfaces in terms of the underlying&#10; LedsC component.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialPrintfC" loc="36:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfC.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialPrintfP" loc="36:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfP.nc">
        <short> &#10; </short>
        <long> &#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="102:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9e6b92ab98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e6afbd430"/>
            <typename><typedef-ref name="TThree" ref="0x7f9e6af7dd70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9e6b92ab98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e6afbd430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9e6afbd788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9e6b929608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e6afbd430"/>
            <typename><typedef-ref name="TThree" ref="0x7f9e6af7dd70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9e6b92ab98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x7f9e6af7b630"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/opt/tinyos-2.1.2/tos/lib/printf/PutcharP.nc">
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f9e6ae5b748" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f9e6ae5ba90" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f9e6ae5bdd8" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f9e6ae4c168" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f9e6ae4c4d0" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f9e6ae4c838" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f9e6ae4cb68" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f9e6adbd508" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f9e6adbd870" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f9e6adbdbd8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f9e6adbc020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f9e6acce3e8" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f9e6acce3e8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f9e6acce6d8" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f9e6acc59d0" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f9e6acc59d0"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f9e6acc5cc0" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9e6ace2c60" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9e6ace2c60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9e6aba4cc8" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9e6aba4cc8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f9e6aba1020" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9e6ab569f0" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9e6ab569f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f9e6a923800" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f9e6a923800"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7f9e6a923b50" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f9e6a90f110" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f9e6a90f110"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f9e6a90f860" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f9e6a90f860"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f9e6a8f69c8" loc="55:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f9e6a8f69c8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f9e6a8f3198" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f9e6a8f3198"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f9e6a8f3560" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f9e6a8f3560"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f9e6a8f3cd8" loc="58:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f9e6a8f3cd8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f9e6a8f10c8" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f9e6a8f1858" loc="60:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f9e6a8f1858"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Yellow" ref="0x7f9e6aedc490" loc="60:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Yellow" scoped="" ref="0x7f9e6aedc490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x7f9e6aedc7e0"/>
        <function-ref name="on" scoped="" ref="0x7f9e6aedc968"/>
        <function-ref name="off" scoped="" ref="0x7f9e6aedcaf0"/>
        <function-ref name="set" scoped="" ref="0x7f9e6aedcc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f9e6aeedc40" loc="48:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f9e6aeedc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f9e6aeec020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Green" ref="0x7f9e6aed9d48" loc="51:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Green" scoped="" ref="0x7f9e6aed9d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x7f9e6aedd0d8"/>
        <function-ref name="on" scoped="" ref="0x7f9e6aedd260"/>
        <function-ref name="off" scoped="" ref="0x7f9e6aedd3e8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6aedd570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MultiLed" ref="0x7f9e6aed7080" loc="68:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MultiLed" scoped="" ref="0x7f9e6aed7080"/></type-interface>
      <instance>
        <interfacedef-ref qname="MultiLed"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f9e6aed73d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6aed7558"/>
        <function-ref name="get" scoped="" ref="0x7f9e6aed76e0"/>
        <function-ref name="on" scoped="" ref="0x7f9e6aed7868"/>
        <function-ref name="set" scoped="" ref="0x7f9e6aed79f0"/>
        <function-ref name="off" scoped="" ref="0x7f9e6aed7b78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="showColor_task" ref="0x7f9e6aed08e0" loc="88:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="showColor_task" scoped="" ref="0x7f9e6aed08e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9e6aed0c30"/>
        <function-ref name="runTask" scoped="" ref="0x7f9e6aed0db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Red" ref="0x7f9e6aedd838" loc="54:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Red" scoped="" ref="0x7f9e6aedd838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x7f9e6aeddb88"/>
        <function-ref name="on" scoped="" ref="0x7f9e6aeddd10"/>
        <function-ref name="off" scoped="" ref="0x7f9e6aedc020"/>
        <function-ref name="set" scoped="" ref="0x7f9e6aedc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f9e6aee17e0" loc="49:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9e6aee17e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e6afbf020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e6afbf378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9e6aedfa18"/>
        <function-ref name="fired" scoped="" ref="0x7f9e6aee0158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9e6aee0e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9e6aee09f8"/>
        <function-ref name="getdt" scoped="" ref="0x7f9e6aede2e8"/>
        <function-ref name="gett0" scoped="" ref="0x7f9e6aedfe68"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9e6aee05a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9e6aeeb370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9e6aedf448"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9e6aeeb810"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6aeebcb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f9e6aec0020" loc="58:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f9e6aec0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e6aec0370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f9e6aec2b08" loc="57:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f9e6aec2b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f9e6aec2e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f9e6aeb9a20" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f9e6aeb9a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e6aeb9d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9e6aec0e60" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9e6aec0e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e6aeba1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f9e6aeb5ce0" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f9e6aeb5ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f9e6aeb90a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f9e6aeb9228"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f9e6aeb93b0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f9e6aeb9538"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f9e6aeb96c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f9e6aeb1370" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7f9e6aeb1370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e6aeb16c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9e6aeb8c80" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9e6aeb8c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e6aeb1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7f9e6aeb1a38" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7f9e6aeb1a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e6aeb1d88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f9e6aeac7d0" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f9e6aeac7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e6aeacb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f9e6aeac140" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f9e6aeac140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e6aeac490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f9e6aea6020" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f9e6aea6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e6aea6370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7f9e6aea2cd0" loc="44:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7f9e6aea2cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6aea70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6aea7228"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6aea73b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6aea7538"/>
        <function-ref name="get" scoped="" ref="0x7f9e6aea76c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6aea7848"/>
        <function-ref name="set" scoped="" ref="0x7f9e6aea79d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6aea7b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f9e6aeabae8" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f9e6aeabae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e6aeabe38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f9e6ae657e0" loc="98:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f9e6ae657e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae64020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae641a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae64330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae644b8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae64640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae647c8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae64950"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae64ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f9e6ae7f348" loc="72:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f9e6ae7f348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae7f698"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae7f820"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae7f9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae7fb30"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae7fcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae7fe40"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae7e020"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae7e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f9e6ae74348" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f9e6ae74348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae74698"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae74820"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae749a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae74b30"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae74cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae74e40"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae73020"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae731a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f9e6ae6a020" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f9e6ae6a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae6a370"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae6a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae6a680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae6a808"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae6a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae6ab18"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae6aca0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae6ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7f9e6ae5f4d0" loc="103:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7f9e6ae5f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae5f820"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae5f9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae5fb30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae5fcb8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae5fe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae5e020"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae5e1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae5e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f9e6ae96e00" loc="50:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f9e6ae96e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae951a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae95330"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae954b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae95640"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae957c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae95950"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae95ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae95c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f9e6ae6dc78" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f9e6ae6dc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae6c020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae6c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae6c330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae6c4b8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae6c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae6c7c8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae6c950"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae6cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f9e6ae931a0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f9e6ae931a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae934f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae93678"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae93800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae93988"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae93b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae93c98"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae93e20"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae92020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f9e6ae87348" loc="64:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f9e6ae87348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae87698"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae87820"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae879a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae87b30"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae87cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae87e40"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae86020"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae861a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f9e6ae7c7e0" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f9e6ae7c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae7cb30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae7ccb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae7ce40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae7b020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae7b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae7b330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae7b4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae7b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f9e6ae707e0" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f9e6ae707e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae70b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae70cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae70e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae6f020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae6f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae6f330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae6f4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae6f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f9e6ae9b658" loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f9e6ae9b658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae9b9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae9bb30"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae9bcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae9be40"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae9a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae9a1a8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae9a330"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae9a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f9e6ae90658" loc="56:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f9e6ae90658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae909a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae90b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae90cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae90e40"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae8f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae8f1a8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae8f330"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae8f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f9e6ae847e0" loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f9e6ae847e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae84b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae84cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae84e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae83020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae831a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae83330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae834b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae83640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f9e6ae79c78" loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f9e6ae79c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae78020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae781a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae78330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae784b8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae78640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae787c8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae78950"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae78ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f9e6ae674d0" loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f9e6ae674d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae67820"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae679a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae67b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae67cb8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae67e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae66020"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae661a8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae66330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f9e6ae611a0" loc="101:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f9e6ae611a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae614f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae61678"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae61800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae61988"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae61b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae61c98"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae61e20"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae60020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f9e6ae76020" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f9e6ae76020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae76370"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae764f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae76680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae76808"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae76990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae76b18"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae76ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae76e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f9e6ae98af0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f9e6ae98af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae98e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae97020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae971a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae97330"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae974b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae97640"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae977c8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae97950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f9e6ae8cc78" loc="59:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f9e6ae8cc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae8b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae8b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae8b330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae8b4b8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae8b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae8b7c8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae8b950"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae8bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f9e6ae64e00" loc="99:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f9e6ae64e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae631a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae63330"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae634b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae63640"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae637c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae63950"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae63ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae63c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f9e6ae89020" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f9e6ae89020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae89370"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae894f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae89680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae89808"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae89990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae89b18"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae89ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae89e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f9e6ae7e4d0" loc="73:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f9e6ae7e4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae7e820"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae7e9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae7eb30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae7ecb8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae7ee40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae7d020"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae7d1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae7d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f9e6ae734d0" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f9e6ae734d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae73820"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae739a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae73b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae73cb8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae73e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae71020"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae711a8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae71330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f9e6ae691a0" loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f9e6ae691a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae694f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae69678"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae69800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae69988"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae69b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae69c98"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae69e20"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae68020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f9e6ae94020" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f9e6ae94020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae94370"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae944f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae94680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae94808"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae94990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae94b18"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae94ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae94e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f9e6ae92348" loc="54:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f9e6ae92348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae92698"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae92820"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae929a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae92b30"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae92cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae92e40"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae91020"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae911a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f9e6ae864d0" loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f9e6ae864d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae86820"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae869a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae86b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae86cb8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae86e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae85020"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae851a8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae85330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f9e6ae7b968" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f9e6ae7b968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae7bcb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae7be40"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae7a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae7a1a8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae7a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae7a4b8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae7a640"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae7a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f9e6ae6f968" loc="87:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f9e6ae6f968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae6fcb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae6fe40"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae6e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae6e1a8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae6e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae6e4b8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae6e640"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae6e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f9e6ae9a7e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f9e6ae9a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae9ab30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae9acb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae9ae40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae99020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae991a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae99330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae994b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae99640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f9e6ae8f7e0" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f9e6ae8f7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae8fc30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae8fdb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae8e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae8e1a8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae8e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae8e4b8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae8e640"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae8e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f9e6ae83968" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f9e6ae83968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae83cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae83e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae82020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae821a8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae82330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae824b8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae82640"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae827c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f9e6ae66658" loc="96:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f9e6ae66658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae669a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae66b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae66cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae66e40"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae65020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae651a8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae65330"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae654b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f9e6ae81c78" loc="71:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f9e6ae81c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae803e8"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae80570"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae806f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae80880"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae80a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae80b90"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae80d18"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae7f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f9e6ae751a0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f9e6ae751a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae754f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae75678"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae75800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae75988"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae75b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae75c98"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae75e20"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae74020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f9e6ae6ce00" loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f9e6ae6ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae6b1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae6b330"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae6b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae6b640"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae6b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae6b950"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae6bad8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae6bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f9e6ae60348" loc="102:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f9e6ae60348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae60698"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae60820"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae609a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae60b30"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae60cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae60e40"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae5f020"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae5f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f9e6ae97c78" loc="49:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f9e6ae97c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae96020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae961a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae96330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae964b8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae96640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae967c8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae96950"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae96ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f9e6ae8be00" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f9e6ae8be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae8a1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae8a330"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae8a4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae8a640"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae8a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae8a950"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae8aad8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae8ac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f9e6ae6eaf0" loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f9e6ae6eaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae6ee40"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae6d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae6d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae6d330"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae6d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae6d640"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae6d7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae6d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f9e6ae881a0" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f9e6ae881a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae884f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae88678"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae88800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae88988"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae88b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae88c98"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae88e20"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae87020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f9e6ae7d658" loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f9e6ae7d658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae7d9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae7db30"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae7dcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae7de40"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae7c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae7c1a8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae7c330"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae7c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f9e6ae71658" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f9e6ae71658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae719a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae71b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae71cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae71e40"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae70020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae701a8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae70330"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae704b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f9e6ae68348" loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f9e6ae68348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae68698"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae68820"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae689a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae68b30"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae68cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae68e40"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae67020"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae671a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f9e6ae9c3d0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f9e6ae9c3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae9c720"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae9c8a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae9ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae9cbb8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae9cd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae9b020"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae9b1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae9b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f9e6ae914d0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f9e6ae914d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae91820"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae919a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae91b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae91cb8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae91e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae90020"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae901a8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae90330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f9e6ae85658" loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f9e6ae85658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae859a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae85b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae85cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae85e40"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae84020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae841a8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae84330"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae844b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f9e6ae7aaf0" loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f9e6ae7aaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae7ae40"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae79020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae791a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae79330"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae794b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae79640"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae797c8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae79950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f9e6ae62020" loc="100:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f9e6ae62020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae62370"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae624f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae62680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae62808"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae62990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae62b18"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae62ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae62e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f9e6ae78e00" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f9e6ae78e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae771a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae77330"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae774b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae77640"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae777c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae77950"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae77ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae77c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f9e6ae82af0" loc="69:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f9e6ae82af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae82e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae81020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae811a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae81330"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae814b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae81640"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae817c8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae81950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f9e6ae99968" loc="47:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f9e6ae99968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae99cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae99e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae98020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae981a8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae98330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae984b8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae98640"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae987c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f9e6ae8eaf0" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f9e6ae8eaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae8ee40"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae8c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae8c1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae8c330"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae8c4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae8c640"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae8c7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae8c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9e6ae16430" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9e6ae16430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae16780"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae16908"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae16a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae16c18"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae16da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae15020"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae151a8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae15330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9e6ae138c8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9e6ae138c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae13c18"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae13da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae11020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae111a8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae11330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae114b8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae11640"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae117c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9e6ae181e8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9e6ae181e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae18538"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae186c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae18848"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae189d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae18b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae18ce0"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae18e68"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae17020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9e6ae155b8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9e6ae155b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae15908"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae15a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae15c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae15da0"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae14020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae141a8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae14330"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae144b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9e6ae11a50" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9e6ae11a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae11da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae10020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae101a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae10330"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae104b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae10640"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae107c8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae10950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9e6ae172a8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9e6ae172a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae175f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae17780"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae17908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae17a90"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae17c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae17da0"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae16020"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae161a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9e6ae14740" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9e6ae14740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae14a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae14c18"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae14da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae13020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae131a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae13330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae134b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae13640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9e6ae10bd8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9e6ae10bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae0f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae0f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae0f330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae0f4b8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae0f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae0f7c8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae0f950"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae0fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a899a10" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a899a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a899d60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a898020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a8981a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a898330"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a8984b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a898640"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a8987c8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a898950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a891a10" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a891a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a891d60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a890020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a8901a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a890330"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a8904b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a890640"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a8907c8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a890950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a88ea10" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a88ea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a88ed60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a88d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a88d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a88d330"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a88d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a88d640"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a88d7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a88d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a88ba10" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a88ba10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a88bd60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a88a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a88a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a88a330"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a88a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a88a640"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a88a7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a88a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a888a10" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a888a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a888d60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a887020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a8871a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a887330"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a8874b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a887640"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a8877c8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a887950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a885a10" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a885a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a885d60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a883020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a8831a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a883330"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a8834b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a883640"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a8837c8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a883950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a881a10" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a881a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a881d60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a880020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a8801a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a880330"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a8804b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a880640"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a8807c8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a880950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a87ea10" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a87ea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a87ed60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a87d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a87d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a87d330"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a87d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a87d640"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a87d7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a87d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9e6ae08e18" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9e6ae08e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae061a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae06330"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae064b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae06640"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae067c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae06950"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae06ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae06c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9e6ae032a8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9e6ae032a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae035f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae03780"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae03908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae03a90"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae03c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae03da0"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae02020"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae021a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9e6ae0abd0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9e6ae0abd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae09020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae091a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae09330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae094b8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae09640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae097c8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae09950"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae09ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9e6ae05020" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9e6ae05020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae05370"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae054f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae05680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae05808"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae05990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae05b18"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae05ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae05e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9e6ae02430" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9e6ae02430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae02780"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae02908"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae02a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae02c18"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae02da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae01020"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae011a8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae01330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9e6ae09d60" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9e6ae09d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae080d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae08260"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae083e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae08570"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae086f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae08880"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae08a08"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae08b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9e6ae04120" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9e6ae04120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae04470"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae045f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae04780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae04908"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae04a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae04c18"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae04da0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae03020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9e6ae015b8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9e6ae015b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ae01908"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ae01a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ae01c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ae01da0"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ae00020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ae001a8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ae00330"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ae004b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a82d970" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a82d970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a82dcc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a82de48"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a82c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a82c1a8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a82c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a82c4b8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a82c640"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a82c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a82a970" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a82a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a82acc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a82ae48"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a829020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a8291a8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a829330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a8294b8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a829640"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a8297c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a827970" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a827970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a827cc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a827e48"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a826020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a8261a8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a826330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a8264b8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a826640"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a8267c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a824970" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a824970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a824cc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a824e48"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a823020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a8231a8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a823330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a8234b8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a823640"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a8237c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a821970" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a821970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a821cc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a821e48"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a820020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a8201a8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a820330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a8204b8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a820640"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a8207c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a81e970" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a81e970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a81ecc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a81ee48"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a81d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a81d1a8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a81d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a81d4b8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a81d640"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a81d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a81b970" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a81b970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a81bcc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a81be48"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a819020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a8191a8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a819330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a8194b8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a819640"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a8197c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a817970" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a817970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a817cc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a817e48"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a816020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a8161a8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a816330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a8164b8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a816640"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a8167c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9e6adf8740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9e6adf8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6adf8a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6adf8c18"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6adf8da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6adf7020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6adf71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6adf7330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6adf74b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6adf7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9e6adf5bd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9e6adf5bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6adf4020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6adf41a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6adf4330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6adf44b8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6adf4640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6adf47c8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6adf4950"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6adf4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9e6adfa500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9e6adfa500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6adfa850"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6adfa9d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6adfab60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6adface8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6adfae70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6adf9020"/>
        <function-ref name="set" scoped="" ref="0x7f9e6adf91a8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6adf9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9e6adf78c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9e6adf78c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6adf7c18"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6adf7da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6adf6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6adf61a8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6adf6330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6adf64b8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6adf6640"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6adf67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9e6adf4d60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9e6adf4d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6adf30d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6adf3260"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6adf33e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6adf3570"/>
        <function-ref name="get" scoped="" ref="0x7f9e6adf36f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6adf3880"/>
        <function-ref name="set" scoped="" ref="0x7f9e6adf3a08"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6adf3b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9e6adf95b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9e6adf95b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6adf9908"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6adf9a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6adf9c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6adf9da0"/>
        <function-ref name="get" scoped="" ref="0x7f9e6adf8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6adf81a8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6adf8330"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6adf84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9e6adf6a50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9e6adf6a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6adf6da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6adf5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6adf51a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6adf5330"/>
        <function-ref name="get" scoped="" ref="0x7f9e6adf54b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6adf5640"/>
        <function-ref name="set" scoped="" ref="0x7f9e6adf57c8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6adf5950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9e6adf3e18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9e6adf3e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6adf21a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6adf2330"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6adf24b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6adf2640"/>
        <function-ref name="get" scoped="" ref="0x7f9e6adf27c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6adf2950"/>
        <function-ref name="set" scoped="" ref="0x7f9e6adf2ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6adf2c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a7c66a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a7c66a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a7c69f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a7c6b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a7c6d08"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a7c5020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a7c51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a7c5330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a7c54b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a7c5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a7c3710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a7c3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a7c3a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a7c3be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a7c3d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a7c2020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a7c21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a7c2330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a7c24b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a7c2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a7c0710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a7c0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a7c0a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a7c0be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a7c0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a7bf020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a7bf1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a7bf330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a7bf4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a7bf640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a7bd710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a7bd710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a7bda60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a7bdbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a7bdd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a7bc020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a7bc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a7bc330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a7bc4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a7bc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a7ba710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a7ba710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a7baa60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a7babe8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a7bad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a7b9020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a7b91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a7b9330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a7b94b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a7b9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a7b7710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a7b7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a7b7a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a7b7be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a7b7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a7b6020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a7b61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a7b6330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a7b64b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a7b6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a7b4710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a7b4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a7b4a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a7b4be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a7b4d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a7b2020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a7b21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a7b2330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a7b24b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a7b2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a7b0710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a7b0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a7b0a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a7b0be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a7b0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a7af020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a7af1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a7af330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a7af4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a7af640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9e6ade9120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9e6ade9120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ade9470"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ade95f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ade9780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ade9908"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ade9a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ade9c18"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ade9da0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ade8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9e6ade65b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9e6ade65b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ade6908"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ade6a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ade6c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ade6da0"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ade5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ade51a8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ade5330"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ade54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9e6adece40" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9e6adece40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6adeb1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6adeb348"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6adeb4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6adeb658"/>
        <function-ref name="get" scoped="" ref="0x7f9e6adeb7e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6adeb968"/>
        <function-ref name="set" scoped="" ref="0x7f9e6adebaf0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6adebc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9e6ade82a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9e6ade82a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ade85f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ade8780"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ade8908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ade8a90"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ade8c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ade8da0"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ade7020"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ade71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9e6ade5740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9e6ade5740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ade5a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ade5c18"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ade5da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ade4020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ade41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ade4330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ade44b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ade4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9e6adea020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9e6adea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6adea370"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6adea4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6adea680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6adea808"/>
        <function-ref name="get" scoped="" ref="0x7f9e6adea990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6adeab18"/>
        <function-ref name="set" scoped="" ref="0x7f9e6adeaca0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6adeae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9e6ade7430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9e6ade7430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ade7780"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ade7908"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ade7a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ade7c18"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ade7da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ade6020"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ade61a8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ade6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9e6ade48c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9e6ade48c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ade4c18"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ade4da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ade3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ade31a8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ade3330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ade34b8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ade3640"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ade37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a75f6a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a75f6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a75f9f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a75fb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a75fd08"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a75e020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a75e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a75e330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a75e4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a75e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a75c710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a75c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a75ca60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a75cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a75cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a75b020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a75b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a75b330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a75b4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a75b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a759710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a759710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a759a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a759be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a759d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a758020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a7581a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a758330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a7584b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a758640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a756710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a756710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a756a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a756be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a756d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a755020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a7551a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a755330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a7554b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a755640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a753710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a753710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a753a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a753be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a753d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a752020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a7521a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a752330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a7524b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a752640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a750710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a750710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a750a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a750be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a750d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a74f020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a74f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a74f330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a74f4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a74f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a74d710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a74d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a74da60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a74dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a74dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a74c020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a74c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a74c330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a74c4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a74c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a74a710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a74a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a74aa60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a74abe8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a74ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a748020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a7481a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a748330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a7484b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a748640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9e6addbbd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9e6addbbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6adda020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6adda1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6adda330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6adda4b8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6adda640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6adda7c8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6adda950"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6addaad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9e6add7020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9e6add7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6add7370"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6add74f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6add7680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6add7808"/>
        <function-ref name="get" scoped="" ref="0x7f9e6add7990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6add7b18"/>
        <function-ref name="set" scoped="" ref="0x7f9e6add7ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6add7e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9e6addd930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9e6addd930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6adddc80"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6addde08"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6addc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6addc1a8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6addc330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6addc4b8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6addc640"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6addc7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9e6addad60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9e6addad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6add90d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6add9260"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6add93e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6add9570"/>
        <function-ref name="get" scoped="" ref="0x7f9e6add96f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6add9880"/>
        <function-ref name="set" scoped="" ref="0x7f9e6add9a08"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6add9b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9e6add5120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9e6add5120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6add5470"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6add55f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6add5780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6add5908"/>
        <function-ref name="get" scoped="" ref="0x7f9e6add5a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6add5c18"/>
        <function-ref name="set" scoped="" ref="0x7f9e6add5da0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6add4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9e6addca50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9e6addca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6addcda0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6addb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6addb1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6addb330"/>
        <function-ref name="get" scoped="" ref="0x7f9e6addb4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6addb640"/>
        <function-ref name="set" scoped="" ref="0x7f9e6addb7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6addb950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9e6add9e18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9e6add9e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6add81a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6add8330"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6add84b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6add8640"/>
        <function-ref name="get" scoped="" ref="0x7f9e6add87c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6add8950"/>
        <function-ref name="set" scoped="" ref="0x7f9e6add8ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6add8c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9e6add42a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9e6add42a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6add45f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6add4780"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6add4908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6add4a90"/>
        <function-ref name="get" scoped="" ref="0x7f9e6add4c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6add4da0"/>
        <function-ref name="set" scoped="" ref="0x7f9e6add3020"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6add31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a6f86a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a6f86a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a6f89f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a6f8b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a6f8d08"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a6f7020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a6f71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a6f7330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a6f74b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a6f7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a6f5710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a6f5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a6f5a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a6f5be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a6f5d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a6f4020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a6f41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a6f4330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a6f44b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a6f4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a6f2710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a6f2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a6f2a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a6f2be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a6f2d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a6f1020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a6f11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a6f1330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a6f14b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a6f1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a6ef710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a6ef710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a6efa60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a6efbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a6efd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a6ee020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a6ee1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a6ee330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a6ee4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a6ee640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a6ec710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a6ec710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a6eca60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a6ecbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a6ecd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a6eb020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a6eb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a6eb330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a6eb4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a6eb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a6e9710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a6e9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a6e9a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a6e9be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a6e9d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a6e8020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a6e81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a6e8330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a6e84b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a6e8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a6e6710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a6e6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a6e6a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a6e6be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a6e6d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a6e5020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a6e51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a6e5330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a6e54b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a6e5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a6e3710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a6e3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a6e3a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a6e3be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a6e3d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a6e1020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a6e11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a6e1330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a6e14b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a6e1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9e6adcc740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9e6adcc740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6adcca90"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6adccc18"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6adccda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6adca020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6adca1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6adca330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6adca4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6adca640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9e6adc8bd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9e6adc8bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6adc7020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6adc71a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6adc7330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6adc74b8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6adc7640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6adc77c8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6adc7950"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6adc7ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9e6adce500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9e6adce500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6adce850"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6adce9d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6adceb60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6adcece8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6adcee70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6adcd020"/>
        <function-ref name="set" scoped="" ref="0x7f9e6adcd1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6adcd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9e6adca8c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9e6adca8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6adcac18"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6adcada0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6adc9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6adc91a8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6adc9330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6adc94b8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6adc9640"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6adc97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9e6adc7d60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9e6adc7d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6adc60d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6adc6260"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6adc63e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6adc6570"/>
        <function-ref name="get" scoped="" ref="0x7f9e6adc66f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6adc6880"/>
        <function-ref name="set" scoped="" ref="0x7f9e6adc6a08"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6adc6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9e6adcd5b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9e6adcd5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6adcd908"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6adcda90"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6adcdc18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6adcdda0"/>
        <function-ref name="get" scoped="" ref="0x7f9e6adcc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6adcc1a8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6adcc330"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6adcc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9e6adc9a50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9e6adc9a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6adc9da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6adc8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6adc81a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6adc8330"/>
        <function-ref name="get" scoped="" ref="0x7f9e6adc84b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6adc8640"/>
        <function-ref name="set" scoped="" ref="0x7f9e6adc87c8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6adc8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9e6adc6e18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9e6adc6e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6adc51a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6adc5330"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6adc54b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6adc5640"/>
        <function-ref name="get" scoped="" ref="0x7f9e6adc57c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6adc5950"/>
        <function-ref name="set" scoped="" ref="0x7f9e6adc5ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6adc5c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a6916a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a6916a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a6919f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a691b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a691d08"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a690020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a6901a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a690330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a6904b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a690640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a68e710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a68e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a68ea60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a68ebe8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a68ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a68d020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a68d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a68d330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a68d4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a68d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a68b710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a68b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a68ba60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a68bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a68bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a68a020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a68a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a68a330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a68a4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a68a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a688710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a688710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a688a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a688be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a688d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a687020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a6871a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a687330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a6874b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a687640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a685710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a685710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a685a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a685be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a685d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a684020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a6841a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a684330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a6844b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a684640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a682710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a682710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a682a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a682be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a682d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a681020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a6811a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a681330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a6814b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a681640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a67f710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a67f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a67fa60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a67fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a67fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a67e020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a67e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a67e330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a67e4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a67e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6a67c710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6a67c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6a67ca60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6a67cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6a67cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6a67b020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a67b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6a67b330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a67b4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6a67b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6adbe3e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6adbe3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6adbe730"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6adbe8b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6adbea40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6adbebc8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6adbed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ada8020"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ada81a8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ada8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6ada4c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6ada4c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ada3020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ada31a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ada3330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ada34b8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ada3640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ada37c8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ada3950"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ada3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6ad9e3e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6ad9e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ad9e730"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ad9e8b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ad9ea40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ad9ebc8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ad9ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ad9d020"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ad9d1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ad9d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6ad9ac38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6ad9ac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ad99020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ad991a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ad99330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ad994b8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ad99640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ad997c8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ad99950"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ad99ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6ad943e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6ad943e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ad94730"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ad948b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ad94a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ad94bc8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ad94d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ad93020"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ad931a8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ad93330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6ad90c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6ad90c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ad8e020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ad8e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ad8e330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ad8e4b8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ad8e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ad8e7c8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ad8e950"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ad8ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6ad8a480" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6ad8a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ad8a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ad8a958"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ad8aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ad8ac68"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ad8adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ad89020"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ad891a8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ad89330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6ad85c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6ad85c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ad84020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ad841a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ad84330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ad844b8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ad84640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ad847c8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ad84950"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ad84ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6ad80520" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6ad80520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ad80870"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ad809f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ad80b80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ad80d08"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ad7e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ad7e1a8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ad7e330"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ad7e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6ad7bcd8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6ad7bcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ad7a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ad7a228"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ad7a3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ad7a538"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ad7a6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ad7a848"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ad7a9d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ad7ab58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6ad753e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6ad753e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ad75730"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ad758b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ad75a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ad75bc8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ad75d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ad74020"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ad741a8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ad74330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6ad71c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6ad71c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ad70020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ad701a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ad70330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ad704b8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ad70640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ad707c8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ad70950"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ad70ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6ad6b3e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6ad6b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ad6b730"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ad6b8b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ad6ba40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ad6bbc8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ad6bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ad6a020"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ad6a1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ad6a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e6ad66c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e6ad66c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ad65020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ad651a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ad65330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ad654b8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ad65640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ad657c8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ad65950"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ad65ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9e6ad2c4b0" loc="61:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9e6ad2c4b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f9e6b0496f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f9e6b0496f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e6ad2c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f9e6ad2cae0" loc="62:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f9e6ad2cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f9e6ad2ce30"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f9e6ad2b020"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f9e6ad2b1a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f9e6ad2b330"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f9e6ad2b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f9e6ad0d418" loc="60:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f9e6ad0d418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e6ad0d768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f9e6aebec38" loc="57:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f9e6aebec38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f9e6ad0e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f9e6ad0ece0" loc="59:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f9e6ad0ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e6ad0d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f9e6ad0e308" loc="58:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f9e6ad0e308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e6ad0e658"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f9e6ad0e7e0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f9e6ad0e968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f9e6b04e1c8" loc="48:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f9e6b04e1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9e6b04e518"/>
        <function-ref name="runTask" scoped="" ref="0x7f9e6b04e6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f9e6b02b5c8" loc="47:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f9e6b02b5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e6b02b918"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f9e6b02baa0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f9e6b02bc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f9e6af77c58" loc="56:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f9e6af77c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9e6af76020"/>
        <function-ref name="runTask" scoped="" ref="0x7f9e6af761a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f9e6af73168" loc="57:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f9e6af73168"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f9e6af734b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f9e6af78d88" loc="55:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f9e6af78d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e6af77170"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f9e6af772f8"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f9e6af77480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f9e6af56988" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f9e6af56988"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f9e6af56cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f9e6b02ae28" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f9e6b02ae28"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f9e6af5a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f9e6af573c8" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f9e6af573c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f9e6af57718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9e6ad00a60" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="TestAppC.TimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9e6ad00a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e6afbf020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e6afbf378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9e6ab41d60"/>
        <function-ref name="fired" scoped="" ref="0x7f9e6ab42470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9e6ab411c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9e6ab42d10"/>
        <function-ref name="getdt" scoped="" ref="0x7f9e6ab40648"/>
        <function-ref name="gett0" scoped="" ref="0x7f9e6ab401f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9e6ab428c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9e6ab43620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9e6ab41790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9e6ab43ac0"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6ab42020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f9e6acf76a0" loc="49:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f9e6acf76a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e6afbf020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e6afbf378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9e6acf4a18"/>
        <function-ref name="fired" scoped="" ref="0x7f9e6acf5158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9e6acf5e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9e6acf59f8"/>
        <function-ref name="getdt" scoped="" ref="0x7f9e6acf22e8"/>
        <function-ref name="gett0" scoped="" ref="0x7f9e6acf4e68"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9e6acf55a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9e6acf6370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9e6acf4448"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9e6acf6810"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6acf6cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f9e6acefdb8" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f9e6acefdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e6afbf020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e6afbf378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9e6acea088"/>
        <function-ref name="fired" scoped="" ref="0x7f9e6acec708"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9e6aceb470"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9e6aceb020"/>
        <function-ref name="getdt" scoped="" ref="0x7f9e6acea928"/>
        <function-ref name="gett0" scoped="" ref="0x7f9e6acea4d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9e6acecb58"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9e6aced930"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9e6aceba40"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9e6aceddd0"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6acec2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f9e6ace5298" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f9e6ace5298"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e6afbf020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e6afbf378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9e6ace5e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9e6acef0c0" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9e6acef0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e6acef410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7f9e6acd63b8" loc="29:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7f9e6acd63b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e6afbf020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e6afbf378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9e6b929608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9e6acd2130"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9e6acd2a40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9e6acd25b8"/>
        <function-ref name="overflow" scoped="" ref="0x7f9e6acd1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9e6ace48e8" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9e6ace48e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e6ace4c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7f9e6ace01c8" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7f9e6ace01c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e6afbf020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e6afbf378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9e6b929608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9e6acd9918"/>
        <function-ref name="fired" scoped="" ref="0x7f9e6acdf980"/>
        <function-ref name="startAt" scoped="" ref="0x7f9e6acd9310"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9e6acdfe08"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9e6acd9da0"/>
        <function-ref name="start" scoped="" ref="0x7f9e6acdf020"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6acdf4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f9e6abdc7c8" loc="61:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f9e6abdc7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e6afbf020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e6afbf378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9e6b929608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9e6abd8020"/>
        <function-ref name="fired" scoped="" ref="0x7f9e6abda020"/>
        <function-ref name="startAt" scoped="" ref="0x7f9e6abda930"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9e6abda4a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9e6abd84a8"/>
        <function-ref name="start" scoped="" ref="0x7f9e6abdb578"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6abdba50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9e6abdc020" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9e6abdc020"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f9e6b049388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f9e6b049388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e6abdc370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f9e6abd8a90" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f9e6abd8a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e6afbf020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e6afbf378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9e6b929608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9e6abd7828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9e6abd6190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9e6abd7cb0"/>
        <function-ref name="overflow" scoped="" ref="0x7f9e6abd6618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7f9e6a5a40c0" loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f9e6a5a40c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f9e6a5a4410"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f9e6a5a4598"/>
        <function-ref name="getControlA" scoped="" ref="0x7f9e6a5a4720"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f9e6a5a48a8"/>
        <function-ref name="setControlB" scoped="" ref="0x7f9e6a5a4a30"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f9e6a5a4bb8"/>
        <function-ref name="getControlB" scoped="" ref="0x7f9e6a5a4d40"/>
        <function-ref name="setControlA" scoped="" ref="0x7f9e6a5a3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f9e6a5b0e10" loc="61:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f9e6a5b0e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e6afbf020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e6afbf378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9e6b929608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9e6a5ad628"/>
        <function-ref name="fired" scoped="" ref="0x7f9e6a5ae580"/>
        <function-ref name="startAt" scoped="" ref="0x7f9e6a5ad020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9e6a5aea08"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9e6a5adab0"/>
        <function-ref name="start" scoped="" ref="0x7f9e6a5afbe8"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6a5ae0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9e6a5b0668" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9e6a5b0668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e6a5b09b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f9e6a5ab128" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f9e6a5ab128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e6afbf020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e6afbf378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9e6b929608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9e6a5abe78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9e6a5aa7b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9e6a5aa330"/>
        <function-ref name="overflow" scoped="" ref="0x7f9e6a5aac40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7f9e6a59f510" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f9e6a59f510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f9e6a59f860"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f9e6a59f9e8"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f9e6a59fb70"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f9e6a59fcf8"/>
        <function-ref name="countBusy" scoped="" ref="0x7f9e6a59fe80"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f9e6a59e030"/>
        <function-ref name="getAssr" scoped="" ref="0x7f9e6a59e1b8"/>
        <function-ref name="setAssr" scoped="" ref="0x7f9e6a59e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7f9e6a5a33b0" loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f9e6a5a33b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f9e6a5a0c20"/>
        <function-ref name="fired" scoped="" ref="0x7f9e6a5a2980"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a5a2020"/>
        <function-ref name="reset" scoped="" ref="0x7f9e6a5a2e08"/>
        <function-ref name="isOn" scoped="" ref="0x7f9e6a59f0f8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a5a24a8"/>
        <function-ref name="start" scoped="" ref="0x7f9e6a5a0310"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6a5a0798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f9e6a5a9228" loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9e6a5a9228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f9e6a5a5310"/>
        <function-ref name="test" scoped="" ref="0x7f9e6a5a6998"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a5a9da8"/>
        <function-ref name="setScale" scoped="" ref="0x7f9e6a5a5798"/>
        <function-ref name="getScale" scoped="" ref="0x7f9e6a5a5c70"/>
        <function-ref name="reset" scoped="" ref="0x7f9e6a5a8bd0"/>
        <function-ref name="overflow" scoped="" ref="0x7f9e6a5a8748"/>
        <function-ref name="isOn" scoped="" ref="0x7f9e6a5a6e20"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a5a8270"/>
        <function-ref name="start" scoped="" ref="0x7f9e6a5a6088"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6a5a6510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f9e6ac4a3c0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f9e6ac4a3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f9e6ac4a710"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f9e6ac4a898"/>
        <function-ref name="getControlA" scoped="" ref="0x7f9e6ac4aa20"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f9e6ac4aba8"/>
        <function-ref name="setControlB" scoped="" ref="0x7f9e6ac4ad30"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f9e6ac49020"/>
        <function-ref name="getControlB" scoped="" ref="0x7f9e6ac491a8"/>
        <function-ref name="setControlA" scoped="" ref="0x7f9e6ac49330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f9e6ac469e8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f9e6ac469e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f9e6ac46d38"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f9e6ac44020"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f9e6ac441a8"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f9e6ac44330"/>
        <function-ref name="countBusy" scoped="" ref="0x7f9e6ac444b8"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f9e6ac44640"/>
        <function-ref name="getAssr" scoped="" ref="0x7f9e6ac447c8"/>
        <function-ref name="setAssr" scoped="" ref="0x7f9e6ac44950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f9e6ac497f8" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f9e6ac497f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f9e6ac46020"/>
        <function-ref name="fired" scoped="" ref="0x7f9e6ac48d08"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ac483a8"/>
        <function-ref name="reset" scoped="" ref="0x7f9e6ac471f8"/>
        <function-ref name="isOn" scoped="" ref="0x7f9e6ac464a8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ac48830"/>
        <function-ref name="start" scoped="" ref="0x7f9e6ac47680"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6ac47b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9e6ac50288" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9e6ac50288"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f9e6ac4c4a8"/>
        <function-ref name="test" scoped="" ref="0x7f9e6ac4da40"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ac50e08"/>
        <function-ref name="setScale" scoped="" ref="0x7f9e6ac4c930"/>
        <function-ref name="getScale" scoped="" ref="0x7f9e6ac4ce08"/>
        <function-ref name="reset" scoped="" ref="0x7f9e6ac4ec70"/>
        <function-ref name="overflow" scoped="" ref="0x7f9e6ac4e7e8"/>
        <function-ref name="isOn" scoped="" ref="0x7f9e6ac4c020"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ac4e310"/>
        <function-ref name="start" scoped="" ref="0x7f9e6ac4d130"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6ac4d5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f9e6ac3b020" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f9e6ac3b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f9e6ac3b370"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f9e6ac3b4f8"/>
        <function-ref name="getControlA" scoped="" ref="0x7f9e6ac3b680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f9e6ac3b808"/>
        <function-ref name="setControlB" scoped="" ref="0x7f9e6ac3b990"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f9e6ac3bb18"/>
        <function-ref name="getControlB" scoped="" ref="0x7f9e6ac3bca0"/>
        <function-ref name="setControlA" scoped="" ref="0x7f9e6ac3be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f9e6ac36578" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f9e6ac36578"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f9e6ac368c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f9e6ac36c78" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f9e6ac36c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f9e6ac35020"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f9e6ac351a8"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f9e6ac35330"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f9e6ac354b8"/>
        <function-ref name="countBusy" scoped="" ref="0x7f9e6ac35640"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f9e6ac357c8"/>
        <function-ref name="getAssr" scoped="" ref="0x7f9e6ac35950"/>
        <function-ref name="setAssr" scoped="" ref="0x7f9e6ac35ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f9e6ac3a340" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f9e6ac3a340"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f9e6ac38c20"/>
        <function-ref name="fired" scoped="" ref="0x7f9e6ac39980"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ac39020"/>
        <function-ref name="reset" scoped="" ref="0x7f9e6ac39e08"/>
        <function-ref name="isOn" scoped="" ref="0x7f9e6ac360f8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ac394a8"/>
        <function-ref name="start" scoped="" ref="0x7f9e6ac38310"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6ac38798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9e6ac43e00" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9e6ac43e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f9e6ac3d0f8"/>
        <function-ref name="test" scoped="" ref="0x7f9e6ac3e798"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ac40a18"/>
        <function-ref name="setScale" scoped="" ref="0x7f9e6ac3d580"/>
        <function-ref name="getScale" scoped="" ref="0x7f9e6ac3da58"/>
        <function-ref name="reset" scoped="" ref="0x7f9e6ac3f980"/>
        <function-ref name="overflow" scoped="" ref="0x7f9e6ac3f4f8"/>
        <function-ref name="isOn" scoped="" ref="0x7f9e6ac3ec20"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ac3f020"/>
        <function-ref name="start" scoped="" ref="0x7f9e6ac3fe08"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6ac3e310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f9e6aba6cf0" loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7f9e6aba6cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9e6aba50a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9e6aba5228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f9e6abaac70" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f9e6abaac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e6afbf020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e6afbf378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9e6b929608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9e6aba6410"/>
        <function-ref name="fired" scoped="" ref="0x7f9e6aba84a8"/>
        <function-ref name="startAt" scoped="" ref="0x7f9e6aba8db8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9e6aba8930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9e6aba6898"/>
        <function-ref name="start" scoped="" ref="0x7f9e6aba99f0"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6aba8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9e6abafab0" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9e6abafab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e6afbf020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e6afbf378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9e6ababd60"/>
        <function-ref name="fired" scoped="" ref="0x7f9e6abad470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9e6abab1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9e6abadd10"/>
        <function-ref name="getdt" scoped="" ref="0x7f9e6abaa648"/>
        <function-ref name="gett0" scoped="" ref="0x7f9e6abaa1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9e6abad8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9e6abae620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9e6abab790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9e6abaeac0"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6abad020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f9e6ab58930" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7f9e6ab58930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9e6ab58c80"/>
        <function-ref name="runTask" scoped="" ref="0x7f9e6ab58e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f9e6ab5d858" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7f9e6ab5d858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e6afbf020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e6afbf378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9e6ab59bc0"/>
        <function-ref name="fired" scoped="" ref="0x7f9e6ab5b1c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9e6ab59020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9e6ab5ba60"/>
        <function-ref name="getdt" scoped="" ref="0x7f9e6ab584d8"/>
        <function-ref name="gett0" scoped="" ref="0x7f9e6ab58088"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9e6ab5b610"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9e6ab5c3d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9e6ab595f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9e6ab5c878"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6ab5cd18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9e6ab635e0" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9e6ab635e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e6afbf020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e6afbf378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9e6ab5f988"/>
        <function-ref name="fired" scoped="" ref="0x7f9e6ab60020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9e6ab60d70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9e6ab60900"/>
        <function-ref name="getdt" scoped="" ref="0x7f9e6ab5d2d8"/>
        <function-ref name="gett0" scoped="" ref="0x7f9e6ab5fdf8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9e6ab60490"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9e6ab62198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9e6ab5f398"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9e6ab62658"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6ab62b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f9e6ab54128" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f9e6ab54128"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e6afbf020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e6afbf378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9e6ab54ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f9e6ab4b330" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f9e6ab4b330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e6afbf020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e6afbf378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9e6b929608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9e6ab490c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9e6ab499d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9e6ab49548"/>
        <function-ref name="overflow" scoped="" ref="0x7f9e6ab49e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f9e6ab3ea20" loc="44:/opt/tinyos-2.1.2/tos/system/LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f9e6ab3ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ab3ed70"/>
        <function-ref name="on" scoped="" ref="0x7f9e6ab3b020"/>
        <function-ref name="off" scoped="" ref="0x7f9e6ab3b1a8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ab3b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Green" ref="0x7f9e6ab3abb8" loc="68:/opt/tinyos-2.1.2/tos/system/LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Green" scoped="" ref="0x7f9e6ab3abb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ab39020"/>
        <function-ref name="on" scoped="" ref="0x7f9e6ab391a8"/>
        <function-ref name="off" scoped="" ref="0x7f9e6ab39330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ab394b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Yellow" ref="0x7f9e6ab38308" loc="77:/opt/tinyos-2.1.2/tos/system/LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Yellow" scoped="" ref="0x7f9e6ab38308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ab38658"/>
        <function-ref name="on" scoped="" ref="0x7f9e6ab387e0"/>
        <function-ref name="off" scoped="" ref="0x7f9e6ab38968"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ab38af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiLed" ref="0x7f9e6ab38d90" loc="85:/opt/tinyos-2.1.2/tos/system/LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MultiLed" scoped="" ref="0x7f9e6ab38d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="MultiLed"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f9e6ab37170"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ab372f8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ab37480"/>
        <function-ref name="on" scoped="" ref="0x7f9e6ab37608"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ab37790"/>
        <function-ref name="off" scoped="" ref="0x7f9e6ab37918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f9e6ab3b608" loc="46:/opt/tinyos-2.1.2/tos/system/LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f9e6ab3b608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ab3b958"/>
        <function-ref name="on" scoped="" ref="0x7f9e6ab3bae0"/>
        <function-ref name="off" scoped="" ref="0x7f9e6ab3bc68"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ab3bdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Red" ref="0x7f9e6ab39780" loc="71:/opt/tinyos-2.1.2/tos/system/LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Red" scoped="" ref="0x7f9e6ab39780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ab39ad0"/>
        <function-ref name="on" scoped="" ref="0x7f9e6ab39c58"/>
        <function-ref name="off" scoped="" ref="0x7f9e6ab39de0"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ab38020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f9e6ab3a0f0" loc="48:/opt/tinyos-2.1.2/tos/system/LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f9e6ab3a0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ab3a440"/>
        <function-ref name="on" scoped="" ref="0x7f9e6ab3a5c8"/>
        <function-ref name="off" scoped="" ref="0x7f9e6ab3a750"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ab3a8d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiLed" ref="0x7f9e6ab364f0" loc="39:/opt/tinyos-2.1.2/tos/platforms/iris/PlatformLedC.nc">
      <component-ref qname="PlatformLedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MultiLed" scoped="" ref="0x7f9e6ab364f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MultiLed"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f9e6ab36840"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ab369c8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ab36b50"/>
        <function-ref name="on" scoped="" ref="0x7f9e6ab36cd8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ab36e60"/>
        <function-ref name="off" scoped="" ref="0x7f9e6ab33020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led" ref="0x7f9e6ab337a0" loc="40:/opt/tinyos-2.1.2/tos/platforms/iris/PlatformLedC.nc">
      <component-ref qname="PlatformLedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led" scoped="" ref="0x7f9e6ab337a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ab33af0"/>
        <function-ref name="on" scoped="" ref="0x7f9e6ab33c78"/>
        <function-ref name="off" scoped="" ref="0x7f9e6ab33e00"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ab32020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f9e6ab23760" loc="46:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f9e6ab23760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9e6ab23ab0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9e6ab23c38"/>
        <function-ref name="led1On" scoped="" ref="0x7f9e6ab23dc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9e6ab2e020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9e6ab2e1a8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ab2e330"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9e6ab2e4b8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9e6ab2ead8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ab2e640"/>
        <function-ref name="led0On" scoped="" ref="0x7f9e6ab2e7c8"/>
        <function-ref name="led2On" scoped="" ref="0x7f9e6ab2e950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f9e6ab1f6c8" loc="50:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f9e6ab1f6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ab1fa18"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ab1fba0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ab1fd28"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ab1e020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ab1e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ab1e330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ab1e4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ab1e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9e6ab2d9b8" loc="46:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9e6ab2d9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e6ab2dd08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f9e6ab1e958" loc="51:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f9e6ab1e958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ab1eca8"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ab1ee30"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ab1d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ab1d1a8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ab1d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ab1d4b8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ab1d640"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ab1d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f9e6ab20020" loc="47:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f9e6ab20020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9e6ab20370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9e6ab204f8"/>
        <function-ref name="led1On" scoped="" ref="0x7f9e6ab20680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9e6ab20808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9e6ab20990"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ab20b18"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9e6ab20ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9e6ab1f330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ab20e28"/>
        <function-ref name="led0On" scoped="" ref="0x7f9e6ab1f020"/>
        <function-ref name="led2On" scoped="" ref="0x7f9e6ab1f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f9e6ab1dae0" loc="52:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f9e6ab1dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ab1de30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ab1c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ab1c1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ab1c330"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ab1c4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ab1c640"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ab1c7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ab1c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f9e6ab01060" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f9e6ab01060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ab013b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ab01538"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ab016c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ab01848"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ab019d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ab01b58"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ab01ce0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6ab01e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f9e6ab001f0" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f9e6ab001f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6ab00540"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6ab006c8"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6ab00850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6ab009d8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6ab00b60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6ab00ce8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6ab00e70"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6aaff020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f9e6aafe460" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9e6aafe460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e6aafe7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f9e6aaff378" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f9e6aaff378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e6aaff6c8"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e6aaff850"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6aaff9d8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e6aaffb60"/>
        <function-ref name="get" scoped="" ref="0x7f9e6aaffce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e6aaffe70"/>
        <function-ref name="set" scoped="" ref="0x7f9e6aafe020"/>
        <function-ref name="clr" scoped="" ref="0x7f9e6aafe1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiLed" ref="0x7f9e6aaf7238" loc="39:/opt/tinyos-2.1.2/tos/platforms/iris/PlatformLedP.nc">
      <component-ref qname="PlatformLedP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MultiLed" scoped="" ref="0x7f9e6aaf7238"/></type-interface>
      <instance>
        <interfacedef-ref qname="MultiLed"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f9e6aaf7588"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e6aaf7710"/>
        <function-ref name="get" scoped="" ref="0x7f9e6aaf7898"/>
        <function-ref name="on" scoped="" ref="0x7f9e6aaf7a20"/>
        <function-ref name="set" scoped="" ref="0x7f9e6aaf7ba8"/>
        <function-ref name="off" scoped="" ref="0x7f9e6aaf7d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led" ref="0x7f9e6aaf64f8" loc="40:/opt/tinyos-2.1.2/tos/platforms/iris/PlatformLedP.nc">
      <component-ref qname="PlatformLedP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led" scoped="" ref="0x7f9e6aaf64f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x7f9e6aaf6848"/>
        <function-ref name="on" scoped="" ref="0x7f9e6aaf69d0"/>
        <function-ref name="off" scoped="" ref="0x7f9e6aaf6b58"/>
        <function-ref name="set" scoped="" ref="0x7f9e6aaf6ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f9e6aaf5020" loc="43:/opt/tinyos-2.1.2/tos/platforms/iris/PlatformLedP.nc">
      <component-ref qname="PlatformLedP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f9e6aaf5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9e6aaf5370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9e6aaf54f8"/>
        <function-ref name="led1On" scoped="" ref="0x7f9e6aaf5680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9e6aaf5808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9e6aaf5990"/>
        <function-ref name="get" scoped="" ref="0x7f9e6aaf5b18"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9e6aaf5ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9e6aaf4330"/>
        <function-ref name="set" scoped="" ref="0x7f9e6aaf5e28"/>
        <function-ref name="led0On" scoped="" ref="0x7f9e6aaf4020"/>
        <function-ref name="led2On" scoped="" ref="0x7f9e6aaf41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f9e6aad30f0" loc="38:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfC.nc">
      <component-ref qname="SerialPrintfC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f9e6aad30f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9e6aad3440"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6aad35c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7f9e6aaca358" loc="44:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x7f9e6aaca358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f9e6aaca6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartByte" ref="0x7f9e6aaceb60" loc="39:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f9e6aaceb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9e6aad1020"/>
        <function-ref name="receive" scoped="" ref="0x7f9e6aad11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9e6aad1c28" loc="43:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9e6aad1c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e6aad0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartControl" ref="0x7f9e6aad21d8" loc="38:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartControl" scoped="" ref="0x7f9e6aad21d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9e6aad2528"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6aad26b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f9e6aad14d8" loc="42:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f9e6aad14d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9e6aad1828"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6aad19b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f9e6aabf020" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f9e6aabf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9e6aabf370"/>
        <function-ref name="receive" scoped="" ref="0x7f9e6aabf4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f9e6aac0080" loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f9e6aac0080"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9e6aac03d0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f9e6aac0558"/>
        <function-ref name="receive" scoped="" ref="0x7f9e6aac06e0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f9e6aac0868"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f9e6aac09f0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f9e6aac0b78"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9e6aac0d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f9e6aad6db0" loc="40:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f9e6aad6db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9e6aac1170"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6aac12f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f9e6aab3878" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f9e6aab3878"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9e6aab3bc8"/>
        <function-ref name="receive" scoped="" ref="0x7f9e6aab3d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f9e6aab2080" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f9e6aab2080"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9e6aab23d0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f9e6aab2558"/>
        <function-ref name="receive" scoped="" ref="0x7f9e6aab26e0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f9e6aab2868"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f9e6aab29f0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f9e6aab2b78"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9e6aab2d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f9e6aab12b0" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f9e6aab12b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e6afbd430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9e6afbd788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9e6b929608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9e6aaaf088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9e6aaaf998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9e6aaaf510"/>
        <function-ref name="overflow" scoped="" ref="0x7f9e6aaafe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f9e6aab30c0" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f9e6aab30c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9e6aab3410"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6aab3598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f9e6aa6b430" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f9e6aa6b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9e6aa6b780"/>
        <function-ref name="receive" scoped="" ref="0x7f9e6aa6b908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x7f9e6aa6ac18" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x7f9e6aa6ac18"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9e6aa68020"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6aa681a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9e6aaab610" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9e6aaab610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e6aaab960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f9e6aa6bb90" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f9e6aa6bb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9e6aa6a020"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f9e6aa6a1a8"/>
        <function-ref name="receive" scoped="" ref="0x7f9e6aa6a330"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f9e6aa6a4b8"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f9e6aa6a640"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f9e6aa6a7c8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9e6aa6a950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f9e6aa662d0" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f9e6aa662d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e6afbd430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9e6afbd788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9e6b929608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9e6aa65088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9e6aa65998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9e6aa65510"/>
        <function-ref name="overflow" scoped="" ref="0x7f9e6aa65e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x7f9e6aa68c10" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x7f9e6aa68c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f9e6aa67020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f9e6aa671a8"/>
        <function-ref name="rxDone" scoped="" ref="0x7f9e6aa67330"/>
        <function-ref name="txDone" scoped="" ref="0x7f9e6aa674b8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f9e6aa67640"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f9e6aa677c8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f9e6aa67950"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f9e6aa67ad8"/>
        <function-ref name="tx" scoped="" ref="0x7f9e6aa67c60"/>
        <function-ref name="rx" scoped="" ref="0x7f9e6aa67de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f9e6aaabbe8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f9e6aaabbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9e6aa6b020"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6aa6b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x7f9e6aa68470" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x7f9e6aa68470"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9e6aa687c0"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6aa68948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7f9e6aa48158" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7f9e6aa48158"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f9e6aa484a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f9e6aa48630"/>
        <function-ref name="rxDone" scoped="" ref="0x7f9e6aa487b8"/>
        <function-ref name="txDone" scoped="" ref="0x7f9e6aa48940"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f9e6aa48ac8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f9e6aa48c50"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f9e6aa48dd8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f9e6aa47020"/>
        <function-ref name="tx" scoped="" ref="0x7f9e6aa471a8"/>
        <function-ref name="rx" scoped="" ref="0x7f9e6aa47330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7f9e6aa46860" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7f9e6aa46860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f9e6aa46bb0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f9e6aa46d38"/>
        <function-ref name="rxDone" scoped="" ref="0x7f9e6aa45020"/>
        <function-ref name="txDone" scoped="" ref="0x7f9e6aa451a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f9e6aa45330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f9e6aa454b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f9e6aa45640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f9e6aa457c8"/>
        <function-ref name="tx" scoped="" ref="0x7f9e6aa45950"/>
        <function-ref name="rx" scoped="" ref="0x7f9e6aa45ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7f9e6aa498b8" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7f9e6aa498b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9e6aa49c08"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6aa49d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7f9e6aa476b0" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7f9e6aa476b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9e6aa47a00"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6aa47b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7f9e6aa46020" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7f9e6aa46020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9e6aa46370"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6aa464f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7f9e6aa49060" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7f9e6aa49060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9e6aa493b0"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6aa49538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x7f9e6aa437e0" loc="114:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x7f9e6aa437e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e6aa43b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7f9e6aa3f158" loc="117:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7f9e6aa3f158"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f9e6aa3f4a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f9e6aa3f630"/>
        <function-ref name="rxDone" scoped="" ref="0x7f9e6aa3f7b8"/>
        <function-ref name="txDone" scoped="" ref="0x7f9e6aa3f940"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f9e6aa3fac8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f9e6aa3fc50"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f9e6aa3fdd8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f9e6aa3e020"/>
        <function-ref name="tx" scoped="" ref="0x7f9e6aa3e1a8"/>
        <function-ref name="rx" scoped="" ref="0x7f9e6aa3e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x7f9e6aa3e688" loc="119:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x7f9e6aa3e688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e6aa3e9d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7f9e6aa3c020" loc="122:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7f9e6aa3c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f9e6aa3c370"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f9e6aa3c4f8"/>
        <function-ref name="rxDone" scoped="" ref="0x7f9e6aa3c680"/>
        <function-ref name="txDone" scoped="" ref="0x7f9e6aa3c808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f9e6aa3c990"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f9e6aa3cb18"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f9e6aa3cca0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f9e6aa3ce28"/>
        <function-ref name="tx" scoped="" ref="0x7f9e6aa3b020"/>
        <function-ref name="rx" scoped="" ref="0x7f9e6aa3b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7f9e6aa408b8" loc="116:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7f9e6aa408b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9e6aa40c08"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6aa40d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7f9e6aa3ed98" loc="120:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7f9e6aa3ed98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9e6aa3d170"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6aa3d2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7f9e6aa3d6b8" loc="121:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7f9e6aa3d6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9e6aa3da08"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6aa3db90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7f9e6aa3b4c8" loc="124:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f9e6aa3b4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f9e6aa3b818"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f9e6aa3b9a0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f9e6aa3bb28"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f9e6aa3bcb0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f9e6aa3be38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f9e6aa3a1a8" loc="125:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f9e6aa3a1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f9e6aa3a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7f9e6aa40020" loc="115:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7f9e6aa40020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9e6aa40370"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6aa404f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f9e6a9dfa88" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f9e6a9dfa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e6afbd430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9e6afbd788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9e6b929608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9e6a9dc828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9e6a9db190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9e6a9dccb0"/>
        <function-ref name="overflow" scoped="" ref="0x7f9e6a9db618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f9e6a9d97f8" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f9e6a9d97f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e6afbd430"/>
            <typename><typedef-ref name="TThree" ref="0x7f9e6af7dd70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9e6b92ab98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9e6a9d6578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9e6a9d5020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9e6a9d6a00"/>
        <function-ref name="overflow" scoped="" ref="0x7f9e6a9d54a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f9e6a9c31f0" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f9e6a9c31f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f9e6a9c3540"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f9e6a9c36c8"/>
        <function-ref name="getControlA" scoped="" ref="0x7f9e6a9c3850"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f9e6a9c39d8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f9e6a9c3b60"/>
        <function-ref name="setControlB" scoped="" ref="0x7f9e6a9c3ce8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f9e6a9c3e70"/>
        <function-ref name="getControlB" scoped="" ref="0x7f9e6a9cc020"/>
        <function-ref name="setControlC" scoped="" ref="0x7f9e6a9cc1a8"/>
        <function-ref name="setControlA" scoped="" ref="0x7f9e6a9cc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f9e6a9bcb68" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f9e6a9bcb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9e6b92ab98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f9e6a9badb8"/>
        <function-ref name="test" scoped="" ref="0x7f9e6a9ba4a8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a9cb728"/>
        <function-ref name="captured" scoped="" ref="0x7f9e6a9bb0c0"/>
        <function-ref name="reset" scoped="" ref="0x7f9e6a9bb598"/>
        <function-ref name="isOn" scoped="" ref="0x7f9e6a9ba930"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a9cbbb0"/>
        <function-ref name="start" scoped="" ref="0x7f9e6a9bba20"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6a9ba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f9e6a9b99c0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f9e6a9b99c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9e6b92ab98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f9e6a9b5270"/>
        <function-ref name="fired" scoped="" ref="0x7f9e6a9b6020"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a9b8598"/>
        <function-ref name="reset" scoped="" ref="0x7f9e6a9b64a8"/>
        <function-ref name="isOn" scoped="" ref="0x7f9e6a9b56f8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a9b8a20"/>
        <function-ref name="start" scoped="" ref="0x7f9e6a9b6930"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6a9b6db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9e6a9d2570" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9e6a9d2570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9e6b92ab98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f9e6a9ce6f8"/>
        <function-ref name="test" scoped="" ref="0x7f9e6a9cfdb8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a9d1130"/>
        <function-ref name="setScale" scoped="" ref="0x7f9e6a9ceb80"/>
        <function-ref name="getScale" scoped="" ref="0x7f9e6a9cd088"/>
        <function-ref name="reset" scoped="" ref="0x7f9e6a9cf020"/>
        <function-ref name="overflow" scoped="" ref="0x7f9e6a9d1a90"/>
        <function-ref name="isOn" scoped="" ref="0x7f9e6a9ce270"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a9d15b8"/>
        <function-ref name="start" scoped="" ref="0x7f9e6a9cf4a8"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6a9cf930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f9e6a9acc90" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f9e6a9acc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f9e6a9ab020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f9e6a9ab1a8"/>
        <function-ref name="getControlA" scoped="" ref="0x7f9e6a9ab330"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f9e6a9ab4b8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f9e6a9ab640"/>
        <function-ref name="setControlB" scoped="" ref="0x7f9e6a9ab7c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f9e6a9ab950"/>
        <function-ref name="getControlB" scoped="" ref="0x7f9e6a9abad8"/>
        <function-ref name="setControlC" scoped="" ref="0x7f9e6a9abc60"/>
        <function-ref name="setControlA" scoped="" ref="0x7f9e6a9abde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7f9e6a9a6c48" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7f9e6a9a6c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9e6b92ab98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f9e6a9a24a8"/>
        <function-ref name="fired" scoped="" ref="0x7f9e6a9a41d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a9a5820"/>
        <function-ref name="reset" scoped="" ref="0x7f9e6a9a4658"/>
        <function-ref name="isOn" scoped="" ref="0x7f9e6a9a2930"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a9a5ca8"/>
        <function-ref name="start" scoped="" ref="0x7f9e6a9a4ae0"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6a9a2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f9e6a9aa350" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f9e6a9aa350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9e6b92ab98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f9e6a9a6580"/>
        <function-ref name="test" scoped="" ref="0x7f9e6a9a8c20"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a9a9020"/>
        <function-ref name="captured" scoped="" ref="0x7f9e6a9a9980"/>
        <function-ref name="reset" scoped="" ref="0x7f9e6a9a9e58"/>
        <function-ref name="isOn" scoped="" ref="0x7f9e6a9a60f8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a9a94a8"/>
        <function-ref name="start" scoped="" ref="0x7f9e6a9a8310"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6a9a8798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7f9e6a9a1020" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7f9e6a9a1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9e6b92ab98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f9e6a99f7a8"/>
        <function-ref name="fired" scoped="" ref="0x7f9e6a9a0560"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a9a1ba0"/>
        <function-ref name="reset" scoped="" ref="0x7f9e6a9a09e8"/>
        <function-ref name="isOn" scoped="" ref="0x7f9e6a99fc30"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a9a0088"/>
        <function-ref name="start" scoped="" ref="0x7f9e6a9a0e70"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6a99f320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7f9e6a99d360" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7f9e6a99d360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9e6b92ab98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f9e6a99bc20"/>
        <function-ref name="fired" scoped="" ref="0x7f9e6a99c980"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a99c020"/>
        <function-ref name="reset" scoped="" ref="0x7f9e6a99ce08"/>
        <function-ref name="isOn" scoped="" ref="0x7f9e6a9990f8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a99c4a8"/>
        <function-ref name="start" scoped="" ref="0x7f9e6a99b310"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6a99b798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9e6a9b3be0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9e6a9b3be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9e6b92ab98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f9e6a9aedb8"/>
        <function-ref name="test" scoped="" ref="0x7f9e6a9ae4a8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a9b07a0"/>
        <function-ref name="setScale" scoped="" ref="0x7f9e6a9ac270"/>
        <function-ref name="getScale" scoped="" ref="0x7f9e6a9ac748"/>
        <function-ref name="reset" scoped="" ref="0x7f9e6a9af5b8"/>
        <function-ref name="overflow" scoped="" ref="0x7f9e6a9af130"/>
        <function-ref name="isOn" scoped="" ref="0x7f9e6a9ae930"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a9b0c28"/>
        <function-ref name="start" scoped="" ref="0x7f9e6a9afa40"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6a9ae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9e6a924940" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9e6a924940"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f9e6b049388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f9e6b049388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e6a924c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f9e6a917098" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9e6a917098"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9e6b92ab98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f9e6a913270"/>
        <function-ref name="test" scoped="" ref="0x7f9e6a915930"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a917c18"/>
        <function-ref name="setScale" scoped="" ref="0x7f9e6a9136f8"/>
        <function-ref name="getScale" scoped="" ref="0x7f9e6a913bd0"/>
        <function-ref name="reset" scoped="" ref="0x7f9e6a916a58"/>
        <function-ref name="overflow" scoped="" ref="0x7f9e6a9165d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f9e6a915db8"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a9160f8"/>
        <function-ref name="start" scoped="" ref="0x7f9e6a915020"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6a9154a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f9e6a927b90" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f9e6a927b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e6afbd430"/>
            <typename><typedef-ref name="TThree" ref="0x7f9e6af7dd70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9e6b92ab98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9e6a910930"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9e6a8fe270"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9e6a910db8"/>
        <function-ref name="overflow" scoped="" ref="0x7f9e6a8fe6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f9e6a8fec58" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9e6a8fec58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9e6b92ab98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f9e6a8fadb8"/>
        <function-ref name="test" scoped="" ref="0x7f9e6a8fa4a8"/>
        <function-ref name="get" scoped="" ref="0x7f9e6a8fc820"/>
        <function-ref name="setScale" scoped="" ref="0x7f9e6a8f8270"/>
        <function-ref name="getScale" scoped="" ref="0x7f9e6a8f8748"/>
        <function-ref name="reset" scoped="" ref="0x7f9e6a8fb658"/>
        <function-ref name="overflow" scoped="" ref="0x7f9e6a8fb1d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f9e6a8fa930"/>
        <function-ref name="set" scoped="" ref="0x7f9e6a8fcca8"/>
        <function-ref name="start" scoped="" ref="0x7f9e6a8fbae0"/>
        <function-ref name="stop" scoped="" ref="0x7f9e6a8fa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f9e6a8d8450" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7f9e6a8d8450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e6afbd430"/>
            <typename><typedef-ref name="TThree" ref="0x7f9e6af7dd70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9e6b92ab98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9e6a8d71d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9e6a8d7ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9e6a8d7658"/>
        <function-ref name="overflow" scoped="" ref="0x7f9e6a8d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f9e6a8f4270" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f9e6a8f4270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e6afbd430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9e6afbd788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9e6b929608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9e6a8da020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9e6a8da930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9e6a8da4a8"/>
        <function-ref name="overflow" scoped="" ref="0x7f9e6a8dadb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f9e6a8d2020" loc="43:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x7f9e6a8d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f9e6a8d2370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9e6a8cca38" loc="94:/opt/tinyos-2.1.2/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9e6a8cca38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e6a8ccd88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f9e6a8cb080" loc="95:/opt/tinyos-2.1.2/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x7f9e6a8cb080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f9e6a8cb3d0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Led" loc="41:/opt/tinyos-2.1.2/tos/interfaces/Led.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/Led.nc">
        <short> An interface to control a single LED.</short>
        <long> An interface to control a single LED.&#10;&#10; Provides the ability to turn on, turn off, and toggle an LED.&#10;&#10; Implementations of this interface are provided by the LedC&#10; component, both as positional names (Led0) and by color (Green).&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="toggle" ref="0x7f9e6aed99e8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/Led.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/Led.nc">
          <short> Toggle the LED.</short>
          <long> Toggle the LED. *</long>
        </documentation>
        <interfacedef-ref qname="Led"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="on" ref="0x7f9e6aedb178" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Led.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Led.nc">
          <short> Turn the LED on.</short>
          <long> Turn the LED on. *</long>
        </documentation>
        <interfacedef-ref qname="Led"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x7f9e6aedb838" loc="46:/opt/tinyos-2.1.2/tos/interfaces/Led.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/Led.nc">
          <short> Turn the LED off.</short>
          <long> Turn the LED off. *</long>
        </documentation>
        <interfacedef-ref qname="Led"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f9e6aed9290" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Led.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/Led.nc">
          <short> Turn the LED on or off, depending on parameter.</short>
          <long> Turn the LED on or off, depending on parameter.&#10; @param turn_on if TRUE, turn LED on; otherwise turn LED off *</long>
        </documentation>
        <interfacedef-ref qname="Led"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9e6b04c9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="turn_on" ref="0x7f9e6aed9020" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Led.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9e6b04c9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f9e6aeed880" loc="60:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MultiLed" loc="41:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
        <short> An interface to control a series of LEDs.</short>
        <long> An interface to control a series of LEDs.&#10;&#10; Allows use of a series of LEDs as a visual binary register.  Bit i&#10; of the value is a 1 iff LED i is on.&#10;&#10; This interface is generically implemented by the LedC component.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x7f9e6aed22e0" loc="60:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
          <short> Invoke the Led.set() function for the specified LED.</short>
          <long> Invoke the Led.set() function for the specified LED.&#10; @param led_id Position of LED to turn on, starting with LED 0&#10; @param turn_on if TRUE, turn LED on; otherwise turn it off *</long>
        </documentation>
        <interfacedef-ref qname="MultiLed"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9e6b04c9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="led_id" ref="0x7f9e6aed3d10" loc="60:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
          <variable name="turn_on" ref="0x7f9e6aed2060" loc="60:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9e6b04c9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f9e6aed2cd0" loc="64:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
          <short> Invoke the Led.toggle() function for the specified LED.</short>
          <long> Invoke the Led.toggle() function for the specified LED.&#10; @param led_id Position of LED to turn on, starting with LED 0 *</long>
        </documentation>
        <interfacedef-ref qname="MultiLed"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="led_id" ref="0x7f9e6aed2a60" loc="64:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f9e6aed88e8" loc="44:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
          <short> Read the value represented by the on status of the LEDs.</short>
          <long> Read the value represented by the on status of the LEDs. *</long>
        </documentation>
        <interfacedef-ref qname="MultiLed"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="on" ref="0x7f9e6aed5bc8" loc="51:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
          <short> Invoke the Led.on() function for the specified LED.</short>
          <long> Invoke the Led.on() function for the specified LED.&#10; @param led_id Position of LED to turn on, starting with LED 0 *</long>
        </documentation>
        <interfacedef-ref qname="MultiLed"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="led_id" ref="0x7f9e6aed5958" loc="51:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f9e6aed5290" loc="47:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
          <short> Set the LEDs to represent the given value.</short>
          <long> Set the LEDs to represent the given value. *</long>
        </documentation>
        <interfacedef-ref qname="MultiLed"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f9e6aed5020" loc="47:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x7f9e6aed35b0" loc="55:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
          <short> Invoke the Led.off() function for the specified LED.</short>
          <long> Invoke the Led.off() function for the specified LED.&#10; @param led_id Position of LED to turn on, starting with LED 0 *</long>
        </documentation>
        <interfacedef-ref qname="MultiLed"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="led_id" ref="0x7f9e6aed3340" loc="55:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f9e6b023070" loc="67:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e6b027ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f9e6b023860" loc="75:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9e6aeec9c0" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9e6aeec9c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f9e6aee2328" loc="136:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9e6b929608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f9e6aee7e68" loc="83:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f9e6aee4ad8" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9e6b929608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9e6b929608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f9e6aee4540" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9e6b929608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f9e6aee4858" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9e6b929608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f9e6aee6da8" loc="98:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e6b04c9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f9e6aee1290" loc="151:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9e6b929608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f9e6aee2a48" loc="144:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9e6b929608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f9e6aee6610" loc="92:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e6b04c9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f9e6aee84d8" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9e6b929608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f9e6aee8268" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9e6b929608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f9e6aee39e0" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9e6b929608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9e6b929608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f9e6aee3448" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9e6b929608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f9e6aee3760" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9e6b929608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f9e6aee7020" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9e6b929608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f9e6aee8ca8" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9e6b929608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f9e6aee77c8" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f9e6aec1a68" loc="62:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e6b027ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7f9e6aeb5958" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9e6b92ab98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9e6b929608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7f9e6aeb56e8" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9e6b929608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7f9e6aeb7178" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9e6b92ab98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7f9e6aeb7b70" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9e6b929608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9e6b929608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f9e6aeb7900" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9e6b929608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7f9e6aeb6620" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9e6b929608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9e6b929608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f9e6aeb63b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9e6b929608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7f9e6aeb6e68" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f9e6aea44e8" loc="44:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f9e6aea4bb0" loc="45:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e6b04c9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f9e6aea5768" loc="42:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f9e6aea2968" loc="47:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e6b04c9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f9e6aea5e08" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e6b04c9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f9e6aea2290" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f9e6aea89e0" loc="40:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f9e6aea50d8" loc="41:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f9e6b02e378" loc="57:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f9e6b02b258" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f9e6b02ea90" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e6b04c9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f9e6af76e28" loc="76:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f9e6af564f8" loc="62:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f9e6afe8940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f9e6af57020" loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9e6ace6518" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9e6ace6518"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f9e6ace6da8" loc="61:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9e6b929608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9e6acd7a50" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9e6acd7a50"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f9e6acd7c80" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e6acd7c80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f9e6acd4548" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e6acd7c80"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f9e6acd3590" loc="76:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f9e6acd4d60" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e6b04c9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f9e6acd3c80" loc="82:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9e6ace1738" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9e6ace1738"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f9e6ace1968" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e6ace1968"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f9e6acda290" loc="109:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e6ace1968"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f9e6acdd418" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f9e6acdc920" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e6ace1968"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e6ace1968"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f9e6acdc380" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e6ace1968"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f9e6acdc6a0" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e6ace1968"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f9e6acddb88" loc="88:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e6b04c9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f9e6acdaa10" loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e6ace1968"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f9e6acde4a8" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e6ace1968"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f9e6acde238" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e6ace1968"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f9e6acdec78" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f9e6aca5488" loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f9e6aca7360" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f9e6aca9110" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f9e6aca7cd0" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f9e6aca7a60" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f9e6aca8bb8" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f9e6aca8948" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f9e6aca5e00" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f9e6aca5b90" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f9e6aca9840" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f9e6aca8290" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f9e6aca8020" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x7f9e6ac959a8" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x7f9e6ac98a60" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x7f9e6ac971d8" loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x7f9e6ac979a8" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7f9e6ac941d8" loc="98:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x7f9e6ac951d8" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7f9e6ac9b888" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f9e6afa4978"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f9e6afa4d80"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7f9e6ac98290" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f9e6afa4978"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f9e6afa4d80"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f9e6ac98020" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f9e6afa4978"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f9e6afa4d80"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f9e6acab848" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e6acab848"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7f9e6ac9e020" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e6b04c9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f9e6aca1258" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f9e6aca2178" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e6acab848"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f9e6aca1960" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f9e6ac9e770" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e6b04c9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f9e6aca2ac0" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e6acab848"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f9e6aca2850" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e6acab848"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f9e6ac9f0d8" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f9e6ac9f7c0" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f9e6acbaac0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f9e6acbaac0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7f9e6acb1020" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f9e6acb20d8" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e6b04c9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f9e6acb63a0" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f9e6acbaac0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7f9e6acb1970" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f9e6acb1700" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7f9e6acb0178" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f9e6acb5b58" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f9e6acb5438" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f9e6acb2830" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e6b04c9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f9e6acb6cd8" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f9e6acbaac0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f9e6acb6a68" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f9e6acbaac0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f9e6acb4290" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f9e6acb4978" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f9e6ab2a8f0" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f9e6ab28070" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f9e6ab287e0" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f9e6ab27758" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f9e6ab26e70" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f9e6ab25630" loc="117:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f9e6ab27020" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f9e6ab23290" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f9e6ab23020" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f9e6ab2a1d8" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f9e6ab26020" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f9e6ab26738" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f9e6aad4510" loc="95:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e6b027ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f9e6aad4cb0" loc="105:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e6b027ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TOSDIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7f9e6aaca020" loc="49:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7f9e6aad0cb0" loc="49:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f9e6aacf4a8" loc="46:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e6b027ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f9e6aacf238" loc="46:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f9e6aace2a0" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e6b027ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f9e6aacfc98" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f9e6aace020" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f9e6aabe5c0" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e6b027ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e6b92ab98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f9e6aabe020" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9e6aabe340" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e6b92ab98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f9e6aab9020" loc="79:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f9e6aabbc60" loc="79:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f9e6aab9d38" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e6b027ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e6b92ab98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f9e6aab9798" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9e6aab9ab8" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e6b92ab98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f9e6aabac58" loc="65:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e6b027ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f9e6aab6618" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e6b92ab98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9e6b027ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f9e6aab7cf0" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9e6aab6060" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e6b92ab98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f9e6aab6388" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9e6b027ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f9e6aabb500" loc="72:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e6b027ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f9e6aabdd50" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e6b92ab98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9e6b027ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f9e6aabd478" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9e6aabd798" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e6b92ab98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f9e6aabdac0" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9e6b027ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f9e6aaa1258" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e6b04c9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f9e6aaa23e0" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e6b027ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x7f9e6aa9e900" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9e6aa9e690" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f9e6aaa0920" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f9e6aaa4570" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e6b027ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f9e6aaa4c90" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e6b027ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f9e6aaa2b00" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e6b027ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x7f9e6aaa1938" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e6b04c9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f9e6aaa0290" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9e6aaa0020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f9e6aa9e020" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x7f9e6a9c8020" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f9e6a9c63a0" loc="87:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f9e6a9ca070" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f9e6a9c44c0" loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f9e6a9c6d10" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f9e6a9c6aa0" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f9e6a9c72d0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f9e6a9c7060" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f9e6a9c4e38" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f9e6a9c4bc8" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f9e6a9ca7a0" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x7f9e6a9c7bf8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f9e6a9c7988" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f9e6a9c8948" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f9e6a9c86d8" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e6b92a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f9e6a9ccb60" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e6a9ccb60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7f9e6a9bc648" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9e6b04c9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7f9e6a9bc3d8" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9e6b04c9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f9e6a9bd568" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e6b04c9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f9e6a9c1438" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e6a9ccb60"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f9e6a9c0748" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e6a9ccb60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f9e6a9c04d8" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e6a9ccb60"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f9e6a9be020" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f9e6a9bdcb8" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e6b04c9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f9e6a9c1d70" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e6a9ccb60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f9e6a9c1b00" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e6a9ccb60"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f9e6a9be718" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f9e6a9bee00" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
