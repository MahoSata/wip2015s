<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="49:TestAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fd4d086d760"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fd4d0848b28"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fd4d0848b28"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fd4d0843c38"/></to>
    </wire>
    <wire loc="50:TestAppC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fd4d0852de8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7fd4d04b7500"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/system/LedC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fd4d04b7500"/></from>
      <to><interface-ref name="Led" scoped="" ref="0x7fd4d04a72f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:TestAppC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fd4d08558e0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7fd4d04b4020"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/system/LedC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fd4d04b4020"/></from>
      <to><interface-ref name="Led" scoped="" ref="0x7fd4d04a72f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:TestAppC.nc">
      <from><interface-ref name="Led3" scoped="" ref="0x7fd4d0854480"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7fd4d04b4ae0"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/system/LedC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fd4d04b4ae0"/></from>
      <to><interface-ref name="Led" scoped="" ref="0x7fd4d04a72f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:TestAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x7fd4d0863578"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd4d0686a60"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd4d0686a60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fd4d067d6a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:TestAppC.nc">
      <from><interface-ref name="Timer2" scoped="" ref="0x7fd4d0861798"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd4d04c3020"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd4d04c3020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fd4d067d6a0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:TestAppC.nc">
      <from><interface-ref name="Timer3" scoped="" ref="0x7fd4d085c8c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd4d04bd550"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd4d04bd550"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fd4d067d6a0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd4d0846020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd4d06740c0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fd4d0693308"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fd4d0983080"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fd4d0983080"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fd4d08add88"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fd4d0693ce0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd4d0846e60"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd4d0846e60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd4d083ec80"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd4d0692418"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fd4d0846020"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fd4d083ace0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fd4d06b2ae0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7fd4d0837a38"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd4d06b24b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fd4d0837370"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd4d04712d8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fd4d0837370"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7fd4d0832140"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fd4d0832140"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7fd4d0831ae8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fd4d08327d0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7fd4d083fa20"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7fd4d0828cd0"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7fd4d081eaf0"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7fd4d081eaf0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fd4d0799740"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fd4d082c020"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7fd4d08327d0"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7fd4d07eb7e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d0705520"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7fd4d0805348"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fd4d0770020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fd4d0770020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d02dd710"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7fd4d07f9348"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fd4d075fd60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fd4d075fd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d0270710"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7fd4d07f0020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fd4d07508c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fd4d07508c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d0209710"/></to>
    </wire>
    <wire loc="196:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7fd4d07e44d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d06ecc38"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7fd4d081ce00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fd4d0797a50"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fd4d0797a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d0403a10"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7fd4d07f3c78"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fd4d07525b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fd4d07525b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d020f710"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7fd4d08181a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fd4d078fbd0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fd4d078fbd0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d03ae970"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7fd4d080d348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fd4d077e740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fd4d077e740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d0341710"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7fd4d08027e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fd4d076d430"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fd4d076d430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d02d4710"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7fd4d07f67e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fd4d075b120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fd4d075b120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d0267710"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7fd4d0821658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fd4d079d2a8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fd4d079d2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d0412a10"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7fd4d0815658"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fd4d078b020"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fd4d078b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d03a5970"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7fd4d080a7e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fd4d077bbd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fd4d077bbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d0338710"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7fd4d07fec78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fd4d07698c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fd4d07698c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d02cb710"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7fd4d07ed4d0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fd4d074dd60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fd4d074dd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d0200710"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7fd4d07e71a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d06f6c38"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7fd4d07fb020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fd4d0762a50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fd4d0762a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d0276710"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fd4d0799740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d0409a10"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7fd4d0812c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fd4d0788430"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fd4d0788430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d039c970"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7fd4d07eae00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d0701cd8"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7fd4d080f020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fd4d0780500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fd4d0780500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d03476a8"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7fd4d08044d0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fd4d076f120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fd4d076f120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d02da710"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7fd4d07f84d0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fd4d075ee18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fd4d075ee18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d026d710"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7fd4d07ef1a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fd4d074fa50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fd4d074fa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d0206710"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7fd4d0819020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fd4d0796bd8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fd4d0796bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d0400a10"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7fd4d0817348"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fd4d078ed60"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fd4d078ed60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d03ab970"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7fd4d080c4d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fd4d077d8c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fd4d077d8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d033e710"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7fd4d0801968"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fd4d076b5b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fd4d076b5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d02d1710"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7fd4d07f5968"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fd4d075a2a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fd4d075a2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d0264710"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7fd4d08207e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fd4d079c430"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fd4d079c430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d040fa10"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7fd4d08147e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fd4d078a120"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fd4d078a120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d03a2970"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7fd4d0809968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fd4d077ad60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fd4d077ad60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d0335710"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7fd4d07ec658"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fd4d074ce18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fd4d074ce18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d01fd710"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7fd4d0807c78"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fd4d0772e40"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fd4d0772e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d02e06a8"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7fd4d07fa1a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fd4d0760bd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fd4d0760bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d0273710"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7fd4d07f2e00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fd4d0751740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fd4d0751740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d020c710"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7fd4d07e6348"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d06f13e0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7fd4d081dc78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fd4d07988c8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fd4d07988c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d0406a10"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7fd4d0811e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fd4d07875b8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fd4d07875b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d0399970"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7fd4d07f4af0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fd4d0753500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fd4d0753500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d02136a8"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7fd4d080e1a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fd4d077f5b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fd4d077f5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d0344710"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7fd4d0803658"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fd4d076e2a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fd4d076e2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d02d7710"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7fd4d07f7658"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fd4d075c020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fd4d075c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d026a710"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7fd4d07ee348"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fd4d074ebd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fd4d074ebd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d0203710"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7fd4d08223d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fd4d079e1e8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fd4d079e1e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d0415a30"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7fd4d08164d0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fd4d078de18"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fd4d078de18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d03a8970"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7fd4d080b658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fd4d077ca50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fd4d077ca50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d033b710"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7fd4d07ffaf0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fd4d076a740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fd4d076a740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d02ce710"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7fd4d07e8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d06fb3e0"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7fd4d07fde00"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fd4d0763930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fd4d0763930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d027a6a8"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7fd4d0808af0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fd4d0779e18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fd4d0779e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d0332710"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7fd4d081f968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fd4d079a5b8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fd4d079a5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d040ca10"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7fd4d0813af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fd4d07892a8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fd4d07892a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4d039f970"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7fd4d0957b18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd4d08acc58"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7fd4d08a8168"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7fd4d0960e28"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7fd4d088b988"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7fd4d05bc578"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fd4d067d6a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fd4d0674db8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fd4d0674db8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd4d04e95e0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd4d06740c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd4d066d8e8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fd4d066a298"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fd4d04d9128"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd4d066d8e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd4d0562020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fd4d04e3858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd4d0535ab0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fd4d0530c70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7fd4d06661c8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7fd4d06661c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd4d05627c8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd4d04d0330"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7fd4d065c3b8"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7fd4d065c3b8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd4d055ea90"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd4d055ea90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd4d012d128"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd4d0562020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd4d01327b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fd4d05627c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd4d0130020"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd4d012a228"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd4d05d5288"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd4d05d5288"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd4d05c9e00"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7fd4d01250c0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fd4d05d03c0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7fd4d05d03c0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fd4d05c1020"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fd4d01243b0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd4d05cf7f8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fd4d05cf7f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd4d05c0340"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7fd4d0120510"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7fd4d05cb9e8"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7fd4d05cb9e8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7fd4d05bcc78"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7fd4d052ccf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd4d0957b18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7fd4d04de930"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd4d0957b18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/system/LedC.nc">
      <from><interface-ref name="Green" scoped="" ref="0x7fd4d04b3610"/></from>
      <to><interface-ref name="Led" scoped="" ref="0x7fd4d04a72f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/system/LedC.nc">
      <from><interface-ref name="Yellow" scoped="" ref="0x7fd4d04b2bf0"/></from>
      <to><interface-ref name="Led" scoped="" ref="0x7fd4d04a72f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/system/LedC.nc">
      <from><interface-ref name="MultiLed" scoped="" ref="0x7fd4d04aa800"/></from>
      <to><interface-ref name="MultiLed" scoped="" ref="0x7fd4d04a8020"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/PlatformLedC.nc">
      <from><interface-ref name="MultiLed" scoped="" ref="0x7fd4d04a8020"/></from>
      <to><interface-ref name="MultiLed" scoped="" ref="0x7fd4d046a238"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/system/LedC.nc">
      <from><interface-ref name="Red" scoped="" ref="0x7fd4d04b2120"/></from>
      <to><interface-ref name="Led" scoped="" ref="0x7fd4d04a72f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/PlatformLedC.nc">
      <from><interface-ref name="Led" scoped="" ref="0x7fd4d04a72f0"/></from>
      <to><interface-ref name="Led" scoped="" ref="0x7fd4d04694f8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/PlatformLedC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd4d0467020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd4d0497c38"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd4d0497c38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd4d04945e8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd4d04712d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd4d0494020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fd4d0493ce8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7fd4d0495e10"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fd4d0495e10"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7fd4d08207e0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fd4d0492e70"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7fd4d0473020"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fd4d0473020"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7fd4d0821658"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fd4d0490020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7fd4d04721b0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fd4d04721b0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7fd4d08223d0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="TestP" loc="40:TestP.nc">
      <documentation loc="32:TestP.nc">
        <short>&#10; Much like Blink, but uses the Led interface.</short>
        <long>&#10; Much like Blink, but uses the Led interface. &#10;&#10; TESTS: Led interface&#10; TESTS: Timer&#60;TMilli>&#10;&#10; @author David Moss&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com> *</long>
      </documentation>
      <module/>
    </component>
    <component qname="MainC" loc="56:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.1.2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestAppC.Timer1C" loc="44(TestAppC.Timer1C):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd4d08f4020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd4d08f4378"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fd4d06543e8"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd4d08f4020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd4d08f4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd4d08f4020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd4d08f4378"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd4d08f4020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd4d08f4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestAppC.Timer2C" loc="44(TestAppC.Timer2C):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestAppC.Timer3C" loc="44(TestAppC.Timer3C):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LedC" loc="41:/opt/tinyos-2.1.2/tos/system/LedC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/LedC.nc">
        <short>&#10; Provide access to the Led components available on this platform.</short>
        <long>&#10; Provide access to the Led components available on this platform.&#10; LEDs are made available positionally (e.g., Led0) and by color&#10; (e.g., Green).&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedC" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/PlatformLedC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/iris/PlatformLedC.nc">
        <short> Defines the Led and MultiLed interfaces in terms of the underlying&#10; LedsC component.</short>
        <long> Defines the Led and MultiLed interfaces in terms of the underlying&#10; LedsC component.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.1.2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedP" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/PlatformLedP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/iris/PlatformLedP.nc">
        <short> Defines the Led and MultiLed interfaces in terms of the underlying&#10; LedsC component.</short>
        <long> Defines the Led and MultiLed interfaces in terms of the underlying&#10; LedsC component.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fd4d07e1748" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fd4d07e1a90" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fd4d07e1dd8" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fd4d07d1020" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fd4d07d1388" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fd4d07d16f0" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7fd4d07d1a20" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fd4d0745750" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fd4d0745ab8" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fd4d0745e20" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7fd4d07421a8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7fd4d06543e8" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fd4d06543e8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7fd4d06546d8" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7fd4d064b9d0" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fd4d064b9d0"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7fd4d064bcc0" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd4d0668c60" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd4d0668c60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd4d052acc8" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd4d052acc8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fd4d0526020" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd4d04db9f0" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd4d04db9f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Led3" ref="0x7fd4d0854480" loc="48:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led3" scoped="" ref="0x7fd4d0854480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x7fd4d08547d0"/>
        <function-ref name="on" scoped="" ref="0x7fd4d0854958"/>
        <function-ref name="off" scoped="" ref="0x7fd4d0854ae0"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0854c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fd4d086d760" loc="42:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fd4d086d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fd4d086dab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer3" ref="0x7fd4d085c8c0" loc="45:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer3" scoped="" ref="0x7fd4d085c8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd4d08f4020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd4d08f4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd4d0858bc0"/>
        <function-ref name="fired" scoped="" ref="0x7fd4d0859238"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd4d0858020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd4d0859ad8"/>
        <function-ref name="getdt" scoped="" ref="0x7fd4d08564d8"/>
        <function-ref name="gett0" scoped="" ref="0x7fd4d0856088"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd4d0859688"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd4d085a458"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd4d08585f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd4d085a8f8"/>
        <function-ref name="stop" scoped="" ref="0x7fd4d085ad98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x7fd4d0863578" loc="43:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer1" scoped="" ref="0x7fd4d0863578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd4d08f4020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd4d08f4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd4d08628f0"/>
        <function-ref name="fired" scoped="" ref="0x7fd4d086e020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd4d086ed10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd4d086e8c0"/>
        <function-ref name="getdt" scoped="" ref="0x7fd4d08611c0"/>
        <function-ref name="gett0" scoped="" ref="0x7fd4d0862d40"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd4d086e470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd4d086f0f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd4d0862320"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd4d086f598"/>
        <function-ref name="stop" scoped="" ref="0x7fd4d086fa38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7fd4d0852de8" loc="46:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7fd4d0852de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0855170"/>
        <function-ref name="on" scoped="" ref="0x7fd4d08552f8"/>
        <function-ref name="off" scoped="" ref="0x7fd4d0855480"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0855608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7fd4d08558e0" loc="47:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7fd4d08558e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0855c30"/>
        <function-ref name="on" scoped="" ref="0x7fd4d0855db8"/>
        <function-ref name="off" scoped="" ref="0x7fd4d0854020"/>
        <function-ref name="set" scoped="" ref="0x7fd4d08541a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer2" ref="0x7fd4d0861798" loc="44:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer2" scoped="" ref="0x7fd4d0861798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd4d08f4020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd4d08f4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd4d085da18"/>
        <function-ref name="fired" scoped="" ref="0x7fd4d085e158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd4d085ee48"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd4d085e9f8"/>
        <function-ref name="getdt" scoped="" ref="0x7fd4d085c2e8"/>
        <function-ref name="gett0" scoped="" ref="0x7fd4d085de68"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd4d085e5a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd4d085f370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd4d085d448"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd4d085f810"/>
        <function-ref name="stop" scoped="" ref="0x7fd4d085fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fd4d0846020" loc="58:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7fd4d0846020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd4d0846370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fd4d0848b28" loc="57:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fd4d0848b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fd4d0848e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7fd4d083fa20" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7fd4d083fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd4d083fd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd4d0846e60" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd4d0846e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd4d08401e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7fd4d083ace0" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fd4d083ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7fd4d083f0a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7fd4d083f228"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7fd4d083f3b0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7fd4d083f538"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7fd4d083f6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7fd4d0837370" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7fd4d0837370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd4d08376c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd4d083ec80" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd4d083ec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd4d0837020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7fd4d0837a38" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7fd4d0837a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd4d0837d88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7fd4d08327d0" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7fd4d08327d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd4d0832b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7fd4d0832140" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fd4d0832140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd4d0832490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7fd4d082c020" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7fd4d082c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd4d082c370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7fd4d0828cd0" loc="44:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7fd4d0828cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d082d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d082d228"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d082d3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d082d538"/>
        <function-ref name="get" scoped="" ref="0x7fd4d082d6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d082d848"/>
        <function-ref name="set" scoped="" ref="0x7fd4d082d9d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d082db58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7fd4d0831ae8" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fd4d0831ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd4d0831e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7fd4d07eb7e0" loc="98:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7fd4d07eb7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d07ea020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d07ea1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d07ea330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d07ea4b8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d07ea640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d07ea7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d07ea950"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d07eaad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7fd4d0805348" loc="72:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7fd4d0805348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0805698"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0805820"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d08059a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0805b30"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0805cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0805e40"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0804020"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d08041a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7fd4d07f9348" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7fd4d07f9348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d07f9698"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d07f9820"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d07f99a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d07f9b30"/>
        <function-ref name="get" scoped="" ref="0x7fd4d07f9cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d07f9e40"/>
        <function-ref name="set" scoped="" ref="0x7fd4d07f8020"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d07f81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7fd4d07f0020" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7fd4d07f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d07f0370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d07f04f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d07f0680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d07f0808"/>
        <function-ref name="get" scoped="" ref="0x7fd4d07f0990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d07f0b18"/>
        <function-ref name="set" scoped="" ref="0x7fd4d07f0ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d07f0e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7fd4d07e44d0" loc="103:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7fd4d07e44d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d07e4820"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d07e49a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d07e4b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d07e4cb8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d07e4e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d07e3020"/>
        <function-ref name="set" scoped="" ref="0x7fd4d07e31a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d07e3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7fd4d081ce00" loc="50:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7fd4d081ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d081a1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d081a330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d081a4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d081a640"/>
        <function-ref name="get" scoped="" ref="0x7fd4d081a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d081a950"/>
        <function-ref name="set" scoped="" ref="0x7fd4d081aad8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d081ac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7fd4d07f3c78" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7fd4d07f3c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d07f2020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d07f21a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d07f2330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d07f24b8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d07f2640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d07f27c8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d07f2950"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d07f2ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7fd4d08181a0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7fd4d08181a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d08184f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0818678"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0818800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0818988"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0818b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0818c98"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0818e20"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0817020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7fd4d080d348" loc="64:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7fd4d080d348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d080d698"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d080d820"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d080d9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d080db30"/>
        <function-ref name="get" scoped="" ref="0x7fd4d080dcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d080de40"/>
        <function-ref name="set" scoped="" ref="0x7fd4d080c020"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d080c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7fd4d08027e0" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7fd4d08027e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0802b30"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0802cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0802e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0801020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d08011a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0801330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d08014b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0801640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7fd4d07f67e0" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7fd4d07f67e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d07f6b30"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d07f6cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d07f6e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d07f5020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d07f51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d07f5330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d07f54b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d07f5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7fd4d0821658" loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7fd4d0821658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d08219a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0821b30"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0821cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0821e40"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0820020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d08201a8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0820330"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d08204b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7fd4d0815658" loc="56:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7fd4d0815658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d08159a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0815b30"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0815cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0815e40"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0814020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d08141a8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0814330"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d08144b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7fd4d080a7e0" loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7fd4d080a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d080ab30"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d080acb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d080ae40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0809020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d08091a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0809330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d08094b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0809640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7fd4d07fec78" loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7fd4d07fec78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d07fd020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d07fd1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d07fd330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d07fd4b8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d07fd640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d07fd7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d07fd950"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d07fdad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7fd4d07ed4d0" loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7fd4d07ed4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d07ed820"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d07ed9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d07edb30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d07edcb8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d07ede40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d07ec020"/>
        <function-ref name="set" scoped="" ref="0x7fd4d07ec1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d07ec330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7fd4d07e71a0" loc="101:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7fd4d07e71a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d07e74f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d07e7678"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d07e7800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d07e7988"/>
        <function-ref name="get" scoped="" ref="0x7fd4d07e7b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d07e7c98"/>
        <function-ref name="set" scoped="" ref="0x7fd4d07e7e20"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d07e6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7fd4d07fb020" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7fd4d07fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d07fb370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d07fb4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d07fb680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d07fb808"/>
        <function-ref name="get" scoped="" ref="0x7fd4d07fb990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d07fbb18"/>
        <function-ref name="set" scoped="" ref="0x7fd4d07fbca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d07fbe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7fd4d081eaf0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7fd4d081eaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d081ee40"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d081d020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d081d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d081d330"/>
        <function-ref name="get" scoped="" ref="0x7fd4d081d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d081d640"/>
        <function-ref name="set" scoped="" ref="0x7fd4d081d7c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d081d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7fd4d0812c78" loc="59:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7fd4d0812c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0811020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d08111a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0811330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d08114b8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0811640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d08117c8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0811950"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0811ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7fd4d07eae00" loc="99:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7fd4d07eae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d07e91a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d07e9330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d07e94b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d07e9640"/>
        <function-ref name="get" scoped="" ref="0x7fd4d07e97c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d07e9950"/>
        <function-ref name="set" scoped="" ref="0x7fd4d07e9ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d07e9c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7fd4d080f020" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7fd4d080f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d080f370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d080f4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d080f680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d080f808"/>
        <function-ref name="get" scoped="" ref="0x7fd4d080f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d080fb18"/>
        <function-ref name="set" scoped="" ref="0x7fd4d080fca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d080fe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7fd4d08044d0" loc="73:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7fd4d08044d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0804820"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d08049a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0804b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0804cb8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0804e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0803020"/>
        <function-ref name="set" scoped="" ref="0x7fd4d08031a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0803330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7fd4d07f84d0" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7fd4d07f84d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d07f8820"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d07f89a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d07f8b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d07f8cb8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d07f8e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d07f7020"/>
        <function-ref name="set" scoped="" ref="0x7fd4d07f71a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d07f7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7fd4d07ef1a0" loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7fd4d07ef1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d07ef4f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d07ef678"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d07ef800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d07ef988"/>
        <function-ref name="get" scoped="" ref="0x7fd4d07efb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d07efc98"/>
        <function-ref name="set" scoped="" ref="0x7fd4d07efe20"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d07ee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7fd4d0819020" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7fd4d0819020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0819370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d08194f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0819680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0819808"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0819990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0819b18"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0819ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0819e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7fd4d0817348" loc="54:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7fd4d0817348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0817698"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0817820"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d08179a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0817b30"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0817cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0817e40"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0816020"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d08161a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7fd4d080c4d0" loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7fd4d080c4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d080c820"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d080c9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d080cb30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d080ccb8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d080ce40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d080b020"/>
        <function-ref name="set" scoped="" ref="0x7fd4d080b1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d080b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7fd4d0801968" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7fd4d0801968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0801cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0801e40"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d07ff020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d07ff1a8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d07ff330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d07ff4b8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d07ff640"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d07ff7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7fd4d07f5968" loc="87:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7fd4d07f5968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d07f5cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d07f5e40"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d07f4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d07f41a8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d07f4330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d07f44b8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d07f4640"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d07f47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7fd4d08207e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7fd4d08207e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0820b30"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0820cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0820e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d081f020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d081f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d081f330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d081f4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d081f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7fd4d08147e0" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7fd4d08147e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0814c30"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0814db8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0813020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d08131a8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0813330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d08134b8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0813640"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d08137c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7fd4d0809968" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7fd4d0809968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0809cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0809e40"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0808020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d08081a8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0808330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d08084b8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0808640"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d08087c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7fd4d07ec658" loc="96:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7fd4d07ec658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d07ec9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d07ecb30"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d07eccb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d07ece40"/>
        <function-ref name="get" scoped="" ref="0x7fd4d07eb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d07eb1a8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d07eb330"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d07eb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7fd4d0807c78" loc="71:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7fd4d0807c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d08063e8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0806570"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d08066f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0806880"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0806a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0806b90"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0806d18"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0805020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7fd4d07fa1a0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7fd4d07fa1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d07fa4f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d07fa678"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d07fa800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d07fa988"/>
        <function-ref name="get" scoped="" ref="0x7fd4d07fab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d07fac98"/>
        <function-ref name="set" scoped="" ref="0x7fd4d07fae20"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d07f9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7fd4d07f2e00" loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7fd4d07f2e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d07f11a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d07f1330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d07f14b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d07f1640"/>
        <function-ref name="get" scoped="" ref="0x7fd4d07f17c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d07f1950"/>
        <function-ref name="set" scoped="" ref="0x7fd4d07f1ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d07f1c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7fd4d07e6348" loc="102:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7fd4d07e6348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d07e6698"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d07e6820"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d07e69a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d07e6b30"/>
        <function-ref name="get" scoped="" ref="0x7fd4d07e6cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d07e6e40"/>
        <function-ref name="set" scoped="" ref="0x7fd4d07e4020"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d07e41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7fd4d081dc78" loc="49:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7fd4d081dc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d081c020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d081c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d081c330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d081c4b8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d081c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d081c7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d081c950"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d081cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7fd4d0811e00" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7fd4d0811e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d08101a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0810330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d08104b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0810640"/>
        <function-ref name="get" scoped="" ref="0x7fd4d08107c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0810950"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0810ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0810c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7fd4d07f4af0" loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7fd4d07f4af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d07f4e40"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d07f3020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d07f31a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d07f3330"/>
        <function-ref name="get" scoped="" ref="0x7fd4d07f34b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d07f3640"/>
        <function-ref name="set" scoped="" ref="0x7fd4d07f37c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d07f3950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7fd4d080e1a0" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7fd4d080e1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d080e4f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d080e678"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d080e800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d080e988"/>
        <function-ref name="get" scoped="" ref="0x7fd4d080eb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d080ec98"/>
        <function-ref name="set" scoped="" ref="0x7fd4d080ee20"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d080d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7fd4d0803658" loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7fd4d0803658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d08039a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0803b30"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0803cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0803e40"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0802020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d08021a8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0802330"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d08024b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7fd4d07f7658" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7fd4d07f7658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d07f79a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d07f7b30"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d07f7cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d07f7e40"/>
        <function-ref name="get" scoped="" ref="0x7fd4d07f6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d07f61a8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d07f6330"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d07f64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7fd4d07ee348" loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7fd4d07ee348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d07ee698"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d07ee820"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d07ee9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d07eeb30"/>
        <function-ref name="get" scoped="" ref="0x7fd4d07eecb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d07eee40"/>
        <function-ref name="set" scoped="" ref="0x7fd4d07ed020"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d07ed1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7fd4d08223d0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7fd4d08223d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0822720"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d08228a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0822a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0822bb8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0822d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0821020"/>
        <function-ref name="set" scoped="" ref="0x7fd4d08211a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0821330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7fd4d08164d0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7fd4d08164d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0816820"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d08169a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0816b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0816cb8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0816e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0815020"/>
        <function-ref name="set" scoped="" ref="0x7fd4d08151a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0815330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7fd4d080b658" loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7fd4d080b658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d080b9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d080bb30"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d080bcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d080be40"/>
        <function-ref name="get" scoped="" ref="0x7fd4d080a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d080a1a8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d080a330"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d080a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7fd4d07ffaf0" loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7fd4d07ffaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d07ffe40"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d07fe020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d07fe1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d07fe330"/>
        <function-ref name="get" scoped="" ref="0x7fd4d07fe4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d07fe640"/>
        <function-ref name="set" scoped="" ref="0x7fd4d07fe7c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d07fe950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7fd4d07e8020" loc="100:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7fd4d07e8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d07e8370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d07e84f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d07e8680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d07e8808"/>
        <function-ref name="get" scoped="" ref="0x7fd4d07e8990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d07e8b18"/>
        <function-ref name="set" scoped="" ref="0x7fd4d07e8ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d07e8e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7fd4d07fde00" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7fd4d07fde00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d07fc1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d07fc330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d07fc4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d07fc640"/>
        <function-ref name="get" scoped="" ref="0x7fd4d07fc7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d07fc950"/>
        <function-ref name="set" scoped="" ref="0x7fd4d07fcad8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d07fcc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7fd4d0808af0" loc="69:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7fd4d0808af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0808e40"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0807020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d08071a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0807330"/>
        <function-ref name="get" scoped="" ref="0x7fd4d08074b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0807640"/>
        <function-ref name="set" scoped="" ref="0x7fd4d08077c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0807950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7fd4d081f968" loc="47:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7fd4d081f968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d081fcb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d081fe40"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d081e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d081e1a8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d081e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d081e4b8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d081e640"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d081e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7fd4d0813af0" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7fd4d0813af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0813e40"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0812020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d08121a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0812330"/>
        <function-ref name="get" scoped="" ref="0x7fd4d08124b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0812640"/>
        <function-ref name="set" scoped="" ref="0x7fd4d08127c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0812950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fd4d079c430" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fd4d079c430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d079c780"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d079c908"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d079ca90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d079cc18"/>
        <function-ref name="get" scoped="" ref="0x7fd4d079cda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d079a020"/>
        <function-ref name="set" scoped="" ref="0x7fd4d079a1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d079a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fd4d07988c8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fd4d07988c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0798c18"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0798da0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0797020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d07971a8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0797330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d07974b8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0797640"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d07977c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fd4d079e1e8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fd4d079e1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d079e538"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d079e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d079e848"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d079e9d0"/>
        <function-ref name="get" scoped="" ref="0x7fd4d079eb58"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d079ece0"/>
        <function-ref name="set" scoped="" ref="0x7fd4d079ee68"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d079d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fd4d079a5b8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fd4d079a5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d079a908"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d079aa90"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d079ac18"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d079ada0"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0799020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d07991a8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0799330"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d07994b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fd4d0797a50" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fd4d0797a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0797da0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0796020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d07961a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0796330"/>
        <function-ref name="get" scoped="" ref="0x7fd4d07964b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0796640"/>
        <function-ref name="set" scoped="" ref="0x7fd4d07967c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0796950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fd4d079d2a8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fd4d079d2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d079d5f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d079d780"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d079d908"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d079da90"/>
        <function-ref name="get" scoped="" ref="0x7fd4d079dc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d079dda0"/>
        <function-ref name="set" scoped="" ref="0x7fd4d079c020"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d079c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fd4d0799740" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fd4d0799740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0799a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0799c18"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0799da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0798020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d07981a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0798330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d07984b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0798640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fd4d0796bd8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fd4d0796bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0795020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d07951a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0795330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d07954b8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0795640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d07957c8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0795950"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0795ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d0415a30" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d0415a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0415d80"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0414020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d04141a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0414330"/>
        <function-ref name="get" scoped="" ref="0x7fd4d04144b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0414640"/>
        <function-ref name="set" scoped="" ref="0x7fd4d04147c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0414950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d0412a10" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d0412a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0412d60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0411020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d04111a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0411330"/>
        <function-ref name="get" scoped="" ref="0x7fd4d04114b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0411640"/>
        <function-ref name="set" scoped="" ref="0x7fd4d04117c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0411950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d040fa10" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d040fa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d040fd60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d040e020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d040e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d040e330"/>
        <function-ref name="get" scoped="" ref="0x7fd4d040e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d040e640"/>
        <function-ref name="set" scoped="" ref="0x7fd4d040e7c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d040e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d040ca10" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d040ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d040cd60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d040b020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d040b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d040b330"/>
        <function-ref name="get" scoped="" ref="0x7fd4d040b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d040b640"/>
        <function-ref name="set" scoped="" ref="0x7fd4d040b7c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d040b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d0409a10" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d0409a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0409d60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0408020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d04081a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0408330"/>
        <function-ref name="get" scoped="" ref="0x7fd4d04084b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0408640"/>
        <function-ref name="set" scoped="" ref="0x7fd4d04087c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0408950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d0406a10" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d0406a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0406d60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0405020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d04051a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0405330"/>
        <function-ref name="get" scoped="" ref="0x7fd4d04054b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0405640"/>
        <function-ref name="set" scoped="" ref="0x7fd4d04057c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0405950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d0403a10" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d0403a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0403d60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0402020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d04021a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0402330"/>
        <function-ref name="get" scoped="" ref="0x7fd4d04024b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0402640"/>
        <function-ref name="set" scoped="" ref="0x7fd4d04027c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0402950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d0400a10" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d0400a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0400d60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d03ff020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d03ff1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d03ff330"/>
        <function-ref name="get" scoped="" ref="0x7fd4d03ff4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d03ff640"/>
        <function-ref name="set" scoped="" ref="0x7fd4d03ff7c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d03ff950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fd4d078de18" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fd4d078de18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d078c1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d078c330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d078c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d078c640"/>
        <function-ref name="get" scoped="" ref="0x7fd4d078c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d078c950"/>
        <function-ref name="set" scoped="" ref="0x7fd4d078cad8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d078cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fd4d07892a8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fd4d07892a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d07895f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0789780"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0789908"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0789a90"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0789c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0789da0"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0788020"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d07881a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fd4d078fbd0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fd4d078fbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d078e020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d078e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d078e330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d078e4b8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d078e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d078e7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d078e950"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d078ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fd4d078b020" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fd4d078b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d078b370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d078b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d078b680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d078b808"/>
        <function-ref name="get" scoped="" ref="0x7fd4d078b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d078bb18"/>
        <function-ref name="set" scoped="" ref="0x7fd4d078bca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d078be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fd4d0788430" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fd4d0788430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0788780"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0788908"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0788a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0788c18"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0788da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0787020"/>
        <function-ref name="set" scoped="" ref="0x7fd4d07871a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0787330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fd4d078ed60" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fd4d078ed60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d078d0d8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d078d260"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d078d3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d078d570"/>
        <function-ref name="get" scoped="" ref="0x7fd4d078d6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d078d880"/>
        <function-ref name="set" scoped="" ref="0x7fd4d078da08"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d078db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fd4d078a120" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fd4d078a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d078a470"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d078a5f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d078a780"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d078a908"/>
        <function-ref name="get" scoped="" ref="0x7fd4d078aa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d078ac18"/>
        <function-ref name="set" scoped="" ref="0x7fd4d078ada0"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0789020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fd4d07875b8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fd4d07875b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0787908"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0787a90"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0787c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0787da0"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0786020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d07861a8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0786330"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d07864b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d03ae970" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d03ae970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d03aecc0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d03aee48"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d03ad020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d03ad1a8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d03ad330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d03ad4b8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d03ad640"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d03ad7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d03ab970" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d03ab970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d03abcc0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d03abe48"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d03aa020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d03aa1a8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d03aa330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d03aa4b8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d03aa640"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d03aa7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d03a8970" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d03a8970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d03a8cc0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d03a8e48"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d03a7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d03a71a8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d03a7330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d03a74b8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d03a7640"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d03a77c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d03a5970" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d03a5970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d03a5cc0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d03a5e48"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d03a4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d03a41a8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d03a4330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d03a44b8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d03a4640"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d03a47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d03a2970" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d03a2970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d03a2cc0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d03a2e48"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d03a1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d03a11a8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d03a1330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d03a14b8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d03a1640"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d03a17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d039f970" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d039f970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d039fcc0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d039fe48"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d039e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d039e1a8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d039e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d039e4b8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d039e640"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d039e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d039c970" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d039c970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d039ccc0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d039ce48"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d039b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d039b1a8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d039b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d039b4b8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d039b640"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d039b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d0399970" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d0399970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0399cc0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0399e48"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0398020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d03981a8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0398330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d03984b8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0398640"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d03987c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fd4d077e740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fd4d077e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d077ea90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d077ec18"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d077eda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d077d020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d077d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d077d330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d077d4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d077d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fd4d077bbd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fd4d077bbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d077a020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d077a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d077a330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d077a4b8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d077a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d077a7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d077a950"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d077aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fd4d0780500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fd4d0780500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0780850"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d07809d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0780b60"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0780ce8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0780e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d077f020"/>
        <function-ref name="set" scoped="" ref="0x7fd4d077f1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d077f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fd4d077d8c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fd4d077d8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d077dc18"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d077dda0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d077c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d077c1a8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d077c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d077c4b8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d077c640"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d077c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fd4d077ad60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fd4d077ad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d07790d8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0779260"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d07793e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0779570"/>
        <function-ref name="get" scoped="" ref="0x7fd4d07796f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0779880"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0779a08"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0779b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fd4d077f5b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fd4d077f5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d077f908"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d077fa90"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d077fc18"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d077fda0"/>
        <function-ref name="get" scoped="" ref="0x7fd4d077e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d077e1a8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d077e330"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d077e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fd4d077ca50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fd4d077ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d077cda0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d077b020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d077b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d077b330"/>
        <function-ref name="get" scoped="" ref="0x7fd4d077b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d077b640"/>
        <function-ref name="set" scoped="" ref="0x7fd4d077b7c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d077b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fd4d0779e18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fd4d0779e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d07771a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0777330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d07774b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0777640"/>
        <function-ref name="get" scoped="" ref="0x7fd4d07777c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0777950"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0777ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0777c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d03476a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d03476a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d03479f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0347b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0347d08"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0346020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d03461a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0346330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d03464b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0346640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d0344710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d0344710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0344a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0344be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0344d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0343020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d03431a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0343330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d03434b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0343640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d0341710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d0341710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0341a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0341be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0341d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0340020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d03401a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0340330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d03404b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0340640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d033e710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d033e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d033ea60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d033ebe8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d033ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d033d020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d033d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d033d330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d033d4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d033d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d033b710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d033b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d033ba60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d033bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d033bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d033a020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d033a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d033a330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d033a4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d033a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d0338710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d0338710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0338a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0338be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0338d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0337020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d03371a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0337330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d03374b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0337640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d0335710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d0335710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0335a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0335be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0335d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0334020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d03341a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0334330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d03344b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0334640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d0332710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d0332710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0332a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0332be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0332d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0331020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d03311a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0331330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d03314b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0331640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fd4d076f120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fd4d076f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d076f470"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d076f5f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d076f780"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d076f908"/>
        <function-ref name="get" scoped="" ref="0x7fd4d076fa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d076fc18"/>
        <function-ref name="set" scoped="" ref="0x7fd4d076fda0"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d076e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fd4d076b5b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fd4d076b5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d076b908"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d076ba90"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d076bc18"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d076bda0"/>
        <function-ref name="get" scoped="" ref="0x7fd4d076a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d076a1a8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d076a330"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d076a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fd4d0772e40" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fd4d0772e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d07711c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0771348"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d07714d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0771658"/>
        <function-ref name="get" scoped="" ref="0x7fd4d07717e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0771968"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0771af0"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0771c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fd4d076e2a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fd4d076e2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d076e5f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d076e780"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d076e908"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d076ea90"/>
        <function-ref name="get" scoped="" ref="0x7fd4d076ec18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d076eda0"/>
        <function-ref name="set" scoped="" ref="0x7fd4d076d020"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d076d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fd4d076a740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fd4d076a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d076aa90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d076ac18"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d076ada0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0769020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d07691a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0769330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d07694b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0769640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fd4d0770020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fd4d0770020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0770370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d07704f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0770680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0770808"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0770990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0770b18"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0770ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0770e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fd4d076d430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fd4d076d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d076d780"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d076d908"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d076da90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d076dc18"/>
        <function-ref name="get" scoped="" ref="0x7fd4d076dda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d076b020"/>
        <function-ref name="set" scoped="" ref="0x7fd4d076b1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d076b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fd4d07698c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fd4d07698c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0769c18"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0769da0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0768020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d07681a8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0768330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d07684b8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0768640"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d07687c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d02e06a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d02e06a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d02e09f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d02e0b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d02e0d08"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d02df020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d02df1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d02df330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d02df4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d02df640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d02dd710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d02dd710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d02dda60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d02ddbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d02ddd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d02dc020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d02dc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d02dc330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d02dc4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d02dc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d02da710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d02da710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d02daa60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d02dabe8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d02dad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d02d9020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d02d91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d02d9330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d02d94b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d02d9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d02d7710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d02d7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d02d7a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d02d7be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d02d7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d02d6020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d02d61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d02d6330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d02d64b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d02d6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d02d4710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d02d4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d02d4a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d02d4be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d02d4d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d02d3020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d02d31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d02d3330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d02d34b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d02d3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d02d1710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d02d1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d02d1a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d02d1be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d02d1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d02d0020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d02d01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d02d0330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d02d04b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d02d0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d02ce710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d02ce710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d02cea60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d02cebe8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d02ced70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d02cd020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d02cd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d02cd330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d02cd4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d02cd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d02cb710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d02cb710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d02cba60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d02cbbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d02cbd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d02ca020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d02ca1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d02ca330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d02ca4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d02ca640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fd4d0760bd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fd4d0760bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d075f020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d075f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d075f330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d075f4b8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d075f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d075f7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d075f950"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d075fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fd4d075c020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fd4d075c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d075c370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d075c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d075c680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d075c808"/>
        <function-ref name="get" scoped="" ref="0x7fd4d075c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d075cb18"/>
        <function-ref name="set" scoped="" ref="0x7fd4d075cca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d075ce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fd4d0763930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fd4d0763930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0763c80"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0763e08"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0762020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d07621a8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0762330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d07624b8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0762640"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d07627c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fd4d075fd60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fd4d075fd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d075e0d8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d075e260"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d075e3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d075e570"/>
        <function-ref name="get" scoped="" ref="0x7fd4d075e6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d075e880"/>
        <function-ref name="set" scoped="" ref="0x7fd4d075ea08"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d075eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fd4d075b120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fd4d075b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d075b470"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d075b5f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d075b780"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d075b908"/>
        <function-ref name="get" scoped="" ref="0x7fd4d075ba90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d075bc18"/>
        <function-ref name="set" scoped="" ref="0x7fd4d075bda0"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d075a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fd4d0762a50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fd4d0762a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0762da0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0760020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d07601a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0760330"/>
        <function-ref name="get" scoped="" ref="0x7fd4d07604b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0760640"/>
        <function-ref name="set" scoped="" ref="0x7fd4d07607c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0760950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fd4d075ee18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fd4d075ee18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d075d1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d075d330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d075d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d075d640"/>
        <function-ref name="get" scoped="" ref="0x7fd4d075d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d075d950"/>
        <function-ref name="set" scoped="" ref="0x7fd4d075dad8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d075dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fd4d075a2a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fd4d075a2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d075a5f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d075a780"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d075a908"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d075aa90"/>
        <function-ref name="get" scoped="" ref="0x7fd4d075ac18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d075ada0"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0759020"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d07591a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d027a6a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d027a6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d027a9f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d027ab80"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d027ad08"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0278020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d02781a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0278330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d02784b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0278640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d0276710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d0276710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0276a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0276be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0276d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0275020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d02751a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0275330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d02754b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0275640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d0273710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d0273710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0273a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0273be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0273d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0272020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d02721a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0272330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d02724b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0272640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d0270710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d0270710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0270a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0270be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0270d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d026f020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d026f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d026f330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d026f4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d026f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d026d710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d026d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d026da60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d026dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d026dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d026c020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d026c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d026c330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d026c4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d026c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d026a710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d026a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d026aa60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d026abe8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d026ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0269020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d02691a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0269330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d02694b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0269640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d0267710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d0267710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0267a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0267be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0267d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0266020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d02661a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0266330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d02664b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0266640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d0264710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d0264710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0264a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0264be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0264d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0263020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d02631a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0263330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d02634b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0263640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fd4d0751740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fd4d0751740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0751a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0751c18"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0751da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0750020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d07501a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0750330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d07504b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0750640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fd4d074ebd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fd4d074ebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d074d020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d074d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d074d330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d074d4b8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d074d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d074d7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d074d950"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d074dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fd4d0753500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fd4d0753500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0753850"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d07539d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0753b60"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0753ce8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0753e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0752020"/>
        <function-ref name="set" scoped="" ref="0x7fd4d07521a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0752330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fd4d07508c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fd4d07508c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0750c18"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0750da0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d074f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d074f1a8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d074f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d074f4b8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d074f640"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d074f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fd4d074dd60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fd4d074dd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d074c0d8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d074c260"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d074c3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d074c570"/>
        <function-ref name="get" scoped="" ref="0x7fd4d074c6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d074c880"/>
        <function-ref name="set" scoped="" ref="0x7fd4d074ca08"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d074cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fd4d07525b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fd4d07525b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0752908"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0752a90"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0752c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0752da0"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0751020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d07511a8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0751330"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d07514b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fd4d074fa50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fd4d074fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d074fda0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d074e020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d074e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d074e330"/>
        <function-ref name="get" scoped="" ref="0x7fd4d074e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d074e640"/>
        <function-ref name="set" scoped="" ref="0x7fd4d074e7c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d074e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fd4d074ce18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fd4d074ce18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d074b1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d074b330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d074b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d074b640"/>
        <function-ref name="get" scoped="" ref="0x7fd4d074b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d074b950"/>
        <function-ref name="set" scoped="" ref="0x7fd4d074bad8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d074bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d02136a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d02136a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d02139f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0213b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0213d08"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0211020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d02111a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0211330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d02114b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0211640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d020f710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d020f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d020fa60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d020fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d020fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d020e020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d020e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d020e330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d020e4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d020e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d020c710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d020c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d020ca60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d020cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d020cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d020b020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d020b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d020b330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d020b4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d020b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d0209710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d0209710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0209a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0209be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0209d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0208020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d02081a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0208330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d02084b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0208640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d0206710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d0206710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0206a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0206be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0206d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0205020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d02051a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0205330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d02054b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0205640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d0203710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d0203710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0203a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0203be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0203d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0202020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d02021a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0202330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d02024b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0202640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d0200710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d0200710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0200a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0200be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0200d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d01ff020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d01ff1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d01ff330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d01ff4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d01ff640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d01fd710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d01fd710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d01fda60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d01fdbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d01fdd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d01fc020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d01fc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d01fc330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d01fc4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d01fc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d07433e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d07433e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0743730"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d07438b8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0743a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0743bc8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0743d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d072d020"/>
        <function-ref name="set" scoped="" ref="0x7fd4d072d1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d072d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d072ac38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d072ac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0729020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d07291a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0729330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d07294b8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0729640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d07297c8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0729950"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0729ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d07243e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d07243e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0724730"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d07248b8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0724a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0724bc8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0724d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0723020"/>
        <function-ref name="set" scoped="" ref="0x7fd4d07231a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0723330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d0720c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d0720c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d071e020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d071e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d071e330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d071e4b8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d071e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d071e7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d071e950"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d071ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d071a3e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d071a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d071a730"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d071a8b8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d071aa40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d071abc8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d071ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0719020"/>
        <function-ref name="set" scoped="" ref="0x7fd4d07191a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0719330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d0715c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d0715c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0714020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d07141a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0714330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d07144b8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0714640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d07147c8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0714950"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0714ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d0710480" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d0710480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d07107d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0710958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0710ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0710c68"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0710df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d070e020"/>
        <function-ref name="set" scoped="" ref="0x7fd4d070e1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d070e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d070bc38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d070bc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d070a020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d070a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d070a330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d070a4b8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d070a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d070a7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d070a950"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d070aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d0705520" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d0705520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0705870"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d07059f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0705b80"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0705d08"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0704020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d07041a8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0704330"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d07044b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d0701cd8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d0701cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d07000a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0700228"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d07003b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0700538"/>
        <function-ref name="get" scoped="" ref="0x7fd4d07006c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0700848"/>
        <function-ref name="set" scoped="" ref="0x7fd4d07009d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0700b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d06fb3e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d06fb3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d06fb730"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d06fb8b8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d06fba40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d06fbbc8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d06fbd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d06fa020"/>
        <function-ref name="set" scoped="" ref="0x7fd4d06fa1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d06fa330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d06f6c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d06f6c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d06f5020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d06f51a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d06f5330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d06f54b8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d06f5640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d06f57c8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d06f5950"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d06f5ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d06f13e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d06f13e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d06f1730"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d06f18b8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d06f1a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d06f1bc8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d06f1d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d06f0020"/>
        <function-ref name="set" scoped="" ref="0x7fd4d06f01a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d06f0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4d06ecc38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd4d06ecc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d06eb020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d06eb1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d06eb330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d06eb4b8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d06eb640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d06eb7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d06eb950"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d06ebad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd4d06b24b0" loc="61:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd4d06b24b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fd4d097e128"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fd4d097e128"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd4d06b2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7fd4d06b2ae0" loc="62:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fd4d06b2ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7fd4d06b2e30"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7fd4d06b1020"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7fd4d06b11a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x7fd4d06b1330"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7fd4d06b14b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fd4d0692418" loc="60:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7fd4d0692418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd4d0692768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fd4d0843c38" loc="57:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fd4d0843c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fd4d0693020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7fd4d0693ce0" loc="59:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fd4d0693ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd4d06920a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7fd4d0693308" loc="58:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fd4d0693308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd4d0693658"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fd4d06937e0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fd4d0693968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fd4d0957b18" loc="48:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7fd4d0957b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd4d0957e68"/>
        <function-ref name="runTask" scoped="" ref="0x7fd4d0964020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fd4d0983080" loc="47:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fd4d0983080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd4d09833d0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fd4d0983558"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fd4d09836e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fd4d08acc58" loc="56:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7fd4d08acc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd4d08ab020"/>
        <function-ref name="runTask" scoped="" ref="0x7fd4d08ab1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7fd4d08a8168" loc="57:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7fd4d08a8168"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7fd4d08a84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fd4d08add88" loc="55:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fd4d08add88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd4d08ac170"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fd4d08ac2f8"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fd4d08ac480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7fd4d088b988" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fd4d088b988"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fd4d088bcd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7fd4d0960e28" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7fd4d0960e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7fd4d088f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7fd4d088c3c8" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7fd4d088c3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fd4d088c718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd4d0686a60" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="TestAppC.Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd4d0686a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd4d08f4020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd4d08f4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd4d04c7d60"/>
        <function-ref name="fired" scoped="" ref="0x7fd4d04c8470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd4d04c71c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd4d04c8d10"/>
        <function-ref name="getdt" scoped="" ref="0x7fd4d04c5648"/>
        <function-ref name="gett0" scoped="" ref="0x7fd4d04c51f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd4d04c88c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd4d04c9620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd4d04c7790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd4d04c9ac0"/>
        <function-ref name="stop" scoped="" ref="0x7fd4d04c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fd4d067d6a0" loc="49:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7fd4d067d6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd4d08f4020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd4d08f4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd4d0679a18"/>
        <function-ref name="fired" scoped="" ref="0x7fd4d067a158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd4d067ae48"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd4d067a9f8"/>
        <function-ref name="getdt" scoped="" ref="0x7fd4d06782e8"/>
        <function-ref name="gett0" scoped="" ref="0x7fd4d0679e68"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd4d067a5a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd4d067c370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd4d0679448"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd4d067c810"/>
        <function-ref name="stop" scoped="" ref="0x7fd4d067ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fd4d0674db8" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7fd4d0674db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd4d08f4020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd4d08f4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd4d066f088"/>
        <function-ref name="fired" scoped="" ref="0x7fd4d0672708"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd4d0671470"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd4d0671020"/>
        <function-ref name="getdt" scoped="" ref="0x7fd4d066f928"/>
        <function-ref name="gett0" scoped="" ref="0x7fd4d066f4d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd4d0672b58"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd4d0673930"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd4d0671a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd4d0673dd0"/>
        <function-ref name="stop" scoped="" ref="0x7fd4d06722b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fd4d066a298" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fd4d066a298"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd4d08f4020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd4d08f4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd4d066ae18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd4d06740c0" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd4d06740c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd4d0674410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7fd4d065c3b8" loc="29:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7fd4d065c3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd4d08f4020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd4d08f4378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd4d125e608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd4d065b130"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd4d065ba40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd4d065b5b8"/>
        <function-ref name="overflow" scoped="" ref="0x7fd4d0657020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd4d066d8e8" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd4d066d8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd4d066dc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7fd4d06661c8" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7fd4d06661c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd4d08f4020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd4d08f4378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd4d125e608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd4d065e918"/>
        <function-ref name="fired" scoped="" ref="0x7fd4d0665980"/>
        <function-ref name="startAt" scoped="" ref="0x7fd4d065e310"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd4d0665e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd4d065eda0"/>
        <function-ref name="start" scoped="" ref="0x7fd4d0665020"/>
        <function-ref name="stop" scoped="" ref="0x7fd4d06654f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd4d05627c8" loc="61:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fd4d05627c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd4d08f4020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd4d08f4378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd4d125e608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd4d055e020"/>
        <function-ref name="fired" scoped="" ref="0x7fd4d055f020"/>
        <function-ref name="startAt" scoped="" ref="0x7fd4d055f930"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd4d055f4a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd4d055e4a8"/>
        <function-ref name="start" scoped="" ref="0x7fd4d0561578"/>
        <function-ref name="stop" scoped="" ref="0x7fd4d0561a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd4d0562020" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd4d0562020"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7fd4d097fd88"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7fd4d097fd88"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd4d0562370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd4d055ea90" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fd4d055ea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd4d08f4020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd4d08f4378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd4d125e608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd4d055d828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd4d055c190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd4d055dcb0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd4d055c618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7fd4d01250c0" loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fd4d01250c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fd4d0125410"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fd4d0125598"/>
        <function-ref name="getControlA" scoped="" ref="0x7fd4d0125720"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fd4d01258a8"/>
        <function-ref name="setControlB" scoped="" ref="0x7fd4d0125a30"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fd4d0125bb8"/>
        <function-ref name="getControlB" scoped="" ref="0x7fd4d0125d40"/>
        <function-ref name="setControlA" scoped="" ref="0x7fd4d0124020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd4d0130020" loc="61:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fd4d0130020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd4d08f4020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd4d08f4378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd4d125e608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd4d012e690"/>
        <function-ref name="fired" scoped="" ref="0x7fd4d012f6f8"/>
        <function-ref name="startAt" scoped="" ref="0x7fd4d012e088"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd4d012fb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd4d012eb18"/>
        <function-ref name="start" scoped="" ref="0x7fd4d0130d70"/>
        <function-ref name="stop" scoped="" ref="0x7fd4d012f270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd4d01327b8" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd4d01327b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd4d0132b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd4d012d128" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fd4d012d128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd4d08f4020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd4d08f4378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd4d125e608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd4d012de78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd4d012b7b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd4d012b330"/>
        <function-ref name="overflow" scoped="" ref="0x7fd4d012bc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7fd4d0120510" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7fd4d0120510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7fd4d0120860"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7fd4d01209e8"/>
        <function-ref name="controlABusy" scoped="" ref="0x7fd4d0120b70"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7fd4d0120cf8"/>
        <function-ref name="countBusy" scoped="" ref="0x7fd4d0120e80"/>
        <function-ref name="compareABusy" scoped="" ref="0x7fd4d0116030"/>
        <function-ref name="getAssr" scoped="" ref="0x7fd4d01161b8"/>
        <function-ref name="setAssr" scoped="" ref="0x7fd4d0116340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7fd4d01243b0" loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fd4d01243b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fd4d0122c20"/>
        <function-ref name="fired" scoped="" ref="0x7fd4d0123980"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0123020"/>
        <function-ref name="reset" scoped="" ref="0x7fd4d0123e08"/>
        <function-ref name="isOn" scoped="" ref="0x7fd4d01200f8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d01234a8"/>
        <function-ref name="start" scoped="" ref="0x7fd4d0122310"/>
        <function-ref name="stop" scoped="" ref="0x7fd4d0122798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd4d012a228" loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd4d012a228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fd4d0126310"/>
        <function-ref name="test" scoped="" ref="0x7fd4d0128998"/>
        <function-ref name="get" scoped="" ref="0x7fd4d012ada8"/>
        <function-ref name="setScale" scoped="" ref="0x7fd4d0126798"/>
        <function-ref name="getScale" scoped="" ref="0x7fd4d0126c70"/>
        <function-ref name="reset" scoped="" ref="0x7fd4d0129bd0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd4d0129748"/>
        <function-ref name="isOn" scoped="" ref="0x7fd4d0128e20"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0129270"/>
        <function-ref name="start" scoped="" ref="0x7fd4d0128088"/>
        <function-ref name="stop" scoped="" ref="0x7fd4d0128510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fd4d05d03c0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fd4d05d03c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fd4d05d0710"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fd4d05d0898"/>
        <function-ref name="getControlA" scoped="" ref="0x7fd4d05d0a20"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fd4d05d0ba8"/>
        <function-ref name="setControlB" scoped="" ref="0x7fd4d05d0d30"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fd4d05cf020"/>
        <function-ref name="getControlB" scoped="" ref="0x7fd4d05cf1a8"/>
        <function-ref name="setControlA" scoped="" ref="0x7fd4d05cf330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7fd4d05cb9e8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7fd4d05cb9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7fd4d05cbd38"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7fd4d05ca020"/>
        <function-ref name="controlABusy" scoped="" ref="0x7fd4d05ca1a8"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7fd4d05ca330"/>
        <function-ref name="countBusy" scoped="" ref="0x7fd4d05ca4b8"/>
        <function-ref name="compareABusy" scoped="" ref="0x7fd4d05ca640"/>
        <function-ref name="getAssr" scoped="" ref="0x7fd4d05ca7c8"/>
        <function-ref name="setAssr" scoped="" ref="0x7fd4d05ca950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd4d05cf7f8" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fd4d05cf7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fd4d05cb020"/>
        <function-ref name="fired" scoped="" ref="0x7fd4d05ced08"/>
        <function-ref name="get" scoped="" ref="0x7fd4d05ce3a8"/>
        <function-ref name="reset" scoped="" ref="0x7fd4d05cd1f8"/>
        <function-ref name="isOn" scoped="" ref="0x7fd4d05cb4a8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d05ce830"/>
        <function-ref name="start" scoped="" ref="0x7fd4d05cd680"/>
        <function-ref name="stop" scoped="" ref="0x7fd4d05cdb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd4d05d5288" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd4d05d5288"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fd4d05d24a8"/>
        <function-ref name="test" scoped="" ref="0x7fd4d05d3a40"/>
        <function-ref name="get" scoped="" ref="0x7fd4d05d5e08"/>
        <function-ref name="setScale" scoped="" ref="0x7fd4d05d2930"/>
        <function-ref name="getScale" scoped="" ref="0x7fd4d05d2e08"/>
        <function-ref name="reset" scoped="" ref="0x7fd4d05d4c70"/>
        <function-ref name="overflow" scoped="" ref="0x7fd4d05d47e8"/>
        <function-ref name="isOn" scoped="" ref="0x7fd4d05d2020"/>
        <function-ref name="set" scoped="" ref="0x7fd4d05d4310"/>
        <function-ref name="start" scoped="" ref="0x7fd4d05d3130"/>
        <function-ref name="stop" scoped="" ref="0x7fd4d05d35b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fd4d05c1020" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fd4d05c1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fd4d05c1370"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fd4d05c14f8"/>
        <function-ref name="getControlA" scoped="" ref="0x7fd4d05c1680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fd4d05c1808"/>
        <function-ref name="setControlB" scoped="" ref="0x7fd4d05c1990"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fd4d05c1b18"/>
        <function-ref name="getControlB" scoped="" ref="0x7fd4d05c1ca0"/>
        <function-ref name="setControlA" scoped="" ref="0x7fd4d05c1e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7fd4d05bc578" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fd4d05bc578"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fd4d05bc8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7fd4d05bcc78" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7fd4d05bcc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7fd4d05bb020"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7fd4d05bb1a8"/>
        <function-ref name="controlABusy" scoped="" ref="0x7fd4d05bb330"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7fd4d05bb4b8"/>
        <function-ref name="countBusy" scoped="" ref="0x7fd4d05bb640"/>
        <function-ref name="compareABusy" scoped="" ref="0x7fd4d05bb7c8"/>
        <function-ref name="getAssr" scoped="" ref="0x7fd4d05bb950"/>
        <function-ref name="setAssr" scoped="" ref="0x7fd4d05bbad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd4d05c0340" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fd4d05c0340"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fd4d05bdc20"/>
        <function-ref name="fired" scoped="" ref="0x7fd4d05bf980"/>
        <function-ref name="get" scoped="" ref="0x7fd4d05bf020"/>
        <function-ref name="reset" scoped="" ref="0x7fd4d05bfe08"/>
        <function-ref name="isOn" scoped="" ref="0x7fd4d05bc0f8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d05bf4a8"/>
        <function-ref name="start" scoped="" ref="0x7fd4d05bd310"/>
        <function-ref name="stop" scoped="" ref="0x7fd4d05bd798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd4d05c9e00" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd4d05c9e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fd4d05c20f8"/>
        <function-ref name="test" scoped="" ref="0x7fd4d05c3798"/>
        <function-ref name="get" scoped="" ref="0x7fd4d05c6a18"/>
        <function-ref name="setScale" scoped="" ref="0x7fd4d05c2580"/>
        <function-ref name="getScale" scoped="" ref="0x7fd4d05c2a58"/>
        <function-ref name="reset" scoped="" ref="0x7fd4d05c5980"/>
        <function-ref name="overflow" scoped="" ref="0x7fd4d05c54f8"/>
        <function-ref name="isOn" scoped="" ref="0x7fd4d05c3c20"/>
        <function-ref name="set" scoped="" ref="0x7fd4d05c5020"/>
        <function-ref name="start" scoped="" ref="0x7fd4d05c5e08"/>
        <function-ref name="stop" scoped="" ref="0x7fd4d05c3310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7fd4d052ccf0" loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7fd4d052ccf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd4d052b0a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fd4d052b228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fd4d0530c70" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fd4d0530c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd4d08f4020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd4d08f4378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd4d125e608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd4d052c410"/>
        <function-ref name="fired" scoped="" ref="0x7fd4d052d4a8"/>
        <function-ref name="startAt" scoped="" ref="0x7fd4d052ddb8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd4d052d930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd4d052c898"/>
        <function-ref name="start" scoped="" ref="0x7fd4d052e9f0"/>
        <function-ref name="stop" scoped="" ref="0x7fd4d052d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd4d0535ab0" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd4d0535ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd4d08f4020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd4d08f4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd4d0531d60"/>
        <function-ref name="fired" scoped="" ref="0x7fd4d0532470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd4d05311c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd4d0532d10"/>
        <function-ref name="getdt" scoped="" ref="0x7fd4d0530648"/>
        <function-ref name="gett0" scoped="" ref="0x7fd4d05301f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd4d05328c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd4d0534620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd4d0531790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd4d0534ac0"/>
        <function-ref name="stop" scoped="" ref="0x7fd4d0532020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7fd4d04de930" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7fd4d04de930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd4d04dec80"/>
        <function-ref name="runTask" scoped="" ref="0x7fd4d04dee08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fd4d04e3858" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7fd4d04e3858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd4d08f4020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd4d08f4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd4d04dfbc0"/>
        <function-ref name="fired" scoped="" ref="0x7fd4d04e01c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd4d04df020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd4d04e0a60"/>
        <function-ref name="getdt" scoped="" ref="0x7fd4d04de4d8"/>
        <function-ref name="gett0" scoped="" ref="0x7fd4d04de088"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd4d04e0610"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd4d04e23d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd4d04df5f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd4d04e2878"/>
        <function-ref name="stop" scoped="" ref="0x7fd4d04e2d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd4d04e95e0" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd4d04e95e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd4d08f4020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd4d08f4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd4d04e4988"/>
        <function-ref name="fired" scoped="" ref="0x7fd4d04e6020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd4d04e6d70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd4d04e6900"/>
        <function-ref name="getdt" scoped="" ref="0x7fd4d04e32d8"/>
        <function-ref name="gett0" scoped="" ref="0x7fd4d04e4df8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd4d04e6490"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd4d04e8198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd4d04e4398"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd4d04e8658"/>
        <function-ref name="stop" scoped="" ref="0x7fd4d04e8b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fd4d04d9128" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fd4d04d9128"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd4d08f4020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd4d08f4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd4d04d9ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fd4d04d0330" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fd4d04d0330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd4d08f4020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd4d08f4378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd4d125e608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd4d04cf0c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd4d04cf9d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd4d04cf548"/>
        <function-ref name="overflow" scoped="" ref="0x7fd4d04cfe58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd4d04c3020" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="TestAppC.Timer2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd4d04c3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd4d08f4020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd4d08f4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd4d04bf2b8"/>
        <function-ref name="fired" scoped="" ref="0x7fd4d04c2978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd4d04c16c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd4d04c1278"/>
        <function-ref name="getdt" scoped="" ref="0x7fd4d04bfb58"/>
        <function-ref name="gett0" scoped="" ref="0x7fd4d04bf708"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd4d04c2dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd4d04c3b68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd4d04c1c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd4d04c2088"/>
        <function-ref name="stop" scoped="" ref="0x7fd4d04c2528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd4d04bd550" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="TestAppC.Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd4d04bd550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd4d08f4020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd4d08f4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd4d04b9768"/>
        <function-ref name="fired" scoped="" ref="0x7fd4d04bce50"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd4d04bbb78"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd4d04bb728"/>
        <function-ref name="getdt" scoped="" ref="0x7fd4d04b8088"/>
        <function-ref name="gett0" scoped="" ref="0x7fd4d04b9bb8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd4d04bb2d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd4d04bc0c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd4d04b9198"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd4d04bc560"/>
        <function-ref name="stop" scoped="" ref="0x7fd4d04bca00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7fd4d04b7500" loc="44:/opt/tinyos-2.1.2/tos/system/LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7fd4d04b7500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x7fd4d04b7850"/>
        <function-ref name="on" scoped="" ref="0x7fd4d04b79d8"/>
        <function-ref name="off" scoped="" ref="0x7fd4d04b7b60"/>
        <function-ref name="set" scoped="" ref="0x7fd4d04b7ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Green" ref="0x7fd4d04b3610" loc="68:/opt/tinyos-2.1.2/tos/system/LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Green" scoped="" ref="0x7fd4d04b3610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x7fd4d04b3960"/>
        <function-ref name="on" scoped="" ref="0x7fd4d04b3ae8"/>
        <function-ref name="off" scoped="" ref="0x7fd4d04b3c70"/>
        <function-ref name="set" scoped="" ref="0x7fd4d04b3df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Yellow" ref="0x7fd4d04b2bf0" loc="77:/opt/tinyos-2.1.2/tos/system/LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Yellow" scoped="" ref="0x7fd4d04b2bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x7fd4d04b1020"/>
        <function-ref name="on" scoped="" ref="0x7fd4d04b11a8"/>
        <function-ref name="off" scoped="" ref="0x7fd4d04b1330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d04b14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiLed" ref="0x7fd4d04aa800" loc="85:/opt/tinyos-2.1.2/tos/system/LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MultiLed" scoped="" ref="0x7fd4d04aa800"/></type-interface>
      <instance>
        <interfacedef-ref qname="MultiLed"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7fd4d04aab50"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d04aacd8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d04aae60"/>
        <function-ref name="on" scoped="" ref="0x7fd4d04b0020"/>
        <function-ref name="set" scoped="" ref="0x7fd4d04b01a8"/>
        <function-ref name="off" scoped="" ref="0x7fd4d04b0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7fd4d04b4020" loc="46:/opt/tinyos-2.1.2/tos/system/LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7fd4d04b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x7fd4d04b4370"/>
        <function-ref name="on" scoped="" ref="0x7fd4d04b44f8"/>
        <function-ref name="off" scoped="" ref="0x7fd4d04b4680"/>
        <function-ref name="set" scoped="" ref="0x7fd4d04b4808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Red" ref="0x7fd4d04b2120" loc="71:/opt/tinyos-2.1.2/tos/system/LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Red" scoped="" ref="0x7fd4d04b2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x7fd4d04b2470"/>
        <function-ref name="on" scoped="" ref="0x7fd4d04b25f8"/>
        <function-ref name="off" scoped="" ref="0x7fd4d04b2780"/>
        <function-ref name="set" scoped="" ref="0x7fd4d04b2908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7fd4d04b4ae0" loc="48:/opt/tinyos-2.1.2/tos/system/LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7fd4d04b4ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x7fd4d04b4e30"/>
        <function-ref name="on" scoped="" ref="0x7fd4d04b3020"/>
        <function-ref name="off" scoped="" ref="0x7fd4d04b31a8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d04b3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiLed" ref="0x7fd4d04a8020" loc="39:/opt/tinyos-2.1.2/tos/platforms/iris/PlatformLedC.nc">
      <component-ref qname="PlatformLedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MultiLed" scoped="" ref="0x7fd4d04a8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="MultiLed"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7fd4d04a8370"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d04a84f8"/>
        <function-ref name="get" scoped="" ref="0x7fd4d04a8680"/>
        <function-ref name="on" scoped="" ref="0x7fd4d04a8808"/>
        <function-ref name="set" scoped="" ref="0x7fd4d04a8990"/>
        <function-ref name="off" scoped="" ref="0x7fd4d04a8b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led" ref="0x7fd4d04a72f0" loc="40:/opt/tinyos-2.1.2/tos/platforms/iris/PlatformLedC.nc">
      <component-ref qname="PlatformLedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led" scoped="" ref="0x7fd4d04a72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x7fd4d04a7640"/>
        <function-ref name="on" scoped="" ref="0x7fd4d04a77c8"/>
        <function-ref name="off" scoped="" ref="0x7fd4d04a7950"/>
        <function-ref name="set" scoped="" ref="0x7fd4d04a7ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fd4d0497c38" loc="46:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd4d0497c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd4d04a2020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd4d04a21a8"/>
        <function-ref name="led1On" scoped="" ref="0x7fd4d04a2330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd4d04a24b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd4d04a2640"/>
        <function-ref name="get" scoped="" ref="0x7fd4d04a27c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd4d04a2950"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd4d04a1020"/>
        <function-ref name="set" scoped="" ref="0x7fd4d04a2ad8"/>
        <function-ref name="led0On" scoped="" ref="0x7fd4d04a2c60"/>
        <function-ref name="led2On" scoped="" ref="0x7fd4d04a2de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7fd4d0493ce8" loc="50:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7fd4d0493ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d04920a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0492228"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d04923b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0492538"/>
        <function-ref name="get" scoped="" ref="0x7fd4d04926c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0492848"/>
        <function-ref name="set" scoped="" ref="0x7fd4d04929d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0492b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd4d0494020" loc="46:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd4d0494020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd4d0494370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7fd4d0492e70" loc="51:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7fd4d0492e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d04911e8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0491370"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d04914f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0491680"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0491808"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0491990"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0491b18"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0491ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fd4d04945e8" loc="47:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd4d04945e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd4d0494938"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd4d0494ac0"/>
        <function-ref name="led1On" scoped="" ref="0x7fd4d0494c48"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd4d0494dd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd4d0493020"/>
        <function-ref name="get" scoped="" ref="0x7fd4d04931a8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd4d0493330"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd4d0493950"/>
        <function-ref name="set" scoped="" ref="0x7fd4d04934b8"/>
        <function-ref name="led0On" scoped="" ref="0x7fd4d0493640"/>
        <function-ref name="led2On" scoped="" ref="0x7fd4d04937c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7fd4d0490020" loc="52:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7fd4d0490020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0490370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d04904f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0490680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0490808"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0490990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0490b18"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0490ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0490e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7fd4d0495e10" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7fd4d0495e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d04741a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0474330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d04744b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0474640"/>
        <function-ref name="get" scoped="" ref="0x7fd4d04747c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0474950"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0474ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0474c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7fd4d0473020" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7fd4d0473020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0473370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d04734f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0473680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0473808"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0473990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0473b18"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0473ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0473e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7fd4d04712d8" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd4d04712d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd4d0471628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7fd4d04721b0" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7fd4d04721b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4d0472500"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4d0472688"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0472810"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4d0472998"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0472b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4d0472ca8"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0472e30"/>
        <function-ref name="clr" scoped="" ref="0x7fd4d0471020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiLed" ref="0x7fd4d046a238" loc="39:/opt/tinyos-2.1.2/tos/platforms/iris/PlatformLedP.nc">
      <component-ref qname="PlatformLedP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MultiLed" scoped="" ref="0x7fd4d046a238"/></type-interface>
      <instance>
        <interfacedef-ref qname="MultiLed"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7fd4d046a588"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4d046a710"/>
        <function-ref name="get" scoped="" ref="0x7fd4d046a898"/>
        <function-ref name="on" scoped="" ref="0x7fd4d046aa20"/>
        <function-ref name="set" scoped="" ref="0x7fd4d046aba8"/>
        <function-ref name="off" scoped="" ref="0x7fd4d046ad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led" ref="0x7fd4d04694f8" loc="40:/opt/tinyos-2.1.2/tos/platforms/iris/PlatformLedP.nc">
      <component-ref qname="PlatformLedP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led" scoped="" ref="0x7fd4d04694f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x7fd4d0469848"/>
        <function-ref name="on" scoped="" ref="0x7fd4d04699d0"/>
        <function-ref name="off" scoped="" ref="0x7fd4d0469b58"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0469ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd4d0467020" loc="43:/opt/tinyos-2.1.2/tos/platforms/iris/PlatformLedP.nc">
      <component-ref qname="PlatformLedP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd4d0467020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd4d0467370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd4d04674f8"/>
        <function-ref name="led1On" scoped="" ref="0x7fd4d0467680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd4d0467808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd4d0467990"/>
        <function-ref name="get" scoped="" ref="0x7fd4d0467b18"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd4d0467ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd4d0466330"/>
        <function-ref name="set" scoped="" ref="0x7fd4d0467e28"/>
        <function-ref name="led0On" scoped="" ref="0x7fd4d0466020"/>
        <function-ref name="led2On" scoped="" ref="0x7fd4d04661a8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Led" loc="41:/opt/tinyos-2.1.2/tos/interfaces/Led.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/Led.nc">
        <short> An interface to control a single LED.</short>
        <long> An interface to control a single LED.&#10;&#10; Provides the ability to turn on, turn off, and toggle an LED.&#10;&#10; Implementations of this interface are provided by the LedC&#10; component, both as positional names (Led0) and by color (Green).&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="toggle" ref="0x7fd4d0852a90" loc="53:/opt/tinyos-2.1.2/tos/interfaces/Led.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/Led.nc">
          <short> Toggle the LED.</short>
          <long> Toggle the LED. *</long>
        </documentation>
        <interfacedef-ref qname="Led"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="on" ref="0x7fd4d0853328" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Led.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Led.nc">
          <short> Turn the LED on.</short>
          <long> Turn the LED on. *</long>
        </documentation>
        <interfacedef-ref qname="Led"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x7fd4d08539e8" loc="46:/opt/tinyos-2.1.2/tos/interfaces/Led.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/Led.nc">
          <short> Turn the LED off.</short>
          <long> Turn the LED off. *</long>
        </documentation>
        <interfacedef-ref qname="Led"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd4d0852338" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Led.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/Led.nc">
          <short> Turn the LED on or off, depending on parameter.</short>
          <long> Turn the LED on or off, depending on parameter.&#10; @param turn_on if TRUE, turn LED on; otherwise turn LED off *</long>
        </documentation>
        <interfacedef-ref qname="Led"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd4d09804c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="turn_on" ref="0x7fd4d08520c8" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Led.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd4d09804c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7fd4d086d3a0" loc="60:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd4d086c488" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd4d086c488"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fd4d0865020" loc="136:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd4d125e608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fd4d086a8f8" loc="83:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7fd4d08675b8" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd4d125e608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd4d125e608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fd4d0867020" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd4d125e608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fd4d0867338" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd4d125e608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7fd4d0869870" loc="98:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd4d09804c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7fd4d0863020" loc="151:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd4d125e608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7fd4d0865740" loc="144:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd4d125e608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fd4d08690d8" loc="92:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd4d09804c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7fd4d086b020" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd4d125e608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fd4d086cce8" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd4d125e608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7fd4d08665b8" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd4d125e608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd4d125e608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fd4d0866020" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd4d125e608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fd4d0866338" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd4d125e608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7fd4d086ba60" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd4d125e608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fd4d086b7f0" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd4d125e608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd4d086a258" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fd4d0847a78" loc="62:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd4d095b5d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7fd4d083a958" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd4d125fb98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd4d125e608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7fd4d083a6e8" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd4d125e608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7fd4d083d178" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd4d125fb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7fd4d083db70" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd4d125e608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd4d125e608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7fd4d083d900" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd4d125e608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7fd4d083c620" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd4d125e608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd4d125e608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7fd4d083c3b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd4d125e608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7fd4d083ce68" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fd4d08294e8" loc="44:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fd4d0829bb0" loc="45:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd4d09804c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fd4d082b768" loc="42:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fd4d0828968" loc="47:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd4d09804c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd4d082be08" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd4d09804c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fd4d0828290" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd4d082e9e0" loc="40:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fd4d082b0d8" loc="41:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fd4d126cdd8" loc="57:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7fd4d0963cd0" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7fd4d0963530" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd4d09804c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7fd4d0959a38" loc="67:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd4d095b5d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7fd4d0957258" loc="75:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7fd4d08abe28" loc="76:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7fd4d088b4f8" loc="62:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7fd4d091d940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7fd4d088c020" loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd4d066c518" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd4d066c518"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fd4d066cda8" loc="61:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd4d125e608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd4d065da50" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd4d065da50"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fd4d065dc80" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd4d065dc80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fd4d065a548" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd4d065dc80"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fd4d0659590" loc="76:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fd4d065ad60" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd4d09804c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fd4d0659c80" loc="82:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd4d0667738" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd4d0667738"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fd4d0667968" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd4d0667968"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fd4d0660290" loc="109:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd4d0667968"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fd4d0663418" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7fd4d0661920" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd4d0667968"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd4d0667968"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fd4d0661380" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd4d0667968"/></type-var>
          </variable>
          <variable name="dt" ref="0x7fd4d06616a0" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd4d0667968"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fd4d0663b88" loc="88:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd4d09804c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7fd4d0660a10" loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd4d0667968"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fd4d06644a8" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd4d0667968"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fd4d0664238" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd4d0667968"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd4d0664c78" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7fd4d062b488" loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7fd4d062c360" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7fd4d062f110" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7fd4d062ccd0" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fd4d062ca60" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7fd4d062ebb8" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fd4d062e948" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7fd4d062be00" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7fd4d062bb90" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7fd4d062f840" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7fd4d062e290" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fd4d062e020" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x7fd4d061b9a8" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x7fd4d061ea60" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x7fd4d061c1d8" loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x7fd4d061c9a8" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7fd4d061a1d8" loc="98:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x7fd4d061b1d8" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7fd4d0621888" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd4d08d9978"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7fd4d08d9d80"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7fd4d061e290" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd4d08d9978"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7fd4d08d9d80"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7fd4d061e020" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd4d08d9978"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7fd4d08d9d80"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7fd4d0631848" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd4d0631848"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7fd4d0624020" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd4d09804c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fd4d0626258" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd4d0628178" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd4d0631848"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fd4d0626960" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7fd4d0624770" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd4d09804c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd4d0628ac0" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd4d0631848"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fd4d0628850" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd4d0631848"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fd4d06250d8" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd4d06257c0" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7fd4d063fac0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fd4d063fac0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7fd4d0637020" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7fd4d06380d8" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd4d09804c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd4d063c3a0" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fd4d063fac0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7fd4d0637970" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7fd4d0637700" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7fd4d0635178" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fd4d063ab58" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fd4d063a438" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7fd4d0638830" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd4d09804c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd4d063ccd8" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fd4d063fac0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fd4d063ca68" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fd4d063fac0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fd4d0639290" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd4d0639978" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MultiLed" loc="41:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
        <short> An interface to control a series of LEDs.</short>
        <long> An interface to control a series of LEDs.&#10;&#10; Allows use of a series of LEDs as a visual binary register.  Bit i&#10; of the value is a 1 iff LED i is on.&#10;&#10; This interface is generically implemented by the LedC component.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x7fd4d04aba88" loc="60:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
          <short> Invoke the Led.set() function for the specified LED.</short>
          <long> Invoke the Led.set() function for the specified LED.&#10; @param led_id Position of LED to turn on, starting with LED 0&#10; @param turn_on if TRUE, turn LED on; otherwise turn it off *</long>
        </documentation>
        <interfacedef-ref qname="MultiLed"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd4d09804c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="led_id" ref="0x7fd4d04ab4e8" loc="60:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
          <variable name="turn_on" ref="0x7fd4d04ab808" loc="60:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd4d09804c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fd4d04aa4a8" loc="64:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
          <short> Invoke the Led.toggle() function for the specified LED.</short>
          <long> Invoke the Led.toggle() function for the specified LED.&#10; @param led_id Position of LED to turn on, starting with LED 0 *</long>
        </documentation>
        <interfacedef-ref qname="MultiLed"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="led_id" ref="0x7fd4d04aa238" loc="64:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd4d04ae110" loc="44:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
          <short> Read the value represented by the on status of the LEDs.</short>
          <long> Read the value represented by the on status of the LEDs. *</long>
        </documentation>
        <interfacedef-ref qname="MultiLed"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="on" ref="0x7fd4d04ac3b8" loc="51:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
          <short> Invoke the Led.on() function for the specified LED.</short>
          <long> Invoke the Led.on() function for the specified LED.&#10; @param led_id Position of LED to turn on, starting with LED 0 *</long>
        </documentation>
        <interfacedef-ref qname="MultiLed"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="led_id" ref="0x7fd4d04ac148" loc="51:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd4d04aea50" loc="47:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
          <short> Set the LEDs to represent the given value.</short>
          <long> Set the LEDs to represent the given value. *</long>
        </documentation>
        <interfacedef-ref qname="MultiLed"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fd4d04ae7e0" loc="47:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x7fd4d04acd48" loc="55:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
          <short> Invoke the Led.off() function for the specified LED.</short>
          <long> Invoke the Led.off() function for the specified LED.&#10; @param led_id Position of LED to turn on, starting with LED 0 *</long>
        </documentation>
        <interfacedef-ref qname="MultiLed"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="led_id" ref="0x7fd4d04acad8" loc="55:/opt/tinyos-2.1.2/tos/interfaces/MultiLed.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7fd4d049c020" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7fd4d049c758" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7fd4d049b020" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7fd4d049be70" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7fd4d0498480" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd4d0498c18" loc="117:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7fd4d049b738" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd4d0497768" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fd4d04974f8" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4d125f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7fd4d049d7e0" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7fd4d0499608" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7fd4d0499d20" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
