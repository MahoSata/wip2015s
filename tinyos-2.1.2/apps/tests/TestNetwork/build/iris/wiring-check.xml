<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="35:TestNetworkAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fe762bfd850"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fe762abfcb8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fe762abfcb8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fe762ab8c38"/></to>
    </wire>
    <wire loc="36:TestNetworkAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7fe762bfe020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fe7628cb290"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fe7628cb290"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fe76289cd10"/></to>
    </wire>
    <wire loc="37:TestNetworkAppC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7fe762bfebd8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fe761555aa0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fe761555aa0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fe7614ef728"/></to>
    </wire>
    <wire loc="38:TestNetworkAppC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x7fe762bf8170"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fe761b5f390"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fe761b5f390"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fe761b3f720"/></to>
    </wire>
    <wire loc="39:TestNetworkAppC.nc">
      <from><interface-ref name="DisseminationControl" scoped="" ref="0x7fe762bf8a48"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fe761d595b8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fe761d595b8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fe761d587b0"/></to>
    </wire>
    <wire loc="40:TestNetworkAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fe762b6f760"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fe7628f9190"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fe7628f9190"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fe7628f5930"/></to>
    </wire>
    <wire loc="41:TestNetworkAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe762b60b88"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe761710da0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe761710da0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fe76216f1c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:TestNetworkAppC.nc">
      <from><interface-ref name="DisseminationPeriod" scoped="" ref="0x7fe762bf18a8"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x7fe761b67808"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminationValue" scoped="" ref="0x7fe761b67808"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x7fe760a40538"/></to>
    </wire>
    <wire loc="43:TestNetworkAppC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fe762b78278"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe7617281a8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fe7617281a8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe7607bda78"/></to>
    </wire>
    <wire loc="44:TestNetworkAppC.nc">
      <from><interface-ref name="ReadSensor" scoped="" ref="0x7fe762b6be40"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fe761708af0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fe761708af0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fe7607afe80"/></to>
    </wire>
    <wire loc="45:TestNetworkAppC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7fe762b594f0"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7fe761b42d90"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7fe761b42d90"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7fe761b30020"/></to>
    </wire>
    <wire loc="46:TestNetworkAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fe762b547d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe761b5d1c8"/>
      <arguments>
        <value cst="I:238">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:TestNetworkAppC.nc">
      <from><interface-ref name="UARTSend" scoped="" ref="0x7fe762b4b440"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fe7611b5398"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fe7611b5398"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fe76074a0c0"/></to>
    </wire>
    <wire loc="48:TestNetworkAppC.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x7fe762b45bd8"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x7fe761b5a020"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x7fe761b5a020"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x7fe761b36020"/></to>
    </wire>
    <wire loc="49:TestNetworkAppC.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x7fe762b3b940"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x7fe761b54020"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x7fe761b54020"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x7fe761b34b58"/></to>
    </wire>
    <wire loc="50:TestNetworkAppC.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x7fe762b38528"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x7fe761b42600"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x7fe761b42600"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x7fe761b31788"/></to>
    </wire>
    <wire loc="51:TestNetworkAppC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fe762b36440"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fe7623d9690"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fe7623d9690"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fe7623d24c8"/></to>
    </wire>
    <wire loc="52:TestNetworkAppC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7fe762b24300"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7fe761158128"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7fe761158128"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7fe76063da30"/></to>
    </wire>
    <wire loc="53:TestNetworkAppC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fe762b391c0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7fe76115e4e0"/></to>
    </wire>
    <wire loc="54:TestNetworkAppC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7fe762aff2c0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe7628c7020"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe7628c7020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe762893360"/></to>
    </wire>
    <wire loc="59:TestNetworkAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fe7611a7938"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fe762abfcb8"/></to>
    </wire>
    <wire loc="60:TestNetworkAppC.nc">
      <from><interface-ref name="UARTSend" scoped="" ref="0x7fe76119e020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fe7611afe80"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fe7611afe80"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fe76065caf8"/></to>
    </wire>
    <wire loc="61:TestNetworkAppC.nc">
      <from><interface-ref name="MessagePool" scoped="" ref="0x7fe7611a61b8"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7fe76114fd50"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7fe76114fd50"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7fe76062bc98"/></to>
    </wire>
    <wire loc="62:TestNetworkAppC.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x7fe7611a3a68"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7fe761148020"/></to>
    </wire>
    <wire loc="63:TestNetworkAppC.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x7fe761b40080"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x7fe7611aaca8"/></to>
    </wire>
    <wire loc="64:TestNetworkAppC.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x7fe762b1b640"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x7fe7611aaca8"/></to>
    </wire>
    <wire loc="66:TestNetworkAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe762b09c28"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe7628c7c30"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe7628c7c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe762892020"/></to>
    </wire>
    <wire loc="42:TestNetworkC.nc">
      <from><interface-ref name="uartEchoTask" scoped="" ref="0x7fe762b087e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe762d321c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe762aba160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe76062b5f8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe762aba160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe76063d390"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe762aba160"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x7fe7612fa020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe762aba160"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x7fe7612f7e30"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe762aba160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe761364120"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe762aba160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe7614ef110"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe762aba160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe760799020"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe762aba160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe7608b31a8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe762aba160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe7608cf5f8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe762aba160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe7608e1390"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe762aba160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe761778578"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe762aba160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe761a08020"/></to>
    </wire>
    <wire loc="226:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe762aba160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe761940d50"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe762aba160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe760a1e020"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe762aba160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe760b2f5e8"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe762aba160"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fe7620febf0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe762aba160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe762315758"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe762aba160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe7623d8b30"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe762aba160"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fe760c8c430"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe762aba160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe7624e9c78"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe762aba160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe760cbfde8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe762aba160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe760d7a438"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fe762908308"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fe762d0f5c8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fe762d0f5c8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fe762c5cd88"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fe762908ce0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7fe761ff9870"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fe762908ce0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7fe7620fe138"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fe762908ce0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe762ab7020"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe762ab7020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe762aac020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe762907418"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fe762aba160"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fe762ab6b68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe7611e9020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fe762ab6b68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe7616e6dd0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fe762ab6b68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe761e52dc0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fe762ab0e68"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fe762926ae0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7fe762aacd88"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe7629264b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fe762aac6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe7628d25e8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fe762aac6c0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7fe762aae558"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fe762aae558"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7fe762aa3020"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fe762aaebe8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7fe762ab6b68"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7fe762a9c388"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7fe762a93e00"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7fe762a93e00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fe762a0e430"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fe762aa24f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7fe762aaebe8"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7fe762a60968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe76297a520"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7fe762a7a4d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fe7629e4020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fe7629e4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe760fc0100"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7fe762a6f4d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fe7629d4d60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fe7629d4d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe760f53100"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7fe762a651a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fe7629c58c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fe7629c58c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe760eec100"/></to>
    </wire>
    <wire loc="196:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7fe762a5a658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe762960c38"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7fe762a901a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fe762a0c740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fe762a0c740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7610eec38"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7fe762a68e00"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fe7629c75b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fe7629c75b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe760ef2100"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7fe762a8e4d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fe762a04930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fe762a04930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe761093180"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7fe762a82658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fe7629f2740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fe7629f2740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe761024100"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7fe762a77968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fe7629e1430"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fe7629e1430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe760fb7100"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7fe762a6c968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fe7629d0120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fe7629d0120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe760f4a100"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7fe762a96968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fe762a11020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fe762a11020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7610fdc38"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7fe762a8b968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fe762a01d60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fe762a01d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe76108a100"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7fe762a7faf0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fe7629efbd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fe7629efbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe76101b100"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7fe762a74e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fe7629de8c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fe7629de8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe760fae100"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7fe762a62658"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fe7629c1d60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fe7629c1d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe760ee3100"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7fe762a5c348"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe76296bc38"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7fe762a711a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fe7629d6a50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fe7629d6a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe760f59100"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fe762a0e430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7610f4c38"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7fe762a87020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fe7629fc120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fe7629fc120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe761081100"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7fe762a5e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe762975cd8"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7fe762a84348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fe7629f5500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fe7629f5500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe76102a180"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7fe762a79658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fe7629e3120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fe7629e3120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe760fbd100"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7fe762a6e658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fe7629d3e18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fe7629d3e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe760f50100"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7fe762a64348"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fe7629c3a50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fe7629c3a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe760ee9100"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7fe762a8f348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fe762a0a8c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fe762a0a8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7610ebc38"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7fe762a8d658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fe762a03a50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fe762a03a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe761090100"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7fe762a817e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fe7629f18c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fe7629f18c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe761021100"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7fe762a76af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fe7629e05b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fe7629e05b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe760fb4100"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7fe762a6aaf0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fe7629ce2a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fe7629ce2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe760f47100"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7fe762a95af0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fe762a10120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fe762a10120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7610fac38"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7fe762a8aaf0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fe7629ffe18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fe7629ffe18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe761087100"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7fe762a7ec78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fe7629eed60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fe7629eed60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe761018100"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7fe762a617e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fe7629c0e18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fe7629c0e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe760ee0100"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7fe762a7b020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fe7629e6e40"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fe7629e6e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe760fc3180"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7fe762a70348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fe7629d5bd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fe7629d5bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe760f56100"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7fe762a66020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fe7629c6740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fe7629c6740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe760eef100"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7fe762a5b4d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7629653e0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7fe762a91020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fe762a0d5b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fe762a0d5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7610f1c38"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7fe762a851a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fe7629fb2a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fe7629fb2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe76107e100"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7fe762a69c78"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fe7629c8500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fe7629c8500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe760ef5180"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7fe762a834d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fe7629f35b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fe7629f35b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe761027100"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7fe762a787e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fe7629e22a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fe7629e22a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe760fba100"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7fe762a6d7e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fe7629d1020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fe7629d1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe760f4d100"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7fe762a634d0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fe7629c2bd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fe7629c2bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe760ee6100"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7fe762aa5790"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fe762a13dc0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fe762a13dc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe761100c38"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7fe762a8c7e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fe762a02bd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fe762a02bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe76108d100"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7fe762a80968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fe7629f0a50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fe7629f0a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe76101e100"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7fe762a75c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fe7629df740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fe7629df740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe760fb1100"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7fe762a5d1a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe76296f3e0"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7fe762a72020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fe7629d7930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fe7629d7930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe760f5c180"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7fe762a7de00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fe7629ede18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fe7629ede18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe761015100"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7fe762a94c78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fe762a0f2a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fe762a0f2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7610f7c38"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7fe762a89e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fe7629fd020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fe7629fd020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe761084100"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7fe762d321c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe762c5bc58"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7fe762c57168"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7fe762d0ee28"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7fe762c3a988"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7fe762264578"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe7628d25e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe7628f5368"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fe7628f3020"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7fe7628d5090"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fe7628d5090"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7fe762a95af0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fe7628f2190"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7fe7628d4378"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fe7628d4378"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7fe762a96968"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fe7628f1338"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7fe7628d3500"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fe7628d3500"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7fe762aa5790"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fe76289cd10"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fe762874c50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7fe7628c1928"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fe7628964e8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7fe7628964e8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fe76286d498"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe762893360"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7fe76286a9e8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fe7628ca270"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fe762899cb0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fe762899cb0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fe762871c30"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fe7628c8020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fe7628979b8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fe7628979b8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fe76286e968"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fe7628b4418"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fe762890020"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fe762890020"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fe762859e28"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fe7628c93c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe762898e40"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fe762898e40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe762870dc0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe7628bbcb0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe762891658"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe762891658"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe7628594d0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fe7628ac1d8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fe762890ab8"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fe762890ab8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fe7628508f0"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe762892020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe76286b378"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7fe7628aac48"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7fe76288f780"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7fe76288f780"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7fe76284f5f8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7fe7628a28c0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fe76287e978"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fe76287e978"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fe7628438b0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fe7628a0758"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fe762878860"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fe762878860"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fe76283f9d8"/></to>
    </wire>
    <wire loc="215:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fe762874c50"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fe76248a1c8"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7fe7628830c8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7fe7628488b8"/></to>
    </wire>
    <wire loc="305:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7fe7628488b8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7fe76211b0c8"/></to>
    </wire>
    <wire loc="270:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fe76283f9d8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fe762167270"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7fe76286d498"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fe7626a2020"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7fe76286a9e8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe7626a5578"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fe762871c30"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fe7626a4388"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fe76286e968"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fe7626a37e0"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fe76288cd80"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fe76284b5a0"/></to>
    </wire>
    <wire loc="303:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fe76284b5a0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fe76211fcd0"/></to>
    </wire>
    <wire loc="216:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fe762859e28"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fe762488a10"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fe762870dc0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe7626a30c8"/></to>
    </wire>
    <wire loc="269:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fe7628438b0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fe762163020"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fe76287b5a8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fe7628444e0"/></to>
    </wire>
    <wire loc="307:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fe7628444e0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fe762111220"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fe762888930"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fe76284e1f8"/></to>
    </wire>
    <wire loc="304:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fe76284e1f8"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fe762115860"/></to>
    </wire>
    <wire loc="248:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe7628594d0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe7623933f0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7fe7628951c8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7fe76286c1c8"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7fe76286c1c8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7fe7626a2738"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fe7628508f0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fe7624a99c8"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe76286b378"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe7626a7020"/></to>
    </wire>
    <wire loc="224:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7fe76284f5f8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7fe762417268"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fe76287d990"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fe762846b78"/></to>
    </wire>
    <wire loc="306:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fe762846b78"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fe7621129d0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7fe762895d58"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7fe76286cd58"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7fe76286cd58"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7fe7626a2e50"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fe76248a1c8"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7fe762487618"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7fe76211b0c8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7fe7620f6020"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x7fe762868710"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fe7625f4840"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x7fe7628674b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe762627200"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe762627200"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe760d77918"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7fe7626a2020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fe760dd2898"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fe7626a4388"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fe760dd4d38"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fe7626a37e0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fe760dd21c0"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7fe762851308"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7fe762522468"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7fe762522468"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7fe760d0ed98"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7fe76285a6e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe762622980"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fe76211fcd0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fe7620fab48"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fe762488a10"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fe760c95458"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe7626a5578"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe760dd4060"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fe7626a30c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe760dd3a60"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fe762163020"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fe760c01558"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fe762111220"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fe761ffe438"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fe762115860"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fe7620f0860"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x7fe762860250"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7fe7625f5578"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7fe7626a2738"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7fe760dd1020"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fe7624a99c8"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x7fe7624a4d18"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7fe762417268"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7fe760c8b9c8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe7626a7020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe760dd7a10"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fe762167270"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fe760c05888"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x7fe762868020"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7fe7625f42a8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fe7621129d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fe7620ed9d0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7fe7626a2e50"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7fe760dd1738"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fe7627f5858"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fe762525438"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fe762525438"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fe760d14d50"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7fe7627ee640"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7fe76278e910"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fe7627f1a40"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fe762163020"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x7fe7627e8860"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fe762120bd8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7fe762120bd8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fe7620fba50"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fe76275d958"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fe7621104b8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fe7621104b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fe7620022e0"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fe76269f2a8"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7fe762810b48"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fe7626a02a8"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7fe762697100"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fe7626a0b90"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x7fe7625b5060"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fe7626a14d0"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x7fe7625b5638"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe7626893f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe762627200"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fe762697a48"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x7fe7625b6740"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fe7625f4e38"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fe762525438"/></to>
    </wire>
    <wire loc="154:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fe7625efba0"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7fe7625e8838"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fe7625ee5b8"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7fe7625b72a8"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7fe7625f0d98"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7fe7625b7880"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fe7625b4490"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe7624bad18"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fe7624bad18"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe760cc2da0"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fe7625b4d78"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe7624a9430"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fe7624a9430"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fe7624a5020"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fe7625b3378"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fe762521700"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7fe762521700"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fe760d0c020"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fe762520618"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fe7624a7700"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7fe7624a7700"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7fe7624a55f8"/></to>
    </wire>
    <wire loc="181:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fe7624b7e68"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x7fe7628233b8"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fe7624b8db8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe7624b3ac0"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fe7624b3ac0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fe7624a6618"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe7624a43f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe7623933f0"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fe7624a6618"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe76248ac38"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fe76248ac38"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fe7624860c0"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fe7624a5020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe7624895b8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fe7624895b8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fe7624869a8"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fe7624a55f8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fe762489b50"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7fe762489b50"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7fe762484020"/></to>
    </wire>
    <wire loc="211:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fe762487618"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fe76241a708"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fe76241a708"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fe760c8e870"/></to>
    </wire>
    <wire loc="212:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fe7624860c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe7624192a8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fe7624192a8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe760c8ca08"/></to>
    </wire>
    <wire loc="213:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fe7624869a8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe762419b90"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fe762419b90"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe760c8b430"/></to>
    </wire>
    <wire loc="214:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fe762484020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fe7621619f8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7fe7621619f8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fe760bfd020"/></to>
    </wire>
    <wire loc="221:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7fe762416a10"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7fe7623c5020"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7fe7623c5020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7fe760c51b58"/></to>
    </wire>
    <wire loc="222:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7fe7624153f0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fe7624b85f8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7fe7624b85f8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fe760cbf6c8"/></to>
    </wire>
    <wire loc="223:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7fe762417b70"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7fe7621325b8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7fe7621325b8"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7fe76212ca08"/></to>
    </wire>
    <wire loc="228:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fe7624b7708"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fe7623c58c8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7fe7623c58c8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fe760c4f578"/></to>
    </wire>
    <wire loc="237:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fe7623c3ce8"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7fe76281c6c8"/></to>
    </wire>
    <wire loc="238:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fe7623c40c0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7fe7623bc2a8"/></to>
    </wire>
    <wire loc="239:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fe7623c49a8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fe7623bcb50"/></to>
    </wire>
    <wire loc="240:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7fe7623c30f0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7fe76278e910"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="246:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x7fe762390bd8"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7fe762156660"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="247:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7fe762392d90"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7fe76278e910"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fe762391a18"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7fe7628290f0"/></to>
    </wire>
    <wire loc="253:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fe762393d38"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7fe762374020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7fe762374020"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fe76236e5b8"/></to>
    </wire>
    <wire loc="254:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fe762392670"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fe7623748c8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7fe7623748c8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fe76236d020"/></to>
    </wire>
    <wire loc="259:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fe76236cda0"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7fe76280d778"/></to>
    </wire>
    <wire loc="260:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fe76236e5b8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7fe7621313f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7fe7621313f0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fe76212b8c8"/></to>
    </wire>
    <wire loc="261:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fe76236d020"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fe762131c98"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7fe762131c98"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fe76212a2a8"/></to>
    </wire>
    <wire loc="262:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x7fe76236d780"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7fe762120448"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7fe762120448"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7fe7620fb2c0"/></to>
    </wire>
    <wire loc="267:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fe76215fa30"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fe762111220"/></to>
    </wire>
    <wire loc="268:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fe76215e9f0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fe7621380e0"/></to>
    </wire>
    <wire loc="271:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7fe76215d8c8"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7fe762156660"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="276:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fe762137020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fe762120bd8"/></to>
    </wire>
    <wire loc="286:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fe762128060"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7fe76280d778"/></to>
    </wire>
    <wire loc="287:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fe76212b8c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7fe7621212c8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7fe7621212c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7fe7620fc0c0"/></to>
    </wire>
    <wire loc="288:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fe76212a2a8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fe762121bf0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7fe762121bf0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fe7620fc9e8"/></to>
    </wire>
    <wire loc="289:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x7fe76212ca08"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7fe7621243e0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7fe7621243e0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7fe7620fd2d0"/></to>
    </wire>
    <wire loc="301:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fe76210c5c8"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x7fe762832428"/></to>
    </wire>
    <wire loc="302:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fe76210b730"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fe762163020"/></to>
    </wire>
    <wire loc="309:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7fe762107378"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7fe762156660"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="310:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7fe762106020"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7fe762156660"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="311:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7fe762106b78"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7fe762156660"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="312:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7fe762105768"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7fe76278e910"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7fe76278e910"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7fe760df2458"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fe760df12f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fe76275d958"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7fe760ded1c0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7fe76275c220"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fe760dceb98"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fe7626bc560"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fe760dd1d90"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7fe7626a14d0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fe760dd0ba0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fe7626a02a8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fe760dcf5b8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fe7626a0b90"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fe760dcfb90"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7fe76269f2a8"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fe762626020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fe760d76698"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe762626760"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe760d76dd8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe760d756c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe762625020"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fe760d75e40"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fe760d7aa10"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fe760d74920"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe762d321c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fe760d0cdc0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fe7626bc560"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fe760d0b890"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7fe762520618"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7fe760cbb020"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7fe7624ec7f0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7fe7624ec7f0"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7fe7624e62e8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7fe760cbbbd8"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7fe760cb8140"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7fe760cb8140"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7fe7624e54a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fe760cbe458"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fe7624b8db8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fe760cbed40"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fe7624b7708"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x7fe760cbc4a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7fe7624b7e68"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x7fe7624a3988"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe7624a43f0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7fe760c8a450"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7fe762417b70"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7fe760c89268"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7fe76275c220"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7fe760c89c98"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7fe762416a10"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7fe760c88578"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fe7624153f0"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7fe760c874f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe762d321c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x7fe760c87c90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe762d321c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x7fe760c88d18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe762d321c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fe760c4fd38"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fe7623c40c0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fe760c4c2a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7fe7623c3ce8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fe760c4e670"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fe7623c49a8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7fe760c4ed90"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7fe7623c30f0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fe760c4d9d8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fe7623d9690"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x7fe760c4cd58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe762d321c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7fe7623d7668"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7fe7623d43b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe7623dd930"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe7623d8b30"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fe762378978"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7fe762372bf0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7fe762373020"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7fe76236d780"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7fe762375268"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7fe762370638"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7fe762373740"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7fe76236c020"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7fe7623725b8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7fe76236cda0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7fe762376c98"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7fe762370060"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7fe7623763f0"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7fe762371740"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fe760bfaaa8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7fe76215e9f0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fe760bfc9d0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fe76215fa30"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fe760bfbab8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fe76231adc0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fe76231adc0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fe76230d5e0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7fe760bfde00"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x7fe76215d8c8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fe76230d5e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fe762181128"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fe7623124a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe7621905e0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe762315758"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe76230ac18"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe76230ac18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe762209020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fe76218a858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe7621dcab0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fe7621d7c70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7fe762307648"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7fe762307648"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fe7622097c8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fe762178330"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7fe7622fe7b8"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7fe7622fe7b8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fe762206a90"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fe762206a90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fe760bd5ca8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe762209020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe760bd9398"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fe7622097c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fe760bd9b40"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe760bd1020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe76227d288"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe76227d288"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe762271e00"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7fe760bcee70"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fe7622783c0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7fe7622783c0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fe762268020"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fe760bcb060"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fe7622777f8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fe7622777f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fe762267340"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7fe760bc8200"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7fe7622739e8"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7fe7622739e8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7fe762264c78"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7fe7621d3cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe762d321c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7fe762185930"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe762d321c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fe76216f1c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fe7623124a0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fe762134b78"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7fe76212e020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7fe7621303f0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7fe76212aa08"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7fe762130b10"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7fe7621292a8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7fe76212f8c8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7fe762128060"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7fe762132020"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7fe76212c430"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7fe762133700"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7fe76212ea90"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fe7620022e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fe761e0bb68"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fe762118458"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fe7620f33b0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fe761ffe438"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fe761e03400"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fe7620db100"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7fe76210c5c8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7fe7620dbe10"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7fe762107378"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7fe7620d9988"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x7fe762106020"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7fe7620d8518"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x7fe762106b78"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fe7620d72b0"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fe76210b730"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fe7620dd020"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fe761ffe438"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7fe7620d3ab8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7fe762105768"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7fe7620ec130"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x7fe76200a710"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7fe76200a710"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7fe762a8e4d0"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fe7620eb4f8"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x7fe762007990"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fe762007990"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe761fd2e80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fe7620e41f0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fe7620065e8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fe7620065e8"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fe761fda9d0"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7fe7620e4d00"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x7fe762005140"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7fe762005140"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7fe762a851a0"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fe7620e9e70"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7fe762004338"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fe762004338"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7fe762a901a0"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7fe7620df5e8"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7fe7620034c0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7fe7620034c0"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7fe761ffccd8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7fe7620d3020"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7fe76275c220"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7fe7620dcc60"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7fe761db33c0"/></to>
    </wire>
    <wire loc="847:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x7fe762048d98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe762d321c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fe761e0bb68"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fe760b009d8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fe761fda9d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fe761fcf628"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fe761e03400"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fe761dbfc38"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x7fe761feec18"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7fe762a75c78"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x7fe761fede08"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7fe762a77968"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7fe761ff0540"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fe761efaca0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7fe761efaca0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fe761edf350"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fe761fd21d8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fe761fce120"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fe761fda388"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fe761fcf020"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe761ffacd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe761fd3a18"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe761fd2e80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe761fced88"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7fe761fb13c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe761f0d748"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe761f0d748"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe760b2ca28"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe761faf020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe761f0cc50"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe761f0cc50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe760b2a020"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7fe761fb2150"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7fe761f64020"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7fe761f64020"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7fe761f61dc0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7fe761faf7c8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7fe762c3b3c8"/></to>
    </wire>
    <wire loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7fe761f90b58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe762d321c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7fe761f54350"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7fe762c3b3c8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7fe761f57c70"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7fe762a8e4d0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7fe761f5bde0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7fe762a8d658"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7fe761f56020"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7fe762a8c7e0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7fe761f55190"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7fe762a8b968"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fe761f0c510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fe760b2b820"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe760b2a8c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe761f0b550"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fe760b290a0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fe760b2fbc0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fe760b29b50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe762d321c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7fe761ef25e8"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fe761ee1c90"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe761f036e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe761ee8be0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fe761eeea20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7fe761edbc48"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fe761eeea20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7fe761ed6020"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fe761eeea20"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7fe761ed2360"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7fe760afca30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe761f036e0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7fe760af7a80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fe761eeea20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe761e51540"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe761f036e0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fe761dbee48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fe761dc5270"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fe761dc3450"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fe761dff108"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fe761dff108"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fe761dfbe08"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe761de7020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe761f036e0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fe761d587b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fe761d48730"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x7fe761d454b0"/></from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x7fe761d545a8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x7fe761d447f0"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x7fe761d4d2d0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x7fe761d43a58"/></from>
      <to><interface-ref name="DisseminatorControl" scoped="" ref="0x7fe761d49520"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fe761d412a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fe761c73080"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fe761c73080"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fe760ac3140"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fe761d40020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe761c6b970"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fe761c6b970"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe7628c93c8"/>
      <arguments>
        <value cst="I:96">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeAMSend" scoped="" ref="0x7fe761d406a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fe761c613f8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fe761c613f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fe760a67978"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeReceive" scoped="" ref="0x7fe761d3f4f8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe761c5b080"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fe761c5b080"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe7628c93c8"/>
      <arguments>
        <value cst="I:97">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fe761d3fac0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fe761c55830"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fe760ac3140"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fe760ab6958"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe761c73c38"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe760ac3cf8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe760ac3cf8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe7628c7020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe761c71888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe760ac2908"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe760ac2908"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe7628c7c30"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fe761c6f020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fe760ac0020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fe760ac0020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe7628bbcb0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fe760ab55d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe761ccf708"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe760ab4268"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe7628c7c30"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fe761ccf708"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe761c88b98"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fe761c87a08"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fe7628ca270"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe761c85700"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe7628c7c30"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe761c84d20"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe7628c7020"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7fe761c83988"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe762d321c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7fe761c82160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe762d321c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe761c66020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe7628c7020"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe761c66bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe7628c7c30"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fe760a67978"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fe760a5a378"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe761c60020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe760a66578"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe760a66578"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe7628c7020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe761c60bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe760a65268"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe760a65268"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe7628c7c30"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fe761c5e2a8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fe760a648c8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fe760a648c8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe7628bbcb0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fe760a59020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe761ccf708"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe760a59bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe7628c7c30"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe761c5b618"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe7628c7020"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe761c5a268"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe7628c7c30"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminationUpdate" scoped="" ref="0x7fe761b64290"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x7fe760a3d020"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x7fe761d545a8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x7fe760a3b208"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x7fe761d49520"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fe760a41bf8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x7fe761d4d2d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x7fe761c07498"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fe760a3a020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fe7628f9190"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <from><interface-ref name="changedTask" scoped="" ref="0x7fe760a395f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe762d321c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationTimerP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x7fe761c07498"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x7fe761b6a478"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x7fe761b6a478"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x7fe760a1e6d8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe760a1d558"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe760a0c550"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe760a0c550"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fe76216f1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fe760a16888"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fe7623d9690"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Changed" scoped="" ref="0x7fe760a17740"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x7fe760a02ac8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Pending" scoped="" ref="0x7fe760a185d8"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x7fe760a06e58"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fe760a15020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fe7628f9190"/></to>
    </wire>
    <wire loc="154:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <from><interface-ref name="timerTask" scoped="" ref="0x7fe760a0f5f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe762d321c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7fe761b30020"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7fe76177de08"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x7fe761b36020"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x7fe761a04c38"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x7fe761b56b48"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x7fe761b38d00"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x7fe761b38d00"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x7fe761a05aa0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe761b5b2a8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe761b37328"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe761b37328"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe761a04080"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fe761b5dd08"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fe761b381c8"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fe761b381c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fe761a053c8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fe761b5e020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe761b3b3f0"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fe761b3b3f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe761a08df8"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x7fe761b34b58"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x7fe76177c700"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fe761b5d1c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe761b39560"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fe761b39560"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe761a07b30"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x7fe761b31788"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x7fe761a01800"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x7fe761b43350"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x7fe761b36dc0"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x7fe761b36dc0"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x7fe761a03a10"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fe761b3f720"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fe761a085b8"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fe761b3f720"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fe76177bd20"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fe761b3f720"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fe7619421a8"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x7fe761b28020"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x7fe761b3ea28"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x7fe761b28750"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x7fe761b40080"/></to>
    </wire>
    <wire loc="190:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x7fe761b2a568"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x7fe761941be0"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x7fe7619e69e8"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x7fe761b28020"/></to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="QEntryPool" scoped="" ref="0x7fe7619f2558"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7fe7619ae228"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7fe7619ae228"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7fe7608cfc98"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="MessagePool" scoped="" ref="0x7fe7619efca0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7fe7619d5020"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7fe7619d5020"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7fe7608e1a30"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x7fe7619f61a0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7fe7619a76e0"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SentCache" scoped="" ref="0x7fe7619eb448"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x7fe761989e10"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="Cache" scoped="" ref="0x7fe761989e10"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x7fe7608b3880"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x7fe7619fa6c0"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x7fe761941be0"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconSend" scoped="" ref="0x7fe761778bb0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe761942978"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconReceive" scoped="" ref="0x7fe7617778c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe7619415c0"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x7fe761777e60"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x7fe761941be0"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CompareBit" scoped="" ref="0x7fe761767060"/></from>
      <to><interface-ref name="CompareBit" scoped="" ref="0x7fe76193d020"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe761775020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe7628c7c30"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7fe7617745b8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fe7628cb290"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconTimer" scoped="" ref="0x7fe761773168"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe761958cf8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe761958cf8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fe76216f1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RouteTimer" scoped="" ref="0x7fe76176e540"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe761951350"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe761951350"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fe76216f1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x7fe761769cb8"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x7fe761b28750"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x7fe7619e2740"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x7fe761b28750"/></to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x7fe7619e8910"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x7fe76177c700"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x7fe761768908"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x7fe761a01800"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RetxmitTimer" scoped="" ref="0x7fe7619ff6c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe76175d350"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe76175d350"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fe76216f1c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fe761769598"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fe7623d9690"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fe7619e2020"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fe7623d9690"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fe761a00020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fe761885d10"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fe761885d10"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fe760888cd0"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fe7619ead78"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe76187f390"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fe76187f390"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe7628c93c8"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x7fe7619e8378"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe7618741c8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fe7618741c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fe7628c8020"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fe7619f8430"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe761884908"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe761884908"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe760887908"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7fe7619e6020"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7fe76177de08"/></to>
    </wire>
    <wire loc="181:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x7fe7619f9888"/></from>
      <to><interface-ref name="Routing" scoped="" ref="0x7fe76177d3d8"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7fe7619e1430"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fe7628cb290"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe761a00bd8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fe761882bd8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fe761882bd8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fe760884bd8"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe7619e5268"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe761883578"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe761883578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe760886578"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fe7619e4888"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fe7628f9190"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fe761937328"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fe7623d9690"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fe76193d678"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fe7617531a8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fe7617531a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fe7607e35e8"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fe761938668"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe76174e710"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fe76174e710"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe7628c93c8"/>
      <arguments>
        <value cst="I:112">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fe761939968"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe761753d60"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe761753d60"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe7607e2268"/></to>
    </wire>
    <wire loc="197:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x7fe76193c370"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe761752940"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe761752940"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe7607e2e20"/></to>
    </wire>
    <wire loc="221:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fe761938cb8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fe76287d990"/></to>
    </wire>
    <wire loc="234:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7fe7619e0020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe762d321c8"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x7fe7608b0220"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x7fe761b36dc0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fe760888cd0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fe76087cd98"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe760887908"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe7628c7020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe760886578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe7628c7c30"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fe760884bd8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe7628bbcb0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fe76087aa38"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe761ccf708"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe760879700"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe7628c7c30"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe76187f928"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe7628c7020"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe76187e578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe7628c7c30"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe761874760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe7628c7020"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe7618733f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe7628c7c30"/></to>
    </wire>
    <wire loc="271:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <from><interface-ref name="updateRouteTask" scoped="" ref="0x7fe761767e18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe762d321c8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="390:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <from><interface-ref name="sendBeaconTask" scoped="" ref="0x7fe761767678"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe762d321c8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fe7607e35e8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fe7607d7790"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe7607e2268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe7628c7020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe7607e2e20"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe7628c7c30"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fe761750020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fe7607e0430"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fe7607e0430"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe7628bbcb0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fe7607d6450"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe761ccf708"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe7607d5060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe7628c7c30"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe76174eca8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe7628c7020"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe76174d888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe7628c7c30"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe761728d60"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe7607bc700"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe7607bc700"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe761b5b2a8"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fe7607bda78"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe761b5e020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x7fe761b3ea28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x7fe7607b6478"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fe7607afe80"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fe7607acb10"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fe7607acb10"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fe7616f9cc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fe7607a9140"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fe761578438"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fe7616f0670"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fe7607a9140"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe7616ec4c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe7616e8020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe7616e7890"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe7607a99e8"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fe7616f9cc0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fe76159c020"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x7fe7616eea00"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x7fe7615c6428"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe761582020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe7616ec4c0"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fe7615c39a0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fe7616f0670"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7fe761585860"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fe7615c86a0"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7fe7615c5b18"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7fe7616e10d0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7fe7616e10d0"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7fe7616d9c08"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7fe7615c2578"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7fe761db33c0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7fe7616dc9b0"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7fe7616d8628"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe7616e8020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe7615ed840"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe7615ed840"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe760796630"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe7615ea3c8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe7616e7890"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7fe7616c80d0"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7fe761697020"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7fe761697020"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7fe761692248"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fe7616d5610"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fe762ab0e68"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fe7615e7060"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fe7616d9450"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe7615e7d18"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe7615ecdd8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe7615ecdd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe760795ac8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7fe7616907c8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7fe762c3b3c8"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fe7615ec698"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fe760795388"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe7615eb9d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe760794700"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe760793020"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe7615ea3c8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fe7607937a0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fe7607995f8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fe760791908"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe762d321c8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fe760760600"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fe7615e7060"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fe760760d20"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fe7615e7780"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe76075f2e8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe7615e7d18"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe76075d020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe7615d1908"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x7fe7615b1bf8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe762d321c8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe7611b4020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe7615502a8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe7615502a8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe7614f6d20"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe7611b4bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe76154f020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe76154f020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe7614f8738"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fe7611b12a8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe76154e658"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe76154e658"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe7614f5908"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fe76074acd8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe76155f7f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe760749908"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe76154f020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fe76155f7f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe76155c1e0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fe76155b020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fe761552aa8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fe761552aa8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fe76154a460"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe76155bbf8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe76154f020"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe761559268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe7615502a8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7fe761557020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe762d321c8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7fe7615577c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe762d321c8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fe7614ef728"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fe7614c8da8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fe761551c38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe7614f8180"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe7614ef110"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe7614c8790"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fe7614eb8f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fe76154d020"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fe7614f4308"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe7614ed208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fe7614f3020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe7614ee760"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7fe7614eb020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7fe7611ca6e0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fe7614ed208"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe7613a1020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fe7614ee760"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe7613a3868"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7fe7613a1db8"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7fe7614eb020"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fe7614c0bc8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fe7614eb8f8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fe76139fa50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fe7614eb8f8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fe761397420"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fe7614eb8f8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fe7613a06c8"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fe7614beb48"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7fe76139f020"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7fe7614c1950"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7fe7614b8b38"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7fe76139bb30"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7fe7614b6398"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fe76139a8b0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fe76139a8b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fe76136f338"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fe76138b448"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fe7613710c0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fe7613710c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fe76136a310"/></to>
    </wire>
    <wire loc="332:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7fe761465830"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe762d321c8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7fe76149bd70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe762d321c8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7fe761467020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe762d321c8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7fe761461918"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe762d321c8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7fe76139d100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe762d321c8"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7fe76139d8a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe762d321c8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fe76136b290"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fe76136faf0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fe76136faf0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fe761364e58"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fe76136a310"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fe7613235f8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fe76136f338"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fe7613646f8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fe761369598"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fe761295188"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fe761295188"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fe7611d7c50"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fe76131fc60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fe761369598"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x7fe7613225f8"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7fe761302700"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x7fe761302700"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7fe7612fa730"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x7fe761322d98"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7fe761301020"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x7fe761301020"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7fe7612f8020"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x7fe7613205c0"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7fe761301860"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x7fe761301860"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7fe7612f88a0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x7fe7612fe020"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x7fe7612f56d8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x7fe761300e58"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x7fe7612f6568"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x7fe7612ff6f0"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x7fe7612f6e00"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fe7612f4c70"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fe762ab0e68"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7fe7612f3950"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7fe762c3b3c8"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fe7611d5e20"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fe76128e020"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fe76128e020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fe7611e2020"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe7611df0e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe76128cc30"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe76128cc30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe761276298"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7fe761285c90"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fe7612713d0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7fe761283350"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fe761270b18"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fe76127e1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7fe76126b4e0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fe76127e1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7fe761267770"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fe76127e1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7fe761263b20"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe7611e9740"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe76128cc30"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe7611aea60"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe7615502a8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe7611ad700"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe76154f020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fe7611acd60"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe76154e658"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fe76065b760"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe76155f7f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe76065a3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe76154f020"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/lib/net/UARTDebugSenderP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7fe761196a88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe762d321c8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="TestNetworkC" loc="17:TestNetworkC.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.1.2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.1.2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="39:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="39(RF230RadioC.RadioAlarmC.RadioAlarmP):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca3020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe762ca3378"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fe7622fc778"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca3020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe762ca3378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca3020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe762ca3378"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca3020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe762ca3378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TOne" ref="0x7fe762c619f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TOne" ref="0x7fe762c619f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TMicro" ref="0x7fe762ca1788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TMicro" ref="0x7fe762ca1788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TMicro" ref="0x7fe762ca1788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/opt/tinyos-2.1.2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="DisseminationC" loc="46:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationC.nc">
        <short>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol.</short>
        <long>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol. StdControl controls all of the trickle&#10; timers used for all of the keys. &#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP" loc="47:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
        <short>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.</short>
        <long>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.&#10;&#10; TODO: Hook DisseminationProbe up to the serial instead of the radio.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineImplP" loc="45:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
        <short>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.</short>
        <long>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC" loc="47(DisseminationEngineP.DisseminationSendC):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC" loc="47(DisseminationEngineP.DisseminationSendC.SenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP" loc="43(DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationReceiveC" loc="43(DisseminationEngineP.DisseminationReceiveC):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC" loc="47(DisseminationEngineP.DisseminationProbeSendC):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC" loc="47(DisseminationEngineP.DisseminationProbeSendC.SenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP" loc="43(DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeReceiveC" loc="43(DisseminationEngineP.DisseminationProbeReceiveC):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestNetworkAppC.Object32C" loc="49(TestNetworkAppC.Object32C):/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorC"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.Object32C.DisseminatorP" loc="45(TestNetworkAppC.Object32C.DisseminatorP):/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008-02-16 01:31:50 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fe761c40368"/></type-var>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP" loc="44:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationTimerP.nc">
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC" loc="51(DisseminationTimerP.TrickleTimerMilliC):/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerMilliC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1024">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP" loc="51(DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP):/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerImplP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC" loc="44(DisseminationTimerP.TrickleTimerMilliC.TimerMilliC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector" loc="44(DisseminationTimerP.TrickleTimerMilliC.PendingVector):/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector" loc="44(DisseminationTimerP.TrickleTimerMilliC.ChangeVector):/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CollectionC" loc="45:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP" loc="77:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP.Forwarder" loc="107(CtpP.Forwarder):/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <instance number="0">
        <component-ref qname="CtpForwardingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.MessagePoolP" loc="41(CtpP.MessagePoolP):/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
            <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.MessagePoolP.PoolP" loc="53(CtpP.MessagePoolP.PoolP):/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7fe7619d7a08"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.QEntryPoolP" loc="41(CtpP.QEntryPoolP):/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7fe761b1e710"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x7fe761b1ebc8"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.QEntryPoolP.PoolP" loc="53(CtpP.QEntryPoolP.PoolP):/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7fe7619d7a08"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SendQueueP" loc="42(CtpP.SendQueueP):/opt/tinyos-2.1.2/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7fe761b1e710"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x7fe761b1ebc8"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:13">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SentCacheP" loc="38(CtpP.SentCacheP):/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SentCacheP.CacheP" loc="43(CtpP.SentCacheP.CacheP):/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RoutingBeaconTimer" loc="44(CtpP.RoutingBeaconTimer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.RouteUpdateTimer" loc="44(CtpP.RouteUpdateTimer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LinkEstimatorP" loc="42:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <module/>
    </component>
    <component qname="CtpP.AMSenderC" loc="47(CtpP.AMSenderC):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC" loc="47(CtpP.AMSenderC.SenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC.AMQueueEntryP" loc="43(CtpP.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.AMReceiverC" loc="43(CtpP.AMReceiverC):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSnooperC" loc="44(CtpP.AMSnooperC):/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSnooperC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.Router" loc="107(CtpP.Router):/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CtpRoutingEngineP"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:128">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:512000">
            <type-int cname="long" size="I:4" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RetxmitTimer" loc="44(CtpP.RetxmitTimer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl" loc="47(CtpP.SendControl):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC" loc="47(CtpP.SendControl.SenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC.AMQueueEntryP" loc="43(CtpP.SendControl.SenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.ReceiveControl" loc="43(CtpP.ReceiveControl):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.CollectionSenderC" loc="43(TestNetworkAppC.CollectionSenderC):/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionSenderC"/>
        <arguments>
          <value cst="I:238">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.CollectionSenderC.CollectionSenderP" loc="34(TestNetworkAppC.CollectionSenderC.CollectionSenderP):/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
      <instance number="0">
        <component-ref qname="CollectionSenderP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x7fe762c19278"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.CollectionSenderC.CollectionSenderP.CollectionIdP" loc="45(TestNetworkAppC.CollectionSenderC.CollectionSenderP.CollectionIdP):/opt/tinyos-2.1.2/tos/lib/net/CollectionIdP.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionIdP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x7fe762c19278"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestNetworkAppC.TimerMilliC" loc="44(TestNetworkAppC.TimerMilliC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.DemoSensorC" loc="41(TestNetworkAppC.DemoSensorC):/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DemoSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.DemoSensorC.DemoChannel" loc="39(TestNetworkAppC.DemoSensorC.DemoChannel):/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.DemoSensorC.DemoChannel.AdcReadClientC" loc="21(TestNetworkAppC.DemoSensorC.DemoChannel.AdcReadClientC):/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="17:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc" safe="">
      <documentation loc="40:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega1281 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega1281 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="47:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega1281 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1281 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc" safe="">
      <documentation loc="39:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="VoltageP" loc="38:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageP.nc">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageP.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestNetworkAppC.SerialAMSenderC" loc="47(TestNetworkAppC.SerialAMSenderC):/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:238">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.SerialAMSenderC.AMQueueEntryP" loc="43(TestNetworkAppC.SerialAMSenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="102:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TThree" ref="0x7fe762c61d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TMicro" ref="0x7fe762ca1788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TThree" ref="0x7fe762c61d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x7fe762c5f630"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestNetworkAppC.UARTSender" loc="47(TestNetworkAppC.UARTSender):/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:22">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.UARTSender.AMQueueEntryP" loc="43(TestNetworkAppC.UARTSender.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UARTDebugSenderP" loc="2:/opt/tinyos-2.1.2/tos/lib/net/UARTDebugSenderP.nc">
      <module/>
    </component>
    <component qname="TestNetworkAppC.QueueC" loc="42(TestNetworkAppC.QueueC):/opt/tinyos-2.1.2/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
              <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestNetworkAppC.PoolC" loc="41(TestNetworkAppC.PoolC):/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
            <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.PoolC.PoolP" loc="53(TestNetworkAppC.PoolC.PoolP):/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7fe7619d7a08"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestNetworkAppC.DebugMessagePool" loc="41(TestNetworkAppC.DebugMessagePool):/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
            <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.DebugMessagePool.PoolP" loc="53(TestNetworkAppC.DebugMessagePool.PoolP):/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7fe7619d7a08"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestNetworkAppC.DebugSendQueue" loc="42(TestNetworkAppC.DebugSendQueue):/opt/tinyos-2.1.2/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
              <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fe762a568a8" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fe762a56bf0" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fe762a53020" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fe762a47340" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fe762a476a8" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fe762a47a10" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7fe762a47d40" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fe7629b8508" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fe7629b8870" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fe7629b8bd8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7fe7629b6020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fe762685ab0" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7fe762675170" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7fe7622fc778" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fe7622fc778"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7fe7622fca68" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7fe7622f1c78" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fe7622f1c78"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7fe7622ee020" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe762308c60" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe762308c60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe7621d1cc8" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe7621d1cc8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fe7621ce020" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe7621839f0" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe7621839f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7fe761e53e00" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fe761e53e00"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7fe761e4f1a0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fe761e54750" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fe761e54750"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7fe761e3c020" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fe761e3c020"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7fe761e3c320" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fe761df9430" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fe761df9430"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7fe761df9b80" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fe761df9b80"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fe761de0918" loc="55:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fe761de0918"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fe761ddd0a8" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fe761ddd0a8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fe761ddd470" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fe761ddd470"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fe761dddbe8" loc="58:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fe761dddbe8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fe761ddc020" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7fe761ddc7b0" loc="60:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7fe761ddc7b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fe761cf3420" loc="47:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fe761cec0c8" loc="47:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fe761ce8b50" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7fe761ccda00" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fe761c6d768" loc="43:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorC" loc="49:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7fe761c40368" loc="49:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fe761c40368"/></type-var>
        </typedef>
        <constant name="key" ref="0x7fe761c40688" loc="49:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorP" loc="45:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008-02-16 01:31:50 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7fe761c38870" loc="45:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
          <component-ref qname="DisseminatorP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fe761c38870"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TrickleTimerMilliC" loc="51:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x7fe761c022b0" loc="51:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x7fe761c02600" loc="52:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x7fe761c02920" loc="53:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x7fe761c02c68" loc="54:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="TrickleTimerImplP" loc="51:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x7fe761bfd108" loc="51:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x7fe761bfd458" loc="52:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x7fe761bfd778" loc="53:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x7fe761bfdac0" loc="54:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </constant>
        <constant name="scale" ref="0x7fe761bfde08" loc="55:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BitVectorC" loc="44:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="max_bits" ref="0x7fe761b929d8" loc="44:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
          <component-ref qname="BitVectorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CtpForwardingEngineP" loc="107:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/opt/tinyos-2.1.2/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7fe7619d7a08" loc="41:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7fe7619d7a08"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x7fe7619d7d58" loc="41:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/opt/tinyos-2.1.2/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7fe7619d09d8" loc="53:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7fe7619d09d8"/></type-var>
        </typedef>
        <constant name="size" ref="0x7fe7619d0cf8" loc="53:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/opt/tinyos-2.1.2/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7fe7619a6198" loc="42:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7fe7619a6198"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7fe7619a64f0" loc="42:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="LruCtpMsgCacheC" loc="38:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="CACHE_SIZE" ref="0x7fe76198be40" loc="38:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
          <component-ref qname="LruCtpMsgCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LruCtpMsgCacheP" loc="43:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7fe761985bd0" loc="43:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
          <component-ref qname="LruCtpMsgCacheP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSnooperC" loc="44:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fe761879060" loc="44:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
          <component-ref qname="AMSnooperC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CtpRoutingEngineP" loc="107:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc" abstract="">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="routingTableSize" ref="0x7fe761868a48" loc="107:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </constant>
        <constant name="minInterval" ref="0x7fe761868db8" loc="107:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
        </constant>
        <constant name="maxInterval" ref="0x7fe761867178" loc="107:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CollectionSenderC" loc="43:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x7fe761727168" loc="43:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
          <component-ref qname="CollectionSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x7fe762c19278"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionSenderP" loc="34:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc" abstract="">
      <parameters>
        <constant name="collectid" ref="0x7fe761722020" loc="35:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x7fe762c19278"/></typename>
          </type-int>
        </constant>
        <constant name="clientid" ref="0x7fe761722368" loc="35:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionIdP" loc="45:/opt/tinyos-2.1.2/tos/lib/net/CollectionIdP.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x7fe761717020" loc="45:/opt/tinyos-2.1.2/tos/lib/net/CollectionIdP.nc">
          <component-ref qname="CollectionIdP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x7fe762c19278"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="DemoSensorC" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="VoltageC" loc="39:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc" abstract="">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fe76165b020" loc="89:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7fe7616525d8" loc="42:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7fe7616355c0" loc="52:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x7fe76159eb28" loc="23:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x7fe76159eb28"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fe76156c020" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="RootControl" ref="0x7fe762b594f0" loc="28:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x7fe762b594f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7fe762b59840"/>
        <function-ref name="setRoot" scoped="" ref="0x7fe762b599c8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7fe762b59b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionPacket" ref="0x7fe762b45bd8" loc="31:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x7fe762b45bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7fe762b55020"/>
        <function-ref name="setOrigin" scoped="" ref="0x7fe762b551a8"/>
        <function-ref name="setType" scoped="" ref="0x7fe762b55330"/>
        <function-ref name="getOrigin" scoped="" ref="0x7fe762b554b8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7fe762b55640"/>
        <function-ref name="getType" scoped="" ref="0x7fe762b557c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x7fe762b1b640" loc="37:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x7fe762b1b640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x7fe762b1b990"/>
        <function-ref name="logEventMsg" scoped="" ref="0x7fe762b1bb18"/>
        <function-ref name="logEventSimple" scoped="" ref="0x7fe762b1bca0"/>
        <function-ref name="logEventRoute" scoped="" ref="0x7fe762b1be28"/>
        <function-ref name="logEventDbg" scoped="" ref="0x7fe762b23020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fe762bfd850" loc="18:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fe762bfd850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fe762bfdba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7fe762bfebd8" loc="20:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x7fe762bfebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe762bfc020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe762bfc1a8"/>
        <function-ref name="start" scoped="" ref="0x7fe762bfc330"/>
        <function-ref name="stop" scoped="" ref="0x7fe762bfc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTSend" ref="0x7fe762b4b440" loc="30:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UARTSend" scoped="" ref="0x7fe762b4b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe762b4b890"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe762b4ba18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe762b4bba0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe762b4bd28"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe762b58020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fe762b391c0" loc="35:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fe762b391c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
              <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7fe762b37a60"/>
        <function-ref name="enqueue" scoped="" ref="0x7fe762b2d758"/>
        <function-ref name="element" scoped="" ref="0x7fe762b2dd88"/>
        <function-ref name="maxSize" scoped="" ref="0x7fe762b37610"/>
        <function-ref name="dequeue" scoped="" ref="0x7fe762b2d0f8"/>
        <function-ref name="empty" scoped="" ref="0x7fe762b39d08"/>
        <function-ref name="size" scoped="" ref="0x7fe762b371c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pool" ref="0x7fe762b24300" loc="36:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7fe762b24300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
            <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe762b26280"/>
        <function-ref name="maxSize" scoped="" ref="0x7fe762b2b728"/>
        <function-ref name="empty" scoped="" ref="0x7fe762b24e48"/>
        <function-ref name="put" scoped="" ref="0x7fe762b2bb78"/>
        <function-ref name="size" scoped="" ref="0x7fe762b2b2d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7fe762bfe020" loc="19:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7fe762bfe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe762bfe370"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe762bfe4f8"/>
        <function-ref name="start" scoped="" ref="0x7fe762bfe680"/>
        <function-ref name="stop" scoped="" ref="0x7fe762bfe808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationControl" ref="0x7fe762bf8a48" loc="22:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationControl" scoped="" ref="0x7fe762bf8a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe762bf8d98"/>
        <function-ref name="stop" scoped="" ref="0x7fe762bf7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7fe762b78278" loc="24:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fe762b78278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe762b785c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe762b78750"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe762b788d8"/>
        <function-ref name="cancel" scoped="" ref="0x7fe762b78a60"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe762b78be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpInfo" ref="0x7fe762b3b940" loc="32:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x7fe762b3b940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x7fe762b3bc90"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7fe762b3be18"/>
        <function-ref name="numNeighbors" scoped="" ref="0x7fe762b4c020"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x7fe762b4c1a8"/>
        <function-ref name="getEtx" scoped="" ref="0x7fe762b4c330"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x7fe762b4c4b8"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x7fe762b4c640"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x7fe762b4c7c8"/>
        <function-ref name="getParent" scoped="" ref="0x7fe762b4c950"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x7fe762b4cad8"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x7fe762b4cc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationPeriod" ref="0x7fe762bf18a8" loc="23:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationPeriod" scoped="" ref="0x7fe762bf18a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x7fe762bf5de8"/>
        <function-ref name="get" scoped="" ref="0x7fe762bf5490"/>
        <function-ref name="set" scoped="" ref="0x7fe762bf5918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadSensor" ref="0x7fe762b6be40" loc="26:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadSensor" scoped="" ref="0x7fe762b6be40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe762b799e0"/>
        <function-ref name="readDone" scoped="" ref="0x7fe762b79e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fe762b36440" loc="34:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7fe762b36440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fe762b36790"/>
        <function-ref name="rand32" scoped="" ref="0x7fe762b36918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x7fe762bf8170" loc="21:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingControl" scoped="" ref="0x7fe762bf8170"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe762bf84c0"/>
        <function-ref name="stop" scoped="" ref="0x7fe762bf8648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7fe762b547d0" loc="29:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fe762b547d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe762b54b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpCongestion" ref="0x7fe762b38528" loc="33:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x7fe762b38528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x7fe762b38878"/>
        <function-ref name="setClientCongested" scoped="" ref="0x7fe762b38a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7fe762aff2c0" loc="39:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fe762aff2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe762aff610"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe762aff798"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe762aff920"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe762affaa8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe762affc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe762b6f760" loc="25:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fe762b6f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe762b6fab0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe762b6fc38"/>
        <function-ref name="led1On" scoped="" ref="0x7fe762b6fdc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe762bef020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe762bef1a8"/>
        <function-ref name="get" scoped="" ref="0x7fe762bef330"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe762bef4b8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe762befad8"/>
        <function-ref name="set" scoped="" ref="0x7fe762bef640"/>
        <function-ref name="led0On" scoped="" ref="0x7fe762bef7c8"/>
        <function-ref name="led2On" scoped="" ref="0x7fe762bef950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fe762b09c28" loc="38:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fe762b09c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe762b22020"/>
        <function-ref name="source" scoped="" ref="0x7fe762b221a8"/>
        <function-ref name="address" scoped="" ref="0x7fe762b22330"/>
        <function-ref name="destination" scoped="" ref="0x7fe762b224b8"/>
        <function-ref name="setSource" scoped="" ref="0x7fe762b22640"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe762b227c8"/>
        <function-ref name="type" scoped="" ref="0x7fe762b22950"/>
        <function-ref name="setType" scoped="" ref="0x7fe762b22ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe762b22c60"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe762b22de8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe762b19020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe762b60b88" loc="27:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fe762b60b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca3020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe762ca3378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe762b5edd8"/>
        <function-ref name="fired" scoped="" ref="0x7fe762b69510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe762b5e238"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe762b69db0"/>
        <function-ref name="getdt" scoped="" ref="0x7fe762b5d6c8"/>
        <function-ref name="gett0" scoped="" ref="0x7fe762b5d278"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe762b69960"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe762b6a728"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe762b5e808"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe762b6abc8"/>
        <function-ref name="stop" scoped="" ref="0x7fe762b690c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartEchoTask" ref="0x7fe762b087e8" loc="42:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="uartEchoTask" scoped="" ref="0x7fe762b087e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe762b08b38"/>
        <function-ref name="runTask" scoped="" ref="0x7fe762b08cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fe762aba160" loc="58:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7fe762aba160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe762aba4b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fe762abfcb8" loc="57:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fe762abfcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fe762abb0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7fe762ab6b68" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7fe762ab6b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe762ab3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe762ab7020" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe762ab7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe762ab7370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7fe762ab0e68" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fe762ab0e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7fe762ab61e8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7fe762ab6370"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7fe762ab64f8"/>
        <function-ref name="actualMicro" scoped="" ref="0x7fe762ab6680"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7fe762ab6808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7fe762aac6c0" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7fe762aac6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe762aaca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe762aac020" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe762aac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe762aac370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7fe762aacd88" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7fe762aacd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe762aab170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7fe762aaebe8" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7fe762aaebe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe762aa6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7fe762aae558" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fe762aae558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe762aae8a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7fe762aa24f8" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7fe762aa24f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe762aa2848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7fe762a9c388" loc="44:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7fe762a9c388"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a9c6d8"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a9c860"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a9c9e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a9cb70"/>
        <function-ref name="get" scoped="" ref="0x7fe762a9ccf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a9ce80"/>
        <function-ref name="set" scoped="" ref="0x7fe762aa2030"/>
        <function-ref name="clr" scoped="" ref="0x7fe762aa21b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7fe762aa3020" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fe762aa3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe762aa3370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7fe762a60968" loc="98:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7fe762a60968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a5f0f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a5f278"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a5f400"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a5f588"/>
        <function-ref name="get" scoped="" ref="0x7fe762a5f710"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a5f898"/>
        <function-ref name="set" scoped="" ref="0x7fe762a5fa20"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a5fba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7fe762a7a4d0" loc="72:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7fe762a7a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a7a820"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a7a9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a7ab30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a7acb8"/>
        <function-ref name="get" scoped="" ref="0x7fe762a7ae40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a79020"/>
        <function-ref name="set" scoped="" ref="0x7fe762a791a8"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a79330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7fe762a6f4d0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7fe762a6f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a6f820"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a6f9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a6fb30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a6fcb8"/>
        <function-ref name="get" scoped="" ref="0x7fe762a6fe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a6e020"/>
        <function-ref name="set" scoped="" ref="0x7fe762a6e1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a6e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7fe762a651a0" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7fe762a651a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a654f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a65678"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a65800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a65988"/>
        <function-ref name="get" scoped="" ref="0x7fe762a65b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a65c98"/>
        <function-ref name="set" scoped="" ref="0x7fe762a65e20"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a64020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7fe762a5a658" loc="103:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7fe762a5a658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a5a9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a5ab30"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a5acb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a5ae40"/>
        <function-ref name="get" scoped="" ref="0x7fe762a59020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a591a8"/>
        <function-ref name="set" scoped="" ref="0x7fe762a59330"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a594b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7fe762a901a0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7fe762a901a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a904f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a90678"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a90800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a90988"/>
        <function-ref name="get" scoped="" ref="0x7fe762a90b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a90c98"/>
        <function-ref name="set" scoped="" ref="0x7fe762a90e20"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a8f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7fe762a68e00" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7fe762a68e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a671a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a67330"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a674b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a67640"/>
        <function-ref name="get" scoped="" ref="0x7fe762a677c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a67950"/>
        <function-ref name="set" scoped="" ref="0x7fe762a67ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a67c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7fe762a8e4d0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7fe762a8e4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a8e820"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a8e9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a8eb30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a8ecb8"/>
        <function-ref name="get" scoped="" ref="0x7fe762a8ee40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a8d020"/>
        <function-ref name="set" scoped="" ref="0x7fe762a8d1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a8d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7fe762a82658" loc="64:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7fe762a82658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a829a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a82b30"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a82cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a82e40"/>
        <function-ref name="get" scoped="" ref="0x7fe762a81020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a811a8"/>
        <function-ref name="set" scoped="" ref="0x7fe762a81330"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a814b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7fe762a77968" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7fe762a77968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a77cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a77e40"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a76020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a761a8"/>
        <function-ref name="get" scoped="" ref="0x7fe762a76330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a764b8"/>
        <function-ref name="set" scoped="" ref="0x7fe762a76640"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a767c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7fe762a6c968" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7fe762a6c968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a6ccb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a6ce40"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a6a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a6a1a8"/>
        <function-ref name="get" scoped="" ref="0x7fe762a6a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a6a4b8"/>
        <function-ref name="set" scoped="" ref="0x7fe762a6a640"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a6a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7fe762a96968" loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7fe762a96968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a96cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a96e40"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a95020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a951a8"/>
        <function-ref name="get" scoped="" ref="0x7fe762a95330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a954b8"/>
        <function-ref name="set" scoped="" ref="0x7fe762a95640"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a957c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7fe762a8b968" loc="56:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7fe762a8b968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a8bcb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a8be40"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a8a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a8a1a8"/>
        <function-ref name="get" scoped="" ref="0x7fe762a8a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a8a4b8"/>
        <function-ref name="set" scoped="" ref="0x7fe762a8a640"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a8a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7fe762a7faf0" loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7fe762a7faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a7fe40"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a7e020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a7e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a7e330"/>
        <function-ref name="get" scoped="" ref="0x7fe762a7e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a7e640"/>
        <function-ref name="set" scoped="" ref="0x7fe762a7e7c8"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a7e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7fe762a74e00" loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7fe762a74e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a731a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a73330"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a734b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a73640"/>
        <function-ref name="get" scoped="" ref="0x7fe762a737c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a73950"/>
        <function-ref name="set" scoped="" ref="0x7fe762a73ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a73c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7fe762a62658" loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7fe762a62658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a629a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a62b30"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a62cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a62e40"/>
        <function-ref name="get" scoped="" ref="0x7fe762a61020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a611a8"/>
        <function-ref name="set" scoped="" ref="0x7fe762a61330"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a614b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7fe762a5c348" loc="101:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7fe762a5c348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a5c698"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a5c820"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a5c9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a5cb30"/>
        <function-ref name="get" scoped="" ref="0x7fe762a5ccb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a5ce40"/>
        <function-ref name="set" scoped="" ref="0x7fe762a5b020"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a5b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7fe762a711a0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7fe762a711a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a714f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a71678"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a71800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a71988"/>
        <function-ref name="get" scoped="" ref="0x7fe762a71b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a71c98"/>
        <function-ref name="set" scoped="" ref="0x7fe762a71e20"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a70020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7fe762a93e00" loc="48:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7fe762a93e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a921a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a92330"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a924b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a92640"/>
        <function-ref name="get" scoped="" ref="0x7fe762a927c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a92950"/>
        <function-ref name="set" scoped="" ref="0x7fe762a92ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a92c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7fe762a87020" loc="59:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7fe762a87020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a87370"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a874f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a87680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a87808"/>
        <function-ref name="get" scoped="" ref="0x7fe762a87990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a87b18"/>
        <function-ref name="set" scoped="" ref="0x7fe762a87ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a87e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7fe762a5e020" loc="99:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7fe762a5e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a5e370"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a5e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a5e680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a5e808"/>
        <function-ref name="get" scoped="" ref="0x7fe762a5e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a5eb18"/>
        <function-ref name="set" scoped="" ref="0x7fe762a5eca0"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a5ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7fe762a84348" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7fe762a84348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a84698"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a84820"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a849a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a84b30"/>
        <function-ref name="get" scoped="" ref="0x7fe762a84cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a84e40"/>
        <function-ref name="set" scoped="" ref="0x7fe762a83020"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a831a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7fe762a79658" loc="73:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7fe762a79658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a799a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a79b30"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a79cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a79e40"/>
        <function-ref name="get" scoped="" ref="0x7fe762a78020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a781a8"/>
        <function-ref name="set" scoped="" ref="0x7fe762a78330"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a784b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7fe762a6e658" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7fe762a6e658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a6e9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a6eb30"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a6ecb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a6ee40"/>
        <function-ref name="get" scoped="" ref="0x7fe762a6d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a6d1a8"/>
        <function-ref name="set" scoped="" ref="0x7fe762a6d330"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a6d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7fe762a64348" loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7fe762a64348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a64698"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a64820"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a649a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a64b30"/>
        <function-ref name="get" scoped="" ref="0x7fe762a64cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a64e40"/>
        <function-ref name="set" scoped="" ref="0x7fe762a63020"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a631a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7fe762a8f348" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7fe762a8f348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a8f698"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a8f820"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a8f9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a8fb30"/>
        <function-ref name="get" scoped="" ref="0x7fe762a8fcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a8fe40"/>
        <function-ref name="set" scoped="" ref="0x7fe762a8e020"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a8e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7fe762a8d658" loc="54:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7fe762a8d658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a8d9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a8db30"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a8dcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a8de40"/>
        <function-ref name="get" scoped="" ref="0x7fe762a8c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a8c1a8"/>
        <function-ref name="set" scoped="" ref="0x7fe762a8c330"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a8c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7fe762a817e0" loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7fe762a817e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a81b30"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a81cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a81e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a80020"/>
        <function-ref name="get" scoped="" ref="0x7fe762a801a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a80330"/>
        <function-ref name="set" scoped="" ref="0x7fe762a804b8"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a80640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7fe762a76af0" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7fe762a76af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a76e40"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a75020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a751a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a75330"/>
        <function-ref name="get" scoped="" ref="0x7fe762a754b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a75640"/>
        <function-ref name="set" scoped="" ref="0x7fe762a757c8"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a75950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7fe762a6aaf0" loc="87:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7fe762a6aaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a6ae40"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a69020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a691a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a69330"/>
        <function-ref name="get" scoped="" ref="0x7fe762a694b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a69640"/>
        <function-ref name="set" scoped="" ref="0x7fe762a697c8"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a69950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7fe762a95af0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7fe762a95af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a95e40"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a94020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a941a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a94330"/>
        <function-ref name="get" scoped="" ref="0x7fe762a944b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a94640"/>
        <function-ref name="set" scoped="" ref="0x7fe762a947c8"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a94950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7fe762a8aaf0" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7fe762a8aaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a89020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a891a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a89330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a894b8"/>
        <function-ref name="get" scoped="" ref="0x7fe762a89640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a897c8"/>
        <function-ref name="set" scoped="" ref="0x7fe762a89950"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a89ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7fe762a7ec78" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7fe762a7ec78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a7d020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a7d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a7d330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a7d4b8"/>
        <function-ref name="get" scoped="" ref="0x7fe762a7d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a7d7c8"/>
        <function-ref name="set" scoped="" ref="0x7fe762a7d950"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a7dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7fe762a617e0" loc="96:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7fe762a617e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a61b30"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a61cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a61e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a60020"/>
        <function-ref name="get" scoped="" ref="0x7fe762a601a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a60330"/>
        <function-ref name="set" scoped="" ref="0x7fe762a604b8"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a60640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7fe762a7b020" loc="71:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7fe762a7b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a7b570"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a7b6f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a7b880"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a7ba08"/>
        <function-ref name="get" scoped="" ref="0x7fe762a7bb90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a7bd18"/>
        <function-ref name="set" scoped="" ref="0x7fe762a7a020"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a7a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7fe762a70348" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7fe762a70348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a70698"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a70820"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a709a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a70b30"/>
        <function-ref name="get" scoped="" ref="0x7fe762a70cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a70e40"/>
        <function-ref name="set" scoped="" ref="0x7fe762a6f020"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a6f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7fe762a66020" loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7fe762a66020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a66370"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a664f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a66680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a66808"/>
        <function-ref name="get" scoped="" ref="0x7fe762a66990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a66b18"/>
        <function-ref name="set" scoped="" ref="0x7fe762a66ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a66e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7fe762a5b4d0" loc="102:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7fe762a5b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a5b820"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a5b9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a5bb30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a5bcb8"/>
        <function-ref name="get" scoped="" ref="0x7fe762a5be40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a5a020"/>
        <function-ref name="set" scoped="" ref="0x7fe762a5a1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a5a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7fe762a91020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7fe762a91020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a91370"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a914f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a91680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a91808"/>
        <function-ref name="get" scoped="" ref="0x7fe762a91990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a91b18"/>
        <function-ref name="set" scoped="" ref="0x7fe762a91ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a91e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7fe762a851a0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7fe762a851a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a854f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a85678"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a85800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a85988"/>
        <function-ref name="get" scoped="" ref="0x7fe762a85b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a85c98"/>
        <function-ref name="set" scoped="" ref="0x7fe762a85e20"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a84020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7fe762a69c78" loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7fe762a69c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a68020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a681a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a68330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a684b8"/>
        <function-ref name="get" scoped="" ref="0x7fe762a68640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a687c8"/>
        <function-ref name="set" scoped="" ref="0x7fe762a68950"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a68ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7fe762a834d0" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7fe762a834d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a83820"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a839a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a83b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a83cb8"/>
        <function-ref name="get" scoped="" ref="0x7fe762a83e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a82020"/>
        <function-ref name="set" scoped="" ref="0x7fe762a821a8"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a82330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7fe762a787e0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7fe762a787e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a78b30"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a78cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a78e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a77020"/>
        <function-ref name="get" scoped="" ref="0x7fe762a771a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a77330"/>
        <function-ref name="set" scoped="" ref="0x7fe762a774b8"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a77640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7fe762a6d7e0" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7fe762a6d7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a6db30"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a6dcb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a6de40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a6c020"/>
        <function-ref name="get" scoped="" ref="0x7fe762a6c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a6c330"/>
        <function-ref name="set" scoped="" ref="0x7fe762a6c4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a6c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7fe762a634d0" loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7fe762a634d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a63820"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a639a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a63b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a63cb8"/>
        <function-ref name="get" scoped="" ref="0x7fe762a63e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a62020"/>
        <function-ref name="set" scoped="" ref="0x7fe762a621a8"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a62330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7fe762aa5790" loc="44:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7fe762aa5790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762aa5ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762aa5c68"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762aa5df0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a96020"/>
        <function-ref name="get" scoped="" ref="0x7fe762a961a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a96330"/>
        <function-ref name="set" scoped="" ref="0x7fe762a964b8"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a96640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7fe762a8c7e0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7fe762a8c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a8cb30"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a8ccb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a8ce40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a8b020"/>
        <function-ref name="get" scoped="" ref="0x7fe762a8b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a8b330"/>
        <function-ref name="set" scoped="" ref="0x7fe762a8b4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a8b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7fe762a80968" loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7fe762a80968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a80cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a80e40"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a7f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a7f1a8"/>
        <function-ref name="get" scoped="" ref="0x7fe762a7f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a7f4b8"/>
        <function-ref name="set" scoped="" ref="0x7fe762a7f640"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a7f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7fe762a75c78" loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7fe762a75c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a74020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a741a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a74330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a744b8"/>
        <function-ref name="get" scoped="" ref="0x7fe762a74640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a747c8"/>
        <function-ref name="set" scoped="" ref="0x7fe762a74950"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a74ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7fe762a5d1a0" loc="100:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7fe762a5d1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a5d4f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a5d678"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a5d800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a5d988"/>
        <function-ref name="get" scoped="" ref="0x7fe762a5db10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a5dc98"/>
        <function-ref name="set" scoped="" ref="0x7fe762a5de20"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a5c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7fe762a72020" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7fe762a72020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a72370"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a724f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a72680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a72808"/>
        <function-ref name="get" scoped="" ref="0x7fe762a72990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a72b18"/>
        <function-ref name="set" scoped="" ref="0x7fe762a72ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a72e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7fe762a7de00" loc="69:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7fe762a7de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a7c1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a7c330"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a7c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a7c640"/>
        <function-ref name="get" scoped="" ref="0x7fe762a7c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a7c950"/>
        <function-ref name="set" scoped="" ref="0x7fe762a7cad8"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a7cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7fe762a94c78" loc="47:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7fe762a94c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a93020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a931a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a93330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a934b8"/>
        <function-ref name="get" scoped="" ref="0x7fe762a93640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a937c8"/>
        <function-ref name="set" scoped="" ref="0x7fe762a93950"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a93ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7fe762a89e00" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7fe762a89e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a881a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a88330"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a884b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a88640"/>
        <function-ref name="get" scoped="" ref="0x7fe762a887c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a88950"/>
        <function-ref name="set" scoped="" ref="0x7fe762a88ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a88c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fe762a10120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fe762a10120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a10470"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a105f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a10780"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a10908"/>
        <function-ref name="get" scoped="" ref="0x7fe762a10a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a10c18"/>
        <function-ref name="set" scoped="" ref="0x7fe762a10da0"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a0f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fe762a0d5b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fe762a0d5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a0d908"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a0da90"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a0dc18"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a0dda0"/>
        <function-ref name="get" scoped="" ref="0x7fe762a0c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a0c1a8"/>
        <function-ref name="set" scoped="" ref="0x7fe762a0c330"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a0c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fe762a13dc0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fe762a13dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a12170"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a122f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a12480"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a12608"/>
        <function-ref name="get" scoped="" ref="0x7fe762a12790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a12918"/>
        <function-ref name="set" scoped="" ref="0x7fe762a12aa0"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a12c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fe762a0f2a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fe762a0f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a0f5f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a0f780"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a0f908"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a0fa90"/>
        <function-ref name="get" scoped="" ref="0x7fe762a0fc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a0fda0"/>
        <function-ref name="set" scoped="" ref="0x7fe762a0e020"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a0e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fe762a0c740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fe762a0c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a0ca90"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a0cc18"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a0cda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a0a020"/>
        <function-ref name="get" scoped="" ref="0x7fe762a0a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a0a330"/>
        <function-ref name="set" scoped="" ref="0x7fe762a0a4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a0a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fe762a11020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fe762a11020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a11370"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a114f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a11680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a11808"/>
        <function-ref name="get" scoped="" ref="0x7fe762a11990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a11b18"/>
        <function-ref name="set" scoped="" ref="0x7fe762a11ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a11e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fe762a0e430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fe762a0e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a0e780"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a0e908"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a0ea90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a0ec18"/>
        <function-ref name="get" scoped="" ref="0x7fe762a0eda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a0d020"/>
        <function-ref name="set" scoped="" ref="0x7fe762a0d1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a0d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fe762a0a8c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fe762a0a8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a0ac18"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a0ada0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a09020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a091a8"/>
        <function-ref name="get" scoped="" ref="0x7fe762a09330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a094b8"/>
        <function-ref name="set" scoped="" ref="0x7fe762a09640"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a097c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe761100c38" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe761100c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7610ff020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7610ff1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7610ff330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7610ff4b8"/>
        <function-ref name="get" scoped="" ref="0x7fe7610ff640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7610ff7c8"/>
        <function-ref name="set" scoped="" ref="0x7fe7610ff950"/>
        <function-ref name="clr" scoped="" ref="0x7fe7610ffad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7610fdc38" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7610fdc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7610fc020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7610fc1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7610fc330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7610fc4b8"/>
        <function-ref name="get" scoped="" ref="0x7fe7610fc640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7610fc7c8"/>
        <function-ref name="set" scoped="" ref="0x7fe7610fc950"/>
        <function-ref name="clr" scoped="" ref="0x7fe7610fcad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7610fac38" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7610fac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7610f9020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7610f91a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7610f9330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7610f94b8"/>
        <function-ref name="get" scoped="" ref="0x7fe7610f9640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7610f97c8"/>
        <function-ref name="set" scoped="" ref="0x7fe7610f9950"/>
        <function-ref name="clr" scoped="" ref="0x7fe7610f9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7610f7c38" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7610f7c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7610f6020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7610f61a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7610f6330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7610f64b8"/>
        <function-ref name="get" scoped="" ref="0x7fe7610f6640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7610f67c8"/>
        <function-ref name="set" scoped="" ref="0x7fe7610f6950"/>
        <function-ref name="clr" scoped="" ref="0x7fe7610f6ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7610f4c38" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7610f4c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7610f3020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7610f31a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7610f3330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7610f34b8"/>
        <function-ref name="get" scoped="" ref="0x7fe7610f3640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7610f37c8"/>
        <function-ref name="set" scoped="" ref="0x7fe7610f3950"/>
        <function-ref name="clr" scoped="" ref="0x7fe7610f3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7610f1c38" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7610f1c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7610f0020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7610f01a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7610f0330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7610f04b8"/>
        <function-ref name="get" scoped="" ref="0x7fe7610f0640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7610f07c8"/>
        <function-ref name="set" scoped="" ref="0x7fe7610f0950"/>
        <function-ref name="clr" scoped="" ref="0x7fe7610f0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7610eec38" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7610eec38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7610ed020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7610ed1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7610ed330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7610ed4b8"/>
        <function-ref name="get" scoped="" ref="0x7fe7610ed640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7610ed7c8"/>
        <function-ref name="set" scoped="" ref="0x7fe7610ed950"/>
        <function-ref name="clr" scoped="" ref="0x7fe7610edad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7610ebc38" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7610ebc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7610e9020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7610e91a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7610e9330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7610e94b8"/>
        <function-ref name="get" scoped="" ref="0x7fe7610e9640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7610e97c8"/>
        <function-ref name="set" scoped="" ref="0x7fe7610e9950"/>
        <function-ref name="clr" scoped="" ref="0x7fe7610e9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fe762a02bd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fe762a02bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a01020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a011a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a01330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a014b8"/>
        <function-ref name="get" scoped="" ref="0x7fe762a01640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a017c8"/>
        <function-ref name="set" scoped="" ref="0x7fe762a01950"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a01ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fe7629fd020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fe7629fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629fd370"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629fd4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629fd680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629fd808"/>
        <function-ref name="get" scoped="" ref="0x7fe7629fd990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629fdb18"/>
        <function-ref name="set" scoped="" ref="0x7fe7629fdca0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629fde28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fe762a04930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fe762a04930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a04c80"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a04e08"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a03020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a031a8"/>
        <function-ref name="get" scoped="" ref="0x7fe762a03330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a034b8"/>
        <function-ref name="set" scoped="" ref="0x7fe762a03640"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a037c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fe762a01d60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fe762a01d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629ff0d8"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629ff260"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629ff3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629ff570"/>
        <function-ref name="get" scoped="" ref="0x7fe7629ff6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629ff880"/>
        <function-ref name="set" scoped="" ref="0x7fe7629ffa08"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629ffb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fe7629fc120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fe7629fc120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629fc470"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629fc5f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629fc780"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629fc908"/>
        <function-ref name="get" scoped="" ref="0x7fe7629fca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629fcc18"/>
        <function-ref name="set" scoped="" ref="0x7fe7629fcda0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629fb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fe762a03a50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fe762a03a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762a03da0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762a02020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762a021a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762a02330"/>
        <function-ref name="get" scoped="" ref="0x7fe762a024b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762a02640"/>
        <function-ref name="set" scoped="" ref="0x7fe762a027c8"/>
        <function-ref name="clr" scoped="" ref="0x7fe762a02950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fe7629ffe18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fe7629ffe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629fe1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629fe330"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629fe4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629fe640"/>
        <function-ref name="get" scoped="" ref="0x7fe7629fe7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629fe950"/>
        <function-ref name="set" scoped="" ref="0x7fe7629fead8"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629fec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fe7629fb2a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fe7629fb2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629fb5f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629fb780"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629fb908"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629fba90"/>
        <function-ref name="get" scoped="" ref="0x7fe7629fbc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629fbda0"/>
        <function-ref name="set" scoped="" ref="0x7fe7629fa020"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629fa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe761093180" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe761093180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7610934d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe761093658"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7610937e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe761093968"/>
        <function-ref name="get" scoped="" ref="0x7fe761093af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe761093c78"/>
        <function-ref name="set" scoped="" ref="0x7fe761093e00"/>
        <function-ref name="clr" scoped="" ref="0x7fe761092020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe761090100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe761090100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe761090450"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7610905d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe761090760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7610908e8"/>
        <function-ref name="get" scoped="" ref="0x7fe761090a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe761090bf8"/>
        <function-ref name="set" scoped="" ref="0x7fe761090d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe76108f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe76108d100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe76108d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe76108d450"/>
        <function-ref name="isInput" scoped="" ref="0x7fe76108d5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe76108d760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe76108d8e8"/>
        <function-ref name="get" scoped="" ref="0x7fe76108da70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe76108dbf8"/>
        <function-ref name="set" scoped="" ref="0x7fe76108dd80"/>
        <function-ref name="clr" scoped="" ref="0x7fe76108c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe76108a100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe76108a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe76108a450"/>
        <function-ref name="isInput" scoped="" ref="0x7fe76108a5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe76108a760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe76108a8e8"/>
        <function-ref name="get" scoped="" ref="0x7fe76108aa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe76108abf8"/>
        <function-ref name="set" scoped="" ref="0x7fe76108ad80"/>
        <function-ref name="clr" scoped="" ref="0x7fe761089020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe761087100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe761087100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe761087450"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7610875d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe761087760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7610878e8"/>
        <function-ref name="get" scoped="" ref="0x7fe761087a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe761087bf8"/>
        <function-ref name="set" scoped="" ref="0x7fe761087d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe761086020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe761084100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe761084100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe761084450"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7610845d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe761084760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7610848e8"/>
        <function-ref name="get" scoped="" ref="0x7fe761084a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe761084bf8"/>
        <function-ref name="set" scoped="" ref="0x7fe761084d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe761083020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe761081100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe761081100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe761081450"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7610815d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe761081760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7610818e8"/>
        <function-ref name="get" scoped="" ref="0x7fe761081a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe761081bf8"/>
        <function-ref name="set" scoped="" ref="0x7fe761081d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe761080020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe76107e100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe76107e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe76107e450"/>
        <function-ref name="isInput" scoped="" ref="0x7fe76107e5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe76107e760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe76107e8e8"/>
        <function-ref name="get" scoped="" ref="0x7fe76107ea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe76107ebf8"/>
        <function-ref name="set" scoped="" ref="0x7fe76107ed80"/>
        <function-ref name="clr" scoped="" ref="0x7fe76107c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fe7629f2740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fe7629f2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629f2a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629f2c18"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629f2da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629f1020"/>
        <function-ref name="get" scoped="" ref="0x7fe7629f11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629f1330"/>
        <function-ref name="set" scoped="" ref="0x7fe7629f14b8"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629f1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fe7629efbd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fe7629efbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629ee020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629ee1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629ee330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629ee4b8"/>
        <function-ref name="get" scoped="" ref="0x7fe7629ee640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629ee7c8"/>
        <function-ref name="set" scoped="" ref="0x7fe7629ee950"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629eead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fe7629f5500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fe7629f5500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629f5850"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629f59d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629f5b60"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629f5ce8"/>
        <function-ref name="get" scoped="" ref="0x7fe7629f5e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629f3020"/>
        <function-ref name="set" scoped="" ref="0x7fe7629f31a8"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629f3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fe7629f18c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fe7629f18c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629f1c18"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629f1da0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629f0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629f01a8"/>
        <function-ref name="get" scoped="" ref="0x7fe7629f0330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629f04b8"/>
        <function-ref name="set" scoped="" ref="0x7fe7629f0640"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629f07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fe7629eed60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fe7629eed60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629ed0d8"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629ed260"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629ed3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629ed570"/>
        <function-ref name="get" scoped="" ref="0x7fe7629ed6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629ed880"/>
        <function-ref name="set" scoped="" ref="0x7fe7629eda08"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629edb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fe7629f35b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fe7629f35b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629f3908"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629f3a90"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629f3c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629f3da0"/>
        <function-ref name="get" scoped="" ref="0x7fe7629f2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629f21a8"/>
        <function-ref name="set" scoped="" ref="0x7fe7629f2330"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629f24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fe7629f0a50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fe7629f0a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629f0da0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629ef020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629ef1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629ef330"/>
        <function-ref name="get" scoped="" ref="0x7fe7629ef4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629ef640"/>
        <function-ref name="set" scoped="" ref="0x7fe7629ef7c8"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629ef950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fe7629ede18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fe7629ede18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629ec1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629ec330"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629ec4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629ec640"/>
        <function-ref name="get" scoped="" ref="0x7fe7629ec7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629ec950"/>
        <function-ref name="set" scoped="" ref="0x7fe7629ecad8"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629ecc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe76102a180" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe76102a180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe76102a4d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe76102a658"/>
        <function-ref name="toggle" scoped="" ref="0x7fe76102a7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe76102a968"/>
        <function-ref name="get" scoped="" ref="0x7fe76102aaf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe76102ac78"/>
        <function-ref name="set" scoped="" ref="0x7fe76102ae00"/>
        <function-ref name="clr" scoped="" ref="0x7fe761029020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe761027100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe761027100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe761027450"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7610275d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe761027760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7610278e8"/>
        <function-ref name="get" scoped="" ref="0x7fe761027a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe761027bf8"/>
        <function-ref name="set" scoped="" ref="0x7fe761027d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe761026020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe761024100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe761024100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe761024450"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7610245d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe761024760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7610248e8"/>
        <function-ref name="get" scoped="" ref="0x7fe761024a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe761024bf8"/>
        <function-ref name="set" scoped="" ref="0x7fe761024d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe761023020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe761021100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe761021100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe761021450"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7610215d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe761021760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7610218e8"/>
        <function-ref name="get" scoped="" ref="0x7fe761021a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe761021bf8"/>
        <function-ref name="set" scoped="" ref="0x7fe761021d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe761020020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe76101e100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe76101e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe76101e450"/>
        <function-ref name="isInput" scoped="" ref="0x7fe76101e5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe76101e760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe76101e8e8"/>
        <function-ref name="get" scoped="" ref="0x7fe76101ea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe76101ebf8"/>
        <function-ref name="set" scoped="" ref="0x7fe76101ed80"/>
        <function-ref name="clr" scoped="" ref="0x7fe76101d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe76101b100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe76101b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe76101b450"/>
        <function-ref name="isInput" scoped="" ref="0x7fe76101b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe76101b760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe76101b8e8"/>
        <function-ref name="get" scoped="" ref="0x7fe76101ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe76101bbf8"/>
        <function-ref name="set" scoped="" ref="0x7fe76101bd80"/>
        <function-ref name="clr" scoped="" ref="0x7fe76101a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe761018100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe761018100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe761018450"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7610185d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe761018760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7610188e8"/>
        <function-ref name="get" scoped="" ref="0x7fe761018a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe761018bf8"/>
        <function-ref name="set" scoped="" ref="0x7fe761018d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe761017020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe761015100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe761015100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe761015450"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7610155d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe761015760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7610158e8"/>
        <function-ref name="get" scoped="" ref="0x7fe761015a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe761015bf8"/>
        <function-ref name="set" scoped="" ref="0x7fe761015d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe761014020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fe7629e3120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fe7629e3120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629e3470"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629e35f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629e3780"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629e3908"/>
        <function-ref name="get" scoped="" ref="0x7fe7629e3a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629e3c18"/>
        <function-ref name="set" scoped="" ref="0x7fe7629e3da0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629e2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fe7629e05b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fe7629e05b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629e0908"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629e0a90"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629e0c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629e0da0"/>
        <function-ref name="get" scoped="" ref="0x7fe7629df020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629df1a8"/>
        <function-ref name="set" scoped="" ref="0x7fe7629df330"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629df4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fe7629e6e40" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fe7629e6e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629e51c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629e5348"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629e54d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629e5658"/>
        <function-ref name="get" scoped="" ref="0x7fe7629e57e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629e5968"/>
        <function-ref name="set" scoped="" ref="0x7fe7629e5af0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629e5c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fe7629e22a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fe7629e22a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629e25f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629e2780"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629e2908"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629e2a90"/>
        <function-ref name="get" scoped="" ref="0x7fe7629e2c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629e2da0"/>
        <function-ref name="set" scoped="" ref="0x7fe7629e1020"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629e11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fe7629df740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fe7629df740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629dfa90"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629dfc18"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629dfda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629de020"/>
        <function-ref name="get" scoped="" ref="0x7fe7629de1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629de330"/>
        <function-ref name="set" scoped="" ref="0x7fe7629de4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629de640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fe7629e4020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fe7629e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629e4370"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629e44f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629e4680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629e4808"/>
        <function-ref name="get" scoped="" ref="0x7fe7629e4990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629e4b18"/>
        <function-ref name="set" scoped="" ref="0x7fe7629e4ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629e4e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fe7629e1430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fe7629e1430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629e1780"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629e1908"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629e1a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629e1c18"/>
        <function-ref name="get" scoped="" ref="0x7fe7629e1da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629e0020"/>
        <function-ref name="set" scoped="" ref="0x7fe7629e01a8"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629e0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fe7629de8c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fe7629de8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629dec18"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629deda0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629dd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629dd1a8"/>
        <function-ref name="get" scoped="" ref="0x7fe7629dd330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629dd4b8"/>
        <function-ref name="set" scoped="" ref="0x7fe7629dd640"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629dd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe760fc3180" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe760fc3180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe760fc34d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe760fc3658"/>
        <function-ref name="toggle" scoped="" ref="0x7fe760fc37e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe760fc3968"/>
        <function-ref name="get" scoped="" ref="0x7fe760fc3af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe760fc3c78"/>
        <function-ref name="set" scoped="" ref="0x7fe760fc3e00"/>
        <function-ref name="clr" scoped="" ref="0x7fe760fc2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe760fc0100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe760fc0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe760fc0450"/>
        <function-ref name="isInput" scoped="" ref="0x7fe760fc05d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe760fc0760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe760fc08e8"/>
        <function-ref name="get" scoped="" ref="0x7fe760fc0a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe760fc0bf8"/>
        <function-ref name="set" scoped="" ref="0x7fe760fc0d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe760fbf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe760fbd100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe760fbd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe760fbd450"/>
        <function-ref name="isInput" scoped="" ref="0x7fe760fbd5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe760fbd760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe760fbd8e8"/>
        <function-ref name="get" scoped="" ref="0x7fe760fbda70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe760fbdbf8"/>
        <function-ref name="set" scoped="" ref="0x7fe760fbdd80"/>
        <function-ref name="clr" scoped="" ref="0x7fe760fbc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe760fba100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe760fba100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe760fba450"/>
        <function-ref name="isInput" scoped="" ref="0x7fe760fba5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe760fba760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe760fba8e8"/>
        <function-ref name="get" scoped="" ref="0x7fe760fbaa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe760fbabf8"/>
        <function-ref name="set" scoped="" ref="0x7fe760fbad80"/>
        <function-ref name="clr" scoped="" ref="0x7fe760fb9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe760fb7100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe760fb7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe760fb7450"/>
        <function-ref name="isInput" scoped="" ref="0x7fe760fb75d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe760fb7760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe760fb78e8"/>
        <function-ref name="get" scoped="" ref="0x7fe760fb7a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe760fb7bf8"/>
        <function-ref name="set" scoped="" ref="0x7fe760fb7d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe760fb6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe760fb4100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe760fb4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe760fb4450"/>
        <function-ref name="isInput" scoped="" ref="0x7fe760fb45d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe760fb4760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe760fb48e8"/>
        <function-ref name="get" scoped="" ref="0x7fe760fb4a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe760fb4bf8"/>
        <function-ref name="set" scoped="" ref="0x7fe760fb4d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe760fb3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe760fb1100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe760fb1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe760fb1450"/>
        <function-ref name="isInput" scoped="" ref="0x7fe760fb15d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe760fb1760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe760fb18e8"/>
        <function-ref name="get" scoped="" ref="0x7fe760fb1a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe760fb1bf8"/>
        <function-ref name="set" scoped="" ref="0x7fe760fb1d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe760fb0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe760fae100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe760fae100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe760fae450"/>
        <function-ref name="isInput" scoped="" ref="0x7fe760fae5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe760fae760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe760fae8e8"/>
        <function-ref name="get" scoped="" ref="0x7fe760faea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe760faebf8"/>
        <function-ref name="set" scoped="" ref="0x7fe760faed80"/>
        <function-ref name="clr" scoped="" ref="0x7fe760fad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fe7629d5bd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fe7629d5bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629d4020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629d41a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629d4330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629d44b8"/>
        <function-ref name="get" scoped="" ref="0x7fe7629d4640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629d47c8"/>
        <function-ref name="set" scoped="" ref="0x7fe7629d4950"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629d4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fe7629d1020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fe7629d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629d1370"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629d14f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629d1680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629d1808"/>
        <function-ref name="get" scoped="" ref="0x7fe7629d1990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629d1b18"/>
        <function-ref name="set" scoped="" ref="0x7fe7629d1ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629d1e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fe7629d7930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fe7629d7930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629d7c80"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629d7e08"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629d6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629d61a8"/>
        <function-ref name="get" scoped="" ref="0x7fe7629d6330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629d64b8"/>
        <function-ref name="set" scoped="" ref="0x7fe7629d6640"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629d67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fe7629d4d60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fe7629d4d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629d30d8"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629d3260"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629d33e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629d3570"/>
        <function-ref name="get" scoped="" ref="0x7fe7629d36f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629d3880"/>
        <function-ref name="set" scoped="" ref="0x7fe7629d3a08"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629d3b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fe7629d0120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fe7629d0120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629d0470"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629d05f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629d0780"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629d0908"/>
        <function-ref name="get" scoped="" ref="0x7fe7629d0a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629d0c18"/>
        <function-ref name="set" scoped="" ref="0x7fe7629d0da0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fe7629d6a50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fe7629d6a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629d6da0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629d5020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629d51a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629d5330"/>
        <function-ref name="get" scoped="" ref="0x7fe7629d54b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629d5640"/>
        <function-ref name="set" scoped="" ref="0x7fe7629d57c8"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629d5950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fe7629d3e18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fe7629d3e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629d21a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629d2330"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629d24b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629d2640"/>
        <function-ref name="get" scoped="" ref="0x7fe7629d27c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629d2950"/>
        <function-ref name="set" scoped="" ref="0x7fe7629d2ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629d2c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fe7629ce2a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fe7629ce2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629ce5f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629ce780"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629ce908"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629cea90"/>
        <function-ref name="get" scoped="" ref="0x7fe7629cec18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629ceda0"/>
        <function-ref name="set" scoped="" ref="0x7fe7629cd020"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629cd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe760f5c180" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe760f5c180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe760f5c4d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe760f5c658"/>
        <function-ref name="toggle" scoped="" ref="0x7fe760f5c7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe760f5c968"/>
        <function-ref name="get" scoped="" ref="0x7fe760f5caf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe760f5cc78"/>
        <function-ref name="set" scoped="" ref="0x7fe760f5ce00"/>
        <function-ref name="clr" scoped="" ref="0x7fe760f5b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe760f59100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe760f59100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe760f59450"/>
        <function-ref name="isInput" scoped="" ref="0x7fe760f595d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe760f59760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe760f598e8"/>
        <function-ref name="get" scoped="" ref="0x7fe760f59a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe760f59bf8"/>
        <function-ref name="set" scoped="" ref="0x7fe760f59d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe760f58020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe760f56100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe760f56100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe760f56450"/>
        <function-ref name="isInput" scoped="" ref="0x7fe760f565d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe760f56760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe760f568e8"/>
        <function-ref name="get" scoped="" ref="0x7fe760f56a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe760f56bf8"/>
        <function-ref name="set" scoped="" ref="0x7fe760f56d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe760f55020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe760f53100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe760f53100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe760f53450"/>
        <function-ref name="isInput" scoped="" ref="0x7fe760f535d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe760f53760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe760f538e8"/>
        <function-ref name="get" scoped="" ref="0x7fe760f53a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe760f53bf8"/>
        <function-ref name="set" scoped="" ref="0x7fe760f53d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe760f52020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe760f50100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe760f50100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe760f50450"/>
        <function-ref name="isInput" scoped="" ref="0x7fe760f505d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe760f50760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe760f508e8"/>
        <function-ref name="get" scoped="" ref="0x7fe760f50a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe760f50bf8"/>
        <function-ref name="set" scoped="" ref="0x7fe760f50d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe760f4f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe760f4d100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe760f4d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe760f4d450"/>
        <function-ref name="isInput" scoped="" ref="0x7fe760f4d5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe760f4d760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe760f4d8e8"/>
        <function-ref name="get" scoped="" ref="0x7fe760f4da70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe760f4dbf8"/>
        <function-ref name="set" scoped="" ref="0x7fe760f4dd80"/>
        <function-ref name="clr" scoped="" ref="0x7fe760f4c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe760f4a100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe760f4a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe760f4a450"/>
        <function-ref name="isInput" scoped="" ref="0x7fe760f4a5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe760f4a760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe760f4a8e8"/>
        <function-ref name="get" scoped="" ref="0x7fe760f4aa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe760f4abf8"/>
        <function-ref name="set" scoped="" ref="0x7fe760f4ad80"/>
        <function-ref name="clr" scoped="" ref="0x7fe760f49020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe760f47100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe760f47100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe760f47450"/>
        <function-ref name="isInput" scoped="" ref="0x7fe760f475d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe760f47760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe760f478e8"/>
        <function-ref name="get" scoped="" ref="0x7fe760f47a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe760f47bf8"/>
        <function-ref name="set" scoped="" ref="0x7fe760f47d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe760f46020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fe7629c6740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fe7629c6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629c6a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629c6c18"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629c6da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629c5020"/>
        <function-ref name="get" scoped="" ref="0x7fe7629c51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629c5330"/>
        <function-ref name="set" scoped="" ref="0x7fe7629c54b8"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629c5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fe7629c2bd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fe7629c2bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629c1020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629c11a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629c1330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629c14b8"/>
        <function-ref name="get" scoped="" ref="0x7fe7629c1640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629c17c8"/>
        <function-ref name="set" scoped="" ref="0x7fe7629c1950"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629c1ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fe7629c8500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fe7629c8500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629c8850"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629c89d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629c8b60"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629c8ce8"/>
        <function-ref name="get" scoped="" ref="0x7fe7629c8e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629c7020"/>
        <function-ref name="set" scoped="" ref="0x7fe7629c71a8"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629c7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fe7629c58c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fe7629c58c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629c5c18"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629c5da0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629c3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629c31a8"/>
        <function-ref name="get" scoped="" ref="0x7fe7629c3330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629c34b8"/>
        <function-ref name="set" scoped="" ref="0x7fe7629c3640"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629c37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fe7629c1d60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fe7629c1d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629c00d8"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629c0260"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629c03e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629c0570"/>
        <function-ref name="get" scoped="" ref="0x7fe7629c06f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629c0880"/>
        <function-ref name="set" scoped="" ref="0x7fe7629c0a08"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629c0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fe7629c75b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fe7629c75b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629c7908"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629c7a90"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629c7c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629c7da0"/>
        <function-ref name="get" scoped="" ref="0x7fe7629c6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629c61a8"/>
        <function-ref name="set" scoped="" ref="0x7fe7629c6330"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629c64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fe7629c3a50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fe7629c3a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629c3da0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629c2020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629c21a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629c2330"/>
        <function-ref name="get" scoped="" ref="0x7fe7629c24b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629c2640"/>
        <function-ref name="set" scoped="" ref="0x7fe7629c27c8"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629c2950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fe7629c0e18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fe7629c0e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629bf1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629bf330"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629bf4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629bf640"/>
        <function-ref name="get" scoped="" ref="0x7fe7629bf7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629bf950"/>
        <function-ref name="set" scoped="" ref="0x7fe7629bfad8"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629bfc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe760ef5180" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe760ef5180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe760ef54d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe760ef5658"/>
        <function-ref name="toggle" scoped="" ref="0x7fe760ef57e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe760ef5968"/>
        <function-ref name="get" scoped="" ref="0x7fe760ef5af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe760ef5c78"/>
        <function-ref name="set" scoped="" ref="0x7fe760ef5e00"/>
        <function-ref name="clr" scoped="" ref="0x7fe760ef4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe760ef2100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe760ef2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe760ef2450"/>
        <function-ref name="isInput" scoped="" ref="0x7fe760ef25d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe760ef2760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe760ef28e8"/>
        <function-ref name="get" scoped="" ref="0x7fe760ef2a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe760ef2bf8"/>
        <function-ref name="set" scoped="" ref="0x7fe760ef2d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe760ef1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe760eef100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe760eef100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe760eef450"/>
        <function-ref name="isInput" scoped="" ref="0x7fe760eef5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe760eef760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe760eef8e8"/>
        <function-ref name="get" scoped="" ref="0x7fe760eefa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe760eefbf8"/>
        <function-ref name="set" scoped="" ref="0x7fe760eefd80"/>
        <function-ref name="clr" scoped="" ref="0x7fe760eee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe760eec100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe760eec100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe760eec450"/>
        <function-ref name="isInput" scoped="" ref="0x7fe760eec5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe760eec760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe760eec8e8"/>
        <function-ref name="get" scoped="" ref="0x7fe760eeca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe760eecbf8"/>
        <function-ref name="set" scoped="" ref="0x7fe760eecd80"/>
        <function-ref name="clr" scoped="" ref="0x7fe760eeb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe760ee9100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe760ee9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe760ee9450"/>
        <function-ref name="isInput" scoped="" ref="0x7fe760ee95d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe760ee9760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe760ee98e8"/>
        <function-ref name="get" scoped="" ref="0x7fe760ee9a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe760ee9bf8"/>
        <function-ref name="set" scoped="" ref="0x7fe760ee9d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe760ee8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe760ee6100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe760ee6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe760ee6450"/>
        <function-ref name="isInput" scoped="" ref="0x7fe760ee65d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe760ee6760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe760ee68e8"/>
        <function-ref name="get" scoped="" ref="0x7fe760ee6a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe760ee6bf8"/>
        <function-ref name="set" scoped="" ref="0x7fe760ee6d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe760ee5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe760ee3100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe760ee3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe760ee3450"/>
        <function-ref name="isInput" scoped="" ref="0x7fe760ee35d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe760ee3760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe760ee38e8"/>
        <function-ref name="get" scoped="" ref="0x7fe760ee3a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe760ee3bf8"/>
        <function-ref name="set" scoped="" ref="0x7fe760ee3d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe760ee2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe760ee0100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe760ee0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe760ee0450"/>
        <function-ref name="isInput" scoped="" ref="0x7fe760ee05d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe760ee0760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe760ee08e8"/>
        <function-ref name="get" scoped="" ref="0x7fe760ee0a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe760ee0bf8"/>
        <function-ref name="set" scoped="" ref="0x7fe760ee0d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe760edf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7629b93e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7629b93e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629b9730"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629b98b8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629b9a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629b9bc8"/>
        <function-ref name="get" scoped="" ref="0x7fe7629b9d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629a2020"/>
        <function-ref name="set" scoped="" ref="0x7fe7629a21a8"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629a2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe76299ec38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe76299ec38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe76299d020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe76299d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe76299d330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe76299d4b8"/>
        <function-ref name="get" scoped="" ref="0x7fe76299d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe76299d7c8"/>
        <function-ref name="set" scoped="" ref="0x7fe76299d950"/>
        <function-ref name="clr" scoped="" ref="0x7fe76299dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7629993e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7629993e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762999730"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629998b8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762999a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762999bc8"/>
        <function-ref name="get" scoped="" ref="0x7fe762999d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762997020"/>
        <function-ref name="set" scoped="" ref="0x7fe7629971a8"/>
        <function-ref name="clr" scoped="" ref="0x7fe762997330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe762994c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe762994c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762993020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629931a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762993330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629934b8"/>
        <function-ref name="get" scoped="" ref="0x7fe762993640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629937c8"/>
        <function-ref name="set" scoped="" ref="0x7fe762993950"/>
        <function-ref name="clr" scoped="" ref="0x7fe762993ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe76298e3e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe76298e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe76298e730"/>
        <function-ref name="isInput" scoped="" ref="0x7fe76298e8b8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe76298ea40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe76298ebc8"/>
        <function-ref name="get" scoped="" ref="0x7fe76298ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe76298d020"/>
        <function-ref name="set" scoped="" ref="0x7fe76298d1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fe76298d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe76298ac38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe76298ac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762989020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629891a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762989330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7629894b8"/>
        <function-ref name="get" scoped="" ref="0x7fe762989640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629897c8"/>
        <function-ref name="set" scoped="" ref="0x7fe762989950"/>
        <function-ref name="clr" scoped="" ref="0x7fe762989ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe762984480" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe762984480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629847d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762984958"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762984ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762984c68"/>
        <function-ref name="get" scoped="" ref="0x7fe762984df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762983020"/>
        <function-ref name="set" scoped="" ref="0x7fe7629831a8"/>
        <function-ref name="clr" scoped="" ref="0x7fe762983330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe76297fc38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe76297fc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe76297e020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe76297e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe76297e330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe76297e4b8"/>
        <function-ref name="get" scoped="" ref="0x7fe76297e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe76297e7c8"/>
        <function-ref name="set" scoped="" ref="0x7fe76297e950"/>
        <function-ref name="clr" scoped="" ref="0x7fe76297ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe76297a520" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe76297a520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe76297a870"/>
        <function-ref name="isInput" scoped="" ref="0x7fe76297a9f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe76297ab80"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe76297ad08"/>
        <function-ref name="get" scoped="" ref="0x7fe762979020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7629791a8"/>
        <function-ref name="set" scoped="" ref="0x7fe762979330"/>
        <function-ref name="clr" scoped="" ref="0x7fe7629794b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe762975cd8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe762975cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7629740a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762974228"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7629743b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762974538"/>
        <function-ref name="get" scoped="" ref="0x7fe7629746c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762974848"/>
        <function-ref name="set" scoped="" ref="0x7fe7629749d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe762974b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe76296f3e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe76296f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe76296f730"/>
        <function-ref name="isInput" scoped="" ref="0x7fe76296f8b8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe76296fa40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe76296fbc8"/>
        <function-ref name="get" scoped="" ref="0x7fe76296fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe76296e020"/>
        <function-ref name="set" scoped="" ref="0x7fe76296e1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fe76296e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe76296bc38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe76296bc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe76296a020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe76296a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe76296a330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe76296a4b8"/>
        <function-ref name="get" scoped="" ref="0x7fe76296a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe76296a7c8"/>
        <function-ref name="set" scoped="" ref="0x7fe76296a950"/>
        <function-ref name="clr" scoped="" ref="0x7fe76296aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7629653e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7629653e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762965730"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7629658b8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762965a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762965bc8"/>
        <function-ref name="get" scoped="" ref="0x7fe762965d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762964020"/>
        <function-ref name="set" scoped="" ref="0x7fe7629641a8"/>
        <function-ref name="clr" scoped="" ref="0x7fe762964330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe762960c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe762960c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe76295f020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe76295f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe76295f330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe76295f4b8"/>
        <function-ref name="get" scoped="" ref="0x7fe76295f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe76295f7c8"/>
        <function-ref name="set" scoped="" ref="0x7fe76295f950"/>
        <function-ref name="clr" scoped="" ref="0x7fe76295fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe7629264b0" loc="61:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe7629264b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fe762d2d6f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fe762d2d6f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe762926800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7fe762926ae0" loc="62:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fe762926ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7fe762926e30"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7fe762925020"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7fe7629251a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x7fe762925330"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7fe7629254b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fe762907418" loc="60:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7fe762907418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe762907768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fe762ab8c38" loc="57:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fe762ab8c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fe762908020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7fe762908ce0" loc="59:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fe762908ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7629070a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7fe762908308" loc="58:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fe762908308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe762908658"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fe7629087e0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fe762908968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fe762d321c8" loc="48:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7fe762d321c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe762d32518"/>
        <function-ref name="runTask" scoped="" ref="0x7fe762d326a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fe762d0f5c8" loc="47:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fe762d0f5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe762d0f918"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fe762d0faa0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fe762d0fc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fe762c5bc58" loc="56:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7fe762c5bc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe762c5a020"/>
        <function-ref name="runTask" scoped="" ref="0x7fe762c5a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7fe762c57168" loc="57:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7fe762c57168"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7fe762c574b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fe762c5cd88" loc="55:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fe762c5cd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe762c5b170"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fe762c5b2f8"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fe762c5b480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7fe762c3a988" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fe762c3a988"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fe762c3acd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7fe762d0ee28" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7fe762d0ee28"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7fe762c3e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7fe762c3b3c8" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7fe762c3b3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fe762c3b718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fe7628f9190" loc="46:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fe7628f9190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe7628f94e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe7628f9668"/>
        <function-ref name="led1On" scoped="" ref="0x7fe7628f97f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe7628f9978"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe7628f9b00"/>
        <function-ref name="get" scoped="" ref="0x7fe7628f9c88"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe7628f9e10"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe7628f84b8"/>
        <function-ref name="set" scoped="" ref="0x7fe7628f8020"/>
        <function-ref name="led0On" scoped="" ref="0x7fe7628f81a8"/>
        <function-ref name="led2On" scoped="" ref="0x7fe7628f8330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7fe7628f3020" loc="50:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7fe7628f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7628f3370"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7628f34f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7628f3680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7628f3808"/>
        <function-ref name="get" scoped="" ref="0x7fe7628f3990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7628f3b18"/>
        <function-ref name="set" scoped="" ref="0x7fe7628f3ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7628f3e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe7628f5368" loc="46:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe7628f5368"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7628f56b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7fe7628f2190" loc="51:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7fe7628f2190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7628f24e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7628f2668"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7628f27f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7628f2978"/>
        <function-ref name="get" scoped="" ref="0x7fe7628f2b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7628f2c88"/>
        <function-ref name="set" scoped="" ref="0x7fe7628f2e10"/>
        <function-ref name="clr" scoped="" ref="0x7fe7628f1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fe7628f5930" loc="47:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fe7628f5930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe7628f5c80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe7628f5e08"/>
        <function-ref name="led1On" scoped="" ref="0x7fe7628f4020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe7628f41a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe7628f4330"/>
        <function-ref name="get" scoped="" ref="0x7fe7628f44b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe7628f4640"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe7628f4c60"/>
        <function-ref name="set" scoped="" ref="0x7fe7628f47c8"/>
        <function-ref name="led0On" scoped="" ref="0x7fe7628f4950"/>
        <function-ref name="led2On" scoped="" ref="0x7fe7628f4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7fe7628f1338" loc="52:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7fe7628f1338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7628f1688"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7628f1810"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7628f1998"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7628f1b20"/>
        <function-ref name="get" scoped="" ref="0x7fe7628f1ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7628f1e30"/>
        <function-ref name="set" scoped="" ref="0x7fe7628f0020"/>
        <function-ref name="clr" scoped="" ref="0x7fe7628f01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7fe7628d5090" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7fe7628d5090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7628d53e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7628d5568"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7628d56f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7628d5878"/>
        <function-ref name="get" scoped="" ref="0x7fe7628d5a00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7628d5b88"/>
        <function-ref name="set" scoped="" ref="0x7fe7628d5d10"/>
        <function-ref name="clr" scoped="" ref="0x7fe7628d4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7fe7628d4378" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7fe7628d4378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7628d46c8"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7628d4850"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7628d49d8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7628d4b60"/>
        <function-ref name="get" scoped="" ref="0x7fe7628d4ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7628d4e70"/>
        <function-ref name="set" scoped="" ref="0x7fe7628d3020"/>
        <function-ref name="clr" scoped="" ref="0x7fe7628d31a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7fe7628d25e8" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe7628d25e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7628d2938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7fe7628d3500" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7fe7628d3500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7628d3850"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7628d39d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7628d3b60"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7628d3ce8"/>
        <function-ref name="get" scoped="" ref="0x7fe7628d3e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7628d2020"/>
        <function-ref name="set" scoped="" ref="0x7fe7628d21a8"/>
        <function-ref name="clr" scoped="" ref="0x7fe7628d2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fe7628cb290" loc="41:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fe7628cb290"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe7628cb5e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe7628cb768"/>
        <function-ref name="start" scoped="" ref="0x7fe7628cb8f0"/>
        <function-ref name="stop" scoped="" ref="0x7fe7628cba78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fe7628c1928" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7fe7628c1928"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fe7628c1c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe7628c7020" loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fe7628c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7628c7370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe7628c74f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe7628c7680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7628c7808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe7628c7990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fe7628ca270" loc="43:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fe7628ca270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe7628ca5c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe7628ca748"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7628ca8d0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7628caa58"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe7628cabe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fe7628c8020" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fe7628c8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe7628c8370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fe7628b4418" loc="52:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fe7628b4418"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fe7628b4768"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fe7628b48f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fe7628b4a78"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fe7628b4c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe7628c93c8" loc="44:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fe7628c93c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe7628c9718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fe7628bbcb0" loc="51:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe7628bbcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fe7628c00a0"/>
        <function-ref name="noAck" scoped="" ref="0x7fe7628c0228"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fe7628c03b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fe7628ac1d8" loc="53:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7fe7628ac1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fe7628ac528"/>
        <function-ref name="setRetries" scoped="" ref="0x7fe7628ac6b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7fe7628ac838"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fe7628ac9c0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fe7628acb48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fe7628c7c30" loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fe7628c7c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe7628c6020"/>
        <function-ref name="source" scoped="" ref="0x7fe7628c61a8"/>
        <function-ref name="address" scoped="" ref="0x7fe7628c6330"/>
        <function-ref name="destination" scoped="" ref="0x7fe7628c64b8"/>
        <function-ref name="setSource" scoped="" ref="0x7fe7628c6640"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe7628c67c8"/>
        <function-ref name="type" scoped="" ref="0x7fe7628c6950"/>
        <function-ref name="setType" scoped="" ref="0x7fe7628c6ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe7628c6c60"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe7628c6de8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe7628c2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7fe7628aac48" loc="54:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7fe7628aac48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7fe7628b3020"/>
        <function-ref name="setChannel" scoped="" ref="0x7fe7628b31a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7fe7628b3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x7fe7628a28c0" loc="56:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7fe7628a28c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TMicro" ref="0x7fe762ca1788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fe7628b0d40"/>
        <function-ref name="clear" scoped="" ref="0x7fe7628a9458"/>
        <function-ref name="isValid" scoped="" ref="0x7fe7628b0660"/>
        <function-ref name="set" scoped="" ref="0x7fe7628a9b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fe7628a0758" loc="57:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fe7628a0758"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca3020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe762ca3378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fe76289fcc0"/>
        <function-ref name="clear" scoped="" ref="0x7fe76289e420"/>
        <function-ref name="isValid" scoped="" ref="0x7fe76289f5e0"/>
        <function-ref name="set" scoped="" ref="0x7fe76289eb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fe76289cd10" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fe76289cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe7628990a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe762899228"/>
        <function-ref name="start" scoped="" ref="0x7fe7628993b0"/>
        <function-ref name="stop" scoped="" ref="0x7fe762899538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7fe7628830c8" loc="66:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7fe7628830c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7628826a0"/>
        <function-ref name="get" scoped="" ref="0x7fe762882190"/>
        <function-ref name="isSet" scoped="" ref="0x7fe762883c48"/>
        <function-ref name="set" scoped="" ref="0x7fe762882bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fe762878860" loc="71:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fe762878860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca3020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe762ca3378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fe762877cc0"/>
        <function-ref name="clear" scoped="" ref="0x7fe762875420"/>
        <function-ref name="isValid" scoped="" ref="0x7fe7628775e0"/>
        <function-ref name="set" scoped="" ref="0x7fe762875b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fe7628964e8" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7fe7628964e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fe762896838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe762893360" loc="56:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fe762893360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7628936b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe762893838"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe7628939c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe762893b48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe762893cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fe762899cb0" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fe762899cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe7628980a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe762898228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7628983b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe762898538"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe7628986c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fe7628979b8" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fe7628979b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe762897d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7fe76288cd80" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fe76288cd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe762885388"/>
        <function-ref name="get" scoped="" ref="0x7fe762886e38"/>
        <function-ref name="isSet" scoped="" ref="0x7fe762886928"/>
        <function-ref name="set" scoped="" ref="0x7fe762885898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fe762890020" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fe762890020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fe762890370"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fe7628904f8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fe762890680"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fe762890808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe762898e40" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fe762898e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe7628971c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7fe76287e978" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fe76287e978"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TRadio" ref="0x7fe762baa140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fe76287ce10"/>
        <function-ref name="clear" scoped="" ref="0x7fe762879558"/>
        <function-ref name="isValid" scoped="" ref="0x7fe76287c730"/>
        <function-ref name="set" scoped="" ref="0x7fe762879c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7fe76287b5a8" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fe76287b5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TRadio" ref="0x7fe762baa140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe76287e150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7fe762888930" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fe762888930"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe76288c020"/>
        <function-ref name="get" scoped="" ref="0x7fe76288d9f0"/>
        <function-ref name="isSet" scoped="" ref="0x7fe76288d4e0"/>
        <function-ref name="set" scoped="" ref="0x7fe76288c530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fe762891658" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe762891658"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fe7628919a8"/>
        <function-ref name="noAck" scoped="" ref="0x7fe762891b30"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fe762891cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7fe7628951c8" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7fe7628951c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe762895518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fe762890ab8" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7fe762890ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fe762890e08"/>
        <function-ref name="setRetries" scoped="" ref="0x7fe76288f020"/>
        <function-ref name="getRetries" scoped="" ref="0x7fe76288f1a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fe76288f330"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fe76288f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fe762892020" loc="57:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fe762892020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe762892370"/>
        <function-ref name="source" scoped="" ref="0x7fe7628924f8"/>
        <function-ref name="address" scoped="" ref="0x7fe762892680"/>
        <function-ref name="destination" scoped="" ref="0x7fe762892808"/>
        <function-ref name="setSource" scoped="" ref="0x7fe762892990"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe762892b18"/>
        <function-ref name="type" scoped="" ref="0x7fe762892ca0"/>
        <function-ref name="setType" scoped="" ref="0x7fe762892e28"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe762891020"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe7628911a8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe762891330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7fe76288f780" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7fe76288f780"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7fe76288fbd0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fe76288fd58"/>
        <function-ref name="getChannel" scoped="" ref="0x7fe76288e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fe76287d990" loc="67:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fe76287d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fe76287dce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7fe762895d58" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7fe762895d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe7628930d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fe762874c50" loc="41:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fe762874c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe762871020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe7628711a8"/>
        <function-ref name="start" scoped="" ref="0x7fe762871330"/>
        <function-ref name="stop" scoped="" ref="0x7fe7628714b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7fe7628488b8" loc="80:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7fe7628488b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe762846020"/>
        <function-ref name="get" scoped="" ref="0x7fe7628479a0"/>
        <function-ref name="isSet" scoped="" ref="0x7fe762847490"/>
        <function-ref name="set" scoped="" ref="0x7fe762846530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x7fe762868710" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x7fe762868710"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fe762868a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x7fe7628674b8" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x7fe7628674b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe762867908"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe762867a90"/>
        <function-ref name="request" scoped="" ref="0x7fe762867c18"/>
        <function-ref name="granted" scoped="" ref="0x7fe762867da0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe76285b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fe76286d498" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7fe76286d498"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fe76286d7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fe762871c30" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fe762871c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe762870020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe7628701a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe762870330"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7628704b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe762870640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fe76286e968" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fe76286e968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe76286ecb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7fe762851308" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7fe762851308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7fe762851658"/>
        <function-ref name="address" scoped="" ref="0x7fe7628517e0"/>
        <function-ref name="destination" scoped="" ref="0x7fe762851968"/>
        <function-ref name="setSource" scoped="" ref="0x7fe762851af0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe762851c78"/>
        <function-ref name="pan" scoped="" ref="0x7fe762851e00"/>
        <function-ref name="setPan" scoped="" ref="0x7fe76285a020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe76285a1a8"/>
        <function-ref name="localPan" scoped="" ref="0x7fe76285a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x7fe76285a6e0" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7fe76285a6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe76285aa30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe76285abb8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe76285ad40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe762859020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe7628591a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7fe76284b5a0" loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fe76284b5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe76284ab70"/>
        <function-ref name="get" scoped="" ref="0x7fe76284a660"/>
        <function-ref name="isSet" scoped="" ref="0x7fe76284a150"/>
        <function-ref name="set" scoped="" ref="0x7fe7628480c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fe762859e28" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fe762859e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fe7628501a8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fe762850330"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fe7628504b8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fe762850640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x7fe76286a9e8" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7fe76286a9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe76286ad38"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe762869020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe7628691a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe762869330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe7628694b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe762870dc0" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fe762870dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe76286e170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7fe7628438b0" loc="84:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fe7628438b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TRadio" ref="0x7fe762baa140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fe762841020"/>
        <function-ref name="clear" scoped="" ref="0x7fe762841700"/>
        <function-ref name="isValid" scoped="" ref="0x7fe762842828"/>
        <function-ref name="set" scoped="" ref="0x7fe762841de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7fe7628444e0" loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fe7628444e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TRadio" ref="0x7fe762baa140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe762843088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7fe76284e1f8" loc="78:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fe76284e1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe76284d7f8"/>
        <function-ref name="get" scoped="" ref="0x7fe76284d2e8"/>
        <function-ref name="isSet" scoped="" ref="0x7fe76284ed78"/>
        <function-ref name="set" scoped="" ref="0x7fe76284dd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fe7628594d0" loc="68:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe7628594d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fe762859820"/>
        <function-ref name="noAck" scoped="" ref="0x7fe7628599a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fe762859b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7fe762860250" loc="58:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7fe762860250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe7628605a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe762860728"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7628608b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe762860a38"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe762860bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7fe76286c1c8" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7fe76286c1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe76286c518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fe7628508f0" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7fe7628508f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fe762850c40"/>
        <function-ref name="setRetries" scoped="" ref="0x7fe762850dc8"/>
        <function-ref name="getRetries" scoped="" ref="0x7fe76284f020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fe76284f1a8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fe76284f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7fe76284f5f8" loc="76:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7fe76284f5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7fe76284f948"/>
        <function-ref name="setChannel" scoped="" ref="0x7fe76284fad0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fe76284fc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fe76286b378" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fe76286b378"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe76286b6c8"/>
        <function-ref name="source" scoped="" ref="0x7fe76286b850"/>
        <function-ref name="address" scoped="" ref="0x7fe76286b9d8"/>
        <function-ref name="destination" scoped="" ref="0x7fe76286bb60"/>
        <function-ref name="setSource" scoped="" ref="0x7fe76286bce8"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe76286be70"/>
        <function-ref name="type" scoped="" ref="0x7fe76286a020"/>
        <function-ref name="setType" scoped="" ref="0x7fe76286a1a8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe76286a330"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe76286a4b8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe76286a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fe76283f9d8" loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fe76283f9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca3020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe762ca3378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fe76283ee48"/>
        <function-ref name="clear" scoped="" ref="0x7fe76283c558"/>
        <function-ref name="isValid" scoped="" ref="0x7fe76283e768"/>
        <function-ref name="set" scoped="" ref="0x7fe76283cc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7fe762868020" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7fe762868020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe762868370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fe762846b78" loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fe762846b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fe762844020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7fe76286cd58" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7fe76286cd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe76286b0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x7fe76280d778" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x7fe76280d778"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7fe76280dac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x7fe762820370" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x7fe762820370"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x7fe7628206c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x7fe762810b48" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7fe762810b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe76281b020"/>
        <function-ref name="checkFrame" scoped="" ref="0x7fe76281b1a8"/>
        <function-ref name="source" scoped="" ref="0x7fe76281b330"/>
        <function-ref name="destination" scoped="" ref="0x7fe76281b4b8"/>
        <function-ref name="setSource" scoped="" ref="0x7fe76281b640"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe76281b7c8"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe76281b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x7fe762817a48" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x7fe762817a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x7fe762817d98"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x7fe762821020"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x7fe7628211a8"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x7fe762821330"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x7fe7628214b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7fe7627ee640" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7fe7627ee640"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe7627ee990"/>
        <function-ref name="wait" scoped="" ref="0x7fe7627eeb18"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7627eeca0"/>
        <function-ref name="isFree" scoped="" ref="0x7fe7627eee28"/>
        <function-ref name="getNow" scoped="" ref="0x7fe7627f2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x7fe7627e8860" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x7fe7627e8860"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7627e8bb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe7627e8d38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7627f1020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe7627f11a8"/>
        <function-ref name="headerLength" scoped="" ref="0x7fe7627f1330"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fe7627f14b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fe7627f1a40" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fe7627f1a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TRadio" ref="0x7fe762baa140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fe7627e6020"/>
        <function-ref name="clear" scoped="" ref="0x7fe7627e6700"/>
        <function-ref name="isValid" scoped="" ref="0x7fe7627ed8f8"/>
        <function-ref name="set" scoped="" ref="0x7fe7627e6de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x7fe762832428" loc="43:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x7fe762832428"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe762832778"/>
        <function-ref name="headerLength" scoped="" ref="0x7fe762832900"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fe762832a88"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7fe762832c10"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7fe762832d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x7fe762831da0" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x7fe762831da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x7fe762828170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x7fe7628290f0" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7fe7628290f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7fe762829440"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7fe7628295c8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7fe762829750"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7fe7628298d8"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7fe762829a60"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7fe762829be8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7fe762829d70"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7fe762836020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7fe7627f5858" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fe7627f5858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7fe7627f5ba8"/>
        <function-ref name="getDSN" scoped="" ref="0x7fe7627f5d30"/>
        <function-ref name="setFCF" scoped="" ref="0x7fe76280e020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7fe76280e1a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7fe76280e330"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7fe76280e4b8"/>
        <function-ref name="setDSN" scoped="" ref="0x7fe76280e640"/>
        <function-ref name="createAckReply" scoped="" ref="0x7fe76280e7c8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7fe76280e950"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7fe76280ead8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7fe76280ec60"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7fe76280ede8"/>
        <function-ref name="localAddr" scoped="" ref="0x7fe76280c020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7fe76280c2a8"/>
        <function-ref name="localPan" scoped="" ref="0x7fe76280c430"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7fe76280c5b8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7fe76280c740"/>
        <function-ref name="setFramePending" scoped="" ref="0x7fe76280c8c8"/>
        <function-ref name="setDestPan" scoped="" ref="0x7fe76280ca50"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe76280cbd8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7fe76280cd60"/>
        <function-ref name="getFCF" scoped="" ref="0x7fe7627f3020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7fe7627f31a8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7fe7627f3330"/>
        <function-ref name="getFramePending" scoped="" ref="0x7fe7627f34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x7fe7628233b8" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7fe7628233b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7fe762823708"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7fe762823890"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7fe762823a18"/>
        <function-ref name="getSender" scoped="" ref="0x7fe762823ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x7fe76281c6c8" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7fe76281c6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7fe76281ca18"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7fe76281cba0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7fe76281cd28"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7fe762822020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7fe76278e910" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7fe76278e910"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe76278ec80"/>
        <function-ref name="wait" scoped="" ref="0x7fe76278ee08"/>
        <function-ref name="cancel" scoped="" ref="0x7fe76275d020"/>
        <function-ref name="isFree" scoped="" ref="0x7fe76275d1a8"/>
        <function-ref name="getNow" scoped="" ref="0x7fe76275d330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fe76275d958" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fe76275d958"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fe762d2d6f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fe762d2d6f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TRadio" ref="0x7fe762baa140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7fe762baa540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe76274e020"/>
        <function-ref name="fired" scoped="" ref="0x7fe76274f0c0"/>
        <function-ref name="startAt" scoped="" ref="0x7fe76274f9d0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe76274f548"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe76274e4a8"/>
        <function-ref name="start" scoped="" ref="0x7fe762750730"/>
        <function-ref name="stop" scoped="" ref="0x7fe762750c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7fe760df2458" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7fe760df2458"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe760df27c8"/>
        <function-ref name="wait" scoped="" ref="0x7fe760df2950"/>
        <function-ref name="cancel" scoped="" ref="0x7fe760df2ad8"/>
        <function-ref name="isFree" scoped="" ref="0x7fe760df2c60"/>
        <function-ref name="getNow" scoped="" ref="0x7fe760df2de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fe760df12f0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fe760df12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TRadio" ref="0x7fe762baa140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7fe762baa540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe760def928"/>
        <function-ref name="fired" scoped="" ref="0x7fe760df09e8"/>
        <function-ref name="startAt" scoped="" ref="0x7fe760def320"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe760df0e70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe760defdb0"/>
        <function-ref name="start" scoped="" ref="0x7fe760df0088"/>
        <function-ref name="stop" scoped="" ref="0x7fe760df0560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7fe760ded1c0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7fe760ded1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7fe760ded510"/>
        <function-ref name="suspend" scoped="" ref="0x7fe760ded698"/>
        <function-ref name="resume" scoped="" ref="0x7fe760ded820"/>
        <function-ref name="run" scoped="" ref="0x7fe760ded9a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x7fe76275c220" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7fe76275c220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7fe76275c570"/>
        <function-ref name="suspend" scoped="" ref="0x7fe76275c6f8"/>
        <function-ref name="resume" scoped="" ref="0x7fe76275c880"/>
        <function-ref name="run" scoped="" ref="0x7fe76275ca08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fe7626a02a8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fe7626a02a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe7626a05f8"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7626a0780"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe7626a0908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fe7626a0b90" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fe7626a0b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe76269f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fe7626a2020" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7fe7626a2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fe7626a2390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe7626a5578" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fe7626a5578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7626a58c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe7626a5a50"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe7626a5bd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7626a5d60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe7626a4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fe7626a4388" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fe7626a4388"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe7626a46f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe7626a4880"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7626a4a08"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7626a4b90"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe7626a4d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fe7626a37e0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fe7626a37e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe7626a3b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fe7626a14d0" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fe7626a14d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7626a1820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe7626a19a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7626a1b30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe7626a1cb8"/>
        <function-ref name="headerLength" scoped="" ref="0x7fe7626a1e40"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fe7626a0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fe76269f2a8" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fe76269f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe76269f5f8"/>
        <function-ref name="checkFrame" scoped="" ref="0x7fe76269f780"/>
        <function-ref name="source" scoped="" ref="0x7fe76269f908"/>
        <function-ref name="destination" scoped="" ref="0x7fe76269fa90"/>
        <function-ref name="setSource" scoped="" ref="0x7fe76269fc18"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe76269fda0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe76269d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe7626a30c8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fe7626a30c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe7626a3438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7fe7626a2738" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7fe7626a2738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe7626a2aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fe7626a7020" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fe7626a7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe7626a7370"/>
        <function-ref name="source" scoped="" ref="0x7fe7626a74f8"/>
        <function-ref name="address" scoped="" ref="0x7fe7626a7680"/>
        <function-ref name="destination" scoped="" ref="0x7fe7626a7808"/>
        <function-ref name="setSource" scoped="" ref="0x7fe7626a7990"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe7626a7b18"/>
        <function-ref name="type" scoped="" ref="0x7fe7626a7ca0"/>
        <function-ref name="setType" scoped="" ref="0x7fe7626a7e28"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe7626a5020"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe7626a51a8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe7626a5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7fe7626a2e50" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7fe7626a2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe7626a11e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fe760dcf5b8" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fe760dcf5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe760dcf908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fe760dd0ba0" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fe760dd0ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe760dcf020"/>
        <function-ref name="cancel" scoped="" ref="0x7fe760dcf1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe760dcf330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fe760dd2898" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7fe760dd2898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fe760dd2c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe760dd4060" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fe760dd4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe760dd43b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe760dd4538"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe760dd46c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe760dd4848"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe760dd49d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fe760dd4d38" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fe760dd4d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe760dd30d8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe760dd3260"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe760dd33e8"/>
        <function-ref name="cancel" scoped="" ref="0x7fe760dd3570"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe760dd36f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fe760dd21c0" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fe760dd21c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe760dd2530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fe760dd9bb0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fe760dd9bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe760dd7020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe760dd71a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe760dd7330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe760dd74b8"/>
        <function-ref name="headerLength" scoped="" ref="0x7fe760dd7640"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fe760dd77c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fe760dcfb90" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fe760dcfb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe760dce020"/>
        <function-ref name="checkFrame" scoped="" ref="0x7fe760dce1a8"/>
        <function-ref name="source" scoped="" ref="0x7fe760dce330"/>
        <function-ref name="destination" scoped="" ref="0x7fe760dce4b8"/>
        <function-ref name="setSource" scoped="" ref="0x7fe760dce640"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe760dce7c8"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe760dce950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fe760dceb98" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fe760dceb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fe760dcc020"/>
        <function-ref name="changed" scoped="" ref="0x7fe760dcc1a8"/>
        <function-ref name="amGroup" scoped="" ref="0x7fe760dcc330"/>
        <function-ref name="setAddress" scoped="" ref="0x7fe760dcc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fe760dd1d90" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fe760dd1d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe760dd0170"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe760dd02f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe760dd0480"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe760dd0608"/>
        <function-ref name="headerLength" scoped="" ref="0x7fe760dd0790"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fe760dd0918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe760dd3a60" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fe760dd3a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe760dd3dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7fe760dd1020" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7fe760dd1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe760dd1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fe760dd7a10" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fe760dd7a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe760dd7d60"/>
        <function-ref name="source" scoped="" ref="0x7fe760dd5020"/>
        <function-ref name="address" scoped="" ref="0x7fe760dd51a8"/>
        <function-ref name="destination" scoped="" ref="0x7fe760dd5330"/>
        <function-ref name="setSource" scoped="" ref="0x7fe760dd54b8"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe760dd5640"/>
        <function-ref name="type" scoped="" ref="0x7fe760dd57c8"/>
        <function-ref name="setType" scoped="" ref="0x7fe760dd5950"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe760dd5ad8"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe760dd5c60"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe760dd5de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7fe760dd1738" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7fe760dd1738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe760dd1aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7fe7626bc560" loc="54:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fe7626bc560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fe7626bc8b0"/>
        <function-ref name="changed" scoped="" ref="0x7fe7626bca38"/>
        <function-ref name="amGroup" scoped="" ref="0x7fe7626bcbc0"/>
        <function-ref name="setAddress" scoped="" ref="0x7fe7626bcd48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fe762697a48" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fe762697a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe762697d98"/>
        <function-ref name="cancel" scoped="" ref="0x7fe762689020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe7626891a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fe7626893f0" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fe7626893f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe762689740"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe7626898c8"/>
        <function-ref name="request" scoped="" ref="0x7fe762689a50"/>
        <function-ref name="granted" scoped="" ref="0x7fe762689bd8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe762689d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fe762697100" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7fe762697100"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe762697450"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7626975d8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe762697760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fe762626020" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fe762626020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fe762626390"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe762626518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fe762625020" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe762625020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fe762625390"/>
        <function-ref name="configure" scoped="" ref="0x7fe762625518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe762627200" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fe762627200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe762627570"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe7626276f8"/>
        <function-ref name="request" scoped="" ref="0x7fe762627880"/>
        <function-ref name="granted" scoped="" ref="0x7fe762627a08"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe762627b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fe762626760" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe762626760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe762626ab0"/>
        <function-ref name="userId" scoped="" ref="0x7fe762626c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe760d7a438" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe760d7a438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe760d7a788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fe760d7aa10" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7fe760d7aa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fe760d7ad60"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fe760d78020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fe760d781a8"/>
        <function-ref name="dequeue" scoped="" ref="0x7fe760d78330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fe760d76698" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fe760d76698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fe760d76a08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe760d76b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fe760d756c0" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe760d756c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fe760d75a30"/>
        <function-ref name="configure" scoped="" ref="0x7fe760d75bb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fe760d75e40" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fe760d75e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fe760d741c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fe760d74348"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fe760d744d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fe760d74658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe760d77918" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fe760d77918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe760d77c88"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe760d77e10"/>
        <function-ref name="request" scoped="" ref="0x7fe760d76020"/>
        <function-ref name="granted" scoped="" ref="0x7fe760d761a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe760d76330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fe760d76dd8" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe760d76dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe760d75170"/>
        <function-ref name="userId" scoped="" ref="0x7fe760d752f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fe760d74920" loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fe760d74920"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe760d74c70"/>
        <function-ref name="runTask" scoped="" ref="0x7fe760d74df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fe7625efba0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fe7625efba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe7625ee020"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7625ee1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe7625ee330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fe7625ee5b8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fe7625ee5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe7625ee908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fe7625f4840" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7fe7625f4840"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fe7625f4b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe762622980" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fe762622980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe762622cd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe762622e58"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe7625f5020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7625f51a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe7625f5330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7fe7625f0d98" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fe7625f0d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7625ef170"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe7625ef2f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7625ef480"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe7625ef608"/>
        <function-ref name="headerLength" scoped="" ref="0x7fe7625ef790"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fe7625ef918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7fe7625f4e38" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fe7625f4e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7fe7625f21c0"/>
        <function-ref name="getDSN" scoped="" ref="0x7fe7625f2348"/>
        <function-ref name="setFCF" scoped="" ref="0x7fe7625f24d0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7fe7625f2658"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7fe7625f27e0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7fe7625f2968"/>
        <function-ref name="setDSN" scoped="" ref="0x7fe7625f2af0"/>
        <function-ref name="createAckReply" scoped="" ref="0x7fe7625f2c78"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7fe7625f2e00"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7fe7625f1020"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7fe7625f11a8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7fe7625f1330"/>
        <function-ref name="localAddr" scoped="" ref="0x7fe7625f14b8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7fe7625f1740"/>
        <function-ref name="localPan" scoped="" ref="0x7fe7625f18c8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7fe7625f1a50"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7fe7625f1bd8"/>
        <function-ref name="setFramePending" scoped="" ref="0x7fe7625f1d60"/>
        <function-ref name="setDestPan" scoped="" ref="0x7fe7625f0020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe7625f01a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7fe7625f0330"/>
        <function-ref name="getFCF" scoped="" ref="0x7fe7625f04b8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7fe7625f0640"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7fe7625f07c8"/>
        <function-ref name="getFramePending" scoped="" ref="0x7fe7625f0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7fe7625f5578" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7fe7625f5578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe7625f58c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe7625f5a50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7625f5bd8"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7625f5d60"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe7625f4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7fe7625f42a8" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7fe7625f42a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe7625f45f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fe7625b4490" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fe7625b4490"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe7625b47e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7625b4968"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe7625b4af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fe7625b4d78" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fe7625b4d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe7625b30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7fe7625b7880" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7fe7625b7880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7625b7bd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe7625b7d58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7625b6020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe7625b61a8"/>
        <function-ref name="headerLength" scoped="" ref="0x7fe7625b6330"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fe7625b64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x7fe7625b5060" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x7fe7625b5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe7625b53b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fe7625b3378" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fe7625b3378"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7625b36c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe7625b3850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7625b39d8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe7625b3b60"/>
        <function-ref name="headerLength" scoped="" ref="0x7fe7625b3ce8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fe7625b3e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x7fe7625b6740" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x7fe7625b6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe7625b6a90"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7625b6c18"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe7625b6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7fe7625e8838" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7fe7625e8838"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe7625e8b88"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7625e8d10"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe7625b7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7fe7625b72a8" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7fe7625b72a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe7625b75f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x7fe7625b5638" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x7fe7625b5638"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7625b5988"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe7625b5b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7625b5c98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe7625b5e20"/>
        <function-ref name="headerLength" scoped="" ref="0x7fe7625b4020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fe7625b41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7fe762522468" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7fe762522468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7fe7625227b8"/>
        <function-ref name="address" scoped="" ref="0x7fe762522940"/>
        <function-ref name="destination" scoped="" ref="0x7fe762522ac8"/>
        <function-ref name="setSource" scoped="" ref="0x7fe762522c50"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe762522dd8"/>
        <function-ref name="pan" scoped="" ref="0x7fe762521020"/>
        <function-ref name="setPan" scoped="" ref="0x7fe7625211a8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe762521330"/>
        <function-ref name="localPan" scoped="" ref="0x7fe7625214b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fe762521700" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fe762521700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe762521a50"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe762521bd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe762521d60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe762520020"/>
        <function-ref name="headerLength" scoped="" ref="0x7fe7625201a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fe762520330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7fe762525438" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fe762525438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7fe762525788"/>
        <function-ref name="getDSN" scoped="" ref="0x7fe762525910"/>
        <function-ref name="setFCF" scoped="" ref="0x7fe762525a98"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7fe762525c20"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7fe762525da8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7fe762524020"/>
        <function-ref name="setDSN" scoped="" ref="0x7fe7625241a8"/>
        <function-ref name="createAckReply" scoped="" ref="0x7fe762524330"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7fe7625244b8"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7fe762524640"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7fe7625247c8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7fe762524950"/>
        <function-ref name="localAddr" scoped="" ref="0x7fe762524ad8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7fe762524d60"/>
        <function-ref name="localPan" scoped="" ref="0x7fe762523020"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7fe7625231a8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7fe762523330"/>
        <function-ref name="setFramePending" scoped="" ref="0x7fe7625234b8"/>
        <function-ref name="setDestPan" scoped="" ref="0x7fe762523640"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe7625237c8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7fe762523950"/>
        <function-ref name="getFCF" scoped="" ref="0x7fe762523ad8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7fe762523c60"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7fe762523de8"/>
        <function-ref name="getFramePending" scoped="" ref="0x7fe762522020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fe762520618" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fe762520618"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe762520968"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe762520af0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe762520c78"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe762520e00"/>
        <function-ref name="headerLength" scoped="" ref="0x7fe76251f020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fe76251f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7fe760d0ed98" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7fe760d0ed98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7fe760d0d170"/>
        <function-ref name="address" scoped="" ref="0x7fe760d0d2f8"/>
        <function-ref name="destination" scoped="" ref="0x7fe760d0d480"/>
        <function-ref name="setSource" scoped="" ref="0x7fe760d0d608"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe760d0d790"/>
        <function-ref name="pan" scoped="" ref="0x7fe760d0d918"/>
        <function-ref name="setPan" scoped="" ref="0x7fe760d0daa0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe760d0dc28"/>
        <function-ref name="localPan" scoped="" ref="0x7fe760d0ddb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fe760d0c020" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fe760d0c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe760d0c370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe760d0c4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe760d0c680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe760d0c808"/>
        <function-ref name="headerLength" scoped="" ref="0x7fe760d0c990"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fe760d0cb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7fe760d14d50" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fe760d14d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7fe760d100d8"/>
        <function-ref name="getDSN" scoped="" ref="0x7fe760d10260"/>
        <function-ref name="setFCF" scoped="" ref="0x7fe760d103e8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7fe760d10570"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7fe760d106f8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7fe760d10880"/>
        <function-ref name="setDSN" scoped="" ref="0x7fe760d10a08"/>
        <function-ref name="createAckReply" scoped="" ref="0x7fe760d10b90"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7fe760d10d18"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7fe760d0f020"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7fe760d0f1a8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7fe760d0f330"/>
        <function-ref name="localAddr" scoped="" ref="0x7fe760d0f4b8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7fe760d0f740"/>
        <function-ref name="localPan" scoped="" ref="0x7fe760d0f8c8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7fe760d0fa50"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7fe760d0fbd8"/>
        <function-ref name="setFramePending" scoped="" ref="0x7fe760d0fd60"/>
        <function-ref name="setDestPan" scoped="" ref="0x7fe760d0e020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe760d0e1a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7fe760d0e330"/>
        <function-ref name="getFCF" scoped="" ref="0x7fe760d0e4b8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7fe760d0e640"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7fe760d0e7c8"/>
        <function-ref name="getFramePending" scoped="" ref="0x7fe760d0e950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fe760d0cdc0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fe760d0cdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fe760d0b170"/>
        <function-ref name="changed" scoped="" ref="0x7fe760d0b2f8"/>
        <function-ref name="amGroup" scoped="" ref="0x7fe760d0b480"/>
        <function-ref name="setAddress" scoped="" ref="0x7fe760d0b608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fe760d0b890" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fe760d0b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe760d0bbe0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe760d0bd68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe760d0a020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe760d0a1a8"/>
        <function-ref name="headerLength" scoped="" ref="0x7fe760d0a330"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fe760d0a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fe7624b8db8" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fe7624b8db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe7624b7170"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7624b72f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe7624b7480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fe7624b7708" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fe7624b7708"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe7624b7a58"/>
        <function-ref name="header" scoped="" ref="0x7fe7624b7be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe7624bad18" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fe7624bad18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe7624b80a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7624b8228"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe7624b83b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fe7624b7e68" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fe7624b7e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7fe7624b61e8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7fe7624b6370"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7fe7624b64f8"/>
        <function-ref name="getSender" scoped="" ref="0x7fe7624b6680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7fe7624b85f8" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fe7624b85f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe7624b8948"/>
        <function-ref name="header" scoped="" ref="0x7fe7624b8ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fe760cbe458" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fe760cbe458"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe760cbe7a8"/>
        <function-ref name="cancel" scoped="" ref="0x7fe760cbe930"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe760cbeab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fe760cbed40" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fe760cbed40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe760cbc0d8"/>
        <function-ref name="header" scoped="" ref="0x7fe760cbc260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x7fe760cbbbd8" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7fe760cbbbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe760cba020"/>
        <function-ref name="clearAll" scoped="" ref="0x7fe760cba1a8"/>
        <function-ref name="get" scoped="" ref="0x7fe760cba330"/>
        <function-ref name="set" scoped="" ref="0x7fe760cba4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe760cc2da0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fe760cc2da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe760cbf170"/>
        <function-ref name="cancel" scoped="" ref="0x7fe760cbf2f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe760cbf480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x7fe760cbb020" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7fe760cbb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7fe760cbb370"/>
        <function-ref name="insertNode" scoped="" ref="0x7fe760cbb4f8"/>
        <function-ref name="getNode" scoped="" ref="0x7fe760cbb680"/>
        <function-ref name="evicted" scoped="" ref="0x7fe760cbb808"/>
        <function-ref name="getIndex" scoped="" ref="0x7fe760cbb990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7fe760cbf6c8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fe760cbf6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe760cbfa18"/>
        <function-ref name="header" scoped="" ref="0x7fe760cbfba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe760cbfde8" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe760cbfde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe760cbe170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x7fe760cbc4a8" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7fe760cbc4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7fe760cbc7f8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7fe760cbc980"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7fe760cbcb08"/>
        <function-ref name="getSender" scoped="" ref="0x7fe760cbcc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7fe7624ec7f0" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7fe7624ec7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7fe7624ecb40"/>
        <function-ref name="insertNode" scoped="" ref="0x7fe7624eccc8"/>
        <function-ref name="getNode" scoped="" ref="0x7fe7624ece50"/>
        <function-ref name="evicted" scoped="" ref="0x7fe7624e9020"/>
        <function-ref name="getIndex" scoped="" ref="0x7fe7624e91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7fe7624e54a0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7fe7624e54a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7624e57f0"/>
        <function-ref name="clearAll" scoped="" ref="0x7fe7624e5978"/>
        <function-ref name="get" scoped="" ref="0x7fe7624e5b00"/>
        <function-ref name="set" scoped="" ref="0x7fe7624e5c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7fe7624e62e8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7fe7624e62e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7fe7624e6638"/>
        <function-ref name="insertNode" scoped="" ref="0x7fe7624e67c0"/>
        <function-ref name="getNode" scoped="" ref="0x7fe7624e6948"/>
        <function-ref name="evicted" scoped="" ref="0x7fe7624e6ad0"/>
        <function-ref name="getIndex" scoped="" ref="0x7fe7624e6c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe7624e9c78" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe7624e9c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7624e6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7fe760cb8140" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7fe760cb8140"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe760cb8490"/>
        <function-ref name="clearAll" scoped="" ref="0x7fe760cb8618"/>
        <function-ref name="get" scoped="" ref="0x7fe760cb87a0"/>
        <function-ref name="set" scoped="" ref="0x7fe760cb8928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fe7624a6618" loc="85:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fe7624a6618"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe7624a6968"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7624a6af0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe7624a6c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fe7624a5020" loc="86:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fe7624a5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe7624a5370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x7fe7624a3988" loc="93:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x7fe7624a3988"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fe7624a3cd8"/>
        <function-ref name="noAck" scoped="" ref="0x7fe7624a3e60"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fe7624a2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe7624b3ac0" loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fe7624b3ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe7624b3e10"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7624a9020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe7624a91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fe7624a7700" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fe7624a7700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7624a7a50"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe7624a7bd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7624a7d60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe7624a6020"/>
        <function-ref name="headerLength" scoped="" ref="0x7fe7624a61a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fe7624a6330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fe7624a55f8" loc="87:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fe7624a55f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7624a5948"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe7624a5ad0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7624a5c58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe7624a5de0"/>
        <function-ref name="headerLength" scoped="" ref="0x7fe7624a4020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fe7624a41a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x7fe7624a4d18" loc="92:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x7fe7624a4d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fe7624a30a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fe7624a3228"/>
        <function-ref name="getRetries" scoped="" ref="0x7fe7624a33b0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fe7624a3538"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fe7624a36c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe7624a9430" loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fe7624a9430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe7624a9780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7fe7624a43f0" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe7624a43f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fe7624a4740"/>
        <function-ref name="noAck" scoped="" ref="0x7fe7624a48c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fe7624a4a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fe7624a99c8" loc="79:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7fe7624a99c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fe7624a9d18"/>
        <function-ref name="setRetries" scoped="" ref="0x7fe7624a7020"/>
        <function-ref name="getRetries" scoped="" ref="0x7fe7624a71a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fe7624a7330"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fe7624a74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fe76248a1c8" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fe76248a1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe76248a518"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe76248a6a0"/>
        <function-ref name="start" scoped="" ref="0x7fe76248a828"/>
        <function-ref name="stop" scoped="" ref="0x7fe76248a9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fe7624860c0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fe7624860c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe762486410"/>
        <function-ref name="cancel" scoped="" ref="0x7fe762486598"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe762486720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fe7624869a8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fe7624869a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe762486cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe76248ac38" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fe76248ac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe762489020"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7624891a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe762489330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fe762489b50" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fe762489b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe762488020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe7624881a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe762488330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe7624884b8"/>
        <function-ref name="headerLength" scoped="" ref="0x7fe762488640"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fe7624887c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fe762488a10" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fe762488a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fe762488d60"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fe762487020"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fe7624871a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fe762487330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fe762487618" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7fe762487618"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe762487968"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe762487af0"/>
        <function-ref name="start" scoped="" ref="0x7fe762487c78"/>
        <function-ref name="stop" scoped="" ref="0x7fe762487e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe7624895b8" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fe7624895b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe762489908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fe762484020" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fe762484020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe762484370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe7624844f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe762484680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe762484808"/>
        <function-ref name="headerLength" scoped="" ref="0x7fe762484990"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fe762484b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fe760c95458" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fe760c95458"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fe760c957a8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fe760c95930"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fe760c95ab8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fe760c95c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fe76241a708" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fe76241a708"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe76241aa58"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe76241abe0"/>
        <function-ref name="start" scoped="" ref="0x7fe76241ad68"/>
        <function-ref name="stop" scoped="" ref="0x7fe762419020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7fe762417b70" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7fe762417b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7fe762416020"/>
        <function-ref name="turnOn" scoped="" ref="0x7fe7624161a8"/>
        <function-ref name="setChannel" scoped="" ref="0x7fe762416330"/>
        <function-ref name="done" scoped="" ref="0x7fe7624164b8"/>
        <function-ref name="standby" scoped="" ref="0x7fe762416640"/>
        <function-ref name="getChannel" scoped="" ref="0x7fe7624167c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe7624192a8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fe7624192a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe7624195f8"/>
        <function-ref name="cancel" scoped="" ref="0x7fe762419780"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe762419908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7fe7624153f0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fe7624153f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe762415740"/>
        <function-ref name="header" scoped="" ref="0x7fe7624158c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe762419b90" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fe762419b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe762417020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7fe762416a10" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7fe762416a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe762416d60"/>
        <function-ref name="ready" scoped="" ref="0x7fe762415020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe7624151a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7fe762417268" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7fe762417268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7fe7624175b8"/>
        <function-ref name="setChannel" scoped="" ref="0x7fe762417740"/>
        <function-ref name="getChannel" scoped="" ref="0x7fe7624178c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fe760c8e870" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fe760c8e870"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe760c8ebc0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe760c8ed48"/>
        <function-ref name="start" scoped="" ref="0x7fe760c8c020"/>
        <function-ref name="stop" scoped="" ref="0x7fe760c8c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7fe760c8c430" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7fe760c8c430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe760c8c780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7fe760c8a450" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7fe760c8a450"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7fe760c8a7a0"/>
        <function-ref name="turnOn" scoped="" ref="0x7fe760c8a928"/>
        <function-ref name="setChannel" scoped="" ref="0x7fe760c8aab0"/>
        <function-ref name="done" scoped="" ref="0x7fe760c8ac38"/>
        <function-ref name="standby" scoped="" ref="0x7fe760c8adc0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fe760c89020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe760c8ca08" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fe760c8ca08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe760c8cd58"/>
        <function-ref name="cancel" scoped="" ref="0x7fe760c8b020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe760c8b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7fe760c874f0" loc="189:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x7fe760c874f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe760c87840"/>
        <function-ref name="runTask" scoped="" ref="0x7fe760c879c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7fe760c88578" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fe760c88578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe760c888c8"/>
        <function-ref name="header" scoped="" ref="0x7fe760c88a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x7fe760c87c90" loc="144:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x7fe760c87c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe760c85020"/>
        <function-ref name="runTask" scoped="" ref="0x7fe760c851a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe760c8b430" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fe760c8b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe760c8b780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x7fe760c88d18" loc="322:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x7fe760c88d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe760c870a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fe760c87228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7fe760c89c98" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7fe760c89c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe760c88020"/>
        <function-ref name="ready" scoped="" ref="0x7fe760c881a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe760c88330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7fe760c8b9c8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7fe760c8b9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7fe760c8bd18"/>
        <function-ref name="setChannel" scoped="" ref="0x7fe760c8a020"/>
        <function-ref name="getChannel" scoped="" ref="0x7fe760c8a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7fe760c89268" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7fe760c89268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7fe760c895b8"/>
        <function-ref name="suspend" scoped="" ref="0x7fe760c89740"/>
        <function-ref name="resume" scoped="" ref="0x7fe760c898c8"/>
        <function-ref name="run" scoped="" ref="0x7fe760c89a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fe7623c40c0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fe7623c40c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe7623c4410"/>
        <function-ref name="ready" scoped="" ref="0x7fe7623c4598"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe7623c4720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fe7623c49a8" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fe7623c49a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe7623c4cf8"/>
        <function-ref name="header" scoped="" ref="0x7fe7623c4e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7fe7623c30f0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7fe7623c30f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe7623c3440"/>
        <function-ref name="wait" scoped="" ref="0x7fe7623c35c8"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7623c3750"/>
        <function-ref name="isFree" scoped="" ref="0x7fe7623c38d8"/>
        <function-ref name="getNow" scoped="" ref="0x7fe7623c3a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fe7623c3ce8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fe7623c3ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7fe7623c10a0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7fe7623c1228"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7fe7623c13b0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7fe7623c1538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7fe7623c58c8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fe7623c58c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe7623c5c18"/>
        <function-ref name="header" scoped="" ref="0x7fe7623c5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7fe7623c5020" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7fe7623c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe7623c5370"/>
        <function-ref name="ready" scoped="" ref="0x7fe7623c54f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe7623c5680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fe760c4fd38" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fe760c4fd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe760c4e0d8"/>
        <function-ref name="ready" scoped="" ref="0x7fe760c4e260"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe760c4e3e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fe760c4e670" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fe760c4e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe760c4e9c0"/>
        <function-ref name="header" scoped="" ref="0x7fe760c4eb48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7fe760c4ed90" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7fe760c4ed90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe760c4d170"/>
        <function-ref name="wait" scoped="" ref="0x7fe760c4d2f8"/>
        <function-ref name="cancel" scoped="" ref="0x7fe760c4d480"/>
        <function-ref name="isFree" scoped="" ref="0x7fe760c4d608"/>
        <function-ref name="getNow" scoped="" ref="0x7fe760c4d790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fe760c4d9d8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7fe760c4d9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fe760c4dd28"/>
        <function-ref name="rand32" scoped="" ref="0x7fe760c4c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fe760c4c2a8" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fe760c4c2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7fe760c4c5f8"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7fe760c4c780"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7fe760c4c908"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7fe760c4ca90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7fe760c4f578" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fe760c4f578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe760c4f8c8"/>
        <function-ref name="header" scoped="" ref="0x7fe760c4fa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7fe760c51b58" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7fe760c51b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe760c4f020"/>
        <function-ref name="ready" scoped="" ref="0x7fe760c4f1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe760c4f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x7fe760c4cd58" loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x7fe760c4cd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe760c4b0d8"/>
        <function-ref name="runTask" scoped="" ref="0x7fe760c4b260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fe7623d9690" loc="46:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7fe7623d9690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fe7623d99e0"/>
        <function-ref name="rand32" scoped="" ref="0x7fe7623d9b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fe7623d7668" loc="45:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7fe7623d7668"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7623d91e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe7623dd930" loc="44:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe7623dd930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7623ddc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fe7623d24c8" loc="48:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7fe7623d24c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fe7623d2818"/>
        <function-ref name="rand32" scoped="" ref="0x7fe7623d29a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fe7623d43b0" loc="47:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7fe7623d43b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7623d2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe7623d8b30" loc="46:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe7623d8b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7623d8e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fe762393d38" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fe762393d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe7623920d8"/>
        <function-ref name="ready" scoped="" ref="0x7fe762392260"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe7623923e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fe762392670" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fe762392670"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe7623929c0"/>
        <function-ref name="header" scoped="" ref="0x7fe762392b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7fe762392d90" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7fe762392d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe762391170"/>
        <function-ref name="wait" scoped="" ref="0x7fe7623912f8"/>
        <function-ref name="cancel" scoped="" ref="0x7fe762391480"/>
        <function-ref name="isFree" scoped="" ref="0x7fe762391608"/>
        <function-ref name="getNow" scoped="" ref="0x7fe762391790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x7fe762390bd8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x7fe762390bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe76238f020"/>
        <function-ref name="get" scoped="" ref="0x7fe76238f1a8"/>
        <function-ref name="setValue" scoped="" ref="0x7fe76238f330"/>
        <function-ref name="set" scoped="" ref="0x7fe76238f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fe762391a18" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fe762391a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7fe762391d68"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7fe762390020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7fe7623901a8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7fe762390330"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7fe7623904b8"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7fe762390640"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7fe7623907c8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7fe762390950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7fe7623bcb50" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fe7623bcb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe762393020"/>
        <function-ref name="header" scoped="" ref="0x7fe7623931a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7fe7623bc2a8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7fe7623bc2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe7623bc5f8"/>
        <function-ref name="ready" scoped="" ref="0x7fe7623bc780"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe7623bc908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fe7623933f0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe7623933f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fe762393740"/>
        <function-ref name="noAck" scoped="" ref="0x7fe7623938c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fe762393a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fe762378978" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fe762378978"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe762378cc8"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe762378e50"/>
        <function-ref name="start" scoped="" ref="0x7fe762376020"/>
        <function-ref name="stop" scoped="" ref="0x7fe7623761a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7fe762373020" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7fe762373020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7fe762373370"/>
        <function-ref name="request" scoped="" ref="0x7fe7623734f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fe76236e5b8" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fe76236e5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe76236e908"/>
        <function-ref name="ready" scoped="" ref="0x7fe76236ea90"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe76236ec18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fe76236d020" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fe76236d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe76236d370"/>
        <function-ref name="header" scoped="" ref="0x7fe76236d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7fe762375268" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7fe762375268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7fe7623755b8"/>
        <function-ref name="turnOn" scoped="" ref="0x7fe762375740"/>
        <function-ref name="setChannel" scoped="" ref="0x7fe7623758c8"/>
        <function-ref name="done" scoped="" ref="0x7fe762375a50"/>
        <function-ref name="standby" scoped="" ref="0x7fe762375bd8"/>
        <function-ref name="getChannel" scoped="" ref="0x7fe762375d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fe762373740" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fe762373740"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe762373a90"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe762373c18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe762373da0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe762372020"/>
        <function-ref name="headerLength" scoped="" ref="0x7fe7623721a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fe762372330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7fe762370638" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7fe762370638"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7fe762370a88"/>
        <function-ref name="turnOn" scoped="" ref="0x7fe762370c10"/>
        <function-ref name="setChannel" scoped="" ref="0x7fe762370d98"/>
        <function-ref name="done" scoped="" ref="0x7fe76236e020"/>
        <function-ref name="standby" scoped="" ref="0x7fe76236e1a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7fe76236e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7fe7623725b8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7fe7623725b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7fe762372908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7fe7623748c8" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fe7623748c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe762374c18"/>
        <function-ref name="header" scoped="" ref="0x7fe762374da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7fe762370060" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7fe762370060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe7623703b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fe762372bf0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7fe762372bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe762371020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe7623711a8"/>
        <function-ref name="start" scoped="" ref="0x7fe762371330"/>
        <function-ref name="stop" scoped="" ref="0x7fe7623714b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fe76236c020" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fe76236c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe76236c370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe76236c4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe76236c680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe76236c808"/>
        <function-ref name="headerLength" scoped="" ref="0x7fe76236c990"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fe76236cb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fe762376c98" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7fe762376c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe762375020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fe76236cda0" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fe76236cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7fe76236b170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7fe762371740" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7fe762371740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe762371a90"/>
        <function-ref name="cancel" scoped="" ref="0x7fe762371c18"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe762371da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7fe762374020" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7fe762374020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe762374370"/>
        <function-ref name="ready" scoped="" ref="0x7fe7623744f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe762374680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7fe76236d780" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7fe76236d780"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7fe76236dad0"/>
        <function-ref name="request" scoped="" ref="0x7fe76236dc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fe7623763f0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7fe7623763f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe762376740"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7623768c8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe762376a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7fe76215d8c8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7fe76215d8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe76215dc18"/>
        <function-ref name="get" scoped="" ref="0x7fe76215dda0"/>
        <function-ref name="setValue" scoped="" ref="0x7fe76215c020"/>
        <function-ref name="set" scoped="" ref="0x7fe76215c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fe7621619f8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fe7621619f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe762161d48"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe76215f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe76215f1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe76215f330"/>
        <function-ref name="headerLength" scoped="" ref="0x7fe76215f4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fe76215f640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fe76215e9f0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fe76215e9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe76215ed40"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe76215d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe76215d1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe76215d330"/>
        <function-ref name="headerLength" scoped="" ref="0x7fe76215d4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fe76215d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7fe762163020" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fe762163020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TRadio" ref="0x7fe762baa140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fe762162478"/>
        <function-ref name="clear" scoped="" ref="0x7fe762162b58"/>
        <function-ref name="isValid" scoped="" ref="0x7fe762163d70"/>
        <function-ref name="set" scoped="" ref="0x7fe762161278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7fe76215fa30" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fe76215fa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TRadio" ref="0x7fe762baa140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe76215e5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fe762167270" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fe762167270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca3020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe762ca3378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fe762166700"/>
        <function-ref name="clear" scoped="" ref="0x7fe762166de0"/>
        <function-ref name="isValid" scoped="" ref="0x7fe762166020"/>
        <function-ref name="set" scoped="" ref="0x7fe7621644f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7fe760bfde00" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7fe760bfde00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe760bfc1a8"/>
        <function-ref name="get" scoped="" ref="0x7fe760bfc330"/>
        <function-ref name="setValue" scoped="" ref="0x7fe760bfc4b8"/>
        <function-ref name="set" scoped="" ref="0x7fe760bfc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fe760bfd020" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fe760bfd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe760bfd370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe760bfd4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe760bfd680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe760bfd808"/>
        <function-ref name="headerLength" scoped="" ref="0x7fe760bfd990"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fe760bfdb18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fe760bfaaa8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fe760bfaaa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe760bfadf8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe760bf8020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe760bf81a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe760bf8330"/>
        <function-ref name="headerLength" scoped="" ref="0x7fe760bf84b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fe760bf8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7fe760c01558" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fe760c01558"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TRadio" ref="0x7fe762baa140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fe760c00a88"/>
        <function-ref name="clear" scoped="" ref="0x7fe760bfe190"/>
        <function-ref name="isValid" scoped="" ref="0x7fe760c003a8"/>
        <function-ref name="set" scoped="" ref="0x7fe760bfe870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7fe760bfc9d0" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fe760bfc9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TRadio" ref="0x7fe762baa140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe760bfb598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7fe760bfbab8" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fe760bfbab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca3020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe762ca3378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe760bfa690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fe760c05888" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fe760c05888"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca3020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe762ca3378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fe760c04d40"/>
        <function-ref name="clear" scoped="" ref="0x7fe760c02458"/>
        <function-ref name="isValid" scoped="" ref="0x7fe760c04660"/>
        <function-ref name="set" scoped="" ref="0x7fe760c02b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fe76231adc0" loc="20:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fe76231adc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca3020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe762ca3378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe762317968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fe7623124a0" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7fe7623124a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca3020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe762ca3378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe76230f6c8"/>
        <function-ref name="fired" scoped="" ref="0x7fe762311db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe762310ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe762310688"/>
        <function-ref name="getdt" scoped="" ref="0x7fe76230d020"/>
        <function-ref name="gett0" scoped="" ref="0x7fe76230fb18"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe762310238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe762311020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe76230f0f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe7623114c0"/>
        <function-ref name="stop" scoped="" ref="0x7fe762311960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fe76230d5e0" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fe76230d5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca3020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe762ca3378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe76230c190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe762315758" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe762315758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe762315aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7fe7622fe7b8" loc="29:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7fe7622fe7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca3020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe762ca3378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe762302578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe7622fd020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe762302a00"/>
        <function-ref name="overflow" scoped="" ref="0x7fe7622fd4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe76230ac18" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe76230ac18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe762307020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7fe762307648" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7fe762307648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca3020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe762ca3378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe762305cc0"/>
        <function-ref name="fired" scoped="" ref="0x7fe762306d50"/>
        <function-ref name="startAt" scoped="" ref="0x7fe7623056b8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe762305230"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe762303190"/>
        <function-ref name="start" scoped="" ref="0x7fe7623063f0"/>
        <function-ref name="stop" scoped="" ref="0x7fe7623068c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fe7622097c8" loc="61:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fe7622097c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca3020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe762ca3378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe762206020"/>
        <function-ref name="fired" scoped="" ref="0x7fe762207020"/>
        <function-ref name="startAt" scoped="" ref="0x7fe762207930"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe7622074a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe7622064a8"/>
        <function-ref name="start" scoped="" ref="0x7fe762208578"/>
        <function-ref name="stop" scoped="" ref="0x7fe762208a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe762209020" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe762209020"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7fe762d2d388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7fe762d2d388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe762209370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fe762206a90" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fe762206a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca3020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe762ca3378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe762204828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe762203190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe762204cb0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe762203618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7fe760bcee70" loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fe760bcee70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fe760bcc1e8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fe760bcc370"/>
        <function-ref name="getControlA" scoped="" ref="0x7fe760bcc4f8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fe760bcc680"/>
        <function-ref name="setControlB" scoped="" ref="0x7fe760bcc808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fe760bcc990"/>
        <function-ref name="getControlB" scoped="" ref="0x7fe760bccb18"/>
        <function-ref name="setControlA" scoped="" ref="0x7fe760bccca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fe760bd9b40" loc="61:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fe760bd9b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca3020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe762ca3378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe760bd5238"/>
        <function-ref name="fired" scoped="" ref="0x7fe760bd62b0"/>
        <function-ref name="startAt" scoped="" ref="0x7fe760bd6bc0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe760bd6738"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe760bd56c0"/>
        <function-ref name="start" scoped="" ref="0x7fe760bd88f8"/>
        <function-ref name="stop" scoped="" ref="0x7fe760bd8dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe760bd9398" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe760bd9398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe760bd96e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fe760bd5ca8" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fe760bd5ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca3020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe762ca3378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe760bd4a28"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe760bd34a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe760bd3020"/>
        <function-ref name="overflow" scoped="" ref="0x7fe760bd3930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7fe760bc8200" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7fe760bc8200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7fe760bc8550"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7fe760bc86d8"/>
        <function-ref name="controlABusy" scoped="" ref="0x7fe760bc8860"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7fe760bc89e8"/>
        <function-ref name="countBusy" scoped="" ref="0x7fe760bc8b70"/>
        <function-ref name="compareABusy" scoped="" ref="0x7fe760bc8cf8"/>
        <function-ref name="getAssr" scoped="" ref="0x7fe760bc8e80"/>
        <function-ref name="setAssr" scoped="" ref="0x7fe760bc6030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7fe760bcb060" loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fe760bcb060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fe760bc9930"/>
        <function-ref name="fired" scoped="" ref="0x7fe760bca598"/>
        <function-ref name="get" scoped="" ref="0x7fe760bcbbe0"/>
        <function-ref name="reset" scoped="" ref="0x7fe760bcaa20"/>
        <function-ref name="isOn" scoped="" ref="0x7fe760bc9db8"/>
        <function-ref name="set" scoped="" ref="0x7fe760bca0c0"/>
        <function-ref name="start" scoped="" ref="0x7fe760bc9020"/>
        <function-ref name="stop" scoped="" ref="0x7fe760bc94a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe760bd1020" loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fe760bd1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fe760bce0f8"/>
        <function-ref name="test" scoped="" ref="0x7fe760bcf7a8"/>
        <function-ref name="get" scoped="" ref="0x7fe760bd1ba0"/>
        <function-ref name="setScale" scoped="" ref="0x7fe760bce580"/>
        <function-ref name="getScale" scoped="" ref="0x7fe760bcea58"/>
        <function-ref name="reset" scoped="" ref="0x7fe760bd09e8"/>
        <function-ref name="overflow" scoped="" ref="0x7fe760bd0560"/>
        <function-ref name="isOn" scoped="" ref="0x7fe760bcfc30"/>
        <function-ref name="set" scoped="" ref="0x7fe760bd0088"/>
        <function-ref name="start" scoped="" ref="0x7fe760bd0e70"/>
        <function-ref name="stop" scoped="" ref="0x7fe760bcf320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fe7622783c0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fe7622783c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fe762278710"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fe762278898"/>
        <function-ref name="getControlA" scoped="" ref="0x7fe762278a20"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fe762278ba8"/>
        <function-ref name="setControlB" scoped="" ref="0x7fe762278d30"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fe762277020"/>
        <function-ref name="getControlB" scoped="" ref="0x7fe7622771a8"/>
        <function-ref name="setControlA" scoped="" ref="0x7fe762277330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7fe7622739e8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7fe7622739e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7fe762273d38"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7fe762272020"/>
        <function-ref name="controlABusy" scoped="" ref="0x7fe7622721a8"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7fe762272330"/>
        <function-ref name="countBusy" scoped="" ref="0x7fe7622724b8"/>
        <function-ref name="compareABusy" scoped="" ref="0x7fe762272640"/>
        <function-ref name="getAssr" scoped="" ref="0x7fe7622727c8"/>
        <function-ref name="setAssr" scoped="" ref="0x7fe762272950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fe7622777f8" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fe7622777f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fe762273020"/>
        <function-ref name="fired" scoped="" ref="0x7fe762275d08"/>
        <function-ref name="get" scoped="" ref="0x7fe7622753a8"/>
        <function-ref name="reset" scoped="" ref="0x7fe7622741f8"/>
        <function-ref name="isOn" scoped="" ref="0x7fe7622734a8"/>
        <function-ref name="set" scoped="" ref="0x7fe762275830"/>
        <function-ref name="start" scoped="" ref="0x7fe762274680"/>
        <function-ref name="stop" scoped="" ref="0x7fe762274b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe76227d288" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fe76227d288"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fe7622794a8"/>
        <function-ref name="test" scoped="" ref="0x7fe76227aa40"/>
        <function-ref name="get" scoped="" ref="0x7fe76227de08"/>
        <function-ref name="setScale" scoped="" ref="0x7fe762279930"/>
        <function-ref name="getScale" scoped="" ref="0x7fe762279e08"/>
        <function-ref name="reset" scoped="" ref="0x7fe76227cc70"/>
        <function-ref name="overflow" scoped="" ref="0x7fe76227c7e8"/>
        <function-ref name="isOn" scoped="" ref="0x7fe762279020"/>
        <function-ref name="set" scoped="" ref="0x7fe76227c310"/>
        <function-ref name="start" scoped="" ref="0x7fe76227a130"/>
        <function-ref name="stop" scoped="" ref="0x7fe76227a5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fe762268020" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fe762268020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fe762268370"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fe7622684f8"/>
        <function-ref name="getControlA" scoped="" ref="0x7fe762268680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fe762268808"/>
        <function-ref name="setControlB" scoped="" ref="0x7fe762268990"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fe762268b18"/>
        <function-ref name="getControlB" scoped="" ref="0x7fe762268ca0"/>
        <function-ref name="setControlA" scoped="" ref="0x7fe762268e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7fe762264578" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fe762264578"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fe7622648c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7fe762264c78" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7fe762264c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7fe762262020"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7fe7622621a8"/>
        <function-ref name="controlABusy" scoped="" ref="0x7fe762262330"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7fe7622624b8"/>
        <function-ref name="countBusy" scoped="" ref="0x7fe762262640"/>
        <function-ref name="compareABusy" scoped="" ref="0x7fe7622627c8"/>
        <function-ref name="getAssr" scoped="" ref="0x7fe762262950"/>
        <function-ref name="setAssr" scoped="" ref="0x7fe762262ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fe762267340" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fe762267340"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fe762265c20"/>
        <function-ref name="fired" scoped="" ref="0x7fe762266980"/>
        <function-ref name="get" scoped="" ref="0x7fe762266020"/>
        <function-ref name="reset" scoped="" ref="0x7fe762266e08"/>
        <function-ref name="isOn" scoped="" ref="0x7fe7622640f8"/>
        <function-ref name="set" scoped="" ref="0x7fe7622664a8"/>
        <function-ref name="start" scoped="" ref="0x7fe762265310"/>
        <function-ref name="stop" scoped="" ref="0x7fe762265798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe762271e00" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fe762271e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fe76226a0f8"/>
        <function-ref name="test" scoped="" ref="0x7fe76226b798"/>
        <function-ref name="get" scoped="" ref="0x7fe76226da18"/>
        <function-ref name="setScale" scoped="" ref="0x7fe76226a580"/>
        <function-ref name="getScale" scoped="" ref="0x7fe76226aa58"/>
        <function-ref name="reset" scoped="" ref="0x7fe76226c980"/>
        <function-ref name="overflow" scoped="" ref="0x7fe76226c4f8"/>
        <function-ref name="isOn" scoped="" ref="0x7fe76226bc20"/>
        <function-ref name="set" scoped="" ref="0x7fe76226c020"/>
        <function-ref name="start" scoped="" ref="0x7fe76226ce08"/>
        <function-ref name="stop" scoped="" ref="0x7fe76226b310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7fe7621d3cf0" loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7fe7621d3cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe7621d20a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fe7621d2228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fe7621d7c70" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fe7621d7c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca3020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe762ca3378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe7621d3410"/>
        <function-ref name="fired" scoped="" ref="0x7fe7621d54a8"/>
        <function-ref name="startAt" scoped="" ref="0x7fe7621d5db8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe7621d5930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe7621d3898"/>
        <function-ref name="start" scoped="" ref="0x7fe7621d69f0"/>
        <function-ref name="stop" scoped="" ref="0x7fe7621d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe7621dcab0" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fe7621dcab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca3020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe762ca3378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe7621d8d60"/>
        <function-ref name="fired" scoped="" ref="0x7fe7621da470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe7621d81c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe7621dad10"/>
        <function-ref name="getdt" scoped="" ref="0x7fe7621d7648"/>
        <function-ref name="gett0" scoped="" ref="0x7fe7621d71f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe7621da8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe7621db620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe7621d8790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe7621dbac0"/>
        <function-ref name="stop" scoped="" ref="0x7fe7621da020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7fe762185930" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7fe762185930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe762185c80"/>
        <function-ref name="runTask" scoped="" ref="0x7fe762185e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fe76218a858" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7fe76218a858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca3020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe762ca3378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe762186bc0"/>
        <function-ref name="fired" scoped="" ref="0x7fe7621881c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe762186020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe762188a60"/>
        <function-ref name="getdt" scoped="" ref="0x7fe7621854d8"/>
        <function-ref name="gett0" scoped="" ref="0x7fe762185088"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe762188610"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe7621893d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe7621865f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe762189878"/>
        <function-ref name="stop" scoped="" ref="0x7fe762189d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe7621905e0" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fe7621905e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca3020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe762ca3378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe76218c988"/>
        <function-ref name="fired" scoped="" ref="0x7fe76218e020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe76218ed70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe76218e900"/>
        <function-ref name="getdt" scoped="" ref="0x7fe76218a2d8"/>
        <function-ref name="gett0" scoped="" ref="0x7fe76218cdf8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe76218e490"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe76218f198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe76218c398"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe76218f658"/>
        <function-ref name="stop" scoped="" ref="0x7fe76218fb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fe762181128" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fe762181128"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca3020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe762ca3378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe762181ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fe762178330" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fe762178330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca3020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe762ca3378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe7621770c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe7621779d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe762177548"/>
        <function-ref name="overflow" scoped="" ref="0x7fe762177e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fe76216f1c8" loc="49:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7fe76216f1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca3020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe762ca3378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe76216b5f0"/>
        <function-ref name="fired" scoped="" ref="0x7fe76216eaf0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe76216d8c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe76216d470"/>
        <function-ref name="getdt" scoped="" ref="0x7fe76216a020"/>
        <function-ref name="gett0" scoped="" ref="0x7fe76216ba40"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe76216d020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe76216fd10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe76216b020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe76216e200"/>
        <function-ref name="stop" scoped="" ref="0x7fe76216e6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fe7621380e0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fe7621380e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe762138430"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe7621385b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe762138740"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe7621388c8"/>
        <function-ref name="headerLength" scoped="" ref="0x7fe762138a50"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fe762138bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fe762137020" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fe762137020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe762137370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe7621374f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe762137680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe762137808"/>
        <function-ref name="headerLength" scoped="" ref="0x7fe762137990"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fe762137b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x7fe762156660" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x7fe762156660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7621569d0"/>
        <function-ref name="get" scoped="" ref="0x7fe762156b58"/>
        <function-ref name="setValue" scoped="" ref="0x7fe762156ce0"/>
        <function-ref name="set" scoped="" ref="0x7fe762156e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fe762134b78" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fe762134b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe762133020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe7621331a8"/>
        <function-ref name="start" scoped="" ref="0x7fe762133330"/>
        <function-ref name="stop" scoped="" ref="0x7fe7621334b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7fe7621303f0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7fe7621303f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7fe762130740"/>
        <function-ref name="request" scoped="" ref="0x7fe7621308c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fe76212b8c8" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fe76212b8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe76212bc18"/>
        <function-ref name="ready" scoped="" ref="0x7fe76212bda0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe76212a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fe76212a2a8" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fe76212a2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe76212a5f8"/>
        <function-ref name="header" scoped="" ref="0x7fe76212a780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7fe7621325b8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7fe7621325b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7fe762132908"/>
        <function-ref name="turnOn" scoped="" ref="0x7fe762132a90"/>
        <function-ref name="setChannel" scoped="" ref="0x7fe762132c18"/>
        <function-ref name="done" scoped="" ref="0x7fe762132da0"/>
        <function-ref name="standby" scoped="" ref="0x7fe762131020"/>
        <function-ref name="getChannel" scoped="" ref="0x7fe7621311a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fe762130b10" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fe762130b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe762130e60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe76212f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe76212f1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe76212f330"/>
        <function-ref name="headerLength" scoped="" ref="0x7fe76212f4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fe76212f640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7fe76212ca08" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7fe76212ca08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7fe76212ce58"/>
        <function-ref name="turnOn" scoped="" ref="0x7fe76212b020"/>
        <function-ref name="setChannel" scoped="" ref="0x7fe76212b1a8"/>
        <function-ref name="done" scoped="" ref="0x7fe76212b330"/>
        <function-ref name="standby" scoped="" ref="0x7fe76212b4b8"/>
        <function-ref name="getChannel" scoped="" ref="0x7fe76212b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7fe76212f8c8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7fe76212f8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7fe76212fc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7fe762131c98" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fe762131c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe762130020"/>
        <function-ref name="header" scoped="" ref="0x7fe7621301a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7fe76212c430" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7fe76212c430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe76212c780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fe76212e020" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7fe76212e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe76212e370"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe76212e4f8"/>
        <function-ref name="start" scoped="" ref="0x7fe76212e680"/>
        <function-ref name="stop" scoped="" ref="0x7fe76212e808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fe7621292a8" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fe7621292a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7621295f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe762129780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe762129908"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe762129a90"/>
        <function-ref name="headerLength" scoped="" ref="0x7fe762129c18"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fe762129da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fe762132020" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7fe762132020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe762132370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fe762128060" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fe762128060"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7fe7621283b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7fe76212ea90" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7fe76212ea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe76212ede0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe76212c020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe76212c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7fe7621313f0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7fe7621313f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe762131740"/>
        <function-ref name="ready" scoped="" ref="0x7fe7621318c8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe762131a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7fe76212aa08" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7fe76212aa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7fe76212ad58"/>
        <function-ref name="request" scoped="" ref="0x7fe762129020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fe762133700" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7fe762133700"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe762133a50"/>
        <function-ref name="cancel" scoped="" ref="0x7fe762133bd8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe762133d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7fe762120448" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7fe762120448"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7fe762120798"/>
        <function-ref name="request" scoped="" ref="0x7fe762120920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7fe76211b0c8" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7fe76211b0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7621196a0"/>
        <function-ref name="get" scoped="" ref="0x7fe762119190"/>
        <function-ref name="isSet" scoped="" ref="0x7fe76211bc48"/>
        <function-ref name="set" scoped="" ref="0x7fe762119bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7fe762106020" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7fe762106020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe762106370"/>
        <function-ref name="get" scoped="" ref="0x7fe7621064f8"/>
        <function-ref name="setValue" scoped="" ref="0x7fe762106680"/>
        <function-ref name="set" scoped="" ref="0x7fe762106808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fe76210b730" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fe76210b730"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TRadio" ref="0x7fe762baa140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fe76210ac58"/>
        <function-ref name="clear" scoped="" ref="0x7fe762108380"/>
        <function-ref name="isValid" scoped="" ref="0x7fe76210a578"/>
        <function-ref name="set" scoped="" ref="0x7fe762108a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7fe7621243e0" loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7fe7621243e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7fe762124730"/>
        <function-ref name="turnOn" scoped="" ref="0x7fe7621248b8"/>
        <function-ref name="setChannel" scoped="" ref="0x7fe762124a40"/>
        <function-ref name="done" scoped="" ref="0x7fe762124bc8"/>
        <function-ref name="standby" scoped="" ref="0x7fe762124d50"/>
        <function-ref name="getChannel" scoped="" ref="0x7fe762121020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7fe762105768" loc="66:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7fe762105768"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe762105ab8"/>
        <function-ref name="wait" scoped="" ref="0x7fe762105c40"/>
        <function-ref name="cancel" scoped="" ref="0x7fe762105dc8"/>
        <function-ref name="isFree" scoped="" ref="0x7fe762103020"/>
        <function-ref name="getNow" scoped="" ref="0x7fe7621031a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7fe76211fcd0" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fe76211fcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe76211c388"/>
        <function-ref name="get" scoped="" ref="0x7fe76211ee00"/>
        <function-ref name="isSet" scoped="" ref="0x7fe76211e8f0"/>
        <function-ref name="set" scoped="" ref="0x7fe76211c898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fe762120bd8" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fe762120bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe76211f020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe76211f1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe76211f330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe76211f4b8"/>
        <function-ref name="headerLength" scoped="" ref="0x7fe76211f640"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fe76211f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fe76210c5c8" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fe76210c5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe76210ca18"/>
        <function-ref name="headerLength" scoped="" ref="0x7fe76210cba0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fe76210cd28"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7fe76210b020"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7fe76210b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7fe762121bf0" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fe762121bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe762120020"/>
        <function-ref name="header" scoped="" ref="0x7fe7621201a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fe7621104b8" loc="55:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fe7621104b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TRadio" ref="0x7fe762baa140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7fe762baa540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe76210db18"/>
        <function-ref name="fired" scoped="" ref="0x7fe76210fb90"/>
        <function-ref name="startAt" scoped="" ref="0x7fe76210d510"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe76210d088"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe76210c020"/>
        <function-ref name="start" scoped="" ref="0x7fe76210f230"/>
        <function-ref name="stop" scoped="" ref="0x7fe76210f708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fe762118458" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fe762118458"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe762117a40"/>
        <function-ref name="get" scoped="" ref="0x7fe762117530"/>
        <function-ref name="isSet" scoped="" ref="0x7fe762117020"/>
        <function-ref name="set" scoped="" ref="0x7fe762115020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7fe762111220" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fe762111220"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TRadio" ref="0x7fe762baa140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe762111da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7fe7621212c8" loc="43:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7fe7621212c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe762121618"/>
        <function-ref name="ready" scoped="" ref="0x7fe7621217a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe762121928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7fe762115860" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fe762115860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe762114e30"/>
        <function-ref name="get" scoped="" ref="0x7fe762114920"/>
        <function-ref name="isSet" scoped="" ref="0x7fe762114410"/>
        <function-ref name="set" scoped="" ref="0x7fe762112388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7fe762106b78" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7fe762106b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe762105020"/>
        <function-ref name="get" scoped="" ref="0x7fe7621051a8"/>
        <function-ref name="setValue" scoped="" ref="0x7fe762105330"/>
        <function-ref name="set" scoped="" ref="0x7fe7621054b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7fe762107378" loc="63:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7fe762107378"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7621076c8"/>
        <function-ref name="get" scoped="" ref="0x7fe762107850"/>
        <function-ref name="setValue" scoped="" ref="0x7fe7621079d8"/>
        <function-ref name="set" scoped="" ref="0x7fe762107b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fe7621129d0" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fe7621129d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fe762112d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7fe7620fb2c0" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7fe7620fb2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7fe7620fb610"/>
        <function-ref name="request" scoped="" ref="0x7fe7620fb798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7fe7620dcc60" loc="74:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7fe7620dcc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TMicro" ref="0x7fe762ca1788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fe7620e19f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7fe7620f6020" loc="56:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7fe7620f6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7620f4608"/>
        <function-ref name="get" scoped="" ref="0x7fe7620f40f8"/>
        <function-ref name="isSet" scoped="" ref="0x7fe7620f6ba0"/>
        <function-ref name="set" scoped="" ref="0x7fe7620f4b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7fe7620d9988" loc="80:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7fe7620d9988"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7620d9cd8"/>
        <function-ref name="get" scoped="" ref="0x7fe7620d9e60"/>
        <function-ref name="setValue" scoped="" ref="0x7fe7620d8020"/>
        <function-ref name="set" scoped="" ref="0x7fe7620d81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7fe7620febf0" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7fe7620febf0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fe762d2d6f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fe762d2d6f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7620fd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fe7620d72b0" loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fe7620d72b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TRadio" ref="0x7fe762baa140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fe7620d6910"/>
        <function-ref name="clear" scoped="" ref="0x7fe7620d5020"/>
        <function-ref name="isValid" scoped="" ref="0x7fe7620d6230"/>
        <function-ref name="set" scoped="" ref="0x7fe7620d5700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7fe7620e9e70" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7fe7620e9e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7620e81e8"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7620e8370"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7620e84f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7620e8680"/>
        <function-ref name="get" scoped="" ref="0x7fe7620e8808"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7620e8990"/>
        <function-ref name="set" scoped="" ref="0x7fe7620e8b18"/>
        <function-ref name="clr" scoped="" ref="0x7fe7620e8ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7fe7620d3ab8" loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7fe7620d3ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe7620d3e08"/>
        <function-ref name="wait" scoped="" ref="0x7fe7620d2020"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7620d21a8"/>
        <function-ref name="isFree" scoped="" ref="0x7fe7620d2330"/>
        <function-ref name="getNow" scoped="" ref="0x7fe7620d24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7fe7620fd2d0" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7fe7620fd2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7fe7620fd620"/>
        <function-ref name="turnOn" scoped="" ref="0x7fe7620fd7a8"/>
        <function-ref name="setChannel" scoped="" ref="0x7fe7620fd930"/>
        <function-ref name="done" scoped="" ref="0x7fe7620fdab8"/>
        <function-ref name="standby" scoped="" ref="0x7fe7620fdc40"/>
        <function-ref name="getChannel" scoped="" ref="0x7fe7620fddc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x7fe7620dd020" loc="75:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fe7620dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TRadio" ref="0x7fe762baa140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe7620ddba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7fe7620fab48" loc="55:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fe7620fab48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7620f7190"/>
        <function-ref name="get" scoped="" ref="0x7fe7620f8c38"/>
        <function-ref name="isSet" scoped="" ref="0x7fe7620f8728"/>
        <function-ref name="set" scoped="" ref="0x7fe7620f76a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fe7620fba50" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fe7620fba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7620fbda0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe7620fa020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7620fa1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe7620fa330"/>
        <function-ref name="headerLength" scoped="" ref="0x7fe7620fa4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fe7620fa640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x7fe7620e4d00" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7fe7620e4d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7620e90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7620e9228"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7620e93b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7620e9538"/>
        <function-ref name="get" scoped="" ref="0x7fe7620e96c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7620e9848"/>
        <function-ref name="set" scoped="" ref="0x7fe7620e99d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7620e9b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fe7620db100" loc="77:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fe7620db100"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7620db450"/>
        <function-ref name="headerLength" scoped="" ref="0x7fe7620db5d8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fe7620db760"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7fe7620db8e8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7fe7620dba70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7fe7620fc9e8" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fe7620fc9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe7620fcd38"/>
        <function-ref name="header" scoped="" ref="0x7fe7620fb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x7fe762048d98" loc="847:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x7fe762048d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe762046170"/>
        <function-ref name="runTask" scoped="" ref="0x7fe7620462f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fe7620f33b0" loc="57:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fe7620f33b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7620f2a40"/>
        <function-ref name="get" scoped="" ref="0x7fe7620f2530"/>
        <function-ref name="isSet" scoped="" ref="0x7fe7620f2020"/>
        <function-ref name="set" scoped="" ref="0x7fe7620f0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7fe7620fe138" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fe7620fe138"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fe762d2d6f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fe762d2d6f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7620fe488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fe7620eb4f8" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7fe7620eb4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe7620eb848"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe7620eb9d0"/>
        <function-ref name="request" scoped="" ref="0x7fe7620ebb58"/>
        <function-ref name="granted" scoped="" ref="0x7fe7620ebce0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe7620ebe68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x7fe7620ec130" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7fe7620ec130"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7620ec580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7620ec708"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7620ec890"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7620eca18"/>
        <function-ref name="get" scoped="" ref="0x7fe7620ecba0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7620ecd28"/>
        <function-ref name="set" scoped="" ref="0x7fe7620eb020"/>
        <function-ref name="clr" scoped="" ref="0x7fe7620eb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7fe7620f0860" loc="58:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fe7620f0860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7620efe30"/>
        <function-ref name="get" scoped="" ref="0x7fe7620ef920"/>
        <function-ref name="isSet" scoped="" ref="0x7fe7620ef410"/>
        <function-ref name="set" scoped="" ref="0x7fe7620ed388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7fe7620fc0c0" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7fe7620fc0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe7620fc410"/>
        <function-ref name="ready" scoped="" ref="0x7fe7620fc598"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe7620fc720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x7fe7620df5e8" loc="72:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7fe7620df5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fe7620df938"/>
        <function-ref name="disable" scoped="" ref="0x7fe7620dfac0"/>
        <function-ref name="captured" scoped="" ref="0x7fe7620dfc48"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fe7620dfdd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x7fe7620e41f0" loc="67:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7fe7620e41f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fe7620e4540"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fe7620e46c8"/>
        <function-ref name="splitRead" scoped="" ref="0x7fe7620e4850"/>
        <function-ref name="write" scoped="" ref="0x7fe7620e49d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7fe7620d8518" loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7fe7620d8518"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7620d8868"/>
        <function-ref name="get" scoped="" ref="0x7fe7620d89f0"/>
        <function-ref name="setValue" scoped="" ref="0x7fe7620d8b78"/>
        <function-ref name="set" scoped="" ref="0x7fe7620d8d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7fe7620dbe10" loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7fe7620dbe10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7620d91a8"/>
        <function-ref name="get" scoped="" ref="0x7fe7620d9330"/>
        <function-ref name="setValue" scoped="" ref="0x7fe7620d94b8"/>
        <function-ref name="set" scoped="" ref="0x7fe7620d9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fe7620ed9d0" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fe7620ed9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fe7620edd20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7fe7620d3020" loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7fe7620d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7fe7620d3370"/>
        <function-ref name="suspend" scoped="" ref="0x7fe7620d34f8"/>
        <function-ref name="resume" scoped="" ref="0x7fe7620d3680"/>
        <function-ref name="run" scoped="" ref="0x7fe7620d3808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7fe762004338" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7fe762004338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762004688"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762004810"/>
        <function-ref name="toggle" scoped="" ref="0x7fe762004998"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762004b20"/>
        <function-ref name="get" scoped="" ref="0x7fe762004ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762004e30"/>
        <function-ref name="set" scoped="" ref="0x7fe762003020"/>
        <function-ref name="clr" scoped="" ref="0x7fe7620031a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x7fe762005140" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7fe762005140"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe762005490"/>
        <function-ref name="isInput" scoped="" ref="0x7fe762005618"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7620057a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762005928"/>
        <function-ref name="get" scoped="" ref="0x7fe762005ab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762005c38"/>
        <function-ref name="set" scoped="" ref="0x7fe762005dc0"/>
        <function-ref name="clr" scoped="" ref="0x7fe762004020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fe7620022e0" loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fe7620022e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TRadio" ref="0x7fe762baa140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe761fff928"/>
        <function-ref name="fired" scoped="" ref="0x7fe7620009e8"/>
        <function-ref name="startAt" scoped="" ref="0x7fe761fff320"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe762000e70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe761fffdb0"/>
        <function-ref name="start" scoped="" ref="0x7fe762000088"/>
        <function-ref name="stop" scoped="" ref="0x7fe762000560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x7fe762007990" loc="42:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7fe762007990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe762007ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe762007e68"/>
        <function-ref name="request" scoped="" ref="0x7fe762006020"/>
        <function-ref name="granted" scoped="" ref="0x7fe7620061a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe762006330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x7fe76200a710" loc="41:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7fe76200a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe76200aa60"/>
        <function-ref name="isInput" scoped="" ref="0x7fe76200abe8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe76200ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe762007020"/>
        <function-ref name="get" scoped="" ref="0x7fe7620071a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe762007330"/>
        <function-ref name="set" scoped="" ref="0x7fe7620074b8"/>
        <function-ref name="clr" scoped="" ref="0x7fe762007640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7fe7620034c0" loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7fe7620034c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fe762003810"/>
        <function-ref name="disable" scoped="" ref="0x7fe762003998"/>
        <function-ref name="captured" scoped="" ref="0x7fe762003b20"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fe762003ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fe7620065e8" loc="43:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7fe7620065e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fe762006938"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fe762006ac0"/>
        <function-ref name="splitRead" scoped="" ref="0x7fe762006c48"/>
        <function-ref name="write" scoped="" ref="0x7fe762006dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7fe761ffe438" loc="50:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fe761ffe438"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TRadio" ref="0x7fe762baa140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe761ffc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x7fe761feec18" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x7fe761feec18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe761fed020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe761fed1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe761fed330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe761fed4b8"/>
        <function-ref name="get" scoped="" ref="0x7fe761fed640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe761fed7c8"/>
        <function-ref name="set" scoped="" ref="0x7fe761fed950"/>
        <function-ref name="clr" scoped="" ref="0x7fe761fedad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x7fe761ff0540" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7fe761ff0540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7fe761fee6f8"/>
        <function-ref name="test" scoped="" ref="0x7fe761fefdb8"/>
        <function-ref name="get" scoped="" ref="0x7fe761ff70f8"/>
        <function-ref name="captured" scoped="" ref="0x7fe761ff7a58"/>
        <function-ref name="reset" scoped="" ref="0x7fe761fef020"/>
        <function-ref name="isOn" scoped="" ref="0x7fe761fee270"/>
        <function-ref name="set" scoped="" ref="0x7fe761ff7580"/>
        <function-ref name="start" scoped="" ref="0x7fe761fef4a8"/>
        <function-ref name="stop" scoped="" ref="0x7fe761fef930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x7fe761fede08" loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x7fe761fede08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe761fec1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fe761fec330"/>
        <function-ref name="toggle" scoped="" ref="0x7fe761fec4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe761fec640"/>
        <function-ref name="get" scoped="" ref="0x7fe761fec7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe761fec950"/>
        <function-ref name="set" scoped="" ref="0x7fe761fecad8"/>
        <function-ref name="clr" scoped="" ref="0x7fe761fecc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7fe761ff9870" loc="40:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fe761ff9870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe761ff9bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7fe761ffccd8" loc="39:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7fe761ffccd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fe761ff90a0"/>
        <function-ref name="disable" scoped="" ref="0x7fe761ff9228"/>
        <function-ref name="captured" scoped="" ref="0x7fe761ff93b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fe761ff9538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fe761fd21d8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7fe761fd21d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe761fd2528"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe761fd26b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fe761fda388" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7fe761fda388"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fe761fda6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe761ffacd0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe761ffacd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe761fdd0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fe761fda9d0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7fe761fda9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fe761fdad20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fe761fdc020"/>
        <function-ref name="splitRead" scoped="" ref="0x7fe761fdc1a8"/>
        <function-ref name="write" scoped="" ref="0x7fe761fdc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe761fd2e80" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fe761fd2e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe761fd91f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe761fd9380"/>
        <function-ref name="request" scoped="" ref="0x7fe761fd9508"/>
        <function-ref name="granted" scoped="" ref="0x7fe761fd9690"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe761fd9818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7fe761f90b58" loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7fe761f90b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe761f8f020"/>
        <function-ref name="runTask" scoped="" ref="0x7fe761f8f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fe761fce120" loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7fe761fce120"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe761fce470"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe761fce5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7fe761fb13c8" loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7fe761fb13c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe761fb1718"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe761fb18a0"/>
        <function-ref name="request" scoped="" ref="0x7fe761fb1a28"/>
        <function-ref name="granted" scoped="" ref="0x7fe761fb1bb0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe761fb1d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fe761fcf020" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7fe761fcf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fe761fcf370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe761fd3a18" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe761fd3a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe761fd3d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7fe761fb2150" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7fe761fb2150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7fe761fb24a0"/>
        <function-ref name="sleep" scoped="" ref="0x7fe761fcb950"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7fe761fb27b0"/>
        <function-ref name="dataReady" scoped="" ref="0x7fe761fcbad8"/>
        <function-ref name="initMaster" scoped="" ref="0x7fe761fb2ac0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7fe761fb2c48"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fe761fb2dd0"/>
        <function-ref name="read" scoped="" ref="0x7fe761fcc020"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7fe761fcc1a8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fe761fcc330"/>
        <function-ref name="setClock" scoped="" ref="0x7fe761fcc4b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe761fcc640"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7fe761fcc7c8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7fe761fcca50"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7fe761fccbd8"/>
        <function-ref name="write" scoped="" ref="0x7fe761fccd60"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fe761fcb020"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7fe761fcb1a8"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7fe761fcb330"/>
        <function-ref name="getClock" scoped="" ref="0x7fe761fcb4b8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fe761fcb640"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7fe761fb2628"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7fe761fb2938"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7fe761fcb7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fe761fcf628" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7fe761fcf628"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fe761fcf978"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fe761fcfb00"/>
        <function-ref name="splitRead" scoped="" ref="0x7fe761fcfc88"/>
        <function-ref name="write" scoped="" ref="0x7fe761fcfe10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe761fced88" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fe761fced88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe761fcd170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe761fcd2f8"/>
        <function-ref name="request" scoped="" ref="0x7fe761fcd480"/>
        <function-ref name="granted" scoped="" ref="0x7fe761fcd608"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe761fcd790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fe761faf020" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe761faf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe761faf370"/>
        <function-ref name="userId" scoped="" ref="0x7fe761faf4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7fe761faf7c8" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7fe761faf7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fe761fafb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7fe761f64020" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7fe761f64020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7fe761f64370"/>
        <function-ref name="sleep" scoped="" ref="0x7fe761f627c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7fe761f64680"/>
        <function-ref name="dataReady" scoped="" ref="0x7fe761f62950"/>
        <function-ref name="initMaster" scoped="" ref="0x7fe761f64990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7fe761f64b18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fe761f64ca0"/>
        <function-ref name="read" scoped="" ref="0x7fe761f64e28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7fe761f63020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fe761f631a8"/>
        <function-ref name="setClock" scoped="" ref="0x7fe761f63330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe761f634b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7fe761f63640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7fe761f638c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7fe761f63a50"/>
        <function-ref name="write" scoped="" ref="0x7fe761f63bd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fe761f63d60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7fe761f62020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7fe761f621a8"/>
        <function-ref name="getClock" scoped="" ref="0x7fe761f62330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fe761f624b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7fe761f644f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7fe761f64808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7fe761f62640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7fe761f55190" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7fe761f55190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe761f554e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe761f55668"/>
        <function-ref name="toggle" scoped="" ref="0x7fe761f557f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe761f55978"/>
        <function-ref name="get" scoped="" ref="0x7fe761f55b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe761f55c88"/>
        <function-ref name="set" scoped="" ref="0x7fe761f55e10"/>
        <function-ref name="clr" scoped="" ref="0x7fe761f54020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7fe761f5bde0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7fe761f5bde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe761f59170"/>
        <function-ref name="isInput" scoped="" ref="0x7fe761f592f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe761f59480"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe761f59608"/>
        <function-ref name="get" scoped="" ref="0x7fe761f59790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe761f59918"/>
        <function-ref name="set" scoped="" ref="0x7fe761f59aa0"/>
        <function-ref name="clr" scoped="" ref="0x7fe761f59c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7fe761f57c70" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7fe761f57c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe761f5b020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe761f5b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe761f5b330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe761f5b4b8"/>
        <function-ref name="get" scoped="" ref="0x7fe761f5b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe761f5b7c8"/>
        <function-ref name="set" scoped="" ref="0x7fe761f5b950"/>
        <function-ref name="clr" scoped="" ref="0x7fe761f5bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fe761f57438" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fe761f57438"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe761f57788"/>
        <function-ref name="stop" scoped="" ref="0x7fe761f57910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7fe761f54350" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7fe761f54350"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fe761f546a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7fe761f61dc0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7fe761f61dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7fe761f5e170"/>
        <function-ref name="sleep" scoped="" ref="0x7fe761f5c640"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7fe761f5e480"/>
        <function-ref name="dataReady" scoped="" ref="0x7fe761f5c7c8"/>
        <function-ref name="initMaster" scoped="" ref="0x7fe761f5e790"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7fe761f5e918"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fe761f5eaa0"/>
        <function-ref name="read" scoped="" ref="0x7fe761f5ec28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7fe761f5edb0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fe761f5d020"/>
        <function-ref name="setClock" scoped="" ref="0x7fe761f5d1a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe761f5d330"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7fe761f5d4b8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7fe761f5d740"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7fe761f5d8c8"/>
        <function-ref name="write" scoped="" ref="0x7fe761f5da50"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fe761f5dbd8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7fe761f5dd60"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7fe761f5c020"/>
        <function-ref name="getClock" scoped="" ref="0x7fe761f5c1a8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fe761f5c330"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7fe761f5e2f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7fe761f5e608"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7fe761f5c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7fe761f56020" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7fe761f56020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe761f56370"/>
        <function-ref name="isInput" scoped="" ref="0x7fe761f564f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fe761f56680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe761f56808"/>
        <function-ref name="get" scoped="" ref="0x7fe761f56990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe761f56b18"/>
        <function-ref name="set" scoped="" ref="0x7fe761f56ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fe761f56e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fe761f0c510" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fe761f0c510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fe761f0c880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe761f0ca08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fe761f0b550" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe761f0b550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fe761f0b8c0"/>
        <function-ref name="configure" scoped="" ref="0x7fe761f0ba48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe761f0d748" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fe761f0d748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe761f0dab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe761f0dc40"/>
        <function-ref name="request" scoped="" ref="0x7fe761f0ddc8"/>
        <function-ref name="granted" scoped="" ref="0x7fe761f0c020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe761f0c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fe761f0cc50" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe761f0cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe761f0b020"/>
        <function-ref name="userId" scoped="" ref="0x7fe761f0b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe760b2f5e8" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe760b2f5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe760b2f938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fe760b2fbc0" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7fe760b2fbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fe760b2e020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fe760b2e1a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fe760b2e330"/>
        <function-ref name="dequeue" scoped="" ref="0x7fe760b2e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fe760b2b820" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fe760b2b820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fe760b2bb90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe760b2bd18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fe760b2a8c0" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe760b2a8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fe760b2ac30"/>
        <function-ref name="configure" scoped="" ref="0x7fe760b2adb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fe760b290a0" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fe760b290a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fe760b293f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fe760b29578"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fe760b29700"/>
        <function-ref name="dequeue" scoped="" ref="0x7fe760b29888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe760b2ca28" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fe760b2ca28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe760b2cd98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe760b2b020"/>
        <function-ref name="request" scoped="" ref="0x7fe760b2b1a8"/>
        <function-ref name="granted" scoped="" ref="0x7fe760b2b330"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe760b2b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fe760b2a020" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe760b2a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe760b2a370"/>
        <function-ref name="userId" scoped="" ref="0x7fe760b2a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fe760b29b50" loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fe760b29b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe760b28020"/>
        <function-ref name="runTask" scoped="" ref="0x7fe760b281a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fe761ef25e8" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fe761ef25e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7fe761ef2938"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fe761ef2ac0"/>
        <function-ref name="getControlA" scoped="" ref="0x7fe761ef2c48"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fe761ef2dd0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fe761efa020"/>
        <function-ref name="setControlB" scoped="" ref="0x7fe761efa1a8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fe761efa330"/>
        <function-ref name="getControlB" scoped="" ref="0x7fe761efa4b8"/>
        <function-ref name="setControlC" scoped="" ref="0x7fe761efa640"/>
        <function-ref name="setControlA" scoped="" ref="0x7fe761efa7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fe761efaca0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7fe761efaca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7fe761eefe20"/>
        <function-ref name="test" scoped="" ref="0x7fe761eef510"/>
        <function-ref name="get" scoped="" ref="0x7fe761ef9858"/>
        <function-ref name="captured" scoped="" ref="0x7fe761ef0238"/>
        <function-ref name="reset" scoped="" ref="0x7fe761ef0710"/>
        <function-ref name="isOn" scoped="" ref="0x7fe761eef998"/>
        <function-ref name="set" scoped="" ref="0x7fe761ef9ce0"/>
        <function-ref name="start" scoped="" ref="0x7fe761ef0b98"/>
        <function-ref name="stop" scoped="" ref="0x7fe761eef088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fe761eeea20" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fe761eeea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fe761eea270"/>
        <function-ref name="fired" scoped="" ref="0x7fe761eeb020"/>
        <function-ref name="get" scoped="" ref="0x7fe761eed5d8"/>
        <function-ref name="reset" scoped="" ref="0x7fe761eeb4a8"/>
        <function-ref name="isOn" scoped="" ref="0x7fe761eea6f8"/>
        <function-ref name="set" scoped="" ref="0x7fe761eeda60"/>
        <function-ref name="start" scoped="" ref="0x7fe761eeb930"/>
        <function-ref name="stop" scoped="" ref="0x7fe761eebdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe761f036e0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fe761f036e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fe761efd930"/>
        <function-ref name="test" scoped="" ref="0x7fe761efd020"/>
        <function-ref name="get" scoped="" ref="0x7fe761f003a8"/>
        <function-ref name="setScale" scoped="" ref="0x7fe761efddb8"/>
        <function-ref name="getScale" scoped="" ref="0x7fe761efc2f0"/>
        <function-ref name="reset" scoped="" ref="0x7fe761efe1f8"/>
        <function-ref name="overflow" scoped="" ref="0x7fe761f00d08"/>
        <function-ref name="isOn" scoped="" ref="0x7fe761efd4a8"/>
        <function-ref name="set" scoped="" ref="0x7fe761f00830"/>
        <function-ref name="start" scoped="" ref="0x7fe761efe680"/>
        <function-ref name="stop" scoped="" ref="0x7fe761efeb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fe761ee1c90" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fe761ee1c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7fe761ee0020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fe761ee01a8"/>
        <function-ref name="getControlA" scoped="" ref="0x7fe761ee0330"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fe761ee04b8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fe761ee0640"/>
        <function-ref name="setControlB" scoped="" ref="0x7fe761ee07c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fe761ee0950"/>
        <function-ref name="getControlB" scoped="" ref="0x7fe761ee0ad8"/>
        <function-ref name="setControlC" scoped="" ref="0x7fe761ee0c60"/>
        <function-ref name="setControlA" scoped="" ref="0x7fe761ee0de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7fe761edbc48" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7fe761edbc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fe761ed84a8"/>
        <function-ref name="fired" scoped="" ref="0x7fe761ed91d0"/>
        <function-ref name="get" scoped="" ref="0x7fe761eda820"/>
        <function-ref name="reset" scoped="" ref="0x7fe761ed9658"/>
        <function-ref name="isOn" scoped="" ref="0x7fe761ed8930"/>
        <function-ref name="set" scoped="" ref="0x7fe761edaca8"/>
        <function-ref name="start" scoped="" ref="0x7fe761ed9ae0"/>
        <function-ref name="stop" scoped="" ref="0x7fe761ed8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fe761edf350" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7fe761edf350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7fe761edb580"/>
        <function-ref name="test" scoped="" ref="0x7fe761eddc20"/>
        <function-ref name="get" scoped="" ref="0x7fe761ede020"/>
        <function-ref name="captured" scoped="" ref="0x7fe761ede980"/>
        <function-ref name="reset" scoped="" ref="0x7fe761edee58"/>
        <function-ref name="isOn" scoped="" ref="0x7fe761edb0f8"/>
        <function-ref name="set" scoped="" ref="0x7fe761ede4a8"/>
        <function-ref name="start" scoped="" ref="0x7fe761edd310"/>
        <function-ref name="stop" scoped="" ref="0x7fe761edd798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7fe761ed6020" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7fe761ed6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fe761ed47a8"/>
        <function-ref name="fired" scoped="" ref="0x7fe761ed5560"/>
        <function-ref name="get" scoped="" ref="0x7fe761ed6ba0"/>
        <function-ref name="reset" scoped="" ref="0x7fe761ed59e8"/>
        <function-ref name="isOn" scoped="" ref="0x7fe761ed4c30"/>
        <function-ref name="set" scoped="" ref="0x7fe761ed5088"/>
        <function-ref name="start" scoped="" ref="0x7fe761ed5e70"/>
        <function-ref name="stop" scoped="" ref="0x7fe761ed4320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7fe761ed2360" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7fe761ed2360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fe761ed0c20"/>
        <function-ref name="fired" scoped="" ref="0x7fe761ed1980"/>
        <function-ref name="get" scoped="" ref="0x7fe761ed1020"/>
        <function-ref name="reset" scoped="" ref="0x7fe761ed1e08"/>
        <function-ref name="isOn" scoped="" ref="0x7fe761ecf0f8"/>
        <function-ref name="set" scoped="" ref="0x7fe761ed14a8"/>
        <function-ref name="start" scoped="" ref="0x7fe761ed0310"/>
        <function-ref name="stop" scoped="" ref="0x7fe761ed0798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe761ee8be0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fe761ee8be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fe761ee3db8"/>
        <function-ref name="test" scoped="" ref="0x7fe761ee34a8"/>
        <function-ref name="get" scoped="" ref="0x7fe761ee57a0"/>
        <function-ref name="setScale" scoped="" ref="0x7fe761ee1270"/>
        <function-ref name="getScale" scoped="" ref="0x7fe761ee1748"/>
        <function-ref name="reset" scoped="" ref="0x7fe761ee45b8"/>
        <function-ref name="overflow" scoped="" ref="0x7fe761ee4130"/>
        <function-ref name="isOn" scoped="" ref="0x7fe761ee3930"/>
        <function-ref name="set" scoped="" ref="0x7fe761ee5c28"/>
        <function-ref name="start" scoped="" ref="0x7fe761ee4a40"/>
        <function-ref name="stop" scoped="" ref="0x7fe761ee3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fe761e0bb68" loc="30:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fe761e0bb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TOne" ref="0x7fe762c619f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe761e07238"/>
        <function-ref name="fired" scoped="" ref="0x7fe761e092b0"/>
        <function-ref name="startAt" scoped="" ref="0x7fe761e09bc0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe761e09738"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe761e076c0"/>
        <function-ref name="start" scoped="" ref="0x7fe761e0a8f8"/>
        <function-ref name="stop" scoped="" ref="0x7fe761e0add0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe761e52dc0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe761e52dc0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7fe762d2d388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7fe762d2d388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe761e51170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe761e51540" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fe761e51540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fe761e416f8"/>
        <function-ref name="test" scoped="" ref="0x7fe761e43db8"/>
        <function-ref name="get" scoped="" ref="0x7fe761e440f8"/>
        <function-ref name="setScale" scoped="" ref="0x7fe761e41b80"/>
        <function-ref name="getScale" scoped="" ref="0x7fe761e40088"/>
        <function-ref name="reset" scoped="" ref="0x7fe761e43020"/>
        <function-ref name="overflow" scoped="" ref="0x7fe761e44a58"/>
        <function-ref name="isOn" scoped="" ref="0x7fe761e41270"/>
        <function-ref name="set" scoped="" ref="0x7fe761e44580"/>
        <function-ref name="start" scoped="" ref="0x7fe761e434a8"/>
        <function-ref name="stop" scoped="" ref="0x7fe761e43930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fe760b009d8" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fe760b009d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7fe762d2d020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7fe762d2d020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TOne" ref="0x7fe762c619f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe760afc088"/>
        <function-ref name="fired" scoped="" ref="0x7fe760afd0f8"/>
        <function-ref name="startAt" scoped="" ref="0x7fe760afda08"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe760afd580"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe760afc510"/>
        <function-ref name="start" scoped="" ref="0x7fe760aff768"/>
        <function-ref name="stop" scoped="" ref="0x7fe760affc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7fe760af7a80" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7fe760af7a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fe760af3270"/>
        <function-ref name="fired" scoped="" ref="0x7fe760af5020"/>
        <function-ref name="get" scoped="" ref="0x7fe760af6658"/>
        <function-ref name="reset" scoped="" ref="0x7fe760af54a8"/>
        <function-ref name="isOn" scoped="" ref="0x7fe760af36f8"/>
        <function-ref name="set" scoped="" ref="0x7fe760af6ae0"/>
        <function-ref name="start" scoped="" ref="0x7fe760af5930"/>
        <function-ref name="stop" scoped="" ref="0x7fe760af5db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7fe760afca30" loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7fe760afca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fe760af8b80"/>
        <function-ref name="test" scoped="" ref="0x7fe760af8270"/>
        <function-ref name="get" scoped="" ref="0x7fe760afb5d8"/>
        <function-ref name="setScale" scoped="" ref="0x7fe760af7088"/>
        <function-ref name="getScale" scoped="" ref="0x7fe760af7560"/>
        <function-ref name="reset" scoped="" ref="0x7fe760afa4a8"/>
        <function-ref name="overflow" scoped="" ref="0x7fe760afa020"/>
        <function-ref name="isOn" scoped="" ref="0x7fe760af86f8"/>
        <function-ref name="set" scoped="" ref="0x7fe760afba60"/>
        <function-ref name="start" scoped="" ref="0x7fe760afa930"/>
        <function-ref name="stop" scoped="" ref="0x7fe760afadb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fe761e03400" loc="39:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fe761e03400"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TMicro" ref="0x7fe762ca1788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe761e02020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fe761dff108" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fe761dff108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TOne" ref="0x7fe762c619f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe761dffe58"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe761dfe798"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe761dfe310"/>
        <function-ref name="overflow" scoped="" ref="0x7fe761dfec20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fe761dfbe08" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fe761dfbe08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TOne" ref="0x7fe762c619f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe761de9be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe761de8548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe761de80c0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe761de89d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe761de7020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fe761de7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fe761de30f8"/>
        <function-ref name="test" scoped="" ref="0x7fe761de47a8"/>
        <function-ref name="get" scoped="" ref="0x7fe761de7ba0"/>
        <function-ref name="setScale" scoped="" ref="0x7fe761de3580"/>
        <function-ref name="getScale" scoped="" ref="0x7fe761de3a58"/>
        <function-ref name="reset" scoped="" ref="0x7fe761de69e8"/>
        <function-ref name="overflow" scoped="" ref="0x7fe761de6560"/>
        <function-ref name="isOn" scoped="" ref="0x7fe761de4c30"/>
        <function-ref name="set" scoped="" ref="0x7fe761de6088"/>
        <function-ref name="start" scoped="" ref="0x7fe761de6e70"/>
        <function-ref name="stop" scoped="" ref="0x7fe761de4320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fe761dc3450" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7fe761dc3450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TMicro" ref="0x7fe762ca1788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe761dc11d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe761dc1ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe761dc1658"/>
        <function-ref name="overflow" scoped="" ref="0x7fe761dc0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fe761dc5270" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fe761dc5270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TMicro" ref="0x7fe762ca1788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe761dc4020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe761dc4930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe761dc44a8"/>
        <function-ref name="overflow" scoped="" ref="0x7fe761dc4db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fe761dbfc38" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fe761dbfc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TMicro" ref="0x7fe762ca1788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe761dbe820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fe761dbee48" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fe761dbee48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TMicro" ref="0x7fe762ca1788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe761dbcbe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe761dbb548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe761dbb0c0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe761dbb9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7fe761db33c0" loc="36:/opt/tinyos-2.1.2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7fe761db33c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TMicro" ref="0x7fe762ca1788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fe761db1150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fe761d595b8" loc="47:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationC.nc">
      <component-ref qname="DisseminationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fe761d595b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe761d59908"/>
        <function-ref name="stop" scoped="" ref="0x7fe761d59a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x7fe761d4d2d0" loc="52:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x7fe761d4d2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe761d4d620"/>
        <function-ref name="incrementCounter" scoped="" ref="0x7fe761d4d7a8"/>
        <function-ref name="reset" scoped="" ref="0x7fe761d4d930"/>
        <function-ref name="start" scoped="" ref="0x7fe761d4dab8"/>
        <function-ref name="stop" scoped="" ref="0x7fe761d4dc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x7fe761d545a8" loc="51:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x7fe761d545a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x7fe761d54a80"/>
        <function-ref name="stop" scoped="" ref="0x7fe761d531a8"/>
        <function-ref name="newData" scoped="" ref="0x7fe761d54c08"/>
        <function-ref name="start" scoped="" ref="0x7fe761d54d90"/>
        <function-ref name="requestSeqno" scoped="" ref="0x7fe761d53020"/>
        <function-ref name="requestData" scoped="" ref="0x7fe761d548f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fe761d587b0" loc="48:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fe761d587b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe761d58b00"/>
        <function-ref name="stop" scoped="" ref="0x7fe761d58c88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x7fe761d49520" loc="53:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x7fe761d49520"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe761d49870"/>
        <function-ref name="stop" scoped="" ref="0x7fe761d499f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeReceive" ref="0x7fe761d3f4f8" loc="57:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeReceive" scoped="" ref="0x7fe761d3f4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe761d3f848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeAMSend" ref="0x7fe761d406a8" loc="56:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeAMSend" scoped="" ref="0x7fe761d406a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe761d409f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe761d40b80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe761d40d08"/>
        <function-ref name="cancel" scoped="" ref="0x7fe761d3f020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe761d3f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fe761d412a8" loc="53:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fe761d412a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe761d415f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe761d41780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe761d41908"/>
        <function-ref name="cancel" scoped="" ref="0x7fe761d41a90"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe761d41c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x7fe761d447f0" loc="50:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x7fe761d447f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe761d44b40"/>
        <function-ref name="incrementCounter" scoped="" ref="0x7fe761d44cc8"/>
        <function-ref name="reset" scoped="" ref="0x7fe761d44e50"/>
        <function-ref name="start" scoped="" ref="0x7fe761d43020"/>
        <function-ref name="stop" scoped="" ref="0x7fe761d431a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x7fe761d454b0" loc="49:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x7fe761d454b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x7fe761d45988"/>
        <function-ref name="stop" scoped="" ref="0x7fe761d44020"/>
        <function-ref name="newData" scoped="" ref="0x7fe761d45b10"/>
        <function-ref name="start" scoped="" ref="0x7fe761d45c98"/>
        <function-ref name="requestSeqno" scoped="" ref="0x7fe761d45e20"/>
        <function-ref name="requestData" scoped="" ref="0x7fe761d45800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7fe761d40020" loc="54:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fe761d40020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe761d40370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe761d3fac0" loc="59:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fe761d3fac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe761d3fe10"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe761d3e020"/>
        <function-ref name="led1On" scoped="" ref="0x7fe761d3e1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe761d3e330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe761d3e4b8"/>
        <function-ref name="get" scoped="" ref="0x7fe761d3e640"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe761d3e7c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe761d3ede8"/>
        <function-ref name="set" scoped="" ref="0x7fe761d3e950"/>
        <function-ref name="led0On" scoped="" ref="0x7fe761d3ead8"/>
        <function-ref name="led2On" scoped="" ref="0x7fe761d3ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fe761d48730" loc="46:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fe761d48730"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe761d48a80"/>
        <function-ref name="stop" scoped="" ref="0x7fe761d48c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x7fe761d43a58" loc="51:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x7fe761d43a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe761d43da8"/>
        <function-ref name="stop" scoped="" ref="0x7fe761d41020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fe761c73080" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fe761c73080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe761c733d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe761c73558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe761c736e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe761c73868"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe761c739f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe761c73c38" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fe761c73c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe761c71020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe761c711a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe761c71330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe761c714b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe761c71640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fe761c71888" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fe761c71888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe761c71bd8"/>
        <function-ref name="source" scoped="" ref="0x7fe761c71d60"/>
        <function-ref name="address" scoped="" ref="0x7fe761c70020"/>
        <function-ref name="destination" scoped="" ref="0x7fe761c701a8"/>
        <function-ref name="setSource" scoped="" ref="0x7fe761c70330"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe761c704b8"/>
        <function-ref name="type" scoped="" ref="0x7fe761c70640"/>
        <function-ref name="setType" scoped="" ref="0x7fe761c707c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe761c70950"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe761c70ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe761c70c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fe761c6f020" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7fe761c6f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fe761c6f370"/>
        <function-ref name="noAck" scoped="" ref="0x7fe761c6f4f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fe761c6f680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fe760ac3140" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fe760ac3140"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe760ac3490"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe760ac3618"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe760ac37a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe760ac3928"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe760ac3ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe760ac3cf8" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fe760ac3cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe760ac20a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe760ac2228"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe760ac23b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe760ac2538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe760ac26c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fe760ac2908" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fe760ac2908"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe760ac2c58"/>
        <function-ref name="source" scoped="" ref="0x7fe760ac2de0"/>
        <function-ref name="address" scoped="" ref="0x7fe760ac1020"/>
        <function-ref name="destination" scoped="" ref="0x7fe760ac11a8"/>
        <function-ref name="setSource" scoped="" ref="0x7fe760ac1330"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe760ac14b8"/>
        <function-ref name="type" scoped="" ref="0x7fe760ac1640"/>
        <function-ref name="setType" scoped="" ref="0x7fe760ac17c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe760ac1950"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe760ac1ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe760ac1c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fe760ac0020" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7fe760ac0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fe760ac0370"/>
        <function-ref name="noAck" scoped="" ref="0x7fe760ac04f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fe760ac0680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fe760ab6958" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fe760ab6958"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe760ab6ca8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe760ab6e30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe760ab5020"/>
        <function-ref name="cancel" scoped="" ref="0x7fe760ab51a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe760ab5330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7fe760ab55d8" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fe760ab55d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe760ab5928"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe760ab5ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe760ab5c38"/>
        <function-ref name="cancel" scoped="" ref="0x7fe760ab5dc0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe760ab4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fe760ab4268" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fe760ab4268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe760ab45b8"/>
        <function-ref name="source" scoped="" ref="0x7fe760ab4740"/>
        <function-ref name="address" scoped="" ref="0x7fe760ab48c8"/>
        <function-ref name="destination" scoped="" ref="0x7fe760ab4a50"/>
        <function-ref name="setSource" scoped="" ref="0x7fe760ab4bd8"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe760ab4d60"/>
        <function-ref name="type" scoped="" ref="0x7fe760ab3020"/>
        <function-ref name="setType" scoped="" ref="0x7fe760ab31a8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe760ab3330"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe760ab34b8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe760ab3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe761ccf708" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fe761ccf708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe761ccfa58"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe761ccfbe0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe761ccfd68"/>
        <function-ref name="cancel" scoped="" ref="0x7fe761cce020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe761cce1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fe761c87a08" loc="48:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fe761c87a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe761c87d78"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe761c85020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe761c851a8"/>
        <function-ref name="cancel" scoped="" ref="0x7fe761c85330"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe761c854b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe761c88b98" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fe761c88b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe761c87020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe761c871a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe761c87330"/>
        <function-ref name="cancel" scoped="" ref="0x7fe761c874b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe761c87640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fe761c84d20" loc="50:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fe761c84d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe761c830a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe761c83228"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe761c833b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe761c83538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe761c836c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7fe761c83988" loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x7fe761c83988"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe761c83cd8"/>
        <function-ref name="runTask" scoped="" ref="0x7fe761c83e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7fe761c82160" loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x7fe761c82160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe761c824b0"/>
        <function-ref name="runTask" scoped="" ref="0x7fe761c82638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fe761c85700" loc="49:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fe761c85700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe761c85a50"/>
        <function-ref name="source" scoped="" ref="0x7fe761c85bd8"/>
        <function-ref name="address" scoped="" ref="0x7fe761c85d60"/>
        <function-ref name="destination" scoped="" ref="0x7fe761c84020"/>
        <function-ref name="setSource" scoped="" ref="0x7fe761c841a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe761c84330"/>
        <function-ref name="type" scoped="" ref="0x7fe761c844b8"/>
        <function-ref name="setType" scoped="" ref="0x7fe761c84640"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe761c847c8"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe761c84950"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe761c84ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe761c66020" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fe761c66020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe761c66370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe761c664f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe761c66680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe761c66808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe761c66990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe761c6b970" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fe761c6b970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe761c6bcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fe761c66bd8" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fe761c66bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe761c64020"/>
        <function-ref name="source" scoped="" ref="0x7fe761c641a8"/>
        <function-ref name="address" scoped="" ref="0x7fe761c64330"/>
        <function-ref name="destination" scoped="" ref="0x7fe761c644b8"/>
        <function-ref name="setSource" scoped="" ref="0x7fe761c64640"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe761c647c8"/>
        <function-ref name="type" scoped="" ref="0x7fe761c64950"/>
        <function-ref name="setType" scoped="" ref="0x7fe761c64ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe761c64c60"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe761c64de8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe761c63020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fe761c613f8" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fe761c613f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe761c61748"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe761c618d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe761c61a58"/>
        <function-ref name="cancel" scoped="" ref="0x7fe761c61be0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe761c61d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe761c60020" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fe761c60020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe761c60370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe761c604f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe761c60680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe761c60808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe761c60990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fe761c60bd8" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fe761c60bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe761c5f020"/>
        <function-ref name="source" scoped="" ref="0x7fe761c5f1a8"/>
        <function-ref name="address" scoped="" ref="0x7fe761c5f330"/>
        <function-ref name="destination" scoped="" ref="0x7fe761c5f4b8"/>
        <function-ref name="setSource" scoped="" ref="0x7fe761c5f640"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe761c5f7c8"/>
        <function-ref name="type" scoped="" ref="0x7fe761c5f950"/>
        <function-ref name="setType" scoped="" ref="0x7fe761c5fad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe761c5fc60"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe761c5fde8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe761c5e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fe761c5e2a8" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7fe761c5e2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fe761c5e5f8"/>
        <function-ref name="noAck" scoped="" ref="0x7fe761c5e780"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fe761c5e908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fe760a67978" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fe760a67978"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe760a67cc8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe760a67e50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe760a66020"/>
        <function-ref name="cancel" scoped="" ref="0x7fe760a661a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe760a66330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe760a66578" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fe760a66578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe760a668c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe760a66a50"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe760a66bd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe760a66d60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe760a65020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fe760a65268" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fe760a65268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe760a655b8"/>
        <function-ref name="source" scoped="" ref="0x7fe760a65740"/>
        <function-ref name="address" scoped="" ref="0x7fe760a658c8"/>
        <function-ref name="destination" scoped="" ref="0x7fe760a65a50"/>
        <function-ref name="setSource" scoped="" ref="0x7fe760a65bd8"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe760a65d60"/>
        <function-ref name="type" scoped="" ref="0x7fe760a64020"/>
        <function-ref name="setType" scoped="" ref="0x7fe760a641a8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe760a64330"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe760a644b8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe760a64640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fe760a648c8" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7fe760a648c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fe760a64c18"/>
        <function-ref name="noAck" scoped="" ref="0x7fe760a64da0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fe760a63020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fe760a5a378" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fe760a5a378"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe760a5a6c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe760a5a850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe760a5a9d8"/>
        <function-ref name="cancel" scoped="" ref="0x7fe760a5ab60"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe760a5ace8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7fe760a59020" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fe760a59020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe760a59370"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe760a594f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe760a59680"/>
        <function-ref name="cancel" scoped="" ref="0x7fe760a59808"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe760a59990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fe760a59bd8" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fe760a59bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe760a58020"/>
        <function-ref name="source" scoped="" ref="0x7fe760a581a8"/>
        <function-ref name="address" scoped="" ref="0x7fe760a58330"/>
        <function-ref name="destination" scoped="" ref="0x7fe760a584b8"/>
        <function-ref name="setSource" scoped="" ref="0x7fe760a58640"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe760a587c8"/>
        <function-ref name="type" scoped="" ref="0x7fe760a58950"/>
        <function-ref name="setType" scoped="" ref="0x7fe760a58ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe760a58c60"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe760a58de8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe760a57020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe761c5b618" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fe761c5b618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe761c5b968"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe761c5baf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe761c5bc78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe761c5be00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe761c5a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe761c5b080" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fe761c5b080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe761c5b3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fe761c5a268" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fe761c5a268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe761c5a5b8"/>
        <function-ref name="source" scoped="" ref="0x7fe761c5a740"/>
        <function-ref name="address" scoped="" ref="0x7fe761c5a8c8"/>
        <function-ref name="destination" scoped="" ref="0x7fe761c5aa50"/>
        <function-ref name="setSource" scoped="" ref="0x7fe761c5abd8"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe761c5ad60"/>
        <function-ref name="type" scoped="" ref="0x7fe761c59020"/>
        <function-ref name="setType" scoped="" ref="0x7fe761c591a8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe761c59330"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe761c594b8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe761c59640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe761c55228" loc="46:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe761c55228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe761c55578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fe761c55830" loc="47:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fe761c55830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe761c55b80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe761c55d08"/>
        <function-ref name="led1On" scoped="" ref="0x7fe761c54020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe761c541a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe761c54330"/>
        <function-ref name="get" scoped="" ref="0x7fe761c544b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe761c54640"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe761c54c60"/>
        <function-ref name="set" scoped="" ref="0x7fe761c547c8"/>
        <function-ref name="led0On" scoped="" ref="0x7fe761c54950"/>
        <function-ref name="led2On" scoped="" ref="0x7fe761c54ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x7fe761b64290" loc="51:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="TestNetworkAppC.Object32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x7fe761b64290"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x7fe761b64dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x7fe761b67808" loc="50:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="TestNetworkAppC.Object32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x7fe761b67808"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x7fe761b65d20"/>
        <function-ref name="get" scoped="" ref="0x7fe761b653c8"/>
        <function-ref name="set" scoped="" ref="0x7fe761b65850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="changedTask" ref="0x7fe760a395f8" loc="62:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="TestNetworkAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="changedTask" scoped="" ref="0x7fe760a395f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe760a39948"/>
        <function-ref name="runTask" scoped="" ref="0x7fe760a39ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationCache" ref="0x7fe760a3b208" loc="50:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="TestNetworkAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x7fe760a3b208"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-functions>
        <function-ref name="requestData" scoped="" ref="0x7fe760a3b6e0"/>
        <function-ref name="storeData" scoped="" ref="0x7fe760a3bd00"/>
        <function-ref name="newData" scoped="" ref="0x7fe760a3b868"/>
        <function-ref name="start" scoped="" ref="0x7fe760a3b9f0"/>
        <function-ref name="requestSeqno" scoped="" ref="0x7fe760a3bb78"/>
        <function-ref name="stop" scoped="" ref="0x7fe760a3b558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x7fe760a3d020" loc="49:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="TestNetworkAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x7fe760a3d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x7fe760a3db68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe760a3a020" loc="52:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="TestNetworkAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fe760a3a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe760a3a370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe760a3a4f8"/>
        <function-ref name="led1On" scoped="" ref="0x7fe760a3a680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe760a3a808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe760a3a990"/>
        <function-ref name="get" scoped="" ref="0x7fe760a3ab18"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe760a3aca0"/>
        <function-ref name="led0On" scoped="" ref="0x7fe760a39330"/>
        <function-ref name="set" scoped="" ref="0x7fe760a39020"/>
        <function-ref name="led2On" scoped="" ref="0x7fe760a3ae28"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe760a391a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x7fe760a40538" loc="48:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="TestNetworkAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x7fe760a40538"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x7fe760a3ea50"/>
        <function-ref name="get" scoped="" ref="0x7fe760a3e0f8"/>
        <function-ref name="set" scoped="" ref="0x7fe760a3e580"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fe760a41bf8" loc="46:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="TestNetworkAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fe760a41bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe760a40020"/>
        <function-ref name="stop" scoped="" ref="0x7fe760a401a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x7fe761c07498" loc="45:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationTimerP.nc">
      <component-ref qname="DisseminationTimerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x7fe761c07498"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe761c077e8"/>
        <function-ref name="incrementCounter" scoped="" ref="0x7fe761c07970"/>
        <function-ref name="reset" scoped="" ref="0x7fe761c07af8"/>
        <function-ref name="start" scoped="" ref="0x7fe761c07c80"/>
        <function-ref name="stop" scoped="" ref="0x7fe761c07e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x7fe761b6a478" loc="55:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x7fe761b6a478"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe761b6a7e8"/>
        <function-ref name="incrementCounter" scoped="" ref="0x7fe761b6a970"/>
        <function-ref name="reset" scoped="" ref="0x7fe761b6aaf8"/>
        <function-ref name="start" scoped="" ref="0x7fe761b6ac80"/>
        <function-ref name="stop" scoped="" ref="0x7fe761b6ae08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pending" ref="0x7fe760a185d8" loc="62:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pending" scoped="" ref="0x7fe760a185d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7fe760a18928"/>
        <function-ref name="clear" scoped="" ref="0x7fe760a18ab0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe760a18c38"/>
        <function-ref name="get" scoped="" ref="0x7fe760a18dc0"/>
        <function-ref name="assign" scoped="" ref="0x7fe760a17020"/>
        <function-ref name="setAll" scoped="" ref="0x7fe760a171a8"/>
        <function-ref name="set" scoped="" ref="0x7fe760a17330"/>
        <function-ref name="size" scoped="" ref="0x7fe760a174b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Changed" ref="0x7fe760a17740" loc="63:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Changed" scoped="" ref="0x7fe760a17740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7fe760a17a90"/>
        <function-ref name="clear" scoped="" ref="0x7fe760a17c18"/>
        <function-ref name="toggle" scoped="" ref="0x7fe760a17da0"/>
        <function-ref name="get" scoped="" ref="0x7fe760a16020"/>
        <function-ref name="assign" scoped="" ref="0x7fe760a161a8"/>
        <function-ref name="setAll" scoped="" ref="0x7fe760a16330"/>
        <function-ref name="set" scoped="" ref="0x7fe760a164b8"/>
        <function-ref name="size" scoped="" ref="0x7fe760a16640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fe760a16888" loc="64:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7fe760a16888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fe760a16bd8"/>
        <function-ref name="rand32" scoped="" ref="0x7fe760a16d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x7fe760a1e6d8" loc="58:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x7fe760a1e6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe760a1ea48"/>
        <function-ref name="incrementCounter" scoped="" ref="0x7fe760a1ebd0"/>
        <function-ref name="reset" scoped="" ref="0x7fe760a1ed58"/>
        <function-ref name="start" scoped="" ref="0x7fe760a1d020"/>
        <function-ref name="stop" scoped="" ref="0x7fe760a1d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe760a1e020" loc="57:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe760a1e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe760a1e370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="timerTask" ref="0x7fe760a0f5f8" loc="154:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="timerTask" scoped="" ref="0x7fe760a0f5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe760a0f948"/>
        <function-ref name="runTask" scoped="" ref="0x7fe760a0fad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe760a15020" loc="65:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fe760a15020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe760a15370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe760a154f8"/>
        <function-ref name="led1On" scoped="" ref="0x7fe760a15680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe760a15808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe760a15990"/>
        <function-ref name="get" scoped="" ref="0x7fe760a15b18"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe760a15ca0"/>
        <function-ref name="led0On" scoped="" ref="0x7fe760a0f330"/>
        <function-ref name="set" scoped="" ref="0x7fe760a0f020"/>
        <function-ref name="led2On" scoped="" ref="0x7fe760a15e28"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe760a0f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe760a1d558" loc="61:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fe760a1d558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca3020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe762ca3378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe760a198f0"/>
        <function-ref name="fired" scoped="" ref="0x7fe760a1b020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe760a1bd10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe760a1b8c0"/>
        <function-ref name="getdt" scoped="" ref="0x7fe760a181c0"/>
        <function-ref name="gett0" scoped="" ref="0x7fe760a19d40"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe760a1b470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe760a1c0f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe760a19320"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe760a1c598"/>
        <function-ref name="stop" scoped="" ref="0x7fe760a1ca38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe760a0c550" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fe760a0c550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca3020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe762ca3378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe760a08768"/>
        <function-ref name="fired" scoped="" ref="0x7fe760a0be50"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe760a09b78"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe760a09728"/>
        <function-ref name="getdt" scoped="" ref="0x7fe760a07088"/>
        <function-ref name="gett0" scoped="" ref="0x7fe760a08bb8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe760a092d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe760a0b0c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe760a08198"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe760a0b560"/>
        <function-ref name="stop" scoped="" ref="0x7fe760a0ba00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe760a06880" loc="46:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe760a06880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe760a06bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x7fe760a06e58" loc="47:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7fe760a06e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7fe760a041e8"/>
        <function-ref name="clear" scoped="" ref="0x7fe760a04370"/>
        <function-ref name="toggle" scoped="" ref="0x7fe760a044f8"/>
        <function-ref name="get" scoped="" ref="0x7fe760a04680"/>
        <function-ref name="assign" scoped="" ref="0x7fe760a04808"/>
        <function-ref name="setAll" scoped="" ref="0x7fe760a04990"/>
        <function-ref name="set" scoped="" ref="0x7fe760a04b18"/>
        <function-ref name="size" scoped="" ref="0x7fe760a04ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe760a024f0" loc="46:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe760a024f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe760a02840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x7fe760a02ac8" loc="47:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7fe760a02ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7fe760a02e18"/>
        <function-ref name="clear" scoped="" ref="0x7fe760a01020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe760a011a8"/>
        <function-ref name="get" scoped="" ref="0x7fe760a01330"/>
        <function-ref name="assign" scoped="" ref="0x7fe760a014b8"/>
        <function-ref name="setAll" scoped="" ref="0x7fe760a01640"/>
        <function-ref name="set" scoped="" ref="0x7fe760a017c8"/>
        <function-ref name="size" scoped="" ref="0x7fe760a01950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7fe761b42d90" loc="59:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x7fe761b42d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7fe761b41170"/>
        <function-ref name="setRoot" scoped="" ref="0x7fe761b412f8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7fe761b41480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x7fe761b5a020" loc="54:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x7fe761b5a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7fe761b5a370"/>
        <function-ref name="setOrigin" scoped="" ref="0x7fe761b5a4f8"/>
        <function-ref name="setType" scoped="" ref="0x7fe761b5a680"/>
        <function-ref name="getOrigin" scoped="" ref="0x7fe761b5a808"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7fe761b5a990"/>
        <function-ref name="getType" scoped="" ref="0x7fe761b5ab18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x7fe761b40080" loc="64:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x7fe761b40080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x7fe761b404d0"/>
        <function-ref name="logEventMsg" scoped="" ref="0x7fe761b40658"/>
        <function-ref name="logEventSimple" scoped="" ref="0x7fe761b407e0"/>
        <function-ref name="logEventRoute" scoped="" ref="0x7fe761b40968"/>
        <function-ref name="logEventDbg" scoped="" ref="0x7fe761b40af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x7fe761b56b48" loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x7fe761b56b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7fe762c19278"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7fe761b5b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe761b5b2a8" loc="53:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fe761b5b2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe761b5b5f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe761b5b780"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe761b5b908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe761b5ba90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe761b5bc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fe761b5dd08" loc="50:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fe761b5dd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7fe762c19278"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe761b5c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe761b5e020" loc="48:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fe761b5e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe761b5e370"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe761b5e4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe761b5e680"/>
        <function-ref name="cancel" scoped="" ref="0x7fe761b5e808"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe761b5e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x7fe761b54020" loc="57:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x7fe761b54020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x7fe761b54370"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7fe761b544f8"/>
        <function-ref name="numNeighbors" scoped="" ref="0x7fe761b54680"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x7fe761b54808"/>
        <function-ref name="getEtx" scoped="" ref="0x7fe761b54990"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x7fe761b54b18"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x7fe761b54ca0"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x7fe761b54e28"/>
        <function-ref name="getParent" scoped="" ref="0x7fe761b42020"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x7fe761b421a8"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x7fe761b42330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe761b5d1c8" loc="49:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fe761b5d1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7fe762c19278"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe761b5d518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x7fe761b42600" loc="58:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x7fe761b42600"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x7fe761b42950"/>
        <function-ref name="setClientCongested" scoped="" ref="0x7fe761b42ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x7fe761b43350" loc="55:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x7fe761b43350"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7fe761b436a0"/>
        <function-ref name="option" scoped="" ref="0x7fe761b43828"/>
        <function-ref name="setEtx" scoped="" ref="0x7fe761b439b0"/>
        <function-ref name="setOrigin" scoped="" ref="0x7fe761b43b38"/>
        <function-ref name="clearOption" scoped="" ref="0x7fe761b43cc0"/>
        <function-ref name="getEtx" scoped="" ref="0x7fe761b43e48"/>
        <function-ref name="getOrigin" scoped="" ref="0x7fe761b55020"/>
        <function-ref name="setType" scoped="" ref="0x7fe761b551a8"/>
        <function-ref name="setOption" scoped="" ref="0x7fe761b55330"/>
        <function-ref name="matchPacket" scoped="" ref="0x7fe761b554b8"/>
        <function-ref name="getThl" scoped="" ref="0x7fe761b55640"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7fe761b557c8"/>
        <function-ref name="matchInstance" scoped="" ref="0x7fe761b55950"/>
        <function-ref name="getType" scoped="" ref="0x7fe761b55bd8"/>
        <function-ref name="setThl" scoped="" ref="0x7fe761b55d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fe761b5f390" loc="47:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fe761b5f390"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe761b5f6e0"/>
        <function-ref name="stop" scoped="" ref="0x7fe761b5f868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x7fe761b3ea28" loc="63:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x7fe761b3ea28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x7fe761b3ed78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7fe761b30020" loc="92:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x7fe761b30020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7fe761b30370"/>
        <function-ref name="setRoot" scoped="" ref="0x7fe761b304f8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7fe761b30680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x7fe761b36020" loc="86:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x7fe761b36020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7fe761b36370"/>
        <function-ref name="setOrigin" scoped="" ref="0x7fe761b364f8"/>
        <function-ref name="setType" scoped="" ref="0x7fe761b36680"/>
        <function-ref name="getOrigin" scoped="" ref="0x7fe761b36808"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7fe761b36990"/>
        <function-ref name="getType" scoped="" ref="0x7fe761b36b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x7fe761b2a568" loc="90:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x7fe761b2a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x7fe761b2a8b8"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x7fe761b2aa40"/>
        <function-ref name="txNoAck" scoped="" ref="0x7fe761b2abc8"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x7fe761b2ad50"/>
        <function-ref name="evicted" scoped="" ref="0x7fe761b31020"/>
        <function-ref name="clearDLQ" scoped="" ref="0x7fe761b311a8"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x7fe761b31330"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x7fe761b314b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x7fe761b28750" loc="97:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x7fe761b28750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x7fe761b28aa0"/>
        <function-ref name="logEventMsg" scoped="" ref="0x7fe761b28c28"/>
        <function-ref name="logEventSimple" scoped="" ref="0x7fe761b28db0"/>
        <function-ref name="logEventRoute" scoped="" ref="0x7fe761b27020"/>
        <function-ref name="logEventDbg" scoped="" ref="0x7fe761b271a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x7fe761b38d00" loc="83:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x7fe761b38d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7fe762c19278"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7fe761b370a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe761b37328" loc="85:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fe761b37328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe761b37678"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe761b37800"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe761b37988"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe761b37b10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe761b37c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fe761b381c8" loc="82:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fe761b381c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7fe762c19278"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe761b38518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe761b3b3f0" loc="80:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fe761b3b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe761b3b740"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe761b3b8c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe761b3ba50"/>
        <function-ref name="cancel" scoped="" ref="0x7fe761b3bbd8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe761b3bd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x7fe761b34b58" loc="89:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x7fe761b34b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x7fe761b33020"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7fe761b331a8"/>
        <function-ref name="numNeighbors" scoped="" ref="0x7fe761b33330"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x7fe761b334b8"/>
        <function-ref name="getEtx" scoped="" ref="0x7fe761b33640"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x7fe761b337c8"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x7fe761b33950"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x7fe761b33ad8"/>
        <function-ref name="getParent" scoped="" ref="0x7fe761b33c60"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x7fe761b33de8"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x7fe761b32020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe761b39560" loc="81:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fe761b39560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7fe762c19278"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe761b398b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x7fe761b31788" loc="91:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x7fe761b31788"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x7fe761b31ad8"/>
        <function-ref name="setClientCongested" scoped="" ref="0x7fe761b31c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x7fe761b36dc0" loc="87:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x7fe761b36dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7fe761b35170"/>
        <function-ref name="option" scoped="" ref="0x7fe761b352f8"/>
        <function-ref name="setEtx" scoped="" ref="0x7fe761b35480"/>
        <function-ref name="setOrigin" scoped="" ref="0x7fe761b35608"/>
        <function-ref name="clearOption" scoped="" ref="0x7fe761b35790"/>
        <function-ref name="getEtx" scoped="" ref="0x7fe761b35918"/>
        <function-ref name="getOrigin" scoped="" ref="0x7fe761b35aa0"/>
        <function-ref name="setType" scoped="" ref="0x7fe761b35c28"/>
        <function-ref name="setOption" scoped="" ref="0x7fe761b35db0"/>
        <function-ref name="matchPacket" scoped="" ref="0x7fe761b34020"/>
        <function-ref name="getThl" scoped="" ref="0x7fe761b341a8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7fe761b34330"/>
        <function-ref name="matchInstance" scoped="" ref="0x7fe761b344b8"/>
        <function-ref name="getType" scoped="" ref="0x7fe761b34740"/>
        <function-ref name="setThl" scoped="" ref="0x7fe761b348c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fe761b3f720" loc="79:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fe761b3f720"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe761b3fa70"/>
        <function-ref name="stop" scoped="" ref="0x7fe761b3fbf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x7fe761b28020" loc="96:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x7fe761b28020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x7fe761b28470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fe7619ead78" loc="142:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fe7619ead78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe7619e80f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x7fe7619e6020" loc="145:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x7fe7619e6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7fe7619e6370"/>
        <function-ref name="setRoot" scoped="" ref="0x7fe7619e64f8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7fe7619e6680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fe761a00020" loc="126:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fe761a00020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe761a00370"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe761a004f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe761a00680"/>
        <function-ref name="cancel" scoped="" ref="0x7fe761a00808"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe761a00990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x7fe7619e2740" loc="156:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x7fe7619e2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x7fe7619e2a90"/>
        <function-ref name="logEventMsg" scoped="" ref="0x7fe7619e2c18"/>
        <function-ref name="logEventSimple" scoped="" ref="0x7fe7619e2da0"/>
        <function-ref name="logEventRoute" scoped="" ref="0x7fe7619e1020"/>
        <function-ref name="logEventDbg" scoped="" ref="0x7fe7619e11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x7fe761a04c38" loc="116:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x7fe761a04c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7fe761a03020"/>
        <function-ref name="setOrigin" scoped="" ref="0x7fe761a031a8"/>
        <function-ref name="setType" scoped="" ref="0x7fe761a03330"/>
        <function-ref name="getOrigin" scoped="" ref="0x7fe761a034b8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7fe761a03640"/>
        <function-ref name="getType" scoped="" ref="0x7fe761a037c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x7fe7619fa6c0" loc="129:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x7fe7619fa6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x7fe7619faa10"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x7fe7619fab98"/>
        <function-ref name="txNoAck" scoped="" ref="0x7fe7619fad20"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x7fe7619f9020"/>
        <function-ref name="evicted" scoped="" ref="0x7fe7619f91a8"/>
        <function-ref name="clearDLQ" scoped="" ref="0x7fe7619f9330"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x7fe7619f94b8"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x7fe7619f9640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SentCache" ref="0x7fe7619eb448" loc="140:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SentCache" scoped="" ref="0x7fe7619eb448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
              <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x7fe7619ea020"/>
        <function-ref name="flush" scoped="" ref="0x7fe7619ea960"/>
        <function-ref name="lookup" scoped="" ref="0x7fe7619ea4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x7fe761a05aa0" loc="114:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x7fe761a05aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7fe762c19278"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7fe761a05e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe761a04080" loc="115:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fe761a04080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe761a043d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe761a04558"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe761a046e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe761a04868"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe761a049f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fe761a053c8" loc="113:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fe761a053c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7fe762c19278"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe761a05738"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fe7619e2020" loc="149:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7fe7619e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fe7619e2370"/>
        <function-ref name="rand32" scoped="" ref="0x7fe7619e24f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe761a08df8" loc="111:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fe761a08df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe761a071a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe761a07330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe761a074b8"/>
        <function-ref name="cancel" scoped="" ref="0x7fe761a07640"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe761a077c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RetxmitTimer" ref="0x7fe7619ff6c0" loc="128:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RetxmitTimer" scoped="" ref="0x7fe7619ff6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca3020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe762ca3378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe7619fba18"/>
        <function-ref name="fired" scoped="" ref="0x7fe7619fc158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe7619fce48"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe7619fc9f8"/>
        <function-ref name="getdt" scoped="" ref="0x7fe7619fa2e8"/>
        <function-ref name="gett0" scoped="" ref="0x7fe7619fbe68"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe7619fc5a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe7619fe370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe7619fb448"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe7619fe810"/>
        <function-ref name="stop" scoped="" ref="0x7fe7619fecb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7fe7619e1430" loc="162:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7fe7619e1430"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe7619e1780"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe7619e1908"/>
        <function-ref name="start" scoped="" ref="0x7fe7619e1a90"/>
        <function-ref name="stop" scoped="" ref="0x7fe7619e1c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7fe7619e0020" loc="234:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x7fe7619e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe7619e0370"/>
        <function-ref name="runTask" scoped="" ref="0x7fe7619e04f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x7fe7619f61a0" loc="137:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0x7fe7619f61a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7fe761b1e710"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x7fe761b1ebc8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7fe7619f5a60"/>
        <function-ref name="enqueue" scoped="" ref="0x7fe7619f4758"/>
        <function-ref name="element" scoped="" ref="0x7fe7619f4d88"/>
        <function-ref name="maxSize" scoped="" ref="0x7fe7619f5610"/>
        <function-ref name="dequeue" scoped="" ref="0x7fe7619f40f8"/>
        <function-ref name="empty" scoped="" ref="0x7fe7619f6ce8"/>
        <function-ref name="size" scoped="" ref="0x7fe7619f51c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpInfo" ref="0x7fe7619e8910" loc="144:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x7fe7619e8910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x7fe7619e8c60"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7fe7619e8de8"/>
        <function-ref name="numNeighbors" scoped="" ref="0x7fe7619e7020"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x7fe7619e71a8"/>
        <function-ref name="getEtx" scoped="" ref="0x7fe7619e7330"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x7fe7619e74b8"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x7fe7619e7640"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x7fe7619e77c8"/>
        <function-ref name="getParent" scoped="" ref="0x7fe7619e7950"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x7fe7619e7ad8"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x7fe7619e7c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fe7619f8430" loc="131:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fe7619f8430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7619f8780"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe7619f8908"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe7619f8a90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7619f8c18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe7619f8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe761a08020" loc="109:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe761a08020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe761a08370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe761a07b30" loc="112:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fe761a07b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7fe762c19278"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe761a05020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x7fe761a01800" loc="118:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x7fe761a01800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x7fe761a01b50"/>
        <function-ref name="setClientCongested" scoped="" ref="0x7fe761a01cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnicastNameFreeRouting" ref="0x7fe7619f9888" loc="130:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x7fe7619f9888"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x7fe7619f9bd8"/>
        <function-ref name="routeFound" scoped="" ref="0x7fe7619f9d60"/>
        <function-ref name="nextHop" scoped="" ref="0x7fe7619f8020"/>
        <function-ref name="noRoute" scoped="" ref="0x7fe7619f81a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe7619e4888" loc="148:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fe7619e4888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe7619e4bd8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe7619e4d60"/>
        <function-ref name="led1On" scoped="" ref="0x7fe7619e3020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe7619e31a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe7619e3330"/>
        <function-ref name="get" scoped="" ref="0x7fe7619e34b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe7619e3640"/>
        <function-ref name="led2On" scoped="" ref="0x7fe7619e3c60"/>
        <function-ref name="set" scoped="" ref="0x7fe7619e3950"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe7619e37c8"/>
        <function-ref name="led0On" scoped="" ref="0x7fe7619e3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7fe761a00bd8" loc="127:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe761a00bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fe7619ff020"/>
        <function-ref name="noAck" scoped="" ref="0x7fe7619ff1a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fe7619ff330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x7fe761a03a10" loc="117:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x7fe761a03a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7fe761a03d60"/>
        <function-ref name="option" scoped="" ref="0x7fe761a02020"/>
        <function-ref name="setEtx" scoped="" ref="0x7fe761a021a8"/>
        <function-ref name="setOrigin" scoped="" ref="0x7fe761a02330"/>
        <function-ref name="clearOption" scoped="" ref="0x7fe761a024b8"/>
        <function-ref name="getEtx" scoped="" ref="0x7fe761a02640"/>
        <function-ref name="getOrigin" scoped="" ref="0x7fe761a027c8"/>
        <function-ref name="setType" scoped="" ref="0x7fe761a02950"/>
        <function-ref name="setOption" scoped="" ref="0x7fe761a02ad8"/>
        <function-ref name="matchPacket" scoped="" ref="0x7fe761a02c60"/>
        <function-ref name="getThl" scoped="" ref="0x7fe761a02de8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7fe761a01020"/>
        <function-ref name="matchInstance" scoped="" ref="0x7fe761a011a8"/>
        <function-ref name="getType" scoped="" ref="0x7fe761a01430"/>
        <function-ref name="setThl" scoped="" ref="0x7fe761a015b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="QEntryPool" ref="0x7fe7619f2558" loc="138:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QEntryPool" scoped="" ref="0x7fe7619f2558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7fe761b1e710"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x7fe761b1ebc8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe7619ef4c0"/>
        <function-ref name="maxSize" scoped="" ref="0x7fe7619f1998"/>
        <function-ref name="empty" scoped="" ref="0x7fe7619f10f8"/>
        <function-ref name="put" scoped="" ref="0x7fe7619f1de8"/>
        <function-ref name="size" scoped="" ref="0x7fe7619f1548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fe7619e5268" loc="147:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fe7619e5268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe7619e55b8"/>
        <function-ref name="source" scoped="" ref="0x7fe7619e5740"/>
        <function-ref name="address" scoped="" ref="0x7fe7619e58c8"/>
        <function-ref name="destination" scoped="" ref="0x7fe7619e5a50"/>
        <function-ref name="setSource" scoped="" ref="0x7fe7619e5bd8"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe7619e5d60"/>
        <function-ref name="type" scoped="" ref="0x7fe7619e4020"/>
        <function-ref name="setType" scoped="" ref="0x7fe7619e41a8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe7619e4330"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe7619e44b8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe7619e4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fe761a085b8" loc="110:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fe761a085b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe761a08908"/>
        <function-ref name="stop" scoped="" ref="0x7fe761a08a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x7fe7619e8378" loc="143:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSnoop" scoped="" ref="0x7fe7619e8378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe7619e86c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MessagePool" ref="0x7fe7619efca0" loc="139:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MessagePool" scoped="" ref="0x7fe7619efca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
            <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe7619edbf0"/>
        <function-ref name="maxSize" scoped="" ref="0x7fe7619ed0f8"/>
        <function-ref name="empty" scoped="" ref="0x7fe7619ee820"/>
        <function-ref name="put" scoped="" ref="0x7fe7619ed548"/>
        <function-ref name="size" scoped="" ref="0x7fe7619eec70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x7fe7619e69e8" loc="146:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x7fe7619e69e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x7fe7619e5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7fe7619d5020" loc="42:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <component-ref qname="CtpP.MessagePoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7fe7619d5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
            <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe7619b0020"/>
        <function-ref name="maxSize" scoped="" ref="0x7fe7619b2470"/>
        <function-ref name="empty" scoped="" ref="0x7fe7619d5b68"/>
        <function-ref name="put" scoped="" ref="0x7fe7619b28c0"/>
        <function-ref name="size" scoped="" ref="0x7fe7619b2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7fe7608e1a30" loc="56:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7fe7608e1a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
            <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe7608df980"/>
        <function-ref name="maxSize" scoped="" ref="0x7fe7608e0e40"/>
        <function-ref name="empty" scoped="" ref="0x7fe7608e05a0"/>
        <function-ref name="put" scoped="" ref="0x7fe7608df2d8"/>
        <function-ref name="size" scoped="" ref="0x7fe7608e09f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe7608e1390" loc="55:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe7608e1390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7608e16e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7fe7619ae228" loc="42:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <component-ref qname="CtpP.QEntryPoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7fe7619ae228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7fe761b1e710"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x7fe761b1ebc8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe7619ab1b8"/>
        <function-ref name="maxSize" scoped="" ref="0x7fe7619ac648"/>
        <function-ref name="empty" scoped="" ref="0x7fe7619aed70"/>
        <function-ref name="put" scoped="" ref="0x7fe7619aca98"/>
        <function-ref name="size" scoped="" ref="0x7fe7619ac1f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7fe7608cfc98" loc="56:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7fe7608cfc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7fe761b1e710"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x7fe761b1ebc8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe7608ccbf0"/>
        <function-ref name="maxSize" scoped="" ref="0x7fe7608cc0f8"/>
        <function-ref name="empty" scoped="" ref="0x7fe7608ce820"/>
        <function-ref name="put" scoped="" ref="0x7fe7608cc548"/>
        <function-ref name="size" scoped="" ref="0x7fe7608cec70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe7608cf5f8" loc="55:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe7608cf5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7608cf948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7fe7619a76e0" loc="43:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
      <component-ref qname="CtpP.SendQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fe7619a76e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7fe761b1e710"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x7fe761b1ebc8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7fe76198d088"/>
        <function-ref name="enqueue" scoped="" ref="0x7fe76198dd48"/>
        <function-ref name="element" scoped="" ref="0x7fe76198c3a8"/>
        <function-ref name="maxSize" scoped="" ref="0x7fe76198fc10"/>
        <function-ref name="dequeue" scoped="" ref="0x7fe76198d6e8"/>
        <function-ref name="empty" scoped="" ref="0x7fe76198f370"/>
        <function-ref name="size" scoped="" ref="0x7fe76198f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x7fe761989e10" loc="39:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <component-ref qname="CtpP.SentCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x7fe761989e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
              <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x7fe76195b9e0"/>
        <function-ref name="flush" scoped="" ref="0x7fe76195a348"/>
        <function-ref name="lookup" scoped="" ref="0x7fe76195be80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x7fe7608b3880" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x7fe7608b3880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
              <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x7fe7608b1458"/>
        <function-ref name="flush" scoped="" ref="0x7fe7608b1d98"/>
        <function-ref name="lookup" scoped="" ref="0x7fe7608b18f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe7608b31a8" loc="45:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe7608b31a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7608b34f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpPacket" ref="0x7fe7608b0220" loc="49:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x7fe7608b0220"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7fe7608b0570"/>
        <function-ref name="option" scoped="" ref="0x7fe7608b06f8"/>
        <function-ref name="setEtx" scoped="" ref="0x7fe7608b0880"/>
        <function-ref name="setOrigin" scoped="" ref="0x7fe7608b0a08"/>
        <function-ref name="clearOption" scoped="" ref="0x7fe7608b0b90"/>
        <function-ref name="getEtx" scoped="" ref="0x7fe7608b0d18"/>
        <function-ref name="getOrigin" scoped="" ref="0x7fe7608af020"/>
        <function-ref name="setType" scoped="" ref="0x7fe7608af1a8"/>
        <function-ref name="setOption" scoped="" ref="0x7fe7608af330"/>
        <function-ref name="matchPacket" scoped="" ref="0x7fe7608af4b8"/>
        <function-ref name="getThl" scoped="" ref="0x7fe7608af640"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7fe7608af7c8"/>
        <function-ref name="matchInstance" scoped="" ref="0x7fe7608af950"/>
        <function-ref name="getType" scoped="" ref="0x7fe7608afbd8"/>
        <function-ref name="setThl" scoped="" ref="0x7fe7608afd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe761958cf8" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RoutingBeaconTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fe761958cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca3020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe762ca3378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe761954088"/>
        <function-ref name="fired" scoped="" ref="0x7fe761956688"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe761955470"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe761955020"/>
        <function-ref name="getdt" scoped="" ref="0x7fe761954928"/>
        <function-ref name="gett0" scoped="" ref="0x7fe7619544d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe761956ad8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe7619578b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe761955a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe761957d58"/>
        <function-ref name="stop" scoped="" ref="0x7fe761956238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe761951350" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RouteUpdateTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fe761951350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca3020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe762ca3378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe76194e6c8"/>
        <function-ref name="fired" scoped="" ref="0x7fe761950db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe76194fad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe76194f688"/>
        <function-ref name="getdt" scoped="" ref="0x7fe76194c020"/>
        <function-ref name="gett0" scoped="" ref="0x7fe76194eb18"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe76194f238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe761950020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe76194e0f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe7619504c0"/>
        <function-ref name="stop" scoped="" ref="0x7fe761950960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fe761938668" loc="57:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fe761938668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe7619389b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x7fe761941be0" loc="47:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x7fe761941be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x7fe761940020"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x7fe7619401a8"/>
        <function-ref name="txNoAck" scoped="" ref="0x7fe761940330"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x7fe7619404b8"/>
        <function-ref name="evicted" scoped="" ref="0x7fe761940640"/>
        <function-ref name="clearDLQ" scoped="" ref="0x7fe7619407c8"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x7fe761940950"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x7fe761940ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe76193f360" loc="49:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fe76193f360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe76193f6b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe76193f838"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe76193f9c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe76193fb48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe76193fcd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fe76193d678" loc="54:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fe76193d678"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe76193d9c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe76193db50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe76193dcd8"/>
        <function-ref name="cancel" scoped="" ref="0x7fe76193de60"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe76193c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe761942978" loc="45:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fe761942978"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe761942cc8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe761942e50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe761941020"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7619411a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe761941330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fe761937328" loc="59:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7fe761937328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fe761937778"/>
        <function-ref name="rand32" scoped="" ref="0x7fe761937900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fe761939968" loc="56:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fe761939968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe761939cb8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe761939e40"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe761938020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7619381a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe761938330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe761940d50" loc="48:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe761940d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe76193f0d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x7fe76193c370" loc="55:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMPacket" scoped="" ref="0x7fe76193c370"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe76193c6c0"/>
        <function-ref name="source" scoped="" ref="0x7fe76193c848"/>
        <function-ref name="address" scoped="" ref="0x7fe76193c9d0"/>
        <function-ref name="destination" scoped="" ref="0x7fe76193cb58"/>
        <function-ref name="setSource" scoped="" ref="0x7fe76193cce0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe76193ce68"/>
        <function-ref name="type" scoped="" ref="0x7fe761939020"/>
        <function-ref name="setType" scoped="" ref="0x7fe7619391a8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe761939330"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe7619394b8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe761939640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe7619415c0" loc="46:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fe7619415c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe761941910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareBit" ref="0x7fe76193d020" loc="50:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0x7fe76193d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x7fe76193d370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fe7619421a8" loc="44:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fe7619421a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe7619424f8"/>
        <function-ref name="stop" scoped="" ref="0x7fe761942680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkPacketMetadata" ref="0x7fe761938cb8" loc="58:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fe761938cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fe7619370a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fe761885d10" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fe761885d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe7618840a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe761884228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7618843b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe761884538"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe7618846c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe761884908" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fe761884908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe761884c58"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe761884de0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe761883020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7618831a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe761883330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fe761883578" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fe761883578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe7618838c8"/>
        <function-ref name="source" scoped="" ref="0x7fe761883a50"/>
        <function-ref name="address" scoped="" ref="0x7fe761883bd8"/>
        <function-ref name="destination" scoped="" ref="0x7fe761883d60"/>
        <function-ref name="setSource" scoped="" ref="0x7fe761882020"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe7618821a8"/>
        <function-ref name="type" scoped="" ref="0x7fe761882330"/>
        <function-ref name="setType" scoped="" ref="0x7fe7618824b8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe761882640"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe7618827c8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe761882950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fe761882bd8" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7fe761882bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fe761881020"/>
        <function-ref name="noAck" scoped="" ref="0x7fe7618811a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fe761881330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fe760888cd0" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fe760888cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe7608870a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe760887228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7608873b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe760887538"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe7608876c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe760887908" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fe760887908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe760887c58"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe760887de0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe760886020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7608861a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe760886330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fe760886578" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fe760886578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe7608868c8"/>
        <function-ref name="source" scoped="" ref="0x7fe760886a50"/>
        <function-ref name="address" scoped="" ref="0x7fe760886bd8"/>
        <function-ref name="destination" scoped="" ref="0x7fe760886d60"/>
        <function-ref name="setSource" scoped="" ref="0x7fe760884020"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe7608841a8"/>
        <function-ref name="type" scoped="" ref="0x7fe760884330"/>
        <function-ref name="setType" scoped="" ref="0x7fe7608844b8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe760884640"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe7608847c8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe760884950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fe760884bd8" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7fe760884bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fe760883020"/>
        <function-ref name="noAck" scoped="" ref="0x7fe7608831a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fe760883330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fe76087cd98" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fe76087cd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe76087a170"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe76087a2f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe76087a480"/>
        <function-ref name="cancel" scoped="" ref="0x7fe76087a608"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe76087a790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7fe76087aa38" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fe76087aa38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe76087ad88"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe760879020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7608791a8"/>
        <function-ref name="cancel" scoped="" ref="0x7fe760879330"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe7608794b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fe760879700" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fe760879700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe760879a50"/>
        <function-ref name="source" scoped="" ref="0x7fe760879bd8"/>
        <function-ref name="address" scoped="" ref="0x7fe760879d60"/>
        <function-ref name="destination" scoped="" ref="0x7fe760878020"/>
        <function-ref name="setSource" scoped="" ref="0x7fe7608781a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe760878330"/>
        <function-ref name="type" scoped="" ref="0x7fe7608784b8"/>
        <function-ref name="setType" scoped="" ref="0x7fe760878640"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe7608787c8"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe760878950"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe760878ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe76187f928" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fe76187f928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe76187fc78"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe76187fe00"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe76187e020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe76187e1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe76187e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe76187f390" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fe76187f390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe76187f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fe76187e578" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fe76187e578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe76187e8c8"/>
        <function-ref name="source" scoped="" ref="0x7fe76187ea50"/>
        <function-ref name="address" scoped="" ref="0x7fe76187ebd8"/>
        <function-ref name="destination" scoped="" ref="0x7fe76187ed60"/>
        <function-ref name="setSource" scoped="" ref="0x7fe76187d020"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe76187d1a8"/>
        <function-ref name="type" scoped="" ref="0x7fe76187d330"/>
        <function-ref name="setType" scoped="" ref="0x7fe76187d4b8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe76187d640"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe76187d7c8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe76187d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe761874760" loc="47:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fe761874760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe761874ab0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe761874c38"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe761874dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe761873020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe7618731a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe7618741c8" loc="46:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fe7618741c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe761874518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fe7618733f0" loc="48:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fe7618733f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe761873740"/>
        <function-ref name="source" scoped="" ref="0x7fe7618738c8"/>
        <function-ref name="address" scoped="" ref="0x7fe761873a50"/>
        <function-ref name="destination" scoped="" ref="0x7fe761873bd8"/>
        <function-ref name="setSource" scoped="" ref="0x7fe761873d60"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe761872020"/>
        <function-ref name="type" scoped="" ref="0x7fe7618721a8"/>
        <function-ref name="setType" scoped="" ref="0x7fe761872330"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe7618724b8"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe761872640"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe7618727c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7fe76177de08" loc="110:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x7fe76177de08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7fe76177c1a8"/>
        <function-ref name="setRoot" scoped="" ref="0x7fe76177c330"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7fe76177c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateRouteTask" ref="0x7fe761767e18" loc="271:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateRouteTask" scoped="" ref="0x7fe761767e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe7617651a8"/>
        <function-ref name="runTask" scoped="" ref="0x7fe761765330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x7fe761769cb8" loc="125:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x7fe761769cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x7fe7617680a0"/>
        <function-ref name="logEventMsg" scoped="" ref="0x7fe761768228"/>
        <function-ref name="logEventSimple" scoped="" ref="0x7fe7617683b0"/>
        <function-ref name="logEventRoute" scoped="" ref="0x7fe761768538"/>
        <function-ref name="logEventDbg" scoped="" ref="0x7fe7617686c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x7fe761777e60" loc="119:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x7fe761777e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x7fe7617761e8"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x7fe761776370"/>
        <function-ref name="txNoAck" scoped="" ref="0x7fe7617764f8"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x7fe761776680"/>
        <function-ref name="evicted" scoped="" ref="0x7fe761776808"/>
        <function-ref name="clearDLQ" scoped="" ref="0x7fe761776990"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x7fe761776b18"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x7fe761776ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpRoutingPacket" ref="0x7fe761779470" loc="113:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpRoutingPacket" scoped="" ref="0x7fe761779470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpRoutingPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clearOptions" scoped="" ref="0x7fe7617797c0"/>
        <function-ref name="setEtx" scoped="" ref="0x7fe761779948"/>
        <function-ref name="clearOption" scoped="" ref="0x7fe761779ad0"/>
        <function-ref name="getEtx" scoped="" ref="0x7fe761779c58"/>
        <function-ref name="setOption" scoped="" ref="0x7fe761779de0"/>
        <function-ref name="setParent" scoped="" ref="0x7fe761778020"/>
        <function-ref name="getParent" scoped="" ref="0x7fe7617781a8"/>
        <function-ref name="getOption" scoped="" ref="0x7fe761778330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7fe7617745b8" loc="121:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7fe7617745b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe761774908"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe761774a90"/>
        <function-ref name="start" scoped="" ref="0x7fe761774c18"/>
        <function-ref name="stop" scoped="" ref="0x7fe761774da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fe761769598" loc="124:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7fe761769598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fe7617698e8"/>
        <function-ref name="rand32" scoped="" ref="0x7fe761769a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x7fe76177c700" loc="111:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x7fe76177c700"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x7fe76177ca50"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7fe76177cbd8"/>
        <function-ref name="numNeighbors" scoped="" ref="0x7fe76177cd60"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x7fe76177b020"/>
        <function-ref name="getEtx" scoped="" ref="0x7fe76177b1a8"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x7fe76177b330"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x7fe76177b4b8"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x7fe76177b640"/>
        <function-ref name="getParent" scoped="" ref="0x7fe76177b7c8"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x7fe76177b950"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x7fe76177bad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendBeaconTask" ref="0x7fe761767678" loc="390:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendBeaconTask" scoped="" ref="0x7fe761767678"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe7617679c8"/>
        <function-ref name="runTask" scoped="" ref="0x7fe761767b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe761778578" loc="114:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe761778578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7617788c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSend" ref="0x7fe761778bb0" loc="117:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSend" scoped="" ref="0x7fe761778bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe761777020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe7617771a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe761777330"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7617774b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe761777640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconTimer" ref="0x7fe761773168" loc="122:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconTimer" scoped="" ref="0x7fe761773168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca3020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe762ca3378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe76176f5f0"/>
        <function-ref name="fired" scoped="" ref="0x7fe761772a88"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe7617708c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe761770470"/>
        <function-ref name="getdt" scoped="" ref="0x7fe76176e020"/>
        <function-ref name="gett0" scoped="" ref="0x7fe76176fa40"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe761770020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe761773cb0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe76176f020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe761772198"/>
        <function-ref name="stop" scoped="" ref="0x7fe761772638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteTimer" ref="0x7fe76176e540" loc="123:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteTimer" scoped="" ref="0x7fe76176e540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca3020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe762ca3378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe76176a8f0"/>
        <function-ref name="fired" scoped="" ref="0x7fe76176b020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe76176bd10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe76176b8c0"/>
        <function-ref name="getdt" scoped="" ref="0x7fe7617691c0"/>
        <function-ref name="gett0" scoped="" ref="0x7fe76176ad40"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe76176b470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe76176d1e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe76176a320"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe76176d688"/>
        <function-ref name="stop" scoped="" ref="0x7fe76176db28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpCongestion" ref="0x7fe761768908" loc="126:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x7fe761768908"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x7fe761768c58"/>
        <function-ref name="setClientCongested" scoped="" ref="0x7fe761768de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareBit" ref="0x7fe761767060" loc="128:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0x7fe761767060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x7fe7617673b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconReceive" ref="0x7fe7617778c8" loc="118:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconReceive" scoped="" ref="0x7fe7617778c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe761777c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fe761775020" loc="120:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fe761775020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe761775370"/>
        <function-ref name="source" scoped="" ref="0x7fe7617754f8"/>
        <function-ref name="address" scoped="" ref="0x7fe761775680"/>
        <function-ref name="destination" scoped="" ref="0x7fe761775808"/>
        <function-ref name="setSource" scoped="" ref="0x7fe761775990"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe761775b18"/>
        <function-ref name="type" scoped="" ref="0x7fe761775ca0"/>
        <function-ref name="setType" scoped="" ref="0x7fe761775e28"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe761774020"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe7617741a8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe761774330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fe76177bd20" loc="112:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fe76177bd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe7617790a0"/>
        <function-ref name="stop" scoped="" ref="0x7fe761779228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Routing" ref="0x7fe76177d3d8" loc="109:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Routing" scoped="" ref="0x7fe76177d3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x7fe76177d728"/>
        <function-ref name="routeFound" scoped="" ref="0x7fe76177d8b0"/>
        <function-ref name="nextHop" scoped="" ref="0x7fe76177da38"/>
        <function-ref name="noRoute" scoped="" ref="0x7fe76177dbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe76175d350" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RetxmitTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fe76175d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca3020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe762ca3378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe76175a6c8"/>
        <function-ref name="fired" scoped="" ref="0x7fe76175cdb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe76175bad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe76175b688"/>
        <function-ref name="getdt" scoped="" ref="0x7fe761758020"/>
        <function-ref name="gett0" scoped="" ref="0x7fe76175ab18"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe76175b238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe76175c020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe76175a0f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe76175c4c0"/>
        <function-ref name="stop" scoped="" ref="0x7fe76175c960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fe7617531a8" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fe7617531a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe7617534f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe761753680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe761753808"/>
        <function-ref name="cancel" scoped="" ref="0x7fe761753990"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe761753b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe761753d60" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fe761753d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7617520d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe761752260"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe7617523e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe761752570"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe7617526f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fe761752940" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fe761752940"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe761752c90"/>
        <function-ref name="source" scoped="" ref="0x7fe761752e18"/>
        <function-ref name="address" scoped="" ref="0x7fe761751020"/>
        <function-ref name="destination" scoped="" ref="0x7fe7617511a8"/>
        <function-ref name="setSource" scoped="" ref="0x7fe761751330"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe7617514b8"/>
        <function-ref name="type" scoped="" ref="0x7fe761751640"/>
        <function-ref name="setType" scoped="" ref="0x7fe7617517c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe761751950"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe761751ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe761751c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fe761750020" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7fe761750020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fe761750370"/>
        <function-ref name="noAck" scoped="" ref="0x7fe7617504f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fe761750680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fe7607e35e8" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fe7607e35e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe7607e3938"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe7607e3ac0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7607e3c48"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7607e3dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe7607e2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe7607e2268" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fe7607e2268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7607e25b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe7607e2740"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe7607e28c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7607e2a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe7607e2bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fe7607e2e20" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fe7607e2e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe7607e11a8"/>
        <function-ref name="source" scoped="" ref="0x7fe7607e1330"/>
        <function-ref name="address" scoped="" ref="0x7fe7607e14b8"/>
        <function-ref name="destination" scoped="" ref="0x7fe7607e1640"/>
        <function-ref name="setSource" scoped="" ref="0x7fe7607e17c8"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe7607e1950"/>
        <function-ref name="type" scoped="" ref="0x7fe7607e1ad8"/>
        <function-ref name="setType" scoped="" ref="0x7fe7607e1c60"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe7607e1de8"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe7607e0020"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe7607e01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fe7607e0430" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7fe7607e0430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fe7607e0780"/>
        <function-ref name="noAck" scoped="" ref="0x7fe7607e0908"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fe7607e0a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fe7607d7790" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fe7607d7790"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe7607d7ae0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe7607d7c68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7607d7df0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7607d6020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe7607d61a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7fe7607d6450" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fe7607d6450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe7607d67a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe7607d6928"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7607d6ab0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7607d6c38"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe7607d6dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fe7607d5060" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fe7607d5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe7607d53b0"/>
        <function-ref name="source" scoped="" ref="0x7fe7607d5538"/>
        <function-ref name="address" scoped="" ref="0x7fe7607d56c0"/>
        <function-ref name="destination" scoped="" ref="0x7fe7607d5848"/>
        <function-ref name="setSource" scoped="" ref="0x7fe7607d59d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe7607d5b58"/>
        <function-ref name="type" scoped="" ref="0x7fe7607d5ce0"/>
        <function-ref name="setType" scoped="" ref="0x7fe7607d5e68"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe7607d4020"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe7607d41a8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe7607d4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe76174eca8" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fe76174eca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe76174d020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe76174d1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe76174d330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe76174d4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe76174d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe76174e710" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fe76174e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe76174ea60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fe76174d888" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fe76174d888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe76174dbd8"/>
        <function-ref name="source" scoped="" ref="0x7fe76174dd60"/>
        <function-ref name="address" scoped="" ref="0x7fe76174b020"/>
        <function-ref name="destination" scoped="" ref="0x7fe76174b1a8"/>
        <function-ref name="setSource" scoped="" ref="0x7fe76174b330"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe76174b4b8"/>
        <function-ref name="type" scoped="" ref="0x7fe76174b640"/>
        <function-ref name="setType" scoped="" ref="0x7fe76174b7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe76174b950"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe76174bad8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe76174bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe761728d60" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
      <component-ref qname="TestNetworkAppC.CollectionSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fe761728d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7617110d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe761711260"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe7617113e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe761711570"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe7617116f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe7617281a8" loc="45:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
      <component-ref qname="TestNetworkAppC.CollectionSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fe7617281a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe7617284f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe761728680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe761728808"/>
        <function-ref name="cancel" scoped="" ref="0x7fe761728990"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe761728b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe7607bc700" loc="38:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
      <component-ref qname="TestNetworkAppC.CollectionSenderC.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fe7607bc700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7607bca50"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe7607bcbd8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe7607bcd60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7607bb020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe7607bb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe7607bda78" loc="37:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
      <component-ref qname="TestNetworkAppC.CollectionSenderC.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fe7607bda78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe7607bddc8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe7607bc020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7607bc1a8"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7607bc330"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe7607bc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionId" ref="0x7fe7607b6478" loc="46:/opt/tinyos-2.1.2/tos/lib/net/CollectionIdP.nc">
      <component-ref qname="TestNetworkAppC.CollectionSenderC.CollectionSenderP.CollectionIdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x7fe7607b6478"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x7fe7607b67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe761710da0" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="TestNetworkAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fe761710da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca3020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe762ca3378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe76170b088"/>
        <function-ref name="fired" scoped="" ref="0x7fe76170d708"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe76170c470"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe76170c020"/>
        <function-ref name="getdt" scoped="" ref="0x7fe76170b928"/>
        <function-ref name="gett0" scoped="" ref="0x7fe76170b4d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe76170db58"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe76170e930"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe76170ca40"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe76170edd0"/>
        <function-ref name="stop" scoped="" ref="0x7fe76170d2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fe761708af0" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc">
      <component-ref qname="TestNetworkAppC.DemoSensorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fe761708af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe761707670"/>
        <function-ref name="readDone" scoped="" ref="0x7fe761707ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fe7607afe80" loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <component-ref qname="TestNetworkAppC.DemoSensorC.DemoChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fe7607afe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe7607ae9f0"/>
        <function-ref name="readDone" scoped="" ref="0x7fe7607aee40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fe7607a99e8" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestNetworkAppC.DemoSensorC.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe7607a99e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fe7607a9d38"/>
        <function-ref name="configure" scoped="" ref="0x7fe7607a8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fe7607acb10" loc="22:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestNetworkAppC.DemoSensorC.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fe7607acb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe7607ab6f0"/>
        <function-ref name="readDone" scoped="" ref="0x7fe7607abb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7fe7607a9140" loc="24:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TestNetworkAppC.DemoSensorC.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fe7607a9140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fe7607a9490"/>
        <function-ref name="getChannel" scoped="" ref="0x7fe7607a9618"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fe7607a97a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fe7616f9cc0" loc="19:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fe7616f9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe7616f4838"/>
        <function-ref name="readDone" scoped="" ref="0x7fe7616f4c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7fe7616eea00" loc="20:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7fe7616eea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe7616f15b0"/>
        <function-ref name="readDone" scoped="" ref="0x7fe7616f1a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7fe7616f0670" loc="23:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fe7616f0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fe7616f09c0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fe7616f0b48"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fe7616f0cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fe7616ec4c0" loc="24:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fe7616ec4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe7616ec810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe7616ec998"/>
        <function-ref name="request" scoped="" ref="0x7fe7616ecb20"/>
        <function-ref name="granted" scoped="" ref="0x7fe7616ecca8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe7616ece30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fe7616e7890" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe7616e7890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fe7616e7be0"/>
        <function-ref name="configure" scoped="" ref="0x7fe7616e7d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7fe7616dc9b0" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7fe7616dc9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fe7616dcd00"/>
        <function-ref name="dataReady" scoped="" ref="0x7fe7616e7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7fe7616e10d0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7fe7616e10d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fe7616e1420"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7616e15a8"/>
        <function-ref name="dataReady" scoped="" ref="0x7fe7616e1730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe7616e8020" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fe7616e8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe7616e8370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe7616e84f8"/>
        <function-ref name="request" scoped="" ref="0x7fe7616e8680"/>
        <function-ref name="granted" scoped="" ref="0x7fe7616e8808"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe7616e8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe7616e6dd0" loc="54:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe7616e6dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7616d9170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7fe7616d8628" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7fe7616d8628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fe7616d8978"/>
        <function-ref name="dataReady" scoped="" ref="0x7fe7616d8b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7fe7616d9c08" loc="56:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7fe7616d9c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fe7616d8020"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7616d81a8"/>
        <function-ref name="dataReady" scoped="" ref="0x7fe7616d8330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x7fe7616c80d0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7fe7616c80d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7fe7616c8420"/>
        <function-ref name="getAdmux" scoped="" ref="0x7fe7616c85a8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7fe7616c8730"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fe7616c88b8"/>
        <function-ref name="enableAdc" scoped="" ref="0x7fe7616c8a40"/>
        <function-ref name="setAdmux" scoped="" ref="0x7fe7616c8bc8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7fe7616c8d50"/>
        <function-ref name="isComplete" scoped="" ref="0x7fe7616d6020"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7616d61a8"/>
        <function-ref name="disableAdc" scoped="" ref="0x7fe7616d6330"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7fe7616d64b8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7fe7616d6640"/>
        <function-ref name="startConversion" scoped="" ref="0x7fe7616d67c8"/>
        <function-ref name="isStarted" scoped="" ref="0x7fe7616d6a50"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7fe7616d6bd8"/>
        <function-ref name="setContinuous" scoped="" ref="0x7fe7616d6d60"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7fe7616d5020"/>
        <function-ref name="getValue" scoped="" ref="0x7fe7616d51a8"/>
        <function-ref name="dataReady" scoped="" ref="0x7fe7616d5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fe7616d9450" loc="55:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fe7616d9450"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe7616d97a0"/>
        <function-ref name="stop" scoped="" ref="0x7fe7616d9928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7fe7616d5610" loc="61:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fe7616d5610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7fe7616d5960"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7fe7616d5ae8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7fe7616d5c70"/>
        <function-ref name="actualMicro" scoped="" ref="0x7fe7616d5df8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7fe7616c7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7fe761697020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7fe761697020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7fe761697370"/>
        <function-ref name="getAdmux" scoped="" ref="0x7fe7616974f8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7fe761697680"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fe761697808"/>
        <function-ref name="enableAdc" scoped="" ref="0x7fe761697990"/>
        <function-ref name="setAdmux" scoped="" ref="0x7fe761697b18"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7fe761697ca0"/>
        <function-ref name="isComplete" scoped="" ref="0x7fe761697e28"/>
        <function-ref name="cancel" scoped="" ref="0x7fe761696020"/>
        <function-ref name="disableAdc" scoped="" ref="0x7fe7616961a8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7fe761696330"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7fe7616964b8"/>
        <function-ref name="startConversion" scoped="" ref="0x7fe761696640"/>
        <function-ref name="isStarted" scoped="" ref="0x7fe7616968c8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7fe761696a50"/>
        <function-ref name="setContinuous" scoped="" ref="0x7fe761696bd8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7fe761696d60"/>
        <function-ref name="getValue" scoped="" ref="0x7fe761695020"/>
        <function-ref name="dataReady" scoped="" ref="0x7fe7616951a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7fe761692248" loc="48:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7fe761692248"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7fe761692598"/>
        <function-ref name="getAdmux" scoped="" ref="0x7fe761692720"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7fe7616928a8"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fe761692a30"/>
        <function-ref name="enableAdc" scoped="" ref="0x7fe761692bb8"/>
        <function-ref name="setAdmux" scoped="" ref="0x7fe761692d40"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7fe761691020"/>
        <function-ref name="isComplete" scoped="" ref="0x7fe7616911a8"/>
        <function-ref name="cancel" scoped="" ref="0x7fe761691330"/>
        <function-ref name="disableAdc" scoped="" ref="0x7fe7616914b8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7fe761691640"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7fe7616917c8"/>
        <function-ref name="startConversion" scoped="" ref="0x7fe761691950"/>
        <function-ref name="isStarted" scoped="" ref="0x7fe761691bd8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7fe761691d60"/>
        <function-ref name="setContinuous" scoped="" ref="0x7fe761690020"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7fe7616901a8"/>
        <function-ref name="getValue" scoped="" ref="0x7fe761690330"/>
        <function-ref name="dataReady" scoped="" ref="0x7fe7616904b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7fe7616907c8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7fe7616907c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fe761690b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fe7615ec698" loc="92:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fe7615ec698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fe7615eca08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe7615ecb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fe7615ea3c8" loc="96:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe7615ea3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fe7615ea738"/>
        <function-ref name="configure" scoped="" ref="0x7fe7615ea8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fe7615ecdd8" loc="93:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe7615ecdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe7615eb170"/>
        <function-ref name="requested" scoped="" ref="0x7fe7615eb2f8"/>
        <function-ref name="granted" scoped="" ref="0x7fe7615eb480"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe7615eb608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe7615eb790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe7615ed840" loc="91:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fe7615ed840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe7615edbb0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe7615edd38"/>
        <function-ref name="request" scoped="" ref="0x7fe7615ec020"/>
        <function-ref name="granted" scoped="" ref="0x7fe7615ec1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe7615ec330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fe7615eb9d8" loc="94:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe7615eb9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe7615ebd28"/>
        <function-ref name="userId" scoped="" ref="0x7fe7615ea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe760799020" loc="44:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe760799020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe760799370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7fe7607995f8" loc="45:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fe7607995f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fe760799948"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fe760799ad0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fe760799c58"/>
        <function-ref name="dequeue" scoped="" ref="0x7fe760799de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fe760795388" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fe760795388"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fe7607956f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe760795880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fe760793020" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe760793020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fe760793390"/>
        <function-ref name="configure" scoped="" ref="0x7fe760793518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fe7607937a0" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fe7607937a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fe760793af0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fe760793c78"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fe760793e00"/>
        <function-ref name="dequeue" scoped="" ref="0x7fe760792020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fe760795ac8" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe760795ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe760795e18"/>
        <function-ref name="requested" scoped="" ref="0x7fe760794020"/>
        <function-ref name="granted" scoped="" ref="0x7fe7607941a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe760794330"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe7607944b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe760792268" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fe760792268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe7607925b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe760792740"/>
        <function-ref name="led1On" scoped="" ref="0x7fe7607928c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe760792a50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe760792bd8"/>
        <function-ref name="get" scoped="" ref="0x7fe760792d60"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe760791020"/>
        <function-ref name="led0On" scoped="" ref="0x7fe760791640"/>
        <function-ref name="set" scoped="" ref="0x7fe760791330"/>
        <function-ref name="led2On" scoped="" ref="0x7fe7607911a8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe7607914b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe760796630" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fe760796630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe7607969a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe760796b28"/>
        <function-ref name="request" scoped="" ref="0x7fe760796cb0"/>
        <function-ref name="granted" scoped="" ref="0x7fe760796e38"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe760795020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fe760794700" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe760794700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe760794a50"/>
        <function-ref name="userId" scoped="" ref="0x7fe760794bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fe760791908" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fe760791908"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe760791c58"/>
        <function-ref name="runTask" scoped="" ref="0x7fe760791de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fe7615e7780" loc="72:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fe7615e7780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fe7615e7ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fe7615e7d18" loc="73:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe7615e7d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe7615d10a0"/>
        <function-ref name="requested" scoped="" ref="0x7fe7615d1228"/>
        <function-ref name="granted" scoped="" ref="0x7fe7615d13b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe7615d1538"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe7615d16c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fe7615e7060" loc="70:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fe7615e7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe7615e73b0"/>
        <function-ref name="stop" scoped="" ref="0x7fe7615e7538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fe7615d1908" loc="74:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe7615d1908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe7615d1c58"/>
        <function-ref name="userId" scoped="" ref="0x7fe7615d1de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fe760760d20" loc="62:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fe760760d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fe76075f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fe76075f2e8" loc="63:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe76075f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe76075f638"/>
        <function-ref name="requested" scoped="" ref="0x7fe76075f7c0"/>
        <function-ref name="granted" scoped="" ref="0x7fe76075f948"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe76075fad0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe76075fc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fe760760600" loc="60:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fe760760600"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe760760950"/>
        <function-ref name="stop" scoped="" ref="0x7fe760760ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fe76075d020" loc="64:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe76075d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe76075d370"/>
        <function-ref name="userId" scoped="" ref="0x7fe76075d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7fe7615c2578" loc="54:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7fe7615c2578"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TMicro" ref="0x7fe762ca1788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fe7615c13a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fe7615c86a0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fe7615c86a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe7615c7370"/>
        <function-ref name="readDone" scoped="" ref="0x7fe7615c77c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7fe7615c6428" loc="49:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7fe7615c6428"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe7615c5020"/>
        <function-ref name="readDone" scoped="" ref="0x7fe7615c54a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7fe7615c39a0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fe7615c39a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fe7615c3cf0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fe7615c3e78"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fe7615c2030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x7fe7615c5b18" loc="52:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7fe7615c5b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fe7615c5e68"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7615c3020"/>
        <function-ref name="dataReady" scoped="" ref="0x7fe7615c31a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x7fe7615b1bf8" loc="104:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x7fe7615b1bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe7615b0020"/>
        <function-ref name="runTask" scoped="" ref="0x7fe7615b01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fe76159c020" loc="24:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fe76159c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe76159cb88"/>
        <function-ref name="readDone" scoped="" ref="0x7fe761585020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7fe761585860" loc="26:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7fe761585860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe761584458"/>
        <function-ref name="readDone" scoped="" ref="0x7fe7615848c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fe761582020" loc="27:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fe761582020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe761582390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe761582518"/>
        <function-ref name="request" scoped="" ref="0x7fe7615826a0"/>
        <function-ref name="granted" scoped="" ref="0x7fe761582828"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe7615829b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7fe761578438" loc="40:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7fe761578438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fe761578788"/>
        <function-ref name="getChannel" scoped="" ref="0x7fe761578910"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fe761578a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fe7611b5398" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="TestNetworkAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fe7611b5398"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe7611b56e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe7611b5870"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7611b59f8"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7611b5b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe7611b5d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe7611b4020" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="TestNetworkAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fe7611b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7611b4370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe7611b44f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe7611b4680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7611b4808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe7611b4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fe7611b4bd8" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="TestNetworkAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fe7611b4bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe7611b2020"/>
        <function-ref name="source" scoped="" ref="0x7fe7611b21a8"/>
        <function-ref name="address" scoped="" ref="0x7fe7611b2330"/>
        <function-ref name="destination" scoped="" ref="0x7fe7611b24b8"/>
        <function-ref name="setSource" scoped="" ref="0x7fe7611b2640"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe7611b27c8"/>
        <function-ref name="type" scoped="" ref="0x7fe7611b2950"/>
        <function-ref name="setType" scoped="" ref="0x7fe7611b2ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe7611b2c60"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe7611b2de8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe7611b1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fe7611b12a8" loc="52:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="TestNetworkAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7fe7611b12a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fe7611b15f8"/>
        <function-ref name="noAck" scoped="" ref="0x7fe7611b1780"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fe7611b1908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fe76074a0c0" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestNetworkAppC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fe76074a0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe76074a410"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe76074a598"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe76074a720"/>
        <function-ref name="cancel" scoped="" ref="0x7fe76074a8a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe76074aa30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7fe76074acd8" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestNetworkAppC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fe76074acd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe7607490a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe760749228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7607493b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe760749538"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe7607496c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fe760749908" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestNetworkAppC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fe760749908"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe760749c58"/>
        <function-ref name="source" scoped="" ref="0x7fe760749de0"/>
        <function-ref name="address" scoped="" ref="0x7fe760748020"/>
        <function-ref name="destination" scoped="" ref="0x7fe7607481a8"/>
        <function-ref name="setSource" scoped="" ref="0x7fe760748330"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe7607484b8"/>
        <function-ref name="type" scoped="" ref="0x7fe760748640"/>
        <function-ref name="setType" scoped="" ref="0x7fe7607487c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe760748950"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe760748ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe760748c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe76155f7f8" loc="44:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fe76155f7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe76155fb48"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe76155fcd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe76155fe58"/>
        <function-ref name="cancel" scoped="" ref="0x7fe76155e020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe76155e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fe76155b020" loc="48:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fe76155b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe76155b390"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe76155b518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe76155b6a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe76155b828"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe76155b9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe76155c1e0" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fe76155c1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe76155c550"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe76155c6d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe76155c860"/>
        <function-ref name="cancel" scoped="" ref="0x7fe76155c9e8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe76155cb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fe761559268" loc="50:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fe761559268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7615595b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe761559740"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe7615598c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe761559a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe761559bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7fe761557020" loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x7fe761557020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe761557370"/>
        <function-ref name="runTask" scoped="" ref="0x7fe7615574f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7fe7615577c0" loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x7fe7615577c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe761557b10"/>
        <function-ref name="runTask" scoped="" ref="0x7fe761557c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fe76155bbf8" loc="49:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fe76155bbf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe76155a020"/>
        <function-ref name="source" scoped="" ref="0x7fe76155a1a8"/>
        <function-ref name="address" scoped="" ref="0x7fe76155a330"/>
        <function-ref name="destination" scoped="" ref="0x7fe76155a4b8"/>
        <function-ref name="setSource" scoped="" ref="0x7fe76155a640"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe76155a7c8"/>
        <function-ref name="type" scoped="" ref="0x7fe76155a950"/>
        <function-ref name="setType" scoped="" ref="0x7fe76155aad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe76155ac60"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe76155ade8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe761559020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fe761555aa0" loc="46:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fe761555aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe761555df0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe761552020"/>
        <function-ref name="start" scoped="" ref="0x7fe7615521a8"/>
        <function-ref name="stop" scoped="" ref="0x7fe761552330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fe761552aa8" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fe761552aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe761552df8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe761551020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7615511a8"/>
        <function-ref name="cancel" scoped="" ref="0x7fe761551330"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe7615514b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe7615502a8" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fe7615502a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7615505f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe761550780"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe761550908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe761550a90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe761550c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe761551c38" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fe761551c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe761550020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe76154d020" loc="53:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fe76154d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe76154d370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe76154d4f8"/>
        <function-ref name="led1On" scoped="" ref="0x7fe76154d680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe76154d808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe76154d990"/>
        <function-ref name="get" scoped="" ref="0x7fe76154db18"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe76154dca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe76154c330"/>
        <function-ref name="set" scoped="" ref="0x7fe76154de28"/>
        <function-ref name="led0On" scoped="" ref="0x7fe76154c020"/>
        <function-ref name="led2On" scoped="" ref="0x7fe76154c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fe76154e658" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe76154e658"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fe76154e9a8"/>
        <function-ref name="noAck" scoped="" ref="0x7fe76154eb30"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fe76154ecb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fe76154f020" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fe76154f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe76154f370"/>
        <function-ref name="source" scoped="" ref="0x7fe76154f4f8"/>
        <function-ref name="address" scoped="" ref="0x7fe76154f680"/>
        <function-ref name="destination" scoped="" ref="0x7fe76154f808"/>
        <function-ref name="setSource" scoped="" ref="0x7fe76154f990"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe76154fb18"/>
        <function-ref name="type" scoped="" ref="0x7fe76154fca0"/>
        <function-ref name="setType" scoped="" ref="0x7fe76154fe28"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe76154e020"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe76154e1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe76154e330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fe7614f4308" loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fe7614f4308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe7614f4658"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe7614f47e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7614f4968"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7614f4af0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe7614f4c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fe7614f3020" loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fe7614f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe7614f3370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fe76154a460" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fe76154a460"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe76154a7d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe76154a958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe76154aae0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe76154ac68"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe76154adf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe7614f6d20" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fe7614f6d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7614f50a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe7614f5228"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe7614f53b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7614f5538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe7614f56c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe7614f8180" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fe7614f8180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe7614f84f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fe7614f5908" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe7614f5908"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fe7614f5c58"/>
        <function-ref name="noAck" scoped="" ref="0x7fe7614f5de0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fe7614f4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fe7614f8738" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fe7614f8738"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe7614f8a88"/>
        <function-ref name="source" scoped="" ref="0x7fe7614f8c10"/>
        <function-ref name="address" scoped="" ref="0x7fe7614f8d98"/>
        <function-ref name="destination" scoped="" ref="0x7fe7614f6020"/>
        <function-ref name="setSource" scoped="" ref="0x7fe7614f61a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe7614f6330"/>
        <function-ref name="type" scoped="" ref="0x7fe7614f64b8"/>
        <function-ref name="setType" scoped="" ref="0x7fe7614f6640"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe7614f67c8"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe7614f6950"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe7614f6ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fe7614ef728" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fe7614ef728"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe7614efa78"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe7614efc00"/>
        <function-ref name="start" scoped="" ref="0x7fe7614efd88"/>
        <function-ref name="stop" scoped="" ref="0x7fe7614ee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe7614ed208" loc="52:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fe7614ed208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fe762b95bb8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe7614ed558"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe7614ed6e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7614ed868"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7614ed9f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe7614edb78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe7614ef110" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe7614ef110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7614ef460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe7614ee760" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fe7614ee760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fe762b95bb8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe7614eeab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe7614eb8f8" loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fe7614eb8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe7614ebc48"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe7614ebdd0"/>
        <function-ref name="led1On" scoped="" ref="0x7fe7614ea020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe7614ea1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe7614ea330"/>
        <function-ref name="get" scoped="" ref="0x7fe7614ea4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe7614ea640"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe7614eac60"/>
        <function-ref name="set" scoped="" ref="0x7fe7614ea7c8"/>
        <function-ref name="led0On" scoped="" ref="0x7fe7614ea950"/>
        <function-ref name="led2On" scoped="" ref="0x7fe7614eaad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7fe7614eb020" loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7fe7614eb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fe762b95bb8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7fe7614eb370"/>
        <function-ref name="offset" scoped="" ref="0x7fe7614eb4f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7fe7614eb680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fe7614c8da8" loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fe7614c8da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe7614c7170"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe7614c72f8"/>
        <function-ref name="start" scoped="" ref="0x7fe7614c7480"/>
        <function-ref name="stop" scoped="" ref="0x7fe7614c7608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7fe761465830" loc="332:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x7fe761465830"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe761465b80"/>
        <function-ref name="runTask" scoped="" ref="0x7fe761465d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7fe7614b6398" loc="74:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x7fe7614b6398"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe7614b66e8"/>
        <function-ref name="stop" scoped="" ref="0x7fe7614b6870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7fe76149bd70" loc="191:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x7fe76149bd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe76149a0f0"/>
        <function-ref name="runTask" scoped="" ref="0x7fe76149a278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe7614c8790" loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe7614c8790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7614c8ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7fe7614b3e40" loc="75:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x7fe7614b3e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7fe7614b51c0"/>
        <function-ref name="flush" scoped="" ref="0x7fe7614b5348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7fe761467020" loc="322:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x7fe761467020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe761467370"/>
        <function-ref name="runTask" scoped="" ref="0x7fe7614674f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7fe7614b8b38" loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x7fe7614b8b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7fe7614c0020"/>
        <function-ref name="resetSend" scoped="" ref="0x7fe7614c01a8"/>
        <function-ref name="dataReceived" scoped="" ref="0x7fe7614c0330"/>
        <function-ref name="resetReceive" scoped="" ref="0x7fe7614c04b8"/>
        <function-ref name="putData" scoped="" ref="0x7fe7614c0640"/>
        <function-ref name="putDone" scoped="" ref="0x7fe7614c07c8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7fe7614c0950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe7614c0bc8" loc="73:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fe7614c0bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe7614bc020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe7614bc1a8"/>
        <function-ref name="led1On" scoped="" ref="0x7fe7614bc330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe7614bc4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe7614bc640"/>
        <function-ref name="get" scoped="" ref="0x7fe7614bc7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe7614bc950"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe7614b6020"/>
        <function-ref name="set" scoped="" ref="0x7fe7614bcad8"/>
        <function-ref name="led0On" scoped="" ref="0x7fe7614bcc60"/>
        <function-ref name="led2On" scoped="" ref="0x7fe7614bcde8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7fe761461918" loc="341:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7fe761461918"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe761461c68"/>
        <function-ref name="runTask" scoped="" ref="0x7fe761461df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7fe7614c1950" loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x7fe7614c1950"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7fe7614c1ca0"/>
        <function-ref name="nextByte" scoped="" ref="0x7fe7614c1e28"/>
        <function-ref name="startSend" scoped="" ref="0x7fe7614c6020"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7fe7614c61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7fe7614beb48" loc="68:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fe7614beb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7fe7614c5020"/>
        <function-ref name="byteReceived" scoped="" ref="0x7fe7614c51a8"/>
        <function-ref name="endPacket" scoped="" ref="0x7fe7614c5330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7fe76139d100" loc="275:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x7fe76139d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe76139d450"/>
        <function-ref name="runTask" scoped="" ref="0x7fe76139d5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe7613a1020" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fe7613a1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fe762b95bb8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe7613a1390"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe7613a1518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7613a16a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7613a1828"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe7613a19b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7fe76139d8a0" loc="158:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x7fe76139d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe76139dbf0"/>
        <function-ref name="runTask" scoped="" ref="0x7fe76139dd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe7613a3868" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fe7613a3868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fe762b95bb8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe7613a3bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7fe7613a1db8" loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x7fe7613a1db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fe762b95bb8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7fe7613a0170"/>
        <function-ref name="offset" scoped="" ref="0x7fe7613a02f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7fe7613a0480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe76139fa50" loc="57:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fe76139fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe76139fda0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe76139e020"/>
        <function-ref name="led1On" scoped="" ref="0x7fe76139e1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe76139e330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe76139e4b8"/>
        <function-ref name="get" scoped="" ref="0x7fe76139e640"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe76139e7c8"/>
        <function-ref name="led2On" scoped="" ref="0x7fe76139ede8"/>
        <function-ref name="set" scoped="" ref="0x7fe76139ead8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe76139e950"/>
        <function-ref name="led0On" scoped="" ref="0x7fe76139ec60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7fe76139f020" loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x7fe76139f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7fe76139f370"/>
        <function-ref name="nextByte" scoped="" ref="0x7fe76139f4f8"/>
        <function-ref name="startSend" scoped="" ref="0x7fe76139f680"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7fe76139f808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7fe7613a06c8" loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fe7613a06c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7fe7613a0a18"/>
        <function-ref name="byteReceived" scoped="" ref="0x7fe7613a0ba0"/>
        <function-ref name="endPacket" scoped="" ref="0x7fe7613a0d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7fe76138b448" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7fe76138b448"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe76138b798"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fe76138b920"/>
        <function-ref name="receive" scoped="" ref="0x7fe76138baa8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fe76138bc30"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fe76138bdb8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fe761397020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe7613971a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7fe76139bb30" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x7fe76139bb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7fe76139be80"/>
        <function-ref name="resetSend" scoped="" ref="0x7fe761398030"/>
        <function-ref name="dataReceived" scoped="" ref="0x7fe7613981b8"/>
        <function-ref name="resetReceive" scoped="" ref="0x7fe761398340"/>
        <function-ref name="putData" scoped="" ref="0x7fe7613984c8"/>
        <function-ref name="putDone" scoped="" ref="0x7fe761398650"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7fe7613987d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe761397420" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fe761397420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe761397770"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe7613978f8"/>
        <function-ref name="led1On" scoped="" ref="0x7fe761397a80"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe761397c08"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe761397d90"/>
        <function-ref name="get" scoped="" ref="0x7fe76138c020"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe76138c1a8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe76138c7c8"/>
        <function-ref name="set" scoped="" ref="0x7fe76138c330"/>
        <function-ref name="led0On" scoped="" ref="0x7fe76138c4b8"/>
        <function-ref name="led2On" scoped="" ref="0x7fe76138c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fe76136b290" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7fe76136b290"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe76136b5e0"/>
        <function-ref name="receive" scoped="" ref="0x7fe76136b768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fe7613710c0" loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7fe7613710c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe761371410"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fe761371598"/>
        <function-ref name="receive" scoped="" ref="0x7fe761371720"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fe7613718a8"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fe761371a30"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fe761371bb8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe761371d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fe76139a8b0" loc="40:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fe76139a8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe76139ac00"/>
        <function-ref name="stop" scoped="" ref="0x7fe76139ad88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fe76136faf0" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7fe76136faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe76136fe40"/>
        <function-ref name="receive" scoped="" ref="0x7fe76136a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fe76136a310" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7fe76136a310"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe76136a660"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fe76136a7e8"/>
        <function-ref name="receive" scoped="" ref="0x7fe76136a970"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fe76136aaf8"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fe76136ac80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fe76136ae08"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe761369020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fe761369598" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fe761369598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TMicro" ref="0x7fe762ca1788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe7613683a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe761368cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe761368830"/>
        <function-ref name="overflow" scoped="" ref="0x7fe761366190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fe76136f338" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fe76136f338"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe76136f688"/>
        <function-ref name="stop" scoped="" ref="0x7fe76136f810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fe761364e58" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7fe761364e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe7613231e8"/>
        <function-ref name="receive" scoped="" ref="0x7fe761323370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x7fe7613225f8" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x7fe7613225f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe761322948"/>
        <function-ref name="stop" scoped="" ref="0x7fe761322ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe761364120" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe761364120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe761364470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fe7613235f8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7fe7613235f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe761323948"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fe761323ad0"/>
        <function-ref name="receive" scoped="" ref="0x7fe761323c58"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fe761323de0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fe761322020"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fe7613221a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe761322330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fe76131fc60" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fe76131fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TMicro" ref="0x7fe762ca1788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe76131e9f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe76131d330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe76131ee78"/>
        <function-ref name="overflow" scoped="" ref="0x7fe76131d7b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x7fe7613205c0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x7fe7613205c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fe761320910"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fe761320a98"/>
        <function-ref name="rxDone" scoped="" ref="0x7fe761320c20"/>
        <function-ref name="txDone" scoped="" ref="0x7fe761320da8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fe76131f020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fe76131f1a8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fe76131f330"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7fe76131f4b8"/>
        <function-ref name="tx" scoped="" ref="0x7fe76131f640"/>
        <function-ref name="rx" scoped="" ref="0x7fe76131f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fe7613646f8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fe7613646f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe761364a48"/>
        <function-ref name="stop" scoped="" ref="0x7fe761364bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x7fe761322d98" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x7fe761322d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe761320170"/>
        <function-ref name="stop" scoped="" ref="0x7fe7613202f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7fe761301860" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7fe761301860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fe761301bb0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fe761301d38"/>
        <function-ref name="rxDone" scoped="" ref="0x7fe761300020"/>
        <function-ref name="txDone" scoped="" ref="0x7fe7613001a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fe761300330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fe7613004b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fe761300640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7fe7613007c8"/>
        <function-ref name="tx" scoped="" ref="0x7fe761300950"/>
        <function-ref name="rx" scoped="" ref="0x7fe761300ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7fe7612fe020" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7fe7612fe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fe7612fe370"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fe7612fe4f8"/>
        <function-ref name="rxDone" scoped="" ref="0x7fe7612fe680"/>
        <function-ref name="txDone" scoped="" ref="0x7fe7612fe808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fe7612fe990"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fe7612feb18"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fe7612feca0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7fe7612fee28"/>
        <function-ref name="tx" scoped="" ref="0x7fe7612fd020"/>
        <function-ref name="rx" scoped="" ref="0x7fe7612fd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7fe761301020" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7fe761301020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe761301370"/>
        <function-ref name="stop" scoped="" ref="0x7fe7613014f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7fe761300e58" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7fe761300e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe7612ff1e8"/>
        <function-ref name="stop" scoped="" ref="0x7fe7612ff370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7fe7612ff6f0" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7fe7612ff6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe7612ffa40"/>
        <function-ref name="stop" scoped="" ref="0x7fe7612ffbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7fe761302700" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7fe761302700"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe761302a50"/>
        <function-ref name="stop" scoped="" ref="0x7fe761302bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x7fe7612fa020" loc="114:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x7fe7612fa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7612fa370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7fe7612f88a0" loc="117:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7fe7612f88a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fe7612f8bf0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fe7612f8d78"/>
        <function-ref name="rxDone" scoped="" ref="0x7fe7612f7020"/>
        <function-ref name="txDone" scoped="" ref="0x7fe7612f71a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fe7612f7330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fe7612f74b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fe7612f7640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7fe7612f77c8"/>
        <function-ref name="tx" scoped="" ref="0x7fe7612f7950"/>
        <function-ref name="rx" scoped="" ref="0x7fe7612f7ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x7fe7612f7e30" loc="119:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x7fe7612f7e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7612f61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7fe7612f56d8" loc="122:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7fe7612f56d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fe7612f5a28"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fe7612f5bb0"/>
        <function-ref name="rxDone" scoped="" ref="0x7fe7612f5d38"/>
        <function-ref name="txDone" scoped="" ref="0x7fe7612f4020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fe7612f41a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fe7612f4330"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fe7612f44b8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7fe7612f4640"/>
        <function-ref name="tx" scoped="" ref="0x7fe7612f47c8"/>
        <function-ref name="rx" scoped="" ref="0x7fe7612f4950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7fe7612f8020" loc="116:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7fe7612f8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe7612f8370"/>
        <function-ref name="stop" scoped="" ref="0x7fe7612f84f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7fe7612f6568" loc="120:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7fe7612f6568"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe7612f68b8"/>
        <function-ref name="stop" scoped="" ref="0x7fe7612f6a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7fe7612f6e00" loc="121:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7fe7612f6e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe7612f51a8"/>
        <function-ref name="stop" scoped="" ref="0x7fe7612f5330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7fe7612f4c70" loc="124:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fe7612f4c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7fe7612f3020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7fe7612f31a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7fe7612f3330"/>
        <function-ref name="actualMicro" scoped="" ref="0x7fe7612f34b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7fe7612f3640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7fe7612f3950" loc="125:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7fe7612f3950"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fe7612f3ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7fe7612fa730" loc="115:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7fe7612fa730"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe7612faa80"/>
        <function-ref name="stop" scoped="" ref="0x7fe7612fac08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fe761295188" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fe761295188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TMicro" ref="0x7fe762ca1788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe761294020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe761294930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe7612944a8"/>
        <function-ref name="overflow" scoped="" ref="0x7fe761294db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fe76128e020" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fe76128e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TThree" ref="0x7fe762c61d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe76128ed70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe76128d6b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe76128d230"/>
        <function-ref name="overflow" scoped="" ref="0x7fe76128db40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fe761285c90" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fe761285c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7fe761284020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fe7612841a8"/>
        <function-ref name="getControlA" scoped="" ref="0x7fe761284330"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fe7612844b8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fe761284640"/>
        <function-ref name="setControlB" scoped="" ref="0x7fe7612847c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fe761284950"/>
        <function-ref name="getControlB" scoped="" ref="0x7fe761284ad8"/>
        <function-ref name="setControlC" scoped="" ref="0x7fe761284c60"/>
        <function-ref name="setControlA" scoped="" ref="0x7fe761284de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fe761283350" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7fe761283350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7fe76127f580"/>
        <function-ref name="test" scoped="" ref="0x7fe761280c20"/>
        <function-ref name="get" scoped="" ref="0x7fe761282020"/>
        <function-ref name="captured" scoped="" ref="0x7fe761282980"/>
        <function-ref name="reset" scoped="" ref="0x7fe761282e58"/>
        <function-ref name="isOn" scoped="" ref="0x7fe76127f0f8"/>
        <function-ref name="set" scoped="" ref="0x7fe7612824a8"/>
        <function-ref name="start" scoped="" ref="0x7fe761280310"/>
        <function-ref name="stop" scoped="" ref="0x7fe761280798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fe76127e1c8" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fe76127e1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fe76127b930"/>
        <function-ref name="fired" scoped="" ref="0x7fe76127c6d0"/>
        <function-ref name="get" scoped="" ref="0x7fe76127ed48"/>
        <function-ref name="reset" scoped="" ref="0x7fe76127cb58"/>
        <function-ref name="isOn" scoped="" ref="0x7fe76127bdb8"/>
        <function-ref name="set" scoped="" ref="0x7fe76127c1f8"/>
        <function-ref name="start" scoped="" ref="0x7fe76127b020"/>
        <function-ref name="stop" scoped="" ref="0x7fe76127b4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe76128cc30" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fe76128cc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fe761286db8"/>
        <function-ref name="test" scoped="" ref="0x7fe7612864a8"/>
        <function-ref name="get" scoped="" ref="0x7fe761289820"/>
        <function-ref name="setScale" scoped="" ref="0x7fe761285270"/>
        <function-ref name="getScale" scoped="" ref="0x7fe761285748"/>
        <function-ref name="reset" scoped="" ref="0x7fe761288658"/>
        <function-ref name="overflow" scoped="" ref="0x7fe7612881d0"/>
        <function-ref name="isOn" scoped="" ref="0x7fe761286930"/>
        <function-ref name="set" scoped="" ref="0x7fe761289ca8"/>
        <function-ref name="start" scoped="" ref="0x7fe761288ae0"/>
        <function-ref name="stop" scoped="" ref="0x7fe761286020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fe7612713d0" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fe7612713d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7fe761271720"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fe7612718a8"/>
        <function-ref name="getControlA" scoped="" ref="0x7fe761271a30"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fe761271bb8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fe761271d40"/>
        <function-ref name="setControlB" scoped="" ref="0x7fe761270020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fe7612701a8"/>
        <function-ref name="getControlB" scoped="" ref="0x7fe761270330"/>
        <function-ref name="setControlC" scoped="" ref="0x7fe7612704b8"/>
        <function-ref name="setControlA" scoped="" ref="0x7fe761270640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7fe76126b4e0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7fe76126b4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fe761269c30"/>
        <function-ref name="fired" scoped="" ref="0x7fe76126a9e8"/>
        <function-ref name="get" scoped="" ref="0x7fe76126a088"/>
        <function-ref name="reset" scoped="" ref="0x7fe76126ae70"/>
        <function-ref name="isOn" scoped="" ref="0x7fe7612670f8"/>
        <function-ref name="set" scoped="" ref="0x7fe76126a510"/>
        <function-ref name="start" scoped="" ref="0x7fe761269320"/>
        <function-ref name="stop" scoped="" ref="0x7fe7612697a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fe761270b18" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7fe761270b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7fe76126cdb8"/>
        <function-ref name="test" scoped="" ref="0x7fe76126c4a8"/>
        <function-ref name="get" scoped="" ref="0x7fe76126f728"/>
        <function-ref name="captured" scoped="" ref="0x7fe76126e0c0"/>
        <function-ref name="reset" scoped="" ref="0x7fe76126e598"/>
        <function-ref name="isOn" scoped="" ref="0x7fe76126c930"/>
        <function-ref name="set" scoped="" ref="0x7fe76126fbb0"/>
        <function-ref name="start" scoped="" ref="0x7fe76126ea20"/>
        <function-ref name="stop" scoped="" ref="0x7fe76126c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7fe761267770" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7fe761267770"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fe761263020"/>
        <function-ref name="fired" scoped="" ref="0x7fe761266d08"/>
        <function-ref name="get" scoped="" ref="0x7fe7612663a8"/>
        <function-ref name="reset" scoped="" ref="0x7fe7612651f8"/>
        <function-ref name="isOn" scoped="" ref="0x7fe7612634a8"/>
        <function-ref name="set" scoped="" ref="0x7fe761266830"/>
        <function-ref name="start" scoped="" ref="0x7fe761265680"/>
        <function-ref name="stop" scoped="" ref="0x7fe761265b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7fe761263b20" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7fe761263b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fe76125f310"/>
        <function-ref name="fired" scoped="" ref="0x7fe7612610c0"/>
        <function-ref name="get" scoped="" ref="0x7fe761262728"/>
        <function-ref name="reset" scoped="" ref="0x7fe761261548"/>
        <function-ref name="isOn" scoped="" ref="0x7fe76125f798"/>
        <function-ref name="set" scoped="" ref="0x7fe761262bb0"/>
        <function-ref name="start" scoped="" ref="0x7fe7612619d0"/>
        <function-ref name="stop" scoped="" ref="0x7fe761261e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe761276298" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fe761276298"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fe7612724a8"/>
        <function-ref name="test" scoped="" ref="0x7fe761274a40"/>
        <function-ref name="get" scoped="" ref="0x7fe761276e18"/>
        <function-ref name="setScale" scoped="" ref="0x7fe761272930"/>
        <function-ref name="getScale" scoped="" ref="0x7fe761272e08"/>
        <function-ref name="reset" scoped="" ref="0x7fe761275c70"/>
        <function-ref name="overflow" scoped="" ref="0x7fe7612757e8"/>
        <function-ref name="isOn" scoped="" ref="0x7fe761272020"/>
        <function-ref name="set" scoped="" ref="0x7fe761275310"/>
        <function-ref name="start" scoped="" ref="0x7fe761274130"/>
        <function-ref name="stop" scoped="" ref="0x7fe7612745b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe7611e9020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe7611e9020"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7fe762d2d388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7fe762d2d388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7611e9370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe7611e9740" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fe7611e9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fe7611e6930"/>
        <function-ref name="test" scoped="" ref="0x7fe7611e6020"/>
        <function-ref name="get" scoped="" ref="0x7fe7611e83a8"/>
        <function-ref name="setScale" scoped="" ref="0x7fe7611e6db8"/>
        <function-ref name="getScale" scoped="" ref="0x7fe7611e42f0"/>
        <function-ref name="reset" scoped="" ref="0x7fe7611e71f8"/>
        <function-ref name="overflow" scoped="" ref="0x7fe7611e8d08"/>
        <function-ref name="isOn" scoped="" ref="0x7fe7611e64a8"/>
        <function-ref name="set" scoped="" ref="0x7fe7611e8830"/>
        <function-ref name="start" scoped="" ref="0x7fe7611e7680"/>
        <function-ref name="stop" scoped="" ref="0x7fe7611e7b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fe7611e2020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fe7611e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TThree" ref="0x7fe762c61d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe7611e2d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe7611e06b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe7611e0230"/>
        <function-ref name="overflow" scoped="" ref="0x7fe7611e0b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe7611df0e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fe7611df0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fe7611db270"/>
        <function-ref name="test" scoped="" ref="0x7fe7611dc930"/>
        <function-ref name="get" scoped="" ref="0x7fe7611dfc60"/>
        <function-ref name="setScale" scoped="" ref="0x7fe7611db6f8"/>
        <function-ref name="getScale" scoped="" ref="0x7fe7611dbbd0"/>
        <function-ref name="reset" scoped="" ref="0x7fe7611dea90"/>
        <function-ref name="overflow" scoped="" ref="0x7fe7611de608"/>
        <function-ref name="isOn" scoped="" ref="0x7fe7611dcdb8"/>
        <function-ref name="set" scoped="" ref="0x7fe7611de130"/>
        <function-ref name="start" scoped="" ref="0x7fe7611dc020"/>
        <function-ref name="stop" scoped="" ref="0x7fe7611dc4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fe7611d5e20" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7fe7611d5e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TThree" ref="0x7fe762c61d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe7611d3be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe7611d2548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe7611d20c0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe7611d29d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fe7611d7c50" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fe7611d7c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe762ca1430"/>
            <typename><typedef-ref name="TMicro" ref="0x7fe762ca1788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe7611d69f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe7611d5330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe7611d6e78"/>
        <function-ref name="overflow" scoped="" ref="0x7fe7611d57b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7fe7611ca6e0" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x7fe7611ca6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7fe7611caa30"/>
        <function-ref name="offset" scoped="" ref="0x7fe7611cabb8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7fe7611cad40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fe7611afe80" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="TestNetworkAppC.UARTSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fe7611afe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe7611ae1f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe7611ae380"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7611ae508"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7611ae690"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe7611ae818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe7611aea60" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="TestNetworkAppC.UARTSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fe7611aea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7611aedb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe7611ad020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe7611ad1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe7611ad330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe7611ad4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fe7611ad700" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="TestNetworkAppC.UARTSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fe7611ad700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe7611ada50"/>
        <function-ref name="source" scoped="" ref="0x7fe7611adbd8"/>
        <function-ref name="address" scoped="" ref="0x7fe7611add60"/>
        <function-ref name="destination" scoped="" ref="0x7fe7611ac020"/>
        <function-ref name="setSource" scoped="" ref="0x7fe7611ac1a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe7611ac330"/>
        <function-ref name="type" scoped="" ref="0x7fe7611ac4b8"/>
        <function-ref name="setType" scoped="" ref="0x7fe7611ac640"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe7611ac7c8"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe7611ac950"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe7611acad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fe7611acd60" loc="52:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="TestNetworkAppC.UARTSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7fe7611acd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fe7611ab0d8"/>
        <function-ref name="noAck" scoped="" ref="0x7fe7611ab260"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fe7611ab3e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fe76065caf8" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestNetworkAppC.UARTSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fe76065caf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe76065ce48"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe76065b020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe76065b1a8"/>
        <function-ref name="cancel" scoped="" ref="0x7fe76065b330"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe76065b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7fe76065b760" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestNetworkAppC.UARTSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fe76065b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe76065bab0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe76065bc38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe76065bdc0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe76065a020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe76065a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fe76065a3f0" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestNetworkAppC.UARTSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fe76065a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe76065a740"/>
        <function-ref name="source" scoped="" ref="0x7fe76065a8c8"/>
        <function-ref name="address" scoped="" ref="0x7fe76065aa50"/>
        <function-ref name="destination" scoped="" ref="0x7fe76065abd8"/>
        <function-ref name="setSource" scoped="" ref="0x7fe76065ad60"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe760659020"/>
        <function-ref name="type" scoped="" ref="0x7fe7606591a8"/>
        <function-ref name="setType" scoped="" ref="0x7fe760659330"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe7606594b8"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe760659640"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe7606597c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionDebug" ref="0x7fe7611aaca8" loc="4:/opt/tinyos-2.1.2/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x7fe7611aaca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x7fe7611a7020"/>
        <function-ref name="logEventMsg" scoped="" ref="0x7fe7611a71a8"/>
        <function-ref name="logEventSimple" scoped="" ref="0x7fe7611a7330"/>
        <function-ref name="logEventRoute" scoped="" ref="0x7fe7611a74b8"/>
        <function-ref name="logEventDbg" scoped="" ref="0x7fe7611a7640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fe7611a7938" loc="7:/opt/tinyos-2.1.2/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fe7611a7938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fe7611a7c88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTSend" ref="0x7fe76119e020" loc="10:/opt/tinyos-2.1.2/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UARTSend" scoped="" ref="0x7fe76119e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe76119e370"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe76119e4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe76119e680"/>
        <function-ref name="cancel" scoped="" ref="0x7fe76119e808"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe76119e990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x7fe7611a3a68" loc="9:/opt/tinyos-2.1.2/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0x7fe7611a3a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
              <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7fe7611a0470"/>
        <function-ref name="enqueue" scoped="" ref="0x7fe76119f158"/>
        <function-ref name="element" scoped="" ref="0x7fe76119f788"/>
        <function-ref name="maxSize" scoped="" ref="0x7fe7611a0020"/>
        <function-ref name="dequeue" scoped="" ref="0x7fe7611a0ad0"/>
        <function-ref name="empty" scoped="" ref="0x7fe7611a2620"/>
        <function-ref name="size" scoped="" ref="0x7fe7611a2a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7fe761196a88" loc="36:/opt/tinyos-2.1.2/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x7fe761196a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe761196dd8"/>
        <function-ref name="runTask" scoped="" ref="0x7fe761195020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MessagePool" ref="0x7fe7611a61b8" loc="8:/opt/tinyos-2.1.2/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MessagePool" scoped="" ref="0x7fe7611a61b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
            <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe7611a3158"/>
        <function-ref name="maxSize" scoped="" ref="0x7fe7611a5610"/>
        <function-ref name="empty" scoped="" ref="0x7fe7611a6d00"/>
        <function-ref name="put" scoped="" ref="0x7fe7611a5a60"/>
        <function-ref name="size" scoped="" ref="0x7fe7611a51c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7fe76115e4e0" loc="43:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
      <component-ref qname="TestNetworkAppC.QueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fe76115e4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
              <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7fe76115dd78"/>
        <function-ref name="enqueue" scoped="" ref="0x7fe76115ba68"/>
        <function-ref name="element" scoped="" ref="0x7fe76115a0c0"/>
        <function-ref name="maxSize" scoped="" ref="0x7fe76115d928"/>
        <function-ref name="dequeue" scoped="" ref="0x7fe76115b408"/>
        <function-ref name="empty" scoped="" ref="0x7fe76115d088"/>
        <function-ref name="size" scoped="" ref="0x7fe76115d4d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7fe761158128" loc="42:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <component-ref qname="TestNetworkAppC.PoolC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7fe761158128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
            <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe761155088"/>
        <function-ref name="maxSize" scoped="" ref="0x7fe761156548"/>
        <function-ref name="empty" scoped="" ref="0x7fe761158c70"/>
        <function-ref name="put" scoped="" ref="0x7fe761156998"/>
        <function-ref name="size" scoped="" ref="0x7fe7611560f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7fe76063da30" loc="56:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="TestNetworkAppC.PoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7fe76063da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
            <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe76063b980"/>
        <function-ref name="maxSize" scoped="" ref="0x7fe76063ce40"/>
        <function-ref name="empty" scoped="" ref="0x7fe76063c5a0"/>
        <function-ref name="put" scoped="" ref="0x7fe76063b2d8"/>
        <function-ref name="size" scoped="" ref="0x7fe76063c9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe76063d390" loc="55:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="TestNetworkAppC.PoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe76063d390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe76063d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7fe76114fd50" loc="42:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <component-ref qname="TestNetworkAppC.DebugMessagePool"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7fe76114fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
            <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe76114ccb8"/>
        <function-ref name="maxSize" scoped="" ref="0x7fe76114c1c0"/>
        <function-ref name="empty" scoped="" ref="0x7fe76114d8f0"/>
        <function-ref name="put" scoped="" ref="0x7fe76114c610"/>
        <function-ref name="size" scoped="" ref="0x7fe76114dd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7fe76062bc98" loc="56:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="TestNetworkAppC.DebugMessagePool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7fe76062bc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
            <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe760628bf0"/>
        <function-ref name="maxSize" scoped="" ref="0x7fe7606280f8"/>
        <function-ref name="empty" scoped="" ref="0x7fe76062a820"/>
        <function-ref name="put" scoped="" ref="0x7fe760628548"/>
        <function-ref name="size" scoped="" ref="0x7fe76062ac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe76062b5f8" loc="55:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="TestNetworkAppC.DebugMessagePool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe76062b5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe76062b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7fe761148020" loc="43:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
      <component-ref qname="TestNetworkAppC.DebugSendQueue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fe761148020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
              <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7fe7611478c0"/>
        <function-ref name="enqueue" scoped="" ref="0x7fe761146680"/>
        <function-ref name="element" scoped="" ref="0x7fe761146cb0"/>
        <function-ref name="maxSize" scoped="" ref="0x7fe761147470"/>
        <function-ref name="dequeue" scoped="" ref="0x7fe761146020"/>
        <function-ref name="empty" scoped="" ref="0x7fe761148b68"/>
        <function-ref name="size" scoped="" ref="0x7fe761147020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="RootControl" loc="40:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x7fe762b59258" loc="43:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x7fe762b5a4a8" loc="41:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x7fe762b5ab68" loc="42:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionPacket" loc="42:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x7fe762b45940" loc="50:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762b45398" loc="50:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x7fe762b456c0" loc="50:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x7fe762b49c70" loc="44:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762b496b8" loc="44:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fe762b499f0" loc="44:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7fe762b472e0" loc="47:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x7fe762c19278"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762b48cb0" loc="47:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x7fe762b47060" loc="47:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x7fe762c19278"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x7fe762b49020" loc="43:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762b58ca8" loc="43:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x7fe762b47c80" loc="49:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762b47a10" loc="49:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x7fe762b48630" loc="46:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x7fe762c19278"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762b483c0" loc="46:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionDebug" loc="59:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
        <short> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure.</short>
        <long> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure. An implementer can choose to send the event&#10;  information to different destinations. Primary examples can include:&#10;  &#60;ul>&#10;    &#60;li> logging to the UART, in case of a testbed of network-connected&#10;         nodes;&#10;    &#60;li> logging to flash, if the logs are to be retrieved later&#10;    &#60;li> logging to the standard output, in the case of TOSSIM.&#10;  &#60;/ul>&#10;  &#10;  The interface does not specify in what format the log is to be produced,&#10;  or if other information, like timestamps, should be added, and this is&#10;  up to the implementer.&#10; &#10;  Some commands are generic, like Event, EventSimple, and EventDbg, while others&#10;  are for more specific events related to collection, like EventRoute and EventMsg.&#10;&#10; @author Rodrigo Fonseca&#10; @author Kyle Jamieson&#10; @date   $Date: 2010-06-29 22:07:47 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="logEvent" ref="0x7fe762b21af0" loc="61:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7fe762b21880" loc="61:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventMsg" ref="0x7fe762b1c020" loc="73:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7fe762b1d358" loc="73:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fe762b1d678" loc="73:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </variable>
          <variable name="origin" ref="0x7fe762b1d9c0" loc="73:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </variable>
          <variable name="node" ref="0x7fe762b1dcf8" loc="73:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventSimple" ref="0x7fe762b207d8" loc="64:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7fe762b20238" loc="64:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
          <variable name="arg" ref="0x7fe762b20558" loc="64:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventRoute" ref="0x7fe762b1b3a8" loc="79:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7fe762b1c708" loc="79:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
          <variable name="parent" ref="0x7fe762b1ca50" loc="79:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </variable>
          <variable name="hopcount" ref="0x7fe762b1cd98" loc="79:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
          <variable name="metric" ref="0x7fe762b1b108" loc="79:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventDbg" ref="0x7fe762b1ec50" loc="67:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7fe762b1e020" loc="67:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
          <variable name="arg1" ref="0x7fe762b1e350" loc="67:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </variable>
          <variable name="arg2" ref="0x7fe762b1e680" loc="67:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </variable>
          <variable name="arg3" ref="0x7fe762b1e9b0" loc="67:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7fe762bfd490" loc="60:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7fe762bfb698" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fe762bfb428" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7fe762bf9a88" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fe762bf9818" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fe762bffa68" loc="104:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fe762bfbe80" loc="130:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fe762b52128" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fe762b5b7a8" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fe762b5bb08" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe762b5be18" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fe762b4e460" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762b4de70" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe762b4e1a8" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fe762b4d668" loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fe762b513d0" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762b51160" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fe762b50820" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762b50278" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fe762b505a0" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7fe762b34140" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fe762b34140"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7fe762b32020" loc="73:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fe762b34140"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7fe762b308e8" loc="90:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fe762b34140"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7fe762b30678" loc="90:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fe762b34140"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7fe763613488"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0x7fe763613488"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7fe762b2e7b0" loc="101:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fe762b34140"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fe762b2e540" loc="101:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7fe762b33868" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fe762b32b40" loc="81:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fe762b34140"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7fe762b34968" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7fe762b330d8" loc="58:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7fe762b2ca98" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fe762b2ca98"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fe762b259b8" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fe762b2ca98"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7fe762b28360" loc="80:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7fe762b29328" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x7fe762b28d28" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fe762b2ca98"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7fe762b28ab8" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fe762b2ca98"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7fe762b29b10" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fe762bf6450" loc="95:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fe762bf6bf0" loc="105:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
      <function command="" provided="0" name="send" ref="0x7fe762b81dd8" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762b81848" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe762b81b58" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fe762b7b2d8" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762b7cc90" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe762b7b020" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fe762b7c488" loc="112:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fe762b7f0a8" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762b80e08" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fe762b7d5c8" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762b7d020" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fe762b7d348" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpInfo" loc="44:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
      <function command="" provided="0" name="getNeighborLinkQuality" ref="0x7fe762b3d378" loc="96:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7fe762b3d108" loc="96:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="recomputeRoutes" ref="0x7fe762b409c8" loc="83:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
          <short> &#10; Tell the routing engine it might want to recompute its routes.</short>
          <long> &#10; Tell the routing engine it might want to recompute its routes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="numNeighbors" ref="0x7fe762b3e9c0" loc="95:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerRouteUpdate" ref="0x7fe762b42938" loc="71:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.</short>
          <long>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x7fe762b420a8" loc="64:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the ETX for the current path to the root through the current&#10; parent.</short>
          <long>&#10; Get the ETX for the current path to the root through the current&#10; parent. Sets etx argument to ETX*10.  The pointer is allocated by&#10; the caller.  If the parent is invalid, return FAIL (no info).&#10; The caller MUST NOT use the value in parent if the return is not&#10; SUCCESS. Calling getEtx at the root will set the etx argument to&#10; 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="etx" ref="0x7fe762b43de8" loc="64:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerImmediateRouteUpdate" ref="0x7fe762b401d8" loc="78:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.</short>
          <long>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setNeighborCongested" ref="0x7fe762b3f768" loc="88:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Informs the routing engine that a neighbor is congested&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7fe762b3f1b0" loc="88:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </variable>
          <variable name="congested" ref="0x7fe762b3f4e8" loc="88:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborAddr" ref="0x7fe762b3b6a8" loc="98:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7fe762b3b438" loc="98:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x7fe762b43610" loc="53:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the parent of the node in the tree.</short>
          <long>&#10; Get the parent of the node in the tree.  The pointer is allocated&#10; by the caller.  If the parent is invalid, return FAIL.  The&#10; caller MUST NOT use the value in parent if the return is not&#10; SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="parent" ref="0x7fe762b433a0" loc="53:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborRouteQuality" ref="0x7fe762b3dd00" loc="97:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7fe762b3da90" loc="97:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isNeighborCongested" ref="0x7fe762b3e290" loc="93:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10;  Returns the currently known state about a neighbor's congestion state&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7fe762b3e020" loc="93:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationValue" loc="44:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <short>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.</short>
        <long>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10;&#10; @date   Jan 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7fe762bf7870" loc="44:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <interfacedef-ref qname="DisseminationValue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fe762bf7870"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="changed" ref="0x7fe762bf1328" loc="69:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Signalled whenever variable may have changed.</short>
          <long>&#10; Signalled whenever variable may have changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fe762bf3110" loc="55:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Obtain a pointer to the variable.</short>
          <long>&#10; Obtain a pointer to the variable. The provider of this&#10; interface only will change the memory the pointer references&#10; in tasks. Therefore the memory region does not change during&#10; the execution of any other task. A user of this interface&#10; must not in any circumstance write to this memory location.&#10;&#10; @return A const pointer to the variable.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fe762bf7870"/></type-var>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fe762bf3b08" loc="64:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Set the variable to a new value.</short>
          <long>&#10; Set the variable to a new value. The provider of this interface&#10; will copy the value from the pointer. NOTE: This command does&#10; not cause the new value to begin disseminating. It is intended to&#10; be used for setting default values.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fe762bf7870"/></type-var>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x7fe762bf3898" loc="64:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fe762bf7870"/></type-var>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fe762b6d3d8" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fe762b6d3d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fe762b6dc10" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fe762b6b8d0" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fe762b6d3d8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fe762b6b350" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fe762b6b650" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fe762b6d3d8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7fe762b36110" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7fe762b3a940" loc="46:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fe762b56160" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
              <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762b5c808" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7fe762b5cb30" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe762b5ce40" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpCongestion" loc="1:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpCongestion.nc">
      <function command="" provided="0" name="isCongested" ref="0x7fe762b44800" loc="7:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClientCongested" ref="0x7fe762b38290" loc="14:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="congested" ref="0x7fe762b38020" loc="14:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpCongestion.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fe762b06020" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762b19c18" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7fe762b05020" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762b06d58" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fe762b01150" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762b02b20" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe762b02e30" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fe762b02290" loc="106:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7fe762b043e0" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762b05e00" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe762b04160" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7fe762b758f0" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7fe762b74070" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7fe762b747e0" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7fe762b72758" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7fe762b71e70" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fe762b70630" loc="117:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7fe762b72020" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fe762b6f290" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fe762b6f020" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7fe762b751d8" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7fe762b71020" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7fe762b71738" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7fe762b0d790" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fe762c203d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fe762b0d520" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7fe762b158b8" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fe762b15648" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7fe762b23df8" loc="68:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7fe762b178a0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fe762b17630" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7fe762b13050" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fe762b12a68" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fe762b12da0" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7fe762b14bf0" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fe762b14638" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fe762b14970" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7fe762b0f3e0" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fe762b0f170" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7fe762b0e680" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fe762b0e100" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7fe762b0e400" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fe762c20020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7fe762b11290" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fe762b11020" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7fe762b0ab48" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fe762c203d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fe762b0a598" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7fe762b0a8c8" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fe762c203d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7fe762b098e8" loc="195:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fe762c203d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe762b6eb58" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe762b6eb58"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fe762b61760" loc="136:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fe762b65020" loc="83:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7fe762b64cf0" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fe762b64758" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fe762b64a70" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7fe762b64020" loc="98:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7fe762b606b0" loc="151:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7fe762b61e80" loc="144:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fe762b65798" loc="92:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7fe762b686b0" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fe762b68440" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7fe762b63d28" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fe762b63790" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fe762b63aa8" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7fe762b67118" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fe762b68e80" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fe762b678c0" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7fe762d07070" loc="67:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7fe762d07860" loc="75:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fe762abbc70" loc="62:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7fe762ab0ae0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7fe762ab0870" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7fe762ab22a8" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7fe762ab2ca0" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7fe762ab2a30" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7fe762ab1758" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7fe762ab14e8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7fe762ab0020" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fe762a9fab0" loc="44:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fe762a9e1d8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fe762aa0d20" loc="42:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fe762a9c020" loc="47:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fe762a9f400" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fe762a9e890" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fe762aa0020" loc="40:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fe762aa0690" loc="41:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fe762d12378" loc="57:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7fe762d0f258" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7fe762d12a90" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7fe762c5ae28" loc="76:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7fe762c3a4f8" loc="62:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7fe762ccc940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7fe762c3b020" loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7fe7628c4ad8" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7fe7628c44f8" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fe7628c4858" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7fe7628b7ad0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7628b74e8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7fe7628b7850" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7fe7628b5bc0" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7628b5950" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7fe7628b9c90" loc="57:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7fe7628b9338" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7fe7628b90c8" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7fe7628be0a8" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7628c2dd0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7fe7628bd290" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7628bd020" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7fe7628bb338" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7628bb0c8" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7fe7628afa48" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7628af7d8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7fe7628bad50" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7628ba768" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7fe7628baad0" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7fe7628b2af0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7628b2880" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7fe7628b20b8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7628b1a90" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7fe7628b1df8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7fe7628ad970" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7628ad700" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x7fe7628aa178" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7fe7628b6990" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fe7628b6720" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7fe7628aa950" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7fe7628b3a58" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe7628b3a58"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fe7628b3c88" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe7628b3c88"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7fe7628a6938" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe7628b3c88"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7628a66c8" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7fe7628a4a38" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7628a47c8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7fe7628a87d0" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7628a8560" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fe7628a3c68" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe7628b3c88"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7628a36a8" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7fe7628a39e8" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe7628b3c88"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x7fe76288e6d8" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7fe76288e6d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x7fe76288a6a8" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe76288a438" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fe76288bc88" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7fe76288e6d8"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe76288ba18" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7fe76288b290" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe76288b020" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fe762888388" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7fe76288e6d8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe76288ad98" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7fe762888108" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7fe76288e6d8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe76287f720" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe76287f720"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fe76287b020" loc="61:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7fe76287d020" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762880c50" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fe76285c0d8" loc="120:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7fe76285d178" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7fe76285e848" loc="88:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fe76285d900" loc="102:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fe76285cac0" loc="128:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x7fe762857020" loc="41:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fe762ba88b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762858cc8" loc="41:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7fe76285bbc8" loc="37:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fe762ba88b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7fe7628585b8" loc="39:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fe762ba88b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762858348" loc="39:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7fe762855988" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fe762ba88b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762855398" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fe762855708" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fe762ba88b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7fe762857cd8" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fe762ba88b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7628576e8" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fe762857a58" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fe762ba88b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x7fe762854c30" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7fe762ba84c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7628549c0" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x7fe762853928" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7fe762ba84c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762853348" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7fe7628536a8" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7fe762ba84c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7fe7628542d0" loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762854060" loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7fe762851070" loc="53:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7fe762ba84c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fe762866a70" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fe762ba88b8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fe762866170" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fe762ba88b8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fe7628664d0" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe7628667e0" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fe762862df0" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762862828" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe762862b38" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fe762862020" loc="110:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fe7628647e8" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762864578" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fe7628636e8" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762863140" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fe762863468" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x7fe76280d498" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x7fe7628200a8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762828de0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x7fe762811108" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fe762c203d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762812e30" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x7fe762810758" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7628104e8" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7fe762814a48" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7628147d8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7fe7628153b0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762815140" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7fe762812718" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762812160" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fe762812498" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7fe7628140b8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762815ab8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fe762815df0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7fe762811d88" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fe762c203d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7628117d8" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7fe762811b08" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fe762c203d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x7fe762822cd0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x7fe76281a610" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x7fe762817768" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7628174f8" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x7fe762819108" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe76281ae28" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x7fe762819b90" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762819920" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x7fe7627efb28" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x7fe7627f0ca8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7fe762baa540"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x7fe7627f0a38" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7fe762baa540"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fe7627ef420" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x7fe7627f0258" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x7fe7627ee328" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7fe762baa540"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x7fe7627e8468" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7627e81f8" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7fe7627eb968" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7627eb6f8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fe7627e9020" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7fe7627ea710" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7627ea160" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fe7627ea490" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7fe7627f2e48" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7627f2bd8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7fe7627e9a38" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7627e97c8" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fe762835258" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7fe762838a38" loc="40:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7628387c8" loc="40:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7fe762835d10" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762835aa0" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x7fe762833590" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x7fe762832108" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762833e28" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x7fe762831a18" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7628317a8" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x7fe76282bd68" loc="86:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x7fe76282b600" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe76282b020" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7fe76282b380" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7fe76282f290" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe76282f020" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x7fe76282fd30" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe76282fac0" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x7fe76282dbe0" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe76282d600" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7fe76282d960" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x7fe762837a20" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7fe7628307f0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762830278" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7fe762830570" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7fe76282c718" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe76282c4a8" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x7fe7627fe4e8" loc="131:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7627fe278" loc="131:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x7fe762800cc8" loc="120:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762800a58" loc="120:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x7fe76280b9e0" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe76280b440" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x7fe76280b760" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x7fe762808a90" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762808820" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x7fe7627f92a0" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7627faba0" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fe7627f9020" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x7fe762808020" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe76280ac70" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x7fe7627ffa78" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7627ff4e8" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x7fe7627ff7f8" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x7fe7628063c0" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe762807db8" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7fe762806140" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x7fe7627fa468" loc="151:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7627fa1f8" loc="151:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x7fe76280a468" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe76280a1f8" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x7fe762804d28" loc="99:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762804ab8" loc="99:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x7fe7628042a0" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe762806c10" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7fe762804020" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x7fe7627f67c0" loc="178:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fe762ba88b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7fe7627f9ca0" loc="162:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7627f9a30" loc="162:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7fe7627f6030" loc="173:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7fe762ba84c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x7fe7627fba20" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7627fb470" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fe7627fb7a0" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x7fe7628075b8" loc="81:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762807348" loc="81:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x7fe7628002e0" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762802ce0" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x7fe762800060" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x7fe7627fc2a0" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7627fec40" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x7fe7627fc020" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7fe7627f5290" loc="185:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7627f5020" loc="185:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7fe762803a78" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762803500" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7fe7628037f8" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x7fe762816c88" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762816a18" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7fe7627f77b8" loc="168:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7627f7548" loc="168:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x7fe7627fcca8" loc="141:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7627fca38" loc="141:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x7fe762802538" loc="110:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7628022c8" loc="110:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x7fe7628257a8" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7628251f8" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x7fe762825528" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x7fe762823020" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x7fe762826020" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762836c50" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x7fe762826a40" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7628267d0" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x7fe76281e118" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe76281fe78" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x7fe76281f630" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe76281f3c0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x7fe76281e900" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x7fe76281c3b0" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe76281c140" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe76278cb20" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe76278cb20"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fe76278cd50" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe76278cd50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fe7627847a0" loc="109:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe76278cd50"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fe7627877c0" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7fe762786d70" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe76278cd50"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe76278cd50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fe7627867d0" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe76278cd50"/></type-var>
          </variable>
          <variable name="dt" ref="0x7fe762786af0" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe76278cd50"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fe762786020" loc="88:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7fe762783020" loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe76278cd50"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fe762788848" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe76278cd50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fe7627885d8" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe76278cd50"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fe762787070" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x7fe762776a18" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x7fe762774328" loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x7fe762774c40" loc="79:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x7fe762776328" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x7fe7627418c8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762741658" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fe76273c290" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe76273c020" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fe76273e7a0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe76273e1f8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fe76273e520" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7fe762740c10" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
              <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe762740968" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7fe7627278f8" loc="50:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7fe7627267c8" loc="60:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7fe7627260d8" loc="55:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fe762c203d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7fe762727118" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fe762c203d0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7fe76272aae8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fe762c203d0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fe76272ae20" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7fe762681c90" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fe76267e580" loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7fe762679bf0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7fe762679440" loc="59:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7fe76267b360" loc="90:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7fe76267bb50" loc="98:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7fe762670ac8" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fe76267ac40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fe762670858" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fe76267ac40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7fe762674ae8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7fe7626715e8" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fe76267ac40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fe762671378" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fe76267ac40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fe762670020" loc="70:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7fe76267ac40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7fe762517a78" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
              <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7625177d0" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x7fe76251ae30" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe76251abc0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fe762505be0" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fe762505970" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x7fe762503378" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fe762506970" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fe762506700" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fe7625052d0" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fe762505060" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x7fe76250cb48" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fe76250c8d8" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x7fe762509020" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fe76250bd88" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x7fe76250b620" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fe76250b3b0" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x7fe762509a98" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fe762509828" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x7fe76250c108" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fe76250fe58" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x7fe762479328" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x7fe762478378" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7fe762478d80" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fe762478b10" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x7fe762477538" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x7fe762479b58" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7fe762477d68" loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x7fe76247b9f0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe76247b780" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x7fe762473d88" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fe762473580" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fe762473310" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7fe7623da508" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fe7623da508"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7fe7623d7020" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fe7623da508"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7fe7623dad40" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fe7623da508"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x7fe7623b3e50" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7623b3be0" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fe7623b7dc0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7623b7b50" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x7fe7623b4ad0" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7623b4540" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7fe7623b4850" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fe7623b34e8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7623b3278" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x7fe7623815b8" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fe762381348" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7fe762384b70" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe762303df8" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe762303df8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fe762300068" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe762300068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fe762300900" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe762300068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fe7622ff968" loc="76:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fe7622ff178" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fe7622fe0d8" loc="82:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7fe7622d3488" loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7fe7622d4360" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7fe7622d6110" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7fe7622d4cd0" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fe7622d4a60" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7fe7622d5bb8" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fe7622d5948" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7fe7622d3e00" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7fe7622d3b90" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7fe7622d6840" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7fe7622d5290" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fe7622d5020" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x7fe7622c39a8" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x7fe7622c5a60" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x7fe7622c41d8" loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x7fe7622c49a8" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7fe7622c11d8" loc="98:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x7fe7622c31d8" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7fe7622c8888" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fe762c88978"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7fe762c88d80"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7fe7622c5290" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fe762c88978"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7fe762c88d80"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7fe7622c5020" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fe762c88978"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7fe762c88d80"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7fe7622d9848" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe7622d9848"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7fe7622cb020" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fe7622ce258" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fe7622cf178" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe7622d9848"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fe7622ce960" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7fe7622cb770" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fe7622cfac0" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe7622d9848"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fe7622cf850" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe7622d9848"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fe7622cd0d8" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fe7622cd7c0" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7fe7622e6b60" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fe7622e6b60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7fe7622de020" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7fe7622df178" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fe7622e3438" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fe7622e6b60"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7fe7622de970" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7fe7622de700" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7fe7622dd178" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fe7622e2c00" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fe7622e24e0" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7fe7622df8d0" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fe7622e3d70" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fe7622e6b60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fe7622e3b00" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fe7622e6b60"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fe7622e1328" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fe7622e1a10" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe7620e2908" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe7620e2908"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fe7620e2b38" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe7620e2b38"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7fe7620dc630" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe7620e2b38"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fe7620dc3c0" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe7620e2b38"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7fe7620e01d8" loc="54:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fe7620df290" loc="66:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fe7620e0b00" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fe7620e0890" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7fe7620e39a0" loc="53:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7fe7620e7020" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe7620eace0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7fe7620e5338" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe7620e50c8" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7fe7620e7820" loc="68:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fe7620e5d40" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe7620e5ad0" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7fe761ff84d0" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe761ff84d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7fe761ff0020" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7fe761ff1c98" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7fe761ff2e18" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fe761ff8d88" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe761ff84d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fe761ff4108" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe761ff84d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fe761ff5e28" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe761ff84d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fe761ff4848" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7fe761ff15c0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fe761ff56f0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe761ff84d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fe761ff5480" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe761ff84d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fe761ff2020" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fe761ff2708" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fe761fd8b88" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fe761fd8278" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fe761fd85d8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe761fd88f8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fe761fd4020" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fe761fd72b0" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fe761fd7610" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe761fd7930" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fe761fd7c78" loc="83:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7fe761fda020" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7fe761fddc18" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7fe761fc1328" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7fe761fb8c40" loc="126:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7fe761fbc7a8" loc="117:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7fe761fb7610" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7fe761fb73a0" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7fe761fc2ba8" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7fe761fb9338" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7fe761fb90c8" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7fe761fbd020" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7fe761fbfc88" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7fe761fc01d8" loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7fe761fb3de0" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7fe761fb3b70" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7fe761fbd758" loc="114:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7fe761fb6690" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7fe761fb6420" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7fe761fb4538" loc="136:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7fe761fb8518" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7fe761fb82a8" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7fe761fb34a0" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7fe761fbb290" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7fe761fbb020" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fe761fc0b30" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe761fc08c0" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7fe761fbc0a8" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7fe761fbddf8" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7fe761fb9b48" loc="123:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7fe761fb7d18" loc="129:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7fe761fb6d80" loc="132:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7fe761fb4c80" loc="138:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7fe761fbb9a8" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7fe761fc1a40" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7fe761fbf4e0" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe761fbf270" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fe761f58748" loc="95:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fe761f57020" loc="105:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x7fe761ef71d8" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7fe761ef4578" loc="87:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7fe761ef8328" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7fe761ef3780" loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7fe761ef3020" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fe761ef4c78" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7fe761ef64c0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fe761ef6250" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7fe761ef2290" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7fe761ef2020" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7fe761ef8a58" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x7fe761ef6de8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fe761ef6b78" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7fe761ef7b00" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fe761ef7890" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrickleTimer" loc="57:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
      <function event="" provided="0" name="fired" ref="0x7fe761d4aa78" loc="90:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
        <documentation loc="87:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
          <short>&#10; The trickle timer has fired.</short>
          <long>&#10; The trickle timer has fired. Signaled if C &#38;gt; K.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="incrementCounter" ref="0x7fe761d4a3a0" loc="85:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Increment the counter C.</short>
          <long>&#10; Increment the counter C. When an interval ends, C is set to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fe761d4bbe0" loc="80:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Reset the timer period to L.</short>
          <long>&#10; Reset the timer period to L. If called while the timer is running,&#10; then a new interval (of length L) begins immediately.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fe761d53cf8" loc="68:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Start the trickle timer.</short>
          <long>&#10; Start the trickle timer. At boot, the timer period is its maximum&#10; value (H). If a protocol requires starting at the minimum value&#10; (e.g., fast start), then it should call &#60;tt>reset&#60;/tt> before&#10; &#60;tt>start&#60;/tt>.&#10;&#10; @return error_t SUCCESS if the timer was started, EBUSY if it is already&#10; running, and FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fe761d4b500" loc="74:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Stop the trickle timer.</short>
          <long>&#10; Stop the trickle timer. This call sets the timer period to H and&#10; C to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationCache" loc="44:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <short>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.</short>
        <long>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-04 04:31:08 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestData" ref="0x7fe761d52ac0" loc="47:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="size" ref="0x7fe761d52818" loc="47:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="storeData" ref="0x7fe761d4f020" loc="48:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe761d505b0" loc="48:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x7fe761d508d0" loc="48:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
          <variable name="seqno" ref="0x7fe761d50c08" loc="48:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="newData" ref="0x7fe761d4fd70" loc="50:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="start" ref="0x7fe761d55a90" loc="45:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestSeqno" ref="0x7fe761d4f710" loc="49:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe76360d608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="stop" ref="0x7fe761d52178" loc="46:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationUpdate" loc="48:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
        <short>&#10; Update a network shared (disseminated) value.</short>
        <long>&#10; Update a network shared (disseminated) value. Updates are assured&#10; to be eventually consistent across a connected network. If multiple&#10; nodes update a value simultaneously, then nodes within the network&#10; will see a series of one or more updates, the last update will&#10; be the same for all nodes. Components that need to use the&#10; variable should use the DisseminationValue interface.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10; @date   January 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7fe761c3dd00" loc="48:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
          <interfacedef-ref qname="DisseminationUpdate"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fe761c3dd00"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="change" ref="0x7fe761c3aad0" loc="60:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
          <short>&#10; Update the variable to a new value.</short>
          <long>&#10; Update the variable to a new value. This changes the local copy&#10; and begins to disseminate the new value throughout the network.&#10; As other nodes may have also changed the variable, it is possible&#10; that an update may not 'stick,' but will instead be overwritten by&#10; a separate update.&#10;&#10; @param newVal A pointer to the new value. The memory pointed to&#10; by newVal is copied out, so newVal can be reclaimed when&#10; &#60;tt>change&#60;/tt> returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fe761c3dd00"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7fe761c3a860" loc="60:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fe761c3dd00"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitVector" loc="40:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <short>&#10; Interface to a bit vector.</short>
        <long>&#10; Interface to a bit vector.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearAll" ref="0x7fe761bf24a8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Clear all bits in the vector.</short>
          <long>&#10; Clear all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7fe761bf0990" loc="69:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to clear.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7fe761bf0720" loc="69:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fe761bef338" loc="75:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Toggle a bit in the vector.</short>
          <long>&#10; Toggle a bit in the vector.&#10; @param bitnum Bit to toggle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7fe761bef0c8" loc="75:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fe761bf1518" loc="57:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Read a bit from the vector.</short>
          <long>&#10; Read a bit from the vector.&#10; @param bitnum Bit to read.&#10; @return Bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7fe761bf12a8" loc="57:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="assign" ref="0x7fe761bed020" loc="82:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Write a bit in the vector.</short>
          <long>&#10; Write a bit in the vector.&#10; @param bitnum Bit to clear.&#10; @param value New bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7fe761befa48" loc="82:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x7fe761befd58" loc="82:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAll" ref="0x7fe761bf2ba0" loc="50:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Set all bits in the vector.</short>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fe761bf0020" loc="63:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to set.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7fe761bf1c18" loc="63:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7fe761bed790" loc="88:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Return bit vector length.</short>
          <long>&#10; Return bit vector length.&#10; @return Bit vector length.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Intercept" loc="15:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0x7fe761b595c0" loc="31:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
        <documentation loc="16:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination.</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param 'message_t* ONE msg' The complete message received.&#10;&#10; @param 'void* COUNT(len) payload' The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe761b5cc70" loc="31:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7fe761b59020" loc="31:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe761b59330" loc="31:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpPacket" loc="44:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <short>&#10;  ADT for CTP data frames.</short>
        <long>&#10;  ADT for CTP data frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007-11-28 04:42:52 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSequenceNumber" ref="0x7fe761b47020" loc="64:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe761b49978" loc="64:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x7fe761b49ca0" loc="64:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="option" ref="0x7fe761b51730" loc="52:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7fe762c17738"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe761b51160" loc="52:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x7fe761b514b0" loc="52:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7fe762c17738"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x7fe761b4d2a0" loc="58:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe761b4fca8" loc="58:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x7fe761b4d020" loc="58:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x7fe761b4a880" loc="61:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe761b4a2c8" loc="61:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fe761b4a600" loc="61:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x7fe761b53a60" loc="49:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7fe762c17738"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe761b53470" loc="49:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x7fe761b537e0" loc="49:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7fe762c17738"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x7fe761b4f630" loc="57:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe761b4f3c0" loc="57:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x7fe761b4dc08" loc="60:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe761b4d998" loc="60:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7fe761b465a8" loc="67:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe761b46020" loc="67:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x7fe761b46328" loc="67:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x7fe761b57d48" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7fe762c17738"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe761b57758" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x7fe761b57ac8" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7fe762c17738"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchPacket" ref="0x7fe761b430b8" loc="70:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x7fe761b45a90" loc="70:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x7fe761b45de8" loc="70:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getThl" ref="0x7fe761b500a8" loc="54:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe761b51df0" loc="54:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x7fe761b49290" loc="63:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe761b49020" loc="63:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchInstance" ref="0x7fe761b453c0" loc="69:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x7fe761b46d90" loc="69:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x7fe761b45140" loc="69:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x7fe761b47958" loc="66:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe761b476e8" loc="66:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setThl" ref="0x7fe761b50cb0" loc="55:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe761b50720" loc="55:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="thl" ref="0x7fe761b50a30" loc="55:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionId" loc="45:/opt/tinyos-2.1.2/tos/lib/net/CollectionId.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/CollectionId.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="fetch" ref="0x7fe761b3e258" loc="46:/opt/tinyos-2.1.2/tos/lib/net/CollectionId.nc">
        <interfacedef-ref qname="CollectionId"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x7fe762c19278"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkEstimator" loc="46:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <short> Provides an additive quality measure for a neighbor.</short>
        <long> Provides an additive quality measure for a neighbor. The&#10; provided quality increases when the true link quality increases.&#10;  @author Rodrigo Fonseca&#10;  @author Omprakash Gnawali&#10;  @date   $Date: 2010-06-29 22:07:47 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="txAck" ref="0x7fe761b2c6a8" loc="62:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7fe761b2c438" loc="62:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pinNeighbor" ref="0x7fe761b2d378" loc="55:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7fe761b2d108" loc="55:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="txNoAck" ref="0x7fe761b2b030" loc="66:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7fe761b2cd90" loc="66:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNeighbor" ref="0x7fe761b2f9c0" loc="52:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7fe761b2f750" loc="52:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x7fe761b2a2d0" loc="72:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7fe761b2a060" loc="72:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearDLQ" ref="0x7fe761b2b998" loc="69:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7fe761b2b728" loc="69:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="unpinNeighbor" ref="0x7fe761b2dd10" loc="58:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7fe761b2daa0" loc="58:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLinkQuality" ref="0x7fe761b2f020" loc="49:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7fe761b32d40" loc="49:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Cache" loc="44:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
        <short>&#10; A data item cache.</short>
        <long>&#10; A data item cache. The cache does not own the items it caches:&#10; there is no allocation/deallocation policy, or notification of&#10; eviction. Correspondingly, using references (pointers) as data&#10; items can be difficult.&#10; &#10; @author Rodrigo Fonseca&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7fe761afb6e8" loc="44:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
          <interfacedef-ref qname="Cache"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fe761afb6e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="insert" ref="0x7fe761af8290" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
          <short>&#10; Inserts an item in the cache, evicting if necessary.</short>
          <long>&#10; Inserts an item in the cache, evicting if necessary.&#10; An atomic lookup after insert should return true.&#10;&#10; @param item - the data item to insert.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fe761afb6e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7fe761af8020" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fe761afb6e8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7fe761af6378" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
          <short>&#10; Flush the cache of all entries.</short>
          <long>&#10; Flush the cache of all entries.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="lookup" ref="0x7fe761af8c20" loc="59:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
          <short>&#10; Return whether the data item is in the cache.</short>
          <long>&#10; Return whether the data item is in the cache.&#10;&#10; @param item - the data item to query&#10; @return Whether the item is in the cache.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fe761afb6e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7fe761af89b0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fe761afb6e8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UnicastNameFreeRouting" loc="41:/opt/tinyos-2.1.2/tos/lib/net/UnicastNameFreeRouting.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/UnicastNameFreeRouting.nc">
        <short>&#10;  Provides a single next hop on a name-free protocol.</short>
        <long>&#10;  Provides a single next hop on a name-free protocol.&#10;&#10;  @author Philip Levis&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="hasRoute" ref="0x7fe761b07360" loc="49:/opt/tinyos-2.1.2/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="routeFound" ref="0x7fe761b079e0" loc="51:/opt/tinyos-2.1.2/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="nextHop" ref="0x7fe761b0ab68" loc="48:/opt/tinyos-2.1.2/tos/lib/net/UnicastNameFreeRouting.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/lib/net/UnicastNameFreeRouting.nc">
          <short>&#10; Get the address of the best next hop set to the destination.</short>
          <long>&#10; Get the address of the best next hop set to the destination.&#10; If there is not best next hop, the address is the local address.&#10; @return : The next best hop, or the local address if there is no route.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="noRoute" ref="0x7fe761b06070" loc="52:/opt/tinyos-2.1.2/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CompareBit" loc="47:/opt/tinyos-2.1.2/tos/lib/net/ctp/CompareBit.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/ctp/CompareBit.nc">
        <short> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table.</short>
        <long> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table. The return value is the &#34;pin bit&#34; - if true&#10; insert into the neighbor table. In the reference implementation&#10; the router will return true if the path through the source&#10; will be better than a path through at least one current neighbor.&#10;@ author Omprakash Gnawali&#10;@ Created: September 16, 2006&#10;@date   $Date: 2010-06-29 22:07:49 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="shouldInsert" ref="0x7fe76193bbf0" loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CompareBit.nc">
        <interfacedef-ref qname="CompareBit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe76193ee70" loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7fe76193b650" loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe76193b960" loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CompareBit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpRoutingPacket" loc="43:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <short>&#10;  ADT for CTP routing frames.</short>
        <long>&#10;  ADT for CTP routing frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2009-09-21 02:19:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearOptions" ref="0x7fe76185ca10" loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe76185c7a0" loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x7fe7618572a0" loc="57:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe761858cd0" loc="57:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x7fe761857020" loc="57:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x7fe76185ed60" loc="48:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7fe762c17738"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe76185e790" loc="48:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x7fe76185eae0" loc="48:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7fe762c17738"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x7fe761858338" loc="56:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7618580c8" loc="56:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x7fe76185fd50" loc="47:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7fe762c17738"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe76185f780" loc="47:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x7fe76185fad0" loc="47:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7fe762c17738"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setParent" ref="0x7fe76185a680" loc="54:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe76185a0c8" loc="54:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fe76185a400" loc="54:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x7fe76185b6d0" loc="53:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fe762c20788"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe76185b460" loc="53:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOption" ref="0x7fe761860d50" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7fe762c17738"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe761860780" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x7fe761860ad0" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7fe762c17738"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x7fe7616f7178" loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7fe7616fb928" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x7fe7616f7958" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fe7616f3980" loc="52:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fe7616f3980"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fe7616ef258" loc="58:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fe7616ee020" loc="66:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fe7616f3980"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fe7616ef9a0" loc="66:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fe7616efca0" loc="66:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fe7616f3980"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7fe7616df768" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fe7616e0a60" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7fe7616e0db8" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7fe7616df178" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7fe7616df4c8" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7fe7616dc3f0" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe7616de368" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7fe7616de688" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7fe7616de9c0" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x7fe7616ded70" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x7fe7616dc140" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7fe7616e4440" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fe7616e5738" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7fe7616e5a90" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7fe7616e5df8" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7fe7616e41a0" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fe7616e2c80" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7fe7616e2408" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe7616e4e48" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7fe7616e2188" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x7fe7616cd868" loc="114:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x7fe7616d79e8" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe762cae3a0"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x7fe762cae858"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x7fe7616cba88" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="135:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7fe7616cb818" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7fe7616cc0d8" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="118:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x7fe7616d1548" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x7fe7616d43e8" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe762cae3a0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7fe762cae858"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x7fe7616d4178" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe762cae3a0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7fe762cae858"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x7fe7616d03a0" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x7fe7616cb020" loc="133:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fe7616c9258" loc="150:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="142:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x7fe7616d1c38" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x7fe7616cf258" loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x7fe7616d0ae8" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7fe7616cf980" loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x7fe7616cc838" loc="127:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x7fe7616d2608" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe762ca8ce0"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7fe762ca7438"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x7fe7616d2398" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe762ca8ce0"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7fe762ca7438"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x7fe7616cd178" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="107:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x7fe7616d4bc0" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe762ca8ce0"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7fe762ca7438"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7fe7616d2da8" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7fe7616c9d68" loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="152:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe7616c9af8" loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fe761655598" loc="56:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7fe761654608" loc="73:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fe761659d30" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fe761655d98" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fe761653020" loc="81:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7fe7615e4c18" loc="62:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7fe7614e7640" loc="31:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7614e7060" loc="31:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7fe7614e73c0" loc="31:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7fe7614ec948" loc="15:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7fe7614e8760" loc="23:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe7614e8198" loc="23:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe762b84b28"/>
                <typename><typedef-ref name="message_t" ref="0x7fe762b810c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7fe7614e84e0" loc="23:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7fe7614b3b60" loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7fe7614b3450" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7fe7614bb1d8" loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7fe7614ba528" loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7fe7614b8020" loc="94:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe7614b9d60" loc="94:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7fe7614bad40" loc="79:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7fe7614bbcc8" loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe7614bba58" loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7fe7614b8818" loc="100:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7fe7614b95b8" loc="85:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7fe7614c2110" loc="71:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7fe7614c29c8" loc="81:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7fe7614c47b8" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7fe7614c4548" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7fe7614c14e8" loc="91:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fe7614c1278" loc="91:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7fe7614bf020" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7fe7614bfbc8" loc="69:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe7614bf958" loc="69:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7fe7614be640" loc="80:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fe7614be3d0" loc="80:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fe7613959b8" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fe761395418" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe761395738" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7fe7613904a8" loc="79:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fe761390238" loc="79:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7fe76138e2a0" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fe761390c20" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe76138e020" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7fe7613911d8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7fe76138da38" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fe76138d160" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe76138d480" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fe76138d7a8" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7fe761391a50" loc="72:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fe7613942b0" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fe761392880" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe761392ba0" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe76360eb98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fe761394020" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fe761370bb0" loc="46:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fe761370940" loc="46:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7fe76136d9b0" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fe76136d3f8" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7fe76136d730" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7fe76135a578" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7fe76135b738" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x7fe761358c08" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe761358998" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7fe761359c08" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7fe76135f7f8" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7fe76135b020" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7fe76135be58" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe762d0bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x7fe76135ac58" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe762d309b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7fe761359578" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe761359308" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7fe761358328" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe76360e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
